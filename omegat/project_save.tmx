<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="5.7.1_0_c32062534" segtype="sentence" srclang="en-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="en-US">
        <seg>![A rough drawing and sketch of a website on paper](website-drawing-scan.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061758Z" creationid="gitnacho" creationdate="20221019T061422Z">
        <seg>![Bosquejo](/es/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like/website-drawing-scan.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![Color-Picker-Tool on MDN Docs website with RGB, HSL, and HEX colors ](color-picker.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062504Z" creationid="gitnacho" creationdate="20221019T062504Z">
        <seg>![Color del tema](/es/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like/color-picker.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![DevTools network panel and the generated image.](result.jpg)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T052827Z" creationid="gitnacho" creationdate="20221004T052827Z">
        <seg>![Panel de red de DevTools y la imagen generada](result.jpg)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![Developer tools debugger panel highlighting a module.](wasm-debug.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T181806Z" creationid="gitnacho" creationdate="20221006T181806Z">
        <seg>![Panel del depurador de herramientas para desarrolladores que resalta un módulo.](wasm-debug.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![Diagram: Emscripten compiles C/C++ source code and into a WASM module, an HTML document along with the JavaScript glue code.](emscripten-diagram.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T110831Z" creationid="gitnacho" creationdate="20221019T110831Z">
        <seg>![Diagrama: Emscripten compila el código fuente C/C++ y en un módulo WASM, un documento HTML junto con el código JavaScript.](emscripten-diagram.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![Filtered search results to get images of Creative Commons Licenses on Google Images](updated-google-images-licensing.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062853Z" creationid="gitnacho" creationdate="20221019T062853Z">
        <seg>![Etiquetado para reutilización](/es/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like/updated-google-images-licensing.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![Screenshot of a console output in developer tools](console-example.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205640Z" creationid="gitnacho" creationdate="20221005T205640Z">
        <seg>![Captura de pantalla de una salida de consola en herramientas del desarrollador](console-example.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![Screenshot of the DevTools console showing an error.](error.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T055018Z" creationid="gitnacho" creationdate="20221004T055018Z">
        <seg>![Captura de pantalla de la consola de DevTools que muestra un error.](error.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![Screenshot of the DevTools console showing the correct version number.](version.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053829Z" creationid="gitnacho" creationdate="20221004T053829Z">
        <seg>![Captura de pantalla de la consola de DevTools que muestra el número de versión correcto.](version.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![Search results for a search term on Google Images](updated-google-images.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062656Z" creationid="gitnacho" creationdate="20221019T062656Z">
        <seg>![Imágenes](/es/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like/updated-google-images.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![The words Star Wars followed by an image of a Lego version of the Darth Vader character](demo-screenshot.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T031029Z" creationid="gitnacho" creationdate="20220921T023851Z">
        <seg>![Las palabras Star Wars seguidas de una imagen de una versión Lego del personaje Darth Vader](demo-screenshot.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![](cors_principle.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T213007Z" creationid="gitnacho" creationdate="20221011T213007Z">
        <seg>![](cors_principle.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![](cred-req-updated.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230557Z" creationid="gitnacho" creationdate="20221011T230557Z">
        <seg>![](cred-req-updated.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![](important-notes.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T031308Z" creationid="gitnacho" creationdate="20220921T031308Z">
        <seg>![](important-notes.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![](preflight_correct.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222654Z" creationid="gitnacho" creationdate="20221011T222654Z">
        <seg>![](preflight_correct.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![](simple-req.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222020Z" creationid="gitnacho" creationdate="20221011T222020Z">
        <seg>![](simple-req.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![](sw-fetch.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035050Z" creationid="gitnacho" creationdate="20220921T035050Z">
        <seg>![](sw-fetch.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![](sw-lifecycle.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T023152Z" creationid="gitnacho" creationdate="20220921T023152Z">
        <seg>![](sw-lifecycle.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![image](helloworld.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T110519Z" creationid="gitnacho" creationdate="20221003T110519Z">
        <seg>![imagen](helloworld.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![install, activate, message, fetch, sync, push](sw-events.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T023445Z" creationid="gitnacho" creationdate="20220921T023445Z">
        <seg>![install, activate, message, fetch, sync, push](sw-events.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>![several strings of binary with textual descriptions beside them.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T183051Z" creationid="gitnacho" creationdate="20221007T183051Z">
        <seg>![varias cadenas de binarios con descripciones textuales junto a ellas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220805T215335Z" creationid="nachec" creationdate="20220805T215335Z">
        <seg>"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"  Response for %s from network is: %O",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204553Z" creationid="gitnacho" creationdate="20221003T204553Z">
        <seg>"  La respuesta para %s de la red es: %O",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>" " +</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210828T163228Z" creationid="gitnacho" creationdate="20210828T163228Z">
        <seg>" " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>" No response for %s found in cache.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204345Z" creationid="gitnacho" creationdate="20221003T204345Z">
        <seg>" No se encontró respuesta para %s en caché.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>""</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220805T011759Z" creationid="nachec" creationdate="20220805T011759Z">
        <seg>""</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"" : "not "}a valid wasm module`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T122615Z" creationid="gitnacho" creationdate="20221019T122615Z">
        <seg>"" : "no "}son un módulo wasm válido`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210910T092934Z" creationid="gitnacho" creationdate="20210910T092934Z">
        <seg>"",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>".</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T184114Z" creationid="gitnacho" creationdate="20211102T184114Z">
        <seg>".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>".",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210830T062023Z" creationid="gitnacho" creationdate="20210830T062023Z">
        <seg>".",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"/" +</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220830T080634Z" creationid="gitnacho" creationdate="20220830T080634Z">
        <seg>"/" +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"/",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034334Z" creationid="gitnacho" creationdate="20220921T034334Z">
        <seg>"/",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"/app.js",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034336Z" creationid="gitnacho" creationdate="20220921T034336Z">
        <seg>"/app.js",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"/gallery/bountyHunters.jpg",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034339Z" creationid="gitnacho" creationdate="20220921T034339Z">
        <seg>"/gallery/bountyHunters.jpg",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"/gallery/myLittleVader.jpg",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034339Z" creationid="gitnacho" creationdate="20220921T034339Z">
        <seg>"/gallery/myLittleVader.jpg",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"/gallery/snowTroopers.jpg",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034340Z" creationid="gitnacho" creationdate="20220921T034340Z">
        <seg>"/gallery/snowTroopers.jpg",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"/image-list.js",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034337Z" creationid="gitnacho" creationdate="20220921T034337Z">
        <seg>"/image-list.js",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"/index.html",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034335Z" creationid="gitnacho" creationdate="20220921T034335Z">
        <seg>"/index.html",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"/star-wars-logo.jpg",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034337Z" creationid="gitnacho" creationdate="20220921T034337Z">
        <seg>"/star-wars-logo.jpg",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"/style.css",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034335Z" creationid="gitnacho" creationdate="20220921T034335Z">
        <seg>"/style.css",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"&lt;p&gt;Hello from your friendly neighborhood service worker!&lt;/p&gt;",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035748Z" creationid="gitnacho" creationdate="20220921T035748Z">
        <seg>"&lt;p&gt;¡Hola desde tu amigable vecindario del *service worker*!&lt;/p&gt;",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"B",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210921T023450Z" creationid="gitnacho" creationdate="20210921T023450Z">
        <seg>"B",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"\n" +</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220805T222527Z" creationid="nachec" creationdate="20220805T222527Z">
        <seg>"\n" +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"buf.byteLength in main AFTER transfer back from worker:",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120108Z" creationid="gitnacho" creationdate="20221007T120108Z">
        <seg>"buf.byteLength in main AFTER transfer back from worker:",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"buf.byteLength in main AFTER transfer to worker:",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120118Z" creationid="gitnacho" creationdate="20221007T120118Z">
        <seg>"buf.byteLength in main AFTER transfer to worker:",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"buf.byteLength in main BEFORE transfer to worker:",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120112Z" creationid="gitnacho" creationdate="20221007T120112Z">
        <seg>"buf.byteLength in main BEFORE transfer to worker:",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"buf.byteLength in worker AFTER transfer back to main:",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120351Z" creationid="gitnacho" creationdate="20221007T120351Z">
        <seg>"buf.byteLength in worker AFTER transfer back to main:",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"buf.byteLength in worker BEFORE transfer back to main:",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120346Z" creationid="gitnacho" creationdate="20221007T120346Z">
        <seg>"buf.byteLength in worker BEFORE transfer back to main:",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"charset",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T224706Z" creationid="nachec" creationdate="20220804T224706Z">
        <seg>"charset",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"data":</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T231346Z" creationid="nachec" creationdate="20220804T231346Z">
        <seg>"data":</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"de": "Firefox für Entwickler",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083132Z" creationid="gitnacho" creationdate="20221005T083132Z">
        <seg>"de": "Firefox für Entwickler",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"de": {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083139Z" creationid="gitnacho" creationdate="20221005T083139Z">
        <seg>"de": {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"dependencies": {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065700Z" creationid="gitnacho" creationdate="20221004T065700Z">
        <seg>"dependencies": {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"devDependencies": {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065701Z" creationid="gitnacho" creationdate="20221004T065701Z">
        <seg>"devDependencies": {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"en-US": "Firefox for Developers",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083131Z" creationid="gitnacho" creationdate="20221005T083131Z">
        <seg>"en-US": "Firefox for Developers",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"en-US": "Hello world!",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082948Z" creationid="gitnacho" creationdate="20221005T082948Z">
        <seg>"en-US": "Hello world!",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"en-US": {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083136Z" creationid="gitnacho" creationdate="20221005T083136Z">
        <seg>"en-US": {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"es": "Firefox para desarrolladores"
});</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083134Z" creationid="gitnacho" creationdate="20221005T083134Z">
        <seg>"es": "Firefox para desarrolladores"
});</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"es": "¡Hola mundo!",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082949Z" creationid="gitnacho" creationdate="20221005T082949Z">
        <seg>"es": "¡Hola mundo!",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"es": {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083142Z" creationid="gitnacho" creationdate="20221005T083142Z">
        <seg>"es": {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"extmod": {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015457Z" creationid="gitnacho" creationdate="20221008T015457Z">
        <seg>"extmod": {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"exttag": tagToImport</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015457Z" creationid="gitnacho" creationdate="20221008T015457Z">
        <seg>"exttag": tagToImport</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"from network…",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204418Z" creationid="gitnacho" creationdate="20221003T204405Z">
        <seg>"desde la red…",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"getting JS-updated value from wasm",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233949Z" creationid="gitnacho" creationdate="20221006T233949Z">
        <seg>"getting JS-updated value from wasm",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"getting initial value from wasm",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233946Z" creationid="gitnacho" creationdate="20221006T233946Z">
        <seg>"getting initial value from wasm",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"goodbye": "Auf Wiedersehen!",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083141Z" creationid="gitnacho" creationdate="20221005T083141Z">
        <seg>"goodbye": "Auf Wiedersehen!",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"goodbye": "Goodbye!",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083138Z" creationid="gitnacho" creationdate="20221005T083138Z">
        <seg>"goodbye": "Goodbye!",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"hello": "Hallo!",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083140Z" creationid="gitnacho" creationdate="20221005T083140Z">
        <seg>"hello": "Hallo!",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"hello": "Hello!",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083138Z" creationid="gitnacho" creationdate="20221005T083138Z">
        <seg>"hello": "Hello!",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"hello": "¡Hola!"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083144Z" creationid="gitnacho" creationdate="20221005T083144Z">
        <seg>"hello": "¡Hola!"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"hello-wasm": "^0.1.0"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065700Z" creationid="gitnacho" creationdate="20221004T065700Z">
        <seg>"hello-wasm": "^0.1.0"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"memberSince": "2000-01-01T00:00:00.000Z"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134336Z" creationid="gitnacho" creationdate="20221003T134336Z">
        <seg>"memberSince": "2000-01-01T00:00:00.000Z"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"method",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211004T103238Z" creationid="gitnacho" creationdate="20211004T103238Z">
        <seg>"method",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"myFunction", // name of C function</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T112328Z" creationid="gitnacho" creationdate="20221003T112328Z">
        <seg>"myFunction", // nombre de la función C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"name",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T224709Z" creationid="nachec" creationdate="20220804T224709Z">
        <seg>"name",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"scripts": {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065654Z" creationid="gitnacho" creationdate="20221004T065654Z">
        <seg>"scripts": {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"serve": "webpack-dev-server"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065655Z" creationid="gitnacho" creationdate="20221004T065655Z">
        <seg>"serve": "webpack-dev-server"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"src",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211005T061509Z" creationid="gitnacho" creationdate="20211005T061509Z">
        <seg>"src",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"use strict";</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200814T043223Z" creationid="nacho" creationdate="20200814T043223Z">
        <seg>"use strict";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"userId": 1234,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134323Z" creationid="gitnacho" creationdate="20221003T134323Z">
        <seg>"userId": 1234,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"userName": "John Doe",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134334Z" creationid="gitnacho" creationdate="20221003T134334Z">
        <seg>"userName": "Juan Pérez",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"webpack": "^4.25.1",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065702Z" creationid="gitnacho" creationdate="20221004T065702Z">
        <seg>"webpack": "^4.25.1",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"webpack-cli": "^3.1.2",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065703Z" creationid="gitnacho" creationdate="20221004T065703Z">
        <seg>"webpack-cli": "^3.1.2",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>"webpack-dev-server": "^3.1.10"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065704Z" creationid="gitnacho" creationdate="20221004T065704Z">
        <seg>"webpack-dev-server": "^3.1.10"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg># DO NOT EDIT THIS FILE MANUALLY.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T004922Z" creationid="gitnacho" creationdate="20221018T004922Z">
        <seg># NO EDITES ESTE ARCHIVO MANUALMENTE.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg># your own name for the list as a template variable</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174218Z" creationid="gitnacho" creationdate="20221012T174218Z">
        <seg># tu propio nombre para la lista como variable de plantilla</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## A first look at the text format</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182551Z" creationid="gitnacho" creationdate="20221007T182551Z">
        <seg>## Un primer vistazo al formato de texto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## API reference</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T100503Z" creationid="gitnacho" creationdate="20221003T100503Z">
        <seg>## Referencia de la API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Advanced Features</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070443Z" creationid="gitnacho" creationdate="20221005T070443Z">
        <seg>## Características avanzadas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## An example</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085244Z" creationid="gitnacho" creationdate="20221006T085244Z">
        <seg>## Un ejemplo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Attributes</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T122350Z" creationid="gitnacho" creationdate="20221003T122350Z">
        <seg>## Atributos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Baseline: GitHub-Flavored Markdown</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T173727Z" creationid="gitnacho" creationdate="20221008T173727Z">
        <seg>## Línea base: GitHub con sabor a Markdown</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Basic architecture</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T020938Z" creationid="gitnacho" creationdate="20220921T020938Z">
        <seg>## Arquitectura básica</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Basics</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T064906Z" creationid="gitnacho" creationdate="20221005T064906Z">
        <seg>## Conceptos básicos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Browser compatibility</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T173901Z" creationid="gitnacho" creationdate="20220921T225436Z">
        <seg>## Compatibilidad con navegadores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Browser support</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T044038Z" creationid="gitnacho" creationdate="20221004T044038Z">
        <seg>## Compatibilidad del navegador</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Building our WebAssembly package</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061643Z" creationid="gitnacho" creationdate="20221004T061643Z">
        <seg>## Construir nuestro paquete WebAssembly</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Bulk memory operations</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074414Z" creationid="gitnacho" creationdate="20221007T074414Z">
        <seg>## Operaciones masivas de memoria</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Caching a wasm module</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T051850Z" creationid="gitnacho" creationdate="20221004T051850Z">
        <seg>## Almacenar en caché un módulo wasm</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Caching and Client Hints</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T091737Z" creationid="gitnacho" creationdate="20221012T091737Z">
        <seg>## Almacenamiento en caché y sugerencias de cliente</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Caching via IndexedDB</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T044858Z" creationid="gitnacho" creationdate="20221004T044858Z">
        <seg>## Almacenamiento en caché a través de IndexedDB</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Choosing your assets</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061922Z" creationid="gitnacho" creationdate="20221019T061922Z">
        <seg>## Elige tus activos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Code samples</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113519Z" creationid="gitnacho" creationdate="20221005T113519Z">
        <seg>## Código de ejemplo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Compiling an example</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105239Z" creationid="gitnacho" creationdate="20221003T105239Z">
        <seg>## Compilar un ejemplo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Conclusion</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T070135Z" creationid="gitnacho" creationdate="20221004T070135Z">
        <seg>## Conclusión</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Constructor</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050405Z" creationid="gitnacho" creationdate="20221005T050405Z">
        <seg>## Constructor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Constructor properties</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221009T004800Z" creationid="gitnacho" creationdate="20221009T004800Z">
        <seg>## Propiedades del constructor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Contact us</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T173740Z" creationid="Nachec" creationdate="20221020T173740Z">
        <seg>## Contáctanos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Converting the text .wat into a binary .wasm file</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182700Z" creationid="gitnacho" creationdate="20221007T182700Z">
        <seg>## Convertir el texto `.wat` en un archivo binario `.wasm`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Cookbook</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T075130Z" creationid="gitnacho" creationdate="20221005T075130Z">
        <seg>## Trucos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Current features available only in secure contexts</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T232659Z" creationid="gitnacho" creationdate="20221018T232659Z">
        <seg>## Funciones actuales disponibles solo en contextos seguros</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## DOM Interface</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T173828Z" creationid="gitnacho" creationdate="20221005T173828Z">
        <seg>## Interfaz DOM</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Definition lists</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182418Z" creationid="gitnacho" creationdate="20221008T182418Z">
        <seg>## Listas de definición</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Description</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T205326Z" creationid="gitnacho" creationdate="20220922T205326Z">
        <seg>## Descripción</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Developer tools</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042146Z" creationid="gitnacho" creationdate="20220921T042146Z">
        <seg>## Herramientas de desarrollo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Developer tools documentation</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T095637Z" creationid="gitnacho" creationdate="20221002T095637Z">
        <seg>## Documentación de herramientas para desarrolladores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## DocumentParsingError</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T092021Z" creationid="gitnacho" creationdate="20221005T092021Z">
        <seg>## DocumentParsingError</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Documentation for Web developers</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T093009Z" creationid="gitnacho" creationdate="20221002T093009Z">
        <seg>## Documentación para desarrolladores Web</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Emscripten Environment Setup</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105147Z" creationid="gitnacho" creationdate="20221003T105147Z">
        <seg>## Configurar el entorno Emscripten</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Error &amp; Unknown</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T093203Z" creationid="gitnacho" creationdate="20221005T093203Z">
        <seg>## Error y Unknown</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Event bubbling and capture</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T202321Z" creationid="gitnacho" creationdate="20221011T202321Z">
        <seg>## Burbujeo y captura de eventos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Event type</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T224927Z" creationid="gitnacho" creationdate="20221003T224927Z">
        <seg>## Tipo Event</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Events</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T212548Z" creationid="gitnacho" creationdate="20221003T212548Z">
        <seg>## Eventos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Example</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T230534Z" creationid="gitnacho" creationdate="20221003T230534Z">
        <seg>## Ejemplo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Example code blocks</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T102019Z" creationid="gitnacho" creationdate="20221008T102019Z">
        <seg>## Bloques de código de ejemplo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Examples</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T225134Z" creationid="gitnacho" creationdate="20220921T225134Z">
        <seg>## Ejemplos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Examples of access control scenarios</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T214043Z" creationid="gitnacho" creationdate="20221011T214043Z">
        <seg>## Ejemplos de escenarios de control de acceso</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Exploring fundamentals</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061050Z" creationid="gitnacho" creationdate="20221007T061050Z">
        <seg>## Explorar los fundamentos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Exported… What?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T084900Z" creationid="gitnacho" creationdate="20221006T084900Z">
        <seg>## Exportar… ¿Qué?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Feature detection</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T204318Z" creationid="gitnacho" creationdate="20221018T204318Z">
        <seg>## Detección de características</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## First things first: planning</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T060933Z" creationid="gitnacho" creationdate="20221019T060933Z">
        <seg>## Lo primero es lo primero: planificación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Functional overview</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T213704Z" creationid="gitnacho" creationdate="20221011T213704Z">
        <seg>## Resumen funcional</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## General guidelines</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204857Z" creationid="gitnacho" creationdate="20221005T204857Z">
        <seg>## Reglas generales</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## General-purpose formatting</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113852Z" creationid="gitnacho" creationdate="20221005T113852Z">
        <seg>## Formato de propósito general</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Getting and setting locals and parameters</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054547Z" creationid="gitnacho" creationdate="20221007T054547Z">
        <seg>## Obtener y configurar locales y parámetros</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Getting help</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223654Z" creationid="gitnacho" creationdate="20221018T223654Z">
        <seg>## Cómo obtener ayuda</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Getting our code examples</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131855Z" creationid="gitnacho" creationdate="20221020T131855Z">
        <seg>## Obtener el código de los ejemplos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## GitHub live samples</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211926Z" creationid="gitnacho" creationdate="20221005T211926Z">
        <seg>## Muestras en vivo de GitHub</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Global instances</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T104437Z" creationid="gitnacho" creationdate="20221007T104437Z">
        <seg>## Instancias `Global`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Globals</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233701Z" creationid="gitnacho" creationdate="20221006T233701Z">
        <seg>## Globales</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Guides</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T042339Z" creationid="gitnacho" creationdate="20220925T042339Z">
        <seg>## Guías</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Hint life-time</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T091936Z" creationid="gitnacho" creationdate="20221012T091936Z">
        <seg>## Sugerencia del tiempo de vida</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Hint types</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092327Z" creationid="gitnacho" creationdate="20221012T092327Z">
        <seg>## Tipos de sugerencias</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## How do I use WebAssembly in my app?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T080505Z" creationid="gitnacho" creationdate="20221003T080505Z">
        <seg>## ¿Cómo usar WebAssembly en mi aplicación?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## How does WebAssembly fit into the web platform?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T005022Z" creationid="gitnacho" creationdate="20221003T005022Z">
        <seg>## ¿Cómo se inserta WebAssembly dentro de la plataforma web?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## How macros are implemented</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T094751Z" creationid="gitnacho" creationdate="20221005T094751Z">
        <seg>## Cómo se implementan las macros</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## In a Nutshell</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T094201Z" creationid="gitnacho" creationdate="20221003T094201Z">
        <seg>## En pocas palabras</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## In this module</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T165340Z" creationid="gitnacho" creationdate="20221012T165340Z">
        <seg>## En este módulo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Instance methods</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051007Z" creationid="gitnacho" creationdate="20221005T051007Z">
        <seg>## Métodos de instancia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Instance properties</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050638Z" creationid="gitnacho" creationdate="20221005T050638Z">
        <seg>## Propiedades de la instancia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Interactive examples</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205650Z" creationid="gitnacho" creationdate="20221005T205650Z">
        <seg>## Ejemplos interactivos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Interfaces</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T040218Z" creationid="gitnacho" creationdate="20221002T040218Z">
        <seg>## Interfaces</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Interfaces based on Event</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T202500Z" creationid="gitnacho" creationdate="20221011T202500Z">
        <seg>## Interfaces basadas en `Event`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## KumaScript</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191717Z" creationid="gitnacho" creationdate="20221008T191717Z">
        <seg>## KumaScript</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Linking</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T102548Z" creationid="gitnacho" creationdate="20221005T102531Z">
        <seg>## Enlaces</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Links</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T173844Z" creationid="gitnacho" creationdate="20221008T173844Z">
        <seg>## Enlaces</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Low entropy hints</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092055Z" creationid="gitnacho" creationdate="20221012T092055Z">
        <seg>## Sugerencias de baja entropía</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Making our package available to npm</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065128Z" creationid="gitnacho" creationdate="20221004T065128Z">
        <seg>## Hacer que nuestro paquete esté disponible para npm</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Memory</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T181919Z" creationid="gitnacho" creationdate="20221006T181919Z">
        <seg>## Memoria</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Methods</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T205111Z" creationid="gitnacho" creationdate="20220922T205111Z">
        <seg>## Métodos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Multi-value WebAssembly</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T075055Z" creationid="gitnacho" creationdate="20221007T075055Z">
        <seg>## WebAssembly multivalor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Multiplicity</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T234016Z" creationid="gitnacho" creationdate="20221006T234016Z">
        <seg>## Multiplicidad</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Notes</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T133739Z" creationid="gitnacho" creationdate="20221003T133739Z">
        <seg>## Notas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Notes, warnings, and callouts</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181105Z" creationid="gitnacho" creationdate="20221008T181105Z">
        <seg>## Notas, advertencias y llamadas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Other use case ideas</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T145222Z" creationid="gitnacho" creationdate="20221002T145222Z">
        <seg>## Otras ideas de casos de uso</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Our first function body</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055240Z" creationid="gitnacho" creationdate="20221007T055240Z">
        <seg>## El primer cuerpo de la función</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Overview</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T091419Z" creationid="gitnacho" creationdate="20221012T091419Z">
        <seg>## Descripción</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Page summary</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191539Z" creationid="gitnacho" creationdate="20221008T191539Z">
        <seg>## Página de resumen</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Prerequisites</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223556Z" creationid="gitnacho" creationdate="20221018T223556Z">
        <seg>## Prerrequisitos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Properties</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T212323Z" creationid="gitnacho" creationdate="20221003T212323Z">
        <seg>## Propiedades</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Recovering failed requests</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035927Z" creationid="gitnacho" creationdate="20220921T035927Z">
        <seg>## Recuperar solicitudes fallidas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Reference</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064110Z" creationid="gitnacho" creationdate="20221012T064110Z">
        <seg>## Referencia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Return value</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T110316Z" creationid="gitnacho" creationdate="20221008T110316Z">
        <seg>## Valor de retorno</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Rust Environment Setup</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061244Z" creationid="gitnacho" creationdate="20221004T061244Z">
        <seg>## Configurar el entorno Rust</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Rust and WebAssembly use cases</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T060950Z" creationid="gitnacho" creationdate="20221004T060950Z">
        <seg>## Casos de uso de Rust y WebAssembly</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## S-expressions</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053453Z" creationid="gitnacho" creationdate="20221007T053453Z">
        <seg>## Expresiones-S</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## See also</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T184120Z" creationid="gitnacho" creationdate="20220921T042627Z">
        <seg>## Véase también</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Service Worker Navigation Preload</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T142753Z" creationid="gitnacho" creationdate="20220921T040812Z">
        <seg>## Precarga de navegación del service worker</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Service worker concepts and usage</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000106Z" creationid="gitnacho" creationdate="20221002T133819Z">
        <seg>## Conceptos y uso de Service worker</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Service workers demo</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T142639Z" creationid="gitnacho" creationdate="20220921T023504Z">
        <seg>## Demostración del service worker</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Setting up a caching library</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T050608Z" creationid="gitnacho" creationdate="20221004T050608Z">
        <seg>## Configurar una biblioteca de almacenamiento en caché</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Setting up to play with service workers</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T142610Z" creationid="gitnacho" creationdate="20220921T020455Z">
        <seg>## Configuración para jugar con el service worker</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Sidebar generation</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113732Z" creationid="gitnacho" creationdate="20221005T113732Z">
        <seg>## Generar la barra lateral</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Signatures and parameters</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054247Z" creationid="gitnacho" creationdate="20221007T054247Z">
        <seg>## Firmas y parámetros</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Sketching out your design</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061251Z" creationid="gitnacho" creationdate="20221019T061251Z">
        <seg>## Haz un bosquejo de tu diseño</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Some simple examples</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T111500Z" creationid="gitnacho" creationdate="20221006T111500Z">
        <seg>## Algunos ejemplos simples</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Specifications</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T225416Z" creationid="gitnacho" creationdate="20220921T225416Z">
        <seg>## Especificaciones</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Stack machines</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054822Z" creationid="gitnacho" creationdate="20221007T054822Z">
        <seg>## Máquinas apiladoras</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Static examples</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205419Z" creationid="gitnacho" creationdate="20221005T205419Z">
        <seg>## Ejemplos estáticos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Static methods</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050520Z" creationid="gitnacho" creationdate="20221005T050520Z">
        <seg>## Métodos estáticos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Static properties</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050424Z" creationid="gitnacho" creationdate="20221005T050424Z">
        <seg>## Propiedades estáticas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Status and compatibility indicators</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114055Z" creationid="gitnacho" creationdate="20221005T114055Z">
        <seg>## Indicadores de estado y compatibilidad</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Subjects covered</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223436Z" creationid="gitnacho" creationdate="20221018T223436Z">
        <seg>## Temas tratados</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Summary</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T091054Z" creationid="gitnacho" creationdate="20221003T091054Z">
        <seg>## Resumen</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Superscript and subscript</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191304Z" creationid="gitnacho" creationdate="20221008T191304Z">
        <seg>## Superíndice y subíndice</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Syntax</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T225024Z" creationid="gitnacho" creationdate="20220921T225024Z">
        <seg>## Sintaxis</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Tables</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T230151Z" creationid="gitnacho" creationdate="20221006T230151Z">
        <seg>## Tablas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## TemplateExecutionError</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T093116Z" creationid="gitnacho" creationdate="20221005T093116Z">
        <seg>## TemplateExecutionError</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## TemplateLoadingError</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T092948Z" creationid="gitnacho" creationdate="20221005T092948Z">
        <seg>## TemplateLoadingError</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## The HTTP request headers</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060358Z" creationid="gitnacho" creationdate="20221012T060358Z">
        <seg>## Los encabezados de solicitud HTTP</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## The HTTP response headers</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053637Z" creationid="gitnacho" creationdate="20221012T053637Z">
        <seg>## Los encabezados de respuesta HTTP</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## The \{{Link}} macro</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T220724Z" creationid="gitnacho" creationdate="20221005T215941Z">
        <seg>## La macro `\{{Link}}`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## The learning pathway</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223931Z" creationid="gitnacho" creationdate="20221018T223931Z">
        <seg>## El camino del aprendizaje</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## The premise of service workers</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T141915Z" creationid="gitnacho" creationdate="20220921T015453Z">
        <seg>## La premisa de service worker</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## The story of your first website</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T042252Z" creationid="gitnacho" creationdate="20220925T042252Z">
        <seg>## La historia de tu primer sitio web</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## They are real functions</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085713Z" creationid="gitnacho" creationdate="20221006T085713Z">
        <seg>## Son funciones reales</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Tips and caveats</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T074452Z" creationid="gitnacho" creationdate="20221005T073704Z">
        <seg>## Consejos y avisos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Tools &amp; resources</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064715Z" creationid="gitnacho" creationdate="20221012T064715Z">
        <seg>## Herramientas y recursos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Topics covered</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T130740Z" creationid="gitnacho" creationdate="20221020T124209Z">
        <seg>## Temas tratados</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Traditional live samples</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T210327Z" creationid="gitnacho" creationdate="20221005T210327Z">
        <seg>## Muestras tradicionales en vivo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Tutorials</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T062427Z" creationid="gitnacho" creationdate="20221012T062427Z">
        <seg>## Tutoriales</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Types</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074749Z" creationid="gitnacho" creationdate="20221007T074749Z">
        <seg>## Tipos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Updating your service worker</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T104125Z" creationid="gitnacho" creationdate="20220921T034813Z">
        <seg>## Actualizar tu *service worker*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Usage context</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T121954Z" creationid="gitnacho" creationdate="20221005T121954Z">
        <seg>## Contexto de uso</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Using Fetch</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T055042Z" creationid="gitnacho" creationdate="20221005T055042Z">
        <seg>## Usar Fetch</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Using XMLHttpRequest</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T060738Z" creationid="gitnacho" creationdate="20221005T060738Z">
        <seg>## Usar XMLHttpRequest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Using a macro in content</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T094835Z" creationid="gitnacho" creationdate="20221005T094835Z">
        <seg>## Usar una macro en el contenido</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Using the package on the web</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064510Z" creationid="gitnacho" creationdate="20221004T064510Z">
        <seg>## Usando el paquete en la web</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Value</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223317Z" creationid="gitnacho" creationdate="20221003T223317Z">
        <seg>## Valor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Viewing the assembly output</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182933Z" creationid="gitnacho" creationdate="20221007T182933Z">
        <seg>## Ver la salida del ensamblador</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Web technology references</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T094332Z" creationid="gitnacho" creationdate="20221002T094332Z">
        <seg>## Referencias de tecnología Web</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## WebAssembly goals</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T004211Z" creationid="gitnacho" creationdate="20221003T004211Z">
        <seg>## Objetivos de WebAssembly</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## WebAssembly threads</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080347Z" creationid="gitnacho" creationdate="20221007T080327Z">
        <seg>## Subprocesos WebAssembly</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## What are the options?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T071258Z" creationid="gitnacho" creationdate="20221004T071258Z">
        <seg>## ¿Cuales son las opciones?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## What is WebAssembly?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T003825Z" creationid="gitnacho" creationdate="20221003T003825Z">
        <seg>## ¿Qué es WebAssembly?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## What requests use CORS?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T213100Z" creationid="gitnacho" creationdate="20221011T213100Z">
        <seg>## ¿Qué solicitudes usan CORS?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## What tools do I actually need, right now?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T154636Z" creationid="gitnacho" creationdate="20221012T154611Z">
        <seg>## ¿Qué herramientas necesito en este momento?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## What tools do the professionals use?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T164421Z" creationid="gitnacho" creationdate="20221012T164421Z">
        <seg>## ¿Qué herramientas usan los profesionales?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## What types of code example are available?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T203928Z" creationid="gitnacho" creationdate="20221005T203928Z">
        <seg>## ¿Qué tipos de código de ejemplo están disponibles?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## When is a context considered secure?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T203749Z" creationid="gitnacho" creationdate="20221018T203749Z">
        <seg>## ¿Cuándo se considera seguro un contexto?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## When should you use each one?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204329Z" creationid="gitnacho" creationdate="20221005T204329Z">
        <seg>## ¿Cuándo debes usar cada uno?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Where to start</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T125705Z" creationid="gitnacho" creationdate="20221012T231853Z">
        <seg>## Dónde empezar

Para continuar, piensa cuál de las siguientes afirmaciones te describe mejor y ve a la página de inicio enlazada:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>## Why should some features be restricted?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T203710Z" creationid="gitnacho" creationdate="20221018T203710Z">
        <seg>## ¿Por qué se deben restringir algunas funciones?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### A table example</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233217Z" creationid="gitnacho" creationdate="20221006T233217Z">
        <seg>### Un ejemplo de `Table`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### API availability</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T030602Z" creationid="gitnacho" creationdate="20220923T030602Z">
        <seg>### Disponibilidad de la API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### APIs and Modules</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071944Z" creationid="gitnacho" creationdate="20221005T071944Z">
        <seg>### API y módulos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Access-Control-Allow-Credentials</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054125Z" creationid="gitnacho" creationdate="20221012T054125Z">
        <seg>### `Access-Control-Allow-Credentials`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Access-Control-Allow-Headers</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060152Z" creationid="gitnacho" creationdate="20221012T060152Z">
        <seg>### `Access-Control-Allow-Headers`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Access-Control-Allow-Methods</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054345Z" creationid="gitnacho" creationdate="20221012T054345Z">
        <seg>### `Access-Control-Allow-Methods`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Access-Control-Allow-Origin</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053725Z" creationid="gitnacho" creationdate="20221012T053725Z">
        <seg>### `Access-Control-Allow-Origin`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Access-Control-Expose-Headers</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053921Z" creationid="gitnacho" creationdate="20221012T053921Z">
        <seg>### `Access-Control-Expose-Headers`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Access-Control-Max-Age</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054031Z" creationid="gitnacho" creationdate="20221012T054031Z">
        <seg>### `Access-Control-Max-Age`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Access-Control-Request-Headers</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060822Z" creationid="gitnacho" creationdate="20221012T060822Z">
        <seg>### `Access-Control-Request-Headers`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Access-Control-Request-Method</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060632Z" creationid="gitnacho" creationdate="20221012T060632Z">
        <seg>### Método de solicitud de control de acceso</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Adding functionality to your module</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054028Z" creationid="gitnacho" creationdate="20221007T054028Z">
        <seg>### Agregar funcionalidad al módulo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Aside on instantiate() overloads</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T055818Z" creationid="gitnacho" creationdate="20221005T055818Z">
        <seg>### Aparte en la sobrecarga de `instantiate()`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Atomic memory accesses</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080944Z" creationid="gitnacho" creationdate="20221007T080944Z">
        <seg>### Accesos atómico a memoria</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Basic syntax</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T230559Z" creationid="gitnacho" creationdate="20221002T230559Z">
        <seg>### Sintaxis básica</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Basic usage</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T133941Z" creationid="gitnacho" creationdate="20221003T133941Z">
        <seg>### Uso básico</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Broken wiki.languages() macros</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082128Z" creationid="gitnacho" creationdate="20221005T082128Z">
        <seg>### Macros `wiki.languages()` rotas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Building the package</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063951Z" creationid="gitnacho" creationdate="20221004T063951Z">
        <seg>### Construir el paquete</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Building up a basic demo with Babylon.js</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T083118Z" creationid="gitnacho" creationdate="20221002T083118Z">
        <seg>### Crear una demo básica con Babylon.js</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### CORS headers</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210642Z" creationid="gitnacho" creationdate="20221017T210642Z">
        <seg>### Cabeceras CORS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### CSS</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174248Z" creationid="gitnacho" creationdate="20221012T174248Z">
        <seg>### CSS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Caching</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T074841Z" creationid="gitnacho" creationdate="20221005T074841Z">
        <seg>### Almacenamiento en caché</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Calling a custom function defined in C</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111443Z" creationid="gitnacho" creationdate="20221003T111443Z">
        <seg>### Llamar a una función personalizada definida en C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Calling functions from other functions in the same module</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061114Z" creationid="gitnacho" creationdate="20221007T061114Z">
        <seg>### Llamar funciones desde otras funciones en el mismo módulo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Calling the function</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T060623Z" creationid="gitnacho" creationdate="20221007T060623Z">
        <seg>### Llamar a la función</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Client Hints</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T095313Z" creationid="gitnacho" creationdate="20221012T095313Z">
        <seg>### Sugerencias para el cliente</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Compatibility notes</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134423Z" creationid="gitnacho" creationdate="20221003T134423Z">
        <seg>### Notas de compatibilidad</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Compile streaming</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T185553Z" creationid="gitnacho" creationdate="20221007T185553Z">
        <seg>### Compilar transmisión</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Compiling our code to WebAssembly</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063553Z" creationid="gitnacho" creationdate="20221004T063553Z">
        <seg>### Compilar nuestro código a WebAssembly</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Cookies and Cache objects</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T205136Z" creationid="gitnacho" creationdate="20221003T205136Z">
        <seg>### Objetos Cookies y Cache</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Creating HTML and JavaScript</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105425Z" creationid="gitnacho" creationdate="20221003T105425Z">
        <seg>### Crear el HTML y JavaScript</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Creating a new CompileError instance</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T025635Z" creationid="gitnacho" creationdate="20221008T025635Z">
        <seg>### Crear una nueva instancia de `CompileError`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Creating a new Global instance</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T104716Z" creationid="gitnacho" creationdate="20221007T104716Z">
        <seg>### Crear una nueva instancia `Global`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Creating a new LinkError instance</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T211838Z" creationid="gitnacho" creationdate="20221008T075254Z">
        <seg>### Crear una nueva instancia de `LinkError`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Creating a new Memory instance</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T220136Z" creationid="gitnacho" creationdate="20221019T220136Z">
        <seg>### Crear una nueva instancia de `Memory`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Creating a new Memory object</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000442Z" creationid="gitnacho" creationdate="20221008T000442Z">
        <seg>### Crear un nuevo objeto `Memory`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Creating a new RuntimeError instance</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T080838Z" creationid="gitnacho" creationdate="20221008T080838Z">
        <seg>### Crear una nueva instancia de RuntimeError</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Creating a new WebAssembly Table instance</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095335Z" creationid="gitnacho" creationdate="20221006T095335Z">
        <seg>### Crear una nueva instancia de WebAssembly Table</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Creating a shared memory</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000946Z" creationid="gitnacho" creationdate="20221008T000946Z">
        <seg>### Crear una memoria compartida</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Custom responses</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210649Z" creationid="gitnacho" creationdate="20220922T210649Z">
        <seg>### Respuestas personalizadas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Custom responses to requests</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035000Z" creationid="gitnacho" creationdate="20220921T035000Z">
        <seg>### Respuestas personalizadas a solicitudes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Debugging</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T074506Z" creationid="gitnacho" creationdate="20221005T073707Z">
        <seg>### Depuración</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Declaring globals in WebAssembly</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061646Z" creationid="gitnacho" creationdate="20221007T061646Z">
        <seg>### Declarar globales en WebAssembly</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Deleting old caches</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T001316Z" creationid="gitnacho" creationdate="20220921T041920Z">
        <seg>### Eliminar cachés antiguas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Deprecated attributes</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T132756Z" creationid="gitnacho" creationdate="20221003T132756Z">
        <seg>### Atributos obsoletos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Deprecated methods</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T205046Z" creationid="gitnacho" creationdate="20221011T205046Z">
        <seg>### Métodos obsoletos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Detachment upon growing</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T214359Z" creationid="gitnacho" creationdate="20221019T214254Z">
        <seg>### Separación al crecer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Device client hints</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092644Z" creationid="gitnacho" creationdate="20221012T092644Z">
        <seg>### Sugerencias para el dispositivo cliente</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Different ways to create a Uint8ClampedArray</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052543Z" creationid="gitnacho" creationdate="20221005T052543Z">
        <seg>### Diferentes formas de crear un Uint8ClampedArray</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Discussion reference</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181050Z" creationid="gitnacho" creationdate="20221008T181050Z">
        <seg>### Referencia de discusión</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Download, install and activate</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T140944Z" creationid="gitnacho" creationdate="20221002T140944Z">
        <seg>### Descarga, instalación y activación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Embedding data in HTML</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134220Z" creationid="gitnacho" creationdate="20221003T134220Z">
        <seg>### Incrustar datos en HTML</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Encode the Image</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054603Z" creationid="gitnacho" creationdate="20221004T054548Z">
        <seg>### Codificar la imagen</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Environment variables</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070502Z" creationid="gitnacho" creationdate="20221005T070502Z">
        <seg>### Variables de entorno</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Examples</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181533Z" creationid="gitnacho" creationdate="20221008T181533Z">
        <seg>### Ejemplos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Exceptions</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T091803Z" creationid="gitnacho" creationdate="20221006T091803Z">
        <seg>### Excepciones</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Feature detection and enabling navigation preloading</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210102Z" creationid="gitnacho" creationdate="20220922T210102Z">
        <seg>### Detectar características y habilitar precarga de navegación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Finding the Current Page's Language</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082414Z" creationid="gitnacho" creationdate="20221005T082414Z">
        <seg>### Buscar el idioma de la página actual</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### First overload example</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T194021Z" creationid="gitnacho" creationdate="20221007T194021Z">
        <seg>### Primer ejemplo de sobrecarga</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Flow content</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T111038Z" creationid="gitnacho" creationdate="20221008T111038Z">
        <seg>### Flujo de contenido</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Font</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062858Z" creationid="gitnacho" creationdate="20221019T062858Z">
        <seg>### Tipos de letra</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Force templates used on a page to be reloaded</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T075221Z" creationid="gitnacho" creationdate="20221005T075221Z">
        <seg>### Forzar la recarga de las plantillas utilizadas en una página</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Formatting live samples</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T210932Z" creationid="gitnacho" creationdate="20221005T210932Z">
        <seg>### Formateo de muestras en vivo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### GFM table syntax style</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184503Z" creationid="gitnacho" creationdate="20221008T184503Z">
        <seg>### Sintaxis de estilo de tabla GFM</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Get an image from JavaScript into Wasm</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053910Z" creationid="gitnacho" creationdate="20221004T053910Z">
        <seg>### Obtener una imagen de JavaScript en Wasm</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Getting exception value from an exported tag</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T143128Z" creationid="gitnacho" creationdate="20221019T143128Z">
        <seg>### Obtener valor de excepción de una etiqueta exportada</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Getting exception value from imported tag</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142718Z" creationid="gitnacho" creationdate="20221019T142718Z">
        <seg>### Obtener el valor de excepción de la etiqueta importada</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Getting started</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223937Z" creationid="gitnacho" creationdate="20221018T223937Z">
        <seg>### Primeros pasos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Getting the state</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T211123Z" creationid="gitnacho" creationdate="20220922T211123Z">
        <seg>### Obtener el estado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Global Event Attributes</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T110924Z" creationid="gitnacho" creationdate="20221008T110924Z">
        <seg>### Atributos globales de `Event`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Global attributes</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T122015Z" creationid="gitnacho" creationdate="20221005T122015Z">
        <seg>### Atributos globales</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Glossary links</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T104654Z" creationid="gitnacho" creationdate="20221005T104654Z">
        <seg>### Enlaces del glosario</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Growing memory</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T210427Z" creationid="gitnacho" creationdate="20221006T210427Z">
        <seg>### Memoria creciente</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### HTML</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T173720Z" creationid="gitnacho" creationdate="20221005T173720Z">
        <seg>### HTML</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Hidden code</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211641Z" creationid="gitnacho" creationdate="20221005T211622Z">
        <seg>### Código oculto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### How to replace the macro</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T220120Z" creationid="gitnacho" creationdate="20221005T220120Z">
        <seg>### Cómo reemplazar la macro</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Images</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062509Z" creationid="gitnacho" creationdate="20221019T062509Z">
        <seg>### Imágenes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Importing functions from JavaScript</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061331Z" creationid="gitnacho" creationdate="20221007T061331Z">
        <seg>### Importar funciones desde JavaScript</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Indicating that a feature is available in web workers</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T115655Z" creationid="gitnacho" creationdate="20221005T115655Z">
        <seg>### Indicar que una función está disponible en *web workers*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Inline indicators for API documentation</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113903Z" creationid="gitnacho" creationdate="20221005T113903Z">
        <seg>### Indicadores en línea para la documentación de la API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Inline indicators that support specifying the technology</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114328Z" creationid="gitnacho" creationdate="20221005T114328Z">
        <seg>### Indicadores en línea que admiten la especificación de la tecnología</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Inline indicators with no additional parameters</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114105Z" creationid="gitnacho" creationdate="20221005T114105Z">
        <seg>### Indicadores en línea sin parámetros adicionales</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Install Node.js and npm</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065200Z" creationid="gitnacho" creationdate="20221004T065200Z">
        <seg>### Instala Node.js y npm</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Install Rust</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061305Z" creationid="gitnacho" creationdate="20221004T061305Z">
        <seg>### Instalar Rust</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Install and activate: populating your cache</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T033950Z" creationid="gitnacho" creationdate="20220921T033950Z">
        <seg>### Instalar y activar: llena tu caché</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Installing a local web server</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T164248Z" creationid="gitnacho" creationdate="20221012T164248Z">
        <seg>### Instalar un servidor web local</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Installing a text editor</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T154703Z" creationid="gitnacho" creationdate="20221012T154703Z">
        <seg>### Instalar un editor de texto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Installing modern web browsers</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T154839Z" creationid="gitnacho" creationdate="20221012T154839Z">
        <seg>### Instalar navegadores web modernos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Instance methods</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T104628Z" creationid="gitnacho" creationdate="20221007T104628Z">
        <seg>### Métodos de instancia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Instance properties</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T104500Z" creationid="gitnacho" creationdate="20221007T104500Z">
        <seg>### Propiedades de instancia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Instantiating streaming</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T104638Z" creationid="gitnacho" creationdate="20221006T104638Z">
        <seg>### Crear instancia de `streaming`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Interactive example demo</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T210150Z" creationid="gitnacho" creationdate="20221005T210150Z">
        <seg>### Demostración de ejemplo interactivo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Interactivity with JavaScript</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224738Z" creationid="gitnacho" creationdate="20221018T224738Z">
        <seg>### Interactividad con JavaScript</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### JavaScript</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T105954Z" creationid="gitnacho" creationdate="20221007T105954Z">
        <seg>### JavaScript</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### JavaScript API</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T095257Z" creationid="gitnacho" creationdate="20221012T095257Z">
        <seg>### API JavaScript</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### JavaScript types</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T105638Z" creationid="gitnacho" creationdate="20221008T105638Z">
        <seg>### Tipos JavaScript</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Legacy and non-standard properties</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T204702Z" creationid="gitnacho" creationdate="20221011T204702Z">
        <seg>### Propiedades heredadas y no estándar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Let's write some Rust</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061920Z" creationid="gitnacho" creationdate="20221004T061920Z">
        <seg>### Escribamos algo de Rust</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Linking to bugs</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113055Z" creationid="gitnacho" creationdate="20221005T113055Z">
        <seg>### Enlace a errores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Linking to pages in references</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T104913Z" creationid="gitnacho" creationdate="20221005T104913Z">
        <seg>### Enlace a páginas en referencias</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Live sample macros</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T102548Z" creationid="gitnacho" creationdate="20221008T102548Z">
        <seg>### Macros de muestra en vivo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Live samples</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113528Z" creationid="gitnacho" creationdate="20221005T113528Z">
        <seg>### Muestras en vivo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Loading our wasm module without streaming</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T181532Z" creationid="gitnacho" creationdate="20221006T181532Z">
        <seg>### Cargar nuestro módulo `wasm` sin transmisión</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Localizing template content</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T091356Z" creationid="gitnacho" creationdate="20221005T082920Z">
        <seg>### Localización del contenido de la plantilla</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Looking up modules in the database</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T051302Z" creationid="gitnacho" creationdate="20221004T051302Z">
        <seg>### Buscar módulos en la base de datos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Macro syntax</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065123Z" creationid="gitnacho" creationdate="20221005T065123Z">
        <seg>### Sintaxis de macros</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Making the web work for everyone</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T225043Z" creationid="gitnacho" creationdate="20221018T225021Z">
        <seg>### Hacer que la web funcione para todos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Metadata content</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T105033Z" creationid="gitnacho" creationdate="20221008T105033Z">
        <seg>### Contenido de metadatos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Modern tooling</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T225236Z" creationid="gitnacho" creationdate="20221018T225236Z">
        <seg>### Herramientas modernas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Module fallback</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134057Z" creationid="gitnacho" creationdate="20221003T134057Z">
        <seg>### Respaldo del módulo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### More involved memory example</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T225505Z" creationid="gitnacho" creationdate="20221006T225410Z">
        <seg>### Ejemplo de memoria más complicado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Mutating tables and dynamic linking</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073554Z" creationid="gitnacho" creationdate="20221007T073554Z">
        <seg>### Tablas mutantes y enlaces dinámicos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Navigation aids for multi-page guides</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113253Z" creationid="gitnacho" creationdate="20221005T113253Z">
        <seg>### Ayuda de navegación para guías de varias páginas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Network client hints</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092725Z" creationid="gitnacho" creationdate="20221012T092725Z">
        <seg>### Sugerencias para clientes de red</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Number types</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074754Z" creationid="gitnacho" creationdate="20221007T074754Z">
        <seg>### Tipos `Number`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Origin</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060525Z" creationid="gitnacho" creationdate="20221012T060525Z">
        <seg>### `Origin`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Page or section header indicators</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T115234Z" creationid="gitnacho" creationdate="20221005T115234Z">
        <seg>### Indicadores de encabezado de página o sección</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Parameters</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T225039Z" creationid="gitnacho" creationdate="20220921T225039Z">
        <seg>### Parámetros</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Phrasing content</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T104556Z" creationid="gitnacho" creationdate="20221008T104556Z">
        <seg>### Redacción de contenido</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Porting from C/C++</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T093715Z" creationid="gitnacho" creationdate="20221003T080834Z">
        <seg>### Portar desde C/C++</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Preflighted requests</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222507Z" creationid="gitnacho" creationdate="20221011T222507Z">
        <seg>### Solicitudes preverificadas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Preflighted requests in CORS</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T225059Z" creationid="gitnacho" creationdate="20221011T225059Z">
        <seg>### Solicitudes preverificadas en CORS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Preparing the example</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T112550Z" creationid="gitnacho" creationdate="20221006T112550Z">
        <seg>### Preparar el ejemplo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Prerequisites</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105207Z" creationid="gitnacho" creationdate="20221003T105207Z">
        <seg>### Requisitos previos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Primary overload — taking wasm binary code</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193436Z" creationid="gitnacho" creationdate="20221007T193436Z">
        <seg>### Sobrecarga primaria — tomando código binario `wasm`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Python</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174206Z" creationid="gitnacho" creationdate="20221012T174206Z">
        <seg>### Python</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Reading the contents of a page attachment</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T091329Z" creationid="gitnacho" creationdate="20221005T082503Z">
        <seg>### Lectura del contenido de un archivo adjunto a la página</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Recovering from "Unknown Error"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T075627Z" creationid="gitnacho" creationdate="20221005T075627Z">
        <seg>### Recuperar de "Error desconocido"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Reference types</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074823Z" creationid="gitnacho" creationdate="20221007T074823Z">
        <seg>### Tipos `Reference`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Registering your worker</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T142134Z" creationid="gitnacho" creationdate="20220921T024131Z">
        <seg>### Registra tu worker</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Registration</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T135446Z" creationid="gitnacho" creationdate="20221002T135446Z">
        <seg>### Registro</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Requests with credentials</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T225936Z" creationid="gitnacho" creationdate="20221011T225936Z">
        <seg>### Solicitudes con credenciales</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Resolving an array</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073928Z" creationid="gitnacho" creationdate="20221002T073928Z">
        <seg>### Resolver un arreglo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Resolving another Promise</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073953Z" creationid="gitnacho" creationdate="20221002T073953Z">
        <seg>### Resolver otra `Promise`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Resolving thenables and throwing Errors</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T142226Z" creationid="gitnacho" creationdate="20221002T075209Z">
        <seg>### Resolver thenables y lanzar Errores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Result</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T173820Z" creationid="gitnacho" creationdate="20221005T173820Z">
        <seg>### Resultado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Return value</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T225107Z" creationid="gitnacho" creationdate="20220921T225107Z">
        <seg>### Valor de retorno</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Running your WebAssembly code</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T060407Z" creationid="gitnacho" creationdate="20221005T060407Z">
        <seg>### Ejecutar tu código WebAssembly</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Running your example</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105849Z" creationid="gitnacho" creationdate="20221003T105849Z">
        <seg>### Ejecutar tu ejemplo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Rust</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174156Z" creationid="gitnacho" creationdate="20221012T174156Z">
        <seg>### Rust</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### SVG</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T173714Z" creationid="gitnacho" creationdate="20221005T173714Z">
        <seg>### SVG</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Second overload example</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T194238Z" creationid="gitnacho" creationdate="20221007T194238Z">
        <seg>### Segundo ejemplo de sobrecarga</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Secondary overload — taking a module object instance</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193819Z" creationid="gitnacho" creationdate="20221007T193819Z">
        <seg>### Sobrecarga secundaria: tomar una instancia de objeto `module`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Security requirements</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T023554Z" creationid="gitnacho" creationdate="20220923T023554Z">
        <seg>### Requisitos de seguridad</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Semantics and structure with HTML</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224144Z" creationid="gitnacho" creationdate="20221018T224144Z">
        <seg>### Semántica y estructura con HTML</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Sending a compiled module to a worker</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T111854Z" creationid="gitnacho" creationdate="20221007T111854Z">
        <seg>### Enviar un módulo compilado a un *worker*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Setting up the database</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T051104Z" creationid="gitnacho" creationdate="20221004T051104Z">
        <seg>### Configurar la base de datos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Shared memories</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080515Z" creationid="gitnacho" creationdate="20221007T080515Z">
        <seg>### Memoria compartida</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Simple requests</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220011Z" creationid="gitnacho" creationdate="20221011T220011Z">
        <seg>### Solicitudes simples</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Specific attributes</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T173705Z" creationid="gitnacho" creationdate="20221005T173705Z">
        <seg>### Atributos específicos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Storing and instantiating modules</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T051400Z" creationid="gitnacho" creationdate="20221004T051400Z">
        <seg>### Almacenar e instanciar módulos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Stream a .wasm module then compile and instantiate it</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T114719Z" creationid="gitnacho" creationdate="20221019T114719Z">
        <seg>### Transmitir un módulo `.wasm`, luego compilarlo e instanciarlo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Streaming the WebAssembly module</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T113316Z" creationid="gitnacho" creationdate="20221006T113316Z">
        <seg>### Transmitir el módulo WebAssembly</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Styling a paragraph</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211317Z" creationid="gitnacho" creationdate="20221005T211317Z">
        <seg>### Estilizar un párrafo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Styling and layout with CSS</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224310Z" creationid="gitnacho" creationdate="20221018T224310Z">
        <seg>### Estilo y diseño con CSS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Synchronously compiling a WebAssembly module</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T231526Z" creationid="gitnacho" creationdate="20221019T231526Z">
        <seg>### Compilar sincrónicamente un módulo WebAssembly</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Synchronously instantiating a WebAssembly module</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T223521Z" creationid="gitnacho" creationdate="20221005T223521Z">
        <seg>### Instanciar sincrónicamente un módulo WebAssembly</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Template syntax</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065722Z" creationid="gitnacho" creationdate="20221005T065722Z">
        <seg>### Sintaxis de la plantilla</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Text</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062232Z" creationid="gitnacho" creationdate="20221019T062232Z">
        <seg>### Texto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### The simplest module</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053819Z" creationid="gitnacho" creationdate="20221007T053819Z">
        <seg>### El módulo más simple</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Theme color</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062304Z" creationid="gitnacho" creationdate="20221019T062304Z">
        <seg>### Color del tema</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Tips for using GitHub live samples</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T212351Z" creationid="gitnacho" creationdate="20221005T212351Z">
        <seg>### Consejos para usar muestras en vivo de GitHub</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Transfer Example</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120013Z" creationid="gitnacho" creationdate="20221007T120013Z">
        <seg>### Ejemplo de transferencia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Tutorials</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T083227Z" creationid="gitnacho" creationdate="20221002T083227Z">
        <seg>### Tutoriales</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### User-agent client hints</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092335Z" creationid="gitnacho" creationdate="20221012T092335Z">
        <seg>### Sugerencias de cliente de agente de usuario</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Using AssemblyScript</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T091003Z" creationid="gitnacho" creationdate="20221003T091003Z">
        <seg>### Usar AssemblyScript</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Using Table.set</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T234206Z" creationid="gitnacho" creationdate="20221019T234206Z">
        <seg>### Usar `Table.set`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Using a custom HTML template</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T110535Z" creationid="gitnacho" creationdate="20221003T110535Z">
        <seg>### Usar una plantilla HTML personalizada</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Using a preloaded response</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210231Z" creationid="gitnacho" creationdate="20220922T210231Z">
        <seg>### Usar una respuesta precargada</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Using buffer</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T213157Z" creationid="gitnacho" creationdate="20221019T213157Z">
        <seg>### Usar búfer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Using compile</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T180558Z" creationid="gitnacho" creationdate="20221007T180558Z">
        <seg>### Usar `compile`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Using customSections</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T222640Z" creationid="gitnacho" creationdate="20221019T222640Z">
        <seg>### Usar secciones personalizadas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Using exports</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T093911Z" creationid="gitnacho" creationdate="20221006T093911Z">
        <seg>### Usar `exports`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Using get</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T091907Z" creationid="gitnacho" creationdate="20221006T091907Z">
        <seg>### Con `get`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Using grow</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T214556Z" creationid="gitnacho" creationdate="20221019T214556Z">
        <seg>### Usar `grow`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Using imports</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T230249Z" creationid="gitnacho" creationdate="20221019T230249Z">
        <seg>### Usar `import`s</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Using length</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T110206Z" creationid="gitnacho" creationdate="20221006T110206Z">
        <seg>### Usar `length`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Using our helper functions</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T051458Z" creationid="gitnacho" creationdate="20221004T051458Z">
        <seg>### Usar nuestras funciones auxiliares</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Using the npm package on the web</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065437Z" creationid="gitnacho" creationdate="20221004T065437Z">
        <seg>### Usar el paquete npm en la web</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Using the static Promise.resolve method</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073711Z" creationid="gitnacho" creationdate="20221002T073711Z">
        <seg>### Uso del método estático `Promise.resolve`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Using validate</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T200121Z" creationid="gitnacho" creationdate="20221007T200121Z">
        <seg>### Usando `validate`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Vector types</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074811Z" creationid="gitnacho" creationdate="20221007T074811Z">
        <seg>### Tipos `Vector`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Viewing wasm in developer tools</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T181716Z" creationid="gitnacho" creationdate="20221006T181716Z">
        <seg>### Visualizar `wasm` en herramientas de desarrollo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Web forms — Working with user data</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224926Z" creationid="gitnacho" creationdate="20221018T224926Z">
        <seg>### Formularios web — Trabajar con datos del usuario</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### WebAssembly</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174154Z" creationid="gitnacho" creationdate="20221012T174154Z">
        <seg>### WebAssembly</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### WebAssembly Memory</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T063636Z" creationid="gitnacho" creationdate="20221007T063636Z">
        <seg>### Memoria WebAssembly</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### WebAssembly key concepts</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T010731Z" creationid="gitnacho" creationdate="20221003T010731Z">
        <seg>### Conceptos clave en WebAssembly</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### WebAssembly shared memory</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T142312Z" creationid="gitnacho" creationdate="20220923T030853Z">
        <seg>### Memoria compartida de WebAssembly</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### WebAssembly tables</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064942Z" creationid="gitnacho" creationdate="20221007T064942Z">
        <seg>### Tablas WebAssembly</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### What KumaScript is not</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T064623Z" creationid="gitnacho" creationdate="20221005T064623Z">
        <seg>### Qué no es KumaScript</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### What is KumaScript?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T064532Z" creationid="gitnacho" creationdate="20221005T064532Z">
        <seg>### ¿Qué es KumaScript?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### When to use HTML tables</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184750Z" creationid="gitnacho" creationdate="20221008T184750Z">
        <seg>### Cuándo usar tablas HTML</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Writing Rust Targeting WebAssembly</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T090720Z" creationid="gitnacho" creationdate="20221003T090720Z">
        <seg>### Escribir Rust destinado a WebAssembly</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### Writing WebAssembly directly</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T090247Z" creationid="gitnacho" creationdate="20221003T090247Z">
        <seg>### Escribir WebAssembly directamente</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>### wasm-pack</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061526Z" creationid="gitnacho" creationdate="20221004T061526Z">
        <seg>### wasm-pack</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### A digression about code size</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064352Z" creationid="gitnacho" creationdate="20221004T064352Z">
        <seg>#### Una digresión sobre el tamaño del código</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Additional resources</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224710Z" creationid="gitnacho" creationdate="20221018T224710Z">
        <seg>#### Recursos adicionales</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Built-in API modules</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072741Z" creationid="gitnacho" creationdate="20221005T072741Z">
        <seg>#### Módulos API incorporados</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Built-in methods</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072018Z" creationid="gitnacho" creationdate="20221005T072018Z">
        <seg>#### Métodos incorporados</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### CSS</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211453Z" creationid="gitnacho" creationdate="20221005T211453Z">
        <seg>#### CSS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Calling external functions in JavaScript from Rust</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062500Z" creationid="gitnacho" creationdate="20221004T062500Z">
        <seg>#### Llamar a funciones externas en JavaScript desde Rust</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Callouts</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181927Z" creationid="gitnacho" creationdate="20221008T181927Z">
        <seg>#### Llamadas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Creating modules</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073456Z" creationid="gitnacho" creationdate="20221005T073456Z">
        <seg>#### Crear módulos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Credentialed requests and wildcards</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053134Z" creationid="gitnacho" creationdate="20221012T053134Z">
        <seg>#### Solicitudes con credenciales y comodines</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Defining a table in wasm</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T065344Z" creationid="gitnacho" creationdate="20221007T065344Z">
        <seg>#### Definir una tabla en `wasm`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Deprecated</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114335Z" creationid="gitnacho" creationdate="20221005T114335Z">
        <seg>#### Obsoleto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Examples</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T115900Z" creationid="gitnacho" creationdate="20221005T115847Z">
        <seg>#### Ejemplos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Exceptions</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193733Z" creationid="gitnacho" creationdate="20221007T193733Z">
        <seg>#### Excepciones</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Experimental</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114203Z" creationid="gitnacho" creationdate="20221005T114203Z">
        <seg>#### Experimental</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### File objects</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071119Z" creationid="gitnacho" creationdate="20221005T071119Z">
        <seg>#### Objetos File</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### GFM table maximum width</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185025Z" creationid="gitnacho" creationdate="20221008T185025Z">
        <seg>#### Anchura máxima de la tabla GFM</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Guides</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224049Z" creationid="gitnacho" creationdate="20221018T224049Z">
        <seg>#### Guías</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### HTML</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211340Z" creationid="gitnacho" creationdate="20221005T211340Z">
        <seg>#### HTML</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### How to write "\\{{" in text</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065556Z" creationid="gitnacho" creationdate="20221005T065556Z">
        <seg>#### Cómo escribir "\\{{" en el texto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### How will I know I'm ready to move on?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224020Z" creationid="gitnacho" creationdate="20221018T224020Z">
        <seg>#### ¿Cómo sabré que estoy listo para seguir adelante?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Modules</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224229Z" creationid="gitnacho" creationdate="20221018T224229Z">
        <seg>#### Módulos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Non-standard</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114111Z" creationid="gitnacho" creationdate="20221005T114111Z">
        <seg>#### No estándar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Note</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181540Z" creationid="gitnacho" creationdate="20221008T181540Z">
        <seg>#### Nota</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Note containing a code block</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182145Z" creationid="gitnacho" creationdate="20221008T182145Z">
        <seg>#### Nota que contiene un bloque de código</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Output logged</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120954Z" creationid="gitnacho" creationdate="20221007T120410Z">
        <seg>#### Salida registrada</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Parameters</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T191256Z" creationid="gitnacho" creationdate="20221007T191256Z">
        <seg>#### Parámetros</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Preflight requests and credentials</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230658Z" creationid="gitnacho" creationdate="20221011T230658Z">
        <seg>#### Solicitudes de preverificación y credenciales</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Preflighted requests and redirects</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T224718Z" creationid="gitnacho" creationdate="20221011T224718Z">
        <seg>#### Solicitudes comprobadas y redireccionamientos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Prerequisites</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224006Z" creationid="gitnacho" creationdate="20221018T224006Z">
        <seg>#### Prerrequisitos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Producing Rust functions that JavaScript can call</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063054Z" creationid="gitnacho" creationdate="20221004T063054Z">
        <seg>#### Producir funciones Rust que JavaScript puede llamar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Properties tables</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185706Z" creationid="gitnacho" creationdate="20221008T185706Z">
        <seg>#### Tablas de propiedades</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Result</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211501Z" creationid="gitnacho" creationdate="20221005T211501Z">
        <seg>#### Resultado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Return value</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193531Z" creationid="gitnacho" creationdate="20221007T193531Z">
        <seg>#### Valor de retorno</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Syntax</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T115843Z" creationid="gitnacho" creationdate="20221005T115843Z">
        <seg>#### Sintaxis</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Table features that are not supported in GFM</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184835Z" creationid="gitnacho" creationdate="20221008T184835Z">
        <seg>#### Características de la tabla que no son compatibles con GFM</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Third-party cookies</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053434Z" creationid="gitnacho" creationdate="20221012T053434Z">
        <seg>#### *Cookies*&amp;nbsp;de terceros</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Translated warning</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182043Z" creationid="gitnacho" creationdate="20221008T182043Z">
        <seg>#### Advertencia traducida</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Using JSON as a macro parameter</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065336Z" creationid="gitnacho" creationdate="20221005T065336Z">
        <seg>#### Usar JSON como parámetro de macro</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Using `wasm-bindgen` to communicate between Rust and JavaScript</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062107Z" creationid="gitnacho" creationdate="20221004T062107Z">
        <seg>#### Usar `wasm-bindgen` para comunicarse entre Rust y JavaScript</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Using the table</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072618Z" creationid="gitnacho" creationdate="20221007T072618Z">
        <seg>#### Usar la `Table`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Warnings</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181751Z" creationid="gitnacho" creationdate="20221008T181751Z">
        <seg>#### Advertencias</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Why is my service worker failing to register?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T142648Z" creationid="gitnacho" creationdate="20220921T025544Z">
        <seg>#### ¿Por qué mi service worker no se registra?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### Working with tag lists</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071352Z" creationid="gitnacho" creationdate="20221005T071352Z">
        <seg>#### Trabajar con listas de etiquetas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### main.js code</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120053Z" creationid="gitnacho" creationdate="20221007T120053Z">
        <seg>#### Código de main.js</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#### myWorker.js code</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120343Z" creationid="gitnacho" creationdate="20221007T120152Z">
        <seg>#### Código de myWorker.js</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>##### Examples</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114154Z" creationid="gitnacho" creationdate="20221005T114154Z">
        <seg>##### Ejemplos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>##### Iterating over all the tags on a page</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071652Z" creationid="gitnacho" creationdate="20221005T071617Z">
        <seg>##### Iterar sobre todas las etiquetas en una página</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>##### Looking to see if a specific tag is set</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071446Z" creationid="gitnacho" creationdate="20221005T071446Z">
        <seg>##### Buscar si se ha establecido una etiqueta específica</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>##### Return value</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T110351Z" creationid="gitnacho" creationdate="20221008T110351Z">
        <seg>##### Valor de retorno</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>##### Syntax</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114140Z" creationid="gitnacho" creationdate="20221005T114140Z">
        <seg>##### Sintaxis</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#[test]</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061823Z" creationid="gitnacho" creationdate="20221004T061823Z">
        <seg>#[test]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#[wasm_bindgen]
extern {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061934Z" creationid="gitnacho" creationdate="20221004T061934Z">
        <seg>#[wasm_bindgen]
extern {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#[wasm_bindgen]
pub fn greet(name: &amp;str) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061936Z" creationid="gitnacho" creationdate="20221004T061936Z">
        <seg>#[wasm_bindgen]
pub fn greet(name: &amp;str) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#define EXTERN</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111640Z" creationid="gitnacho" creationdate="20221003T111640Z">
        <seg>#define EXTERN</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#define EXTERN extern "C"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111639Z" creationid="gitnacho" creationdate="20221003T111639Z">
        <seg>#define EXTERN extern "C"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#else</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111640Z" creationid="gitnacho" creationdate="20221003T111640Z">
        <seg>#else</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#endif</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111641Z" creationid="gitnacho" creationdate="20221003T111641Z">
        <seg>#endif</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#firstParagraph {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174252Z" creationid="gitnacho" creationdate="20221012T174252Z">
        <seg>#firstParagraph {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#ifdef __cplusplus</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111638Z" creationid="gitnacho" creationdate="20221003T111638Z">
        <seg>#ifdef __cplusplus</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#include &lt;emscripten/emscripten.h&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111637Z" creationid="gitnacho" creationdate="20221003T111637Z">
        <seg>#include &lt;emscripten/emscripten.h&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>#include &lt;stdio.h&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105512Z" creationid="gitnacho" creationdate="20221003T105512Z">
        <seg>#include &lt;stdio.h&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>${original === cast}`);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T074006Z" creationid="gitnacho" creationdate="20221002T074006Z">
        <seg>${original === cast}`);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>'Complete_beginners_start_here': 'Anfänger starten hier!',</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083056Z" creationid="gitnacho" creationdate="20221005T083056Z">
        <seg>'Complete_beginners_start_here': 'Anfänger starten hier!',</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>'Complete_beginners_start_here': 'Bienvenue aux débutants !',</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083058Z" creationid="gitnacho" creationdate="20221005T083058Z">
        <seg>'Complete_beginners_start_here': 'Bienvenue aux débutants !',</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>'Complete_beginners_start_here': 'Complete beginners start here!',</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083051Z" creationid="gitnacho" creationdate="20221005T083051Z">
        <seg>'Complete_beginners_start_here': 'Complete beginners start here!',</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>'Getting_started_with_the_web': 'Commencer avec le Web',</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083059Z" creationid="gitnacho" creationdate="20221005T083059Z">
        <seg>'Getting_started_with_the_web': 'Commencer avec le Web',</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>'Getting_started_with_the_web': 'Getting started with the web',</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083052Z" creationid="gitnacho" creationdate="20221005T083052Z">
        <seg>'Getting_started_with_the_web': 'Getting started with the web',</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>'Getting_started_with_the_web': 'Lernen Sie das Internet kennen',</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083056Z" creationid="gitnacho" creationdate="20221005T083056Z">
        <seg>'Getting_started_with_the_web': 'Lernen Sie das Internet kennen',</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>'de': {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083054Z" creationid="gitnacho" creationdate="20221005T083054Z">
        <seg>'de': {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>'en-US': {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083026Z" creationid="gitnacho" creationdate="20221005T083026Z">
        <seg>'en-US': {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>'fr': {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083057Z" creationid="gitnacho" creationdate="20221005T083057Z">
        <seg>'fr': {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220805T120816Z" creationid="nachec" creationdate="20220805T120816Z">
        <seg>(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>() =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210912T134732Z" creationid="gitnacho" creationdate="20210912T134732Z">
        <seg>() =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>() =&gt; {},</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210920T072949Z" creationid="gitnacho" creationdate="20210920T072949Z">
        <seg>() =&gt; {},</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>();
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035256Z" creationid="gitnacho" creationdate="20220921T035256Z">
        <seg>();
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(A new cache entry is created for every unique value.)
This applies in particular to network client hints like {{HTTPHeader("Downlink")}} and {{HTTPHeader("RTT")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T091852Z" creationid="gitnacho" creationdate="20221012T091852Z">
        <seg>(Se crea una nueva entrada de caché para cada valor único). Esto se aplica en particular a sugerencias de clientes de red como {{HTTPHeader("Downlink")}} y {{HTTPHeader("RTT")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(For example, a webpage with an advertising-module and statistics-module both monitoring video-watching.)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T201925Z" creationid="gitnacho" creationdate="20221011T201925Z">
        <seg>(Por ejemplo, una página web con un módulo de publicidad y un módulo de estadísticas que monitorean la visualización de videos).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(For example, the article is for an advanced audience, and they just need to see the code.) Also, you might be demonstrating an API feature that doesn't work well as an embedded example, which might need its own separate page to link to.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204529Z" creationid="gitnacho" creationdate="20221005T204529Z">
        <seg>(Por ejemplo, el artículo es para una audiencia avanzada y solo necesitan ver el código). Además, es posible que estés demostrando una función de la API que no funciona bien como un ejemplo incrustado, que podría necesitar su propia página separada para enlazarla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(In JavaScript, this is represented as a {{jsxref("BigInt")}})</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110548Z" creationid="gitnacho" creationdate="20221007T110548Z">
        <seg>(En JavaScript, esto se representa como {{jsxref("BigInt")}})</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(Note that WebAssembly has the [high-level goal](https://webassembly.org/docs/high-level-goals/) of supporting languages with garbage-collected memory models in the future.)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T083725Z" creationid="gitnacho" creationdate="20221003T010506Z">
        <seg>(Ten en cuenta que WebAssembly tiene el [objetivo de alto nivel](https://webassembly.org/docs/high-level-goals/) de admitir lenguajes con modelos de memoria recolectores de basura en el futuro).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(Note that we need to compile with `NO_EXIT_RUNTIME`, which is necessary as otherwise when `main()` exits the runtime would be shut down — necessary for proper C emulation, e.g., atexits are called — and it wouldn't be valid to call compiled code.)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T114701Z" creationid="gitnacho" creationdate="20221003T112058Z">
        <seg>(Ten en cuenta que necesitamos compilar con `NO_EXIT_RUNTIME`, este es necesario porque, de lo contrario, cuando `main()` sale, el entorno de ejecución se cerraría, necesario para la emulación adecuada de C, por ejemplo, se llama a `atexits`, y no sería válido para llamar al código compilado).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(Read [High level structure](https://github.com/WebAssembly/design/blob/main/BinaryEncoding.md#high-level-structure)
for information on section structures, and how normal sections
("known sections") and custom sections are distinguished.)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T223432Z" creationid="gitnacho" creationdate="20221019T222312Z">
        <seg>(Lee [Estructura de alto nivel](https://github.com/WebAssembly/design/blob/main/BinaryEncoding.md#high-level-structure)
para obtener información sobre la estructura de las secciones y cómo se distinguen las secciones normales ("secciones conocidas") y las secciones personalizadas).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(Use this if you want to dynamically build markup or use the results of another template that may include markup.)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070054Z" creationid="gitnacho" creationdate="20221005T070054Z">
        <seg>(Utiliza esto si deseas crear marcas dinámicamente o usar los resultados de otra plantilla que puede incluir marcas).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(We specify `utf8` here, but many other encodings are supported.)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064350Z" creationid="gitnacho" creationdate="20221007T064350Z">
        <seg>(Especificamos `utf8` aquí, pero se admiten muchas otras codificaciones).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(async () =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210158Z" creationid="gitnacho" creationdate="20220922T210158Z">
        <seg>(async () =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(block $my_block</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T075336Z" creationid="gitnacho" creationdate="20221020T075336Z">
        <seg>(block $my_block</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(data (i32.const 0) "Hi")</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064653Z" creationid="gitnacho" creationdate="20221007T064653Z">
        <seg>(data (i32.const 0) "Hola")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(e) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080322Z" creationid="gitnacho" creationdate="20221002T080322Z">
        <seg>(e) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(elem (i32.const 0) $f1 $f2)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072034Z" creationid="gitnacho" creationdate="20221007T072034Z">
        <seg>(elem (i32.const 0) $f1 $f2)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(elem (i32.const 0) $f42 $f83)
)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000316Z" creationid="gitnacho" creationdate="20221020T000316Z">
        <seg>(elem (i32.const 0) $f42 $f83)
)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(elem (i32.const 0) $shared0func)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073831Z" creationid="gitnacho" creationdate="20221007T073831Z">
        <seg>(elem (i32.const 0) $shared0func)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(else</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T084118Z" creationid="gitnacho" creationdate="20221020T084118Z">
        <seg>(else</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(errMsg) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043841Z" creationid="gitnacho" creationdate="20221004T043841Z">
        <seg>(errMsg) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(export "add" (func $add))
)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T060820Z" creationid="gitnacho" creationdate="20221007T060820Z">
        <seg>(export "add" (func $add))
)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(for historical reasons [other JavaScript MIME types](/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#javascript_types) may be accepted).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T105930Z" creationid="gitnacho" creationdate="20221008T105930Z">
        <seg>(por razones históricas se pueden aceptar [otros tipos MIME de JavaScript](/es/docs/Web/HTTP/Basics_of_HTTP/MIME_types#tipos_javascript)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func $add (param $lhs i32) (param $rhs i32) (result i32)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T060818Z" creationid="gitnacho" creationdate="20221007T060818Z">
        <seg>(func $add (param $lhs i32) (param $rhs i32) (result i32)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func $f1 (result i32)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072036Z" creationid="gitnacho" creationdate="20221007T072036Z">
        <seg>(func $f1 (result i32)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func $f2 (result i32)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072037Z" creationid="gitnacho" creationdate="20221007T072037Z">
        <seg>(func $f2 (result i32)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func $f42 (result i32) i32.const 42)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000309Z" creationid="gitnacho" creationdate="20221020T000309Z">
        <seg>(func $f42 (result i32) i32.const 42)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func $f83 (result i32) i32.const 83)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000310Z" creationid="gitnacho" creationdate="20221020T000310Z">
        <seg>(func $f83 (result i32) i32.const 83)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func $getAnswer (result i32)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061139Z" creationid="gitnacho" creationdate="20221007T061139Z">
        <seg>(func $getAnswer (result i32)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func $get_two_numbers (result i32 i32)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080233Z" creationid="gitnacho" creationdate="20221007T080233Z">
        <seg>(func $get_two_numbers (result i32 i32)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func $i (import "imports" "imported_func") (param i32))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T113146Z" creationid="gitnacho" creationdate="20221006T113146Z">
        <seg>(func $i (import "imports" "imported_func") (param i32))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func $shared0func (result i32)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073832Z" creationid="gitnacho" creationdate="20221007T073832Z">
        <seg>(func $shared0func (result i32)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func $throwException (param $errorValueArg i32)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023342Z" creationid="gitnacho" creationdate="20221008T023342Z">
        <seg>(func $throwException (param $errorValueArg i32)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func $throwException (param i32)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142820Z" creationid="gitnacho" creationdate="20221019T142820Z">
        <seg>(func $throwException (param i32)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func (export "add_two_numbers") (result i32)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080237Z" creationid="gitnacho" creationdate="20221007T080237Z">
        <seg>(func (export "add_two_numbers") (result i32)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func (export "callByIndex") (param $i i32) (result i32)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073334Z" creationid="gitnacho" creationdate="20221007T073334Z">
        <seg>(func (export "callByIndex") (param $i i32) (result i32)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func (export "doIt") (result i32)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073835Z" creationid="gitnacho" creationdate="20221007T073835Z">
        <seg>(func (export "doIt") (result i32)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func (export "exported_func")</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T113147Z" creationid="gitnacho" creationdate="20221006T113147Z">
        <seg>(func (export "exported_func")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func (export "getAnswerPlus1") (result i32)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061140Z" creationid="gitnacho" creationdate="20221007T061140Z">
        <seg>(func (export "getAnswerPlus1") (result i32)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func (export "getGlobal") (result i32)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T063507Z" creationid="gitnacho" creationdate="20221007T063507Z">
        <seg>(func (export "getGlobal") (result i32)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func (export "incGlobal")</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T063508Z" creationid="gitnacho" creationdate="20221007T063508Z">
        <seg>(func (export "incGlobal")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func (export "logIt")</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061405Z" creationid="gitnacho" creationdate="20221007T061405Z">
        <seg>(func (export "logIt")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func (export "run")</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023354Z" creationid="gitnacho" creationdate="20221008T023354Z">
        <seg>(func (export "run")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func (export "writeHi")</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064655Z" creationid="gitnacho" creationdate="20221007T064655Z">
        <seg>(func (export "writeHi")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(func (param $lhs i32) (param $rhs i32) (result i32)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055307Z" creationid="gitnacho" creationdate="20221007T055307Z">
        <seg>(func (param $lhs i32) (param $rhs i32) (result i32)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(global $g (import "js" "global") (mut i32))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T063507Z" creationid="gitnacho" creationdate="20221007T063507Z">
        <seg>(global $g (import "js" "global") (mut i32))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(global.get $g))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T063508Z" creationid="gitnacho" creationdate="20221007T063508Z">
        <seg>(global.get $g))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(global.set $g</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T063509Z" creationid="gitnacho" creationdate="20221007T063509Z">
        <seg>(global.set $g</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(i32.add (global.get $g) (i32.const 1))))
)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T063510Z" creationid="gitnacho" creationdate="20221007T063510Z">
        <seg>(i32.add (global.get $g) (i32.const 1))))
)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(import "console" "log" (func $log (param i32 i32)))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064646Z" creationid="gitnacho" creationdate="20221007T064646Z">
        <seg>(import "console" "log" (func $log (param i32 i32)))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(import "console" "log" (func $log (param i32)))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061405Z" creationid="gitnacho" creationdate="20221007T061405Z">
        <seg>(import "console" "log" (func $log (param i32)))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(import "extmod" "exttag" (tag $tagname (param i32 f32))
)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015515Z" creationid="gitnacho" creationdate="20221008T015515Z">
        <seg>(import "extmod" "exttag" (tag $tagname (param i32 f32))
)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(import "extmod" "exttag" (tag $tagname (param i32)))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023330Z" creationid="gitnacho" creationdate="20221008T023330Z">
        <seg>(import "extmod" "exttag" (tag $tagname (param i32)))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(import "extmod" "throwExnWithStack" (func $throwExnWithStack (param i32)))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204101Z" creationid="gitnacho" creationdate="20221019T204101Z">
        <seg>(import "extmod" "throwExnWithStack" (func $throwExnWithStack (param i32)))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(import "js" "mem" (memory 1))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064647Z" creationid="gitnacho" creationdate="20221007T064647Z">
        <seg>(import "js" "mem" (memory 1))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(import "js" "memory" (memory 1))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073829Z" creationid="gitnacho" creationdate="20221007T073829Z">
        <seg>(import "js" "memory" (memory 1))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(import "js" "table" (table 1 funcref))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073830Z" creationid="gitnacho" creationdate="20221007T073830Z">
        <seg>(import "js" "table" (table 1 funcref))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(import "js" "tbl" (table 2 anyfunc))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000308Z" creationid="gitnacho" creationdate="20221020T000308Z">
        <seg>(import "js" "tbl" (table 2 anyfunc))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(module</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T113144Z" creationid="gitnacho" creationdate="20221006T113144Z">
        <seg>(module</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(obj) =&gt; obj.instance.exports.exported_func()
);
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T101404Z" creationid="gitnacho" creationdate="20221006T101404Z">
        <seg>(obj) =&gt; obj.instance.exports.exported_func()
);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(obj) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T060516Z" creationid="gitnacho" creationdate="20221005T060516Z">
        <seg>(obj) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(reason) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073723Z" creationid="gitnacho" creationdate="20221002T073723Z">
        <seg>(reason) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(result i32)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055051Z" creationid="gitnacho" creationdate="20221007T055051Z">
        <seg>(result i32)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(results) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T055514Z" creationid="gitnacho" creationdate="20221005T055514Z">
        <seg>(results) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(see [selective caching live](https://googlechrome.github.io/samples/service-worker/selective-caching/)) The code uses {{domxref("CacheStorage.open()")}} to open any `Cache` objects with a `Content-Type` header that starts with `font/`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T203555Z">
        <seg>(ve el [almacenamiento en caché selectivo en vivo](https://googlechrome.github.io/samples/service-worker/selective-caching/)) El código usa {{DOMxRef("CacheStorage.open()")}} para abrir cualquier objeto `Cache` con un encabezado `Content-Type` que comienza con `font/`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(table 2 funcref)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072033Z" creationid="gitnacho" creationdate="20221007T072033Z">
        <seg>(table 2 funcref)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(tag $tagname (export "exptag") (param i32))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T143203Z" creationid="gitnacho" creationdate="20221019T143203Z">
        <seg>(tag $tagname (export "exptag") (param i32))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(then</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T084111Z" creationid="gitnacho" creationdate="20221020T084111Z">
        <seg>(then</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(type $return_i32 (func (result i32)))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073334Z" creationid="gitnacho" creationdate="20221007T073334Z">
        <seg>(type $return_i32 (func (result i32)))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(type $void_to_i32 (func (result i32)))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073835Z" creationid="gitnacho" creationdate="20221007T073835Z">
        <seg>(type $void_to_i32 (func (result i32)))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(v) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080253Z" creationid="gitnacho" creationdate="20221002T080253Z">
        <seg>(v) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>(value) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073715Z" creationid="gitnacho" creationdate="20221002T073715Z">
        <seg>(value) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>({ instance }) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233944Z" creationid="gitnacho" creationdate="20221006T233944Z">
        <seg>({ instance }) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="NaPa" changedate="20120422T103419Z">
        <seg>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>)
)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080241Z" creationid="gitnacho" creationdate="20221007T080241Z">
        <seg>)
)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T075621Z" creationid="gitnacho" creationdate="20221020T075621Z">
        <seg>)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200408T234700Z" creationid="Pacho" creationdate="20200408T234700Z">
        <seg>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>),</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220805T130802Z" creationid="nachec" creationdate="20220805T130802Z">
        <seg>),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170323T052420Z" creationid="nacho" creationdate="20170323T052420Z">
        <seg>);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>);
});</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041513Z" creationid="gitnacho" creationdate="20220921T041513Z">
        <seg>);
});</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>);
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034343Z" creationid="gitnacho" creationdate="20220921T034343Z">
        <seg>);
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>);
};
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120353Z" creationid="gitnacho" creationdate="20221007T120353Z">
        <seg>);
};
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>*</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200509T062421Z" creationid="Pacho" creationdate="20200509T062421Z">
        <seg>*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>**CORS** (Cross-Origin Resource Sharing) is a system, consisting of transmitting {{Glossary("HTTP_header", "HTTP headers")}}, that determines whether browsers block frontend JavaScript code from accessing responses for cross-origin requests.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T104559Z" creationid="gitnacho" creationdate="20221017T210008Z">
        <seg>**CORS** (*Cross-Origin Resource Sharing* o en español *Intercambio de recursos de origen cruzado*) es un sistema que consiste en transmitir {{Glossary("HTTP_header", "HTTP headers")}}, que determina si los navegadores bloquean el acceso del código JavaScript frontend a las respuestas de peticiones de origen cruzado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>**Client Hints** are a set of [HTTP request header](/en-US/docs/Web/HTTP/Headers) fields that a server can proactively request from a client to get information about the device, network, user, and user-agent-specific preferences.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T084824Z" creationid="gitnacho" creationdate="20221012T084641Z">
        <seg>**Sugerencias del cliente** son un conjunto de campos [Encabezado de solicitud HTTP](/es/docs/Web/HTTP/Headers) que un servidor puede solicitar de forma proactiva a un cliente para obtener información sobre el dispositivo, la red, el usuario y preferencias específicas del agente de usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>**Cross-Origin Resource Sharing** ({{Glossary("CORS")}}) is an {{Glossary("HTTP")}}-header based mechanism that allows a server to indicate any {{glossary("origin", "origins")}} (domain, scheme, or port) other than its own from which a browser should permit loading resources.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T103812Z" creationid="gitnacho" creationdate="20221011T212753Z">
        <seg>**Intercambio de recursos de origen cruzado** ({{Glossary("CORS")}}) es un mecanismo basado en {{Glossary("HTTP")}}-header que permite a un servidor indicar cualquier {{Glossary("origin ")}} (dominio, esquema o puerto) distinto del propio desde el que un navegador debería permitir la carga de recursos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>**HTTPS** (**_HyperText Transfer Protocol Secure_**) is an encrypted version of the {{Glossary("HTTP")}} protocol.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T202103Z" creationid="gitnacho" creationdate="20221018T202103Z">
        <seg>**HTTPS** (**_HyperText Transfer Protocol Secure_** o en español *Protocolo de transferencia de hipertexto seguro*) es una versión cifrada del protocolo {{Glossary("HTTP")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>**MDN Web Docs** is free-to-use resource on which we document the open web platform.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T200226Z" creationid="gitnacho" creationdate="20221008T200226Z">
        <seg>**MDN Web Docs** es un recurso de uso gratuito en el que documentamos la plataforma web abierta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>**This value is unsafe**, because it leaks origins and paths from TLS-protected resources to insecure origins.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T130308Z" creationid="gitnacho" creationdate="20221003T130308Z">
        <seg>**Este valor no es seguro** porque filtra orígenes y rutas de recursos protegidos por TLS a orígenes no seguros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>**What does your website look like,** in simple high-level terms?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061131Z" creationid="gitnacho" creationdate="20221019T061131Z">
        <seg>**¿Cómo se ve tu sitio web**, en términos simples de alto nivel?,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>**What information are you presenting on the subject?** Write a title and a few paragraphs and think of an image you'd like to show on your page.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061117Z" creationid="gitnacho" creationdate="20221019T061117Z">
        <seg>**¿Qué información presentas sobre el tema?**; Escribe un título y algunos párrafos y piensa en una imagen que te gustaría mostrar en tu página.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>**What is your website about?** Do you like dogs, New York, or Pac-Man?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061055Z" creationid="gitnacho" creationdate="20221019T061055Z">
        <seg>**¿De qué trata tu sitio web?**, ¿te gustan los perros, Nueva York o Pac-Man?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>**_Hypertext Transfer Protocol (HTTP)_** is an [application-layer](https://en.wikipedia.org/wiki/Application_Layer) protocol for transmitting hypermedia documents, such as HTML.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T062022Z" creationid="gitnacho" creationdate="20221012T061819Z">
        <seg>**_Hypertext Transfer Protocol (HTTP)_** (o **_Protocolo de Transferencia de Hipertexto en español)_** es un protocolo de la [capa de aplicación](http://es.wikipedia.org/wiki/Capa_de_aplicaci%C3%B3n) para la transmisión de documentos hipermedia, como HTML.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>**`call`** calls a function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T082825Z" creationid="gitnacho" creationdate="20221020T082825Z">
        <seg>**`call`** llama a una función.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>**`end`** is used to end a `block`, `loop`, `if`, or `else`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T083604Z" creationid="gitnacho" creationdate="20221020T083604Z">
        <seg>**`end`** se usa para finalizar un `block`, `loop`, `if` o `else`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>**`nop`** stands for no-operation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T090137Z" creationid="gitnacho" creationdate="20221020T090137Z">
        <seg>**`nop`** significa "no hay operación".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>*/</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170430T051129Z" creationid="nacho" creationdate="20170430T051129Z">
        <seg>*/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>+-- lib.rs
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061726Z" creationid="gitnacho" creationdate="20221004T061726Z">
        <seg>+-- lib.rs
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>, prefer words like "first".</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191428Z" creationid="gitnacho" creationdate="20221008T191421Z">
        <seg>, prefiere palabras como "primero".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>-</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210707T102813Z" creationid="Pacho" creationdate="20200530T062054Z">
        <seg>-</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- "l10n:priority"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T035316Z" creationid="gitnacho" creationdate="20220925T035316Z">
        <seg>- "l10n:priority"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- "l10n:priority"
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T061831Z" creationid="gitnacho" creationdate="20221012T061831Z">
        <seg>- "l10n:priority"
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- "l10n:priority"
browser-compat: http.headers.Access-Control-Allow-Origin
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221011T211012Z">
        <seg>- "l10n:priority"
browser-compat: http.headers.Access-Control-Allow-Origin
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- **A computer**.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T164459Z" creationid="gitnacho" creationdate="20221012T164438Z">
        <seg>- **Una computadora**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- **A graphics editor**, like [GIMP](https://www.gimp.org/), [Figma](https://www.figma.com/), [Paint.NET](https://www.getpaint.net/), [Photoshop](https://www.adobe.com/products/photoshop.html), [Sketch](https://www.sketch.com) or [XD](https://www.adobe.com/products/xd.html), to make images or graphics for your web pages.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T165036Z" creationid="gitnacho" creationdate="20221012T165036Z">
        <seg>- **Un editor de gráficos**, como [GIMP](https://www.gimp.org/), [Figma](https://www.figma.com/), [Paint.NET](https: //www.getpaint.net/), [Photoshop](https://www.adobe.com/products/photoshop.html), [Sketch](https://www.sketch.com) o [XD]( https://www.adobe.com/products/xd.html), para realizar imágenes o gráficos para tus páginas web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- **A text editor**, to write code in.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T164533Z" creationid="gitnacho" creationdate="20221012T164533Z">
        <seg>- **Un editor de texto**, para escribir código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- **A version control system**, to manage files on servers, collaborate on a project with a team, share code and assets and avoid editing conflicts.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T165049Z" creationid="gitnacho" creationdate="20221012T165049Z">
        <seg>- **Un sistema de control de versiones**, para administrar archivos en servidores, colaborar en un proyecto con un equipo, compartir código y activos y evitar conflictos de edición.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- **An FTP program**, used on older web hosting accounts to manage files on servers ([Git](https://git-scm.com/) is increasingly replacing FTP for this purpose).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T165144Z" creationid="gitnacho" creationdate="20221012T165144Z">
        <seg>- **Un programa FTP**, utilizado en cuentas de alojamiento web más antiguas para administrar archivos en servidores ([Git](https://git-scm.com/) está reemplazando cada vez más a FTP para este propósito).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- **An automation system,** like [Webpack](https://webpack.js.org/), [Grunt](https://gruntjs.com/), or [Gulp](https://gulpjs.com/) to automatically perform repetitive tasks, such as minifying code and running tests.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T055200Z" creationid="gitnacho" creationdate="20221012T165216Z">
        <seg>- **Un sistema de automatización,** como [Webpack](https://webpack.js.org/), [Grunt](https://gruntjs.com/) o [Gulp](https://gulpjs.com/) para realizar automáticamente tareas repetitivas, como minimizar código y ejecutar pruebas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- **Any other value:** The embedded content is treated as a data block which won't be processed by the browser.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T132627Z" creationid="gitnacho" creationdate="20221003T132627Z">
        <seg>- **Cualquier otro valor:** El contenido incrustado se trata como un bloque de datos que no será procesado por el navegador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- **Instance**: A Module paired with all the state it uses at runtime including a Memory, Table, and set of imported values.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T101255Z" creationid="gitnacho" creationdate="20221003T075928Z">
        <seg>- **Instancia**: Un modulo junto con todos los estados que usó durante la ejecución incluyendo la memoria, tabla y un conjunto de valores importados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- **Memory**: A resizable ArrayBuffer that contains the linear array of bytes read and written by WebAssembly's low-level memory access instructions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T075829Z" creationid="gitnacho" creationdate="20221003T075829Z">
        <seg>- **Memoria**: Un conjunto de tamaño variable que contiene una serie lineal y continua de bytes, que las instrucciones de memoria de bajo nivel de WebAssembly pueden leer y escribir.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- **Module**: Represents a WebAssembly binary that has been compiled by the browser into executable machine code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T010853Z" creationid="gitnacho" creationdate="20221003T010853Z">
        <seg>- **Módulo**: Representa un binario de WebAssembly que ha sido compilado por el navegador en código máquina ejecutable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- **Omitted or a JavaScript MIME type:** This indicates the script is JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T130532Z" creationid="gitnacho" creationdate="20221003T130532Z">
        <seg>- **Omitido o un tipo MIME de JavaScript:** Esto indica que el script es JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- **Table**: A resizable typed array of references (e.g. to functions) that could not otherwise be stored as raw bytes in Memory (for safety and portability reasons).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T075856Z" creationid="gitnacho" creationdate="20221003T075856Z">
        <seg>- **Tabla**: Una lista tipada de tamaño variable que contiene referencias (por ejemplo a funciones) que no se podrían guardar como bytes en memoria (por razones de seguridad o portabilidad).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- **Web browsers**, to test code in.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T164659Z" creationid="gitnacho" creationdate="20221012T164659Z">
        <seg>- **Navegadores web**, para probar el código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- **`module`:** Causes the code to be treated as a JavaScript module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T132433Z" creationid="gitnacho" creationdate="20221003T132433Z">
        <seg>- **`module`:** Hace que el código sea tratado como un módulo de JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- 3D</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T102232Z" creationid="gitnacho" creationdate="20221002T102232Z">
        <seg>- 3D</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- 3D game engines</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T085824Z" creationid="gitnacho" creationdate="20221002T085824Z">
        <seg>- 3D game engines</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : **Client Hints** are a set of response headers that a server can use to proactively request information from a client about the device, network, user, and user-agent-specific preferences.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T063725Z" creationid="gitnacho" creationdate="20221012T063725Z">
        <seg>- : **Sugerencias de cliente** son un conjunto de encabezados de respuesta que un servidor puede usar para solicitar de manera proactiva información de un cliente sobre el dispositivo, la red, el usuario y las preferencias específicas del agente de usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : **Cross-site HTTP requests** are HTTP requests for resources from a **different domain** than the domain of the resource making the request.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T063425Z" creationid="gitnacho" creationdate="20221012T063425Z">
        <seg>- : Las **Solicitudes Inter-Sitio HTTP** (*Cross-site HTTP requests* en inglés), son peticiones HTTP por recursos pertenecientes a un dominio distinto al dominio del recurso que está haciendo la petición.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A WebAssembly exception object that can be thrown, caught, and rethrown both within and across WebAssembly/JavaScript boundaries.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T114425Z" creationid="gitnacho" creationdate="20221019T114425Z">
        <seg>- : Un objeto `exception` de WebAssembly que se puede lanzar, capturar y volver a lanzar tanto dentro como fuera de los límites de WebAssembly/JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A [`Response`](/en-US/docs/Web/API/Response)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T101731Z" creationid="gitnacho" creationdate="20221006T101153Z">
        <seg>- : Un objeto [`Response`](/es/docs/Web/API/Response)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T224625Z" creationid="gitnacho" creationdate="20221019T224625Z">
        <seg>- : Un objeto [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A [`WebAssembly.Tag`](/en-US/docs/WebAssembly/JavaScript_interface/Tag) that must match the tag associated with this exception.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142418Z" creationid="gitnacho" creationdate="20221019T142418Z">
        <seg>- : Una [`WebAssembly.Tag`](/es/docs/WebAssembly/JavaScript_interface/Tag) que debe coincidir con la etiqueta asociada con esta excepción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A [typed array](/en-US/docs/Web/JavaScript/Typed_arrays) or</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193444Z" creationid="gitnacho" creationdate="20221007T193444Z">
        <seg>- : Un [arreglo tipado](/es/docs/Web/JavaScript/Typed_arrays) o</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A [typed array](/en-US/docs/Web/JavaScript/Typed_arrays) or [ArrayBuffer](/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T200003Z" creationid="gitnacho" creationdate="20221007T200003Z">
        <seg>- : Un [arreglo tipado](/es/docs/Web/JavaScript/Typed_arrays) o [ArrayBuffer](/es/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A [typed array](/en-US/docs/Web/JavaScript/Typed_arrays) or {{jsxref("ArrayBuffer")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T180355Z" creationid="gitnacho" creationdate="20221007T180355Z">
        <seg>- : Un [arreglo tipado](/es/docs/Web/JavaScript/Typed_arrays) o {{jsxref("ArrayBuffer")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A `WebAssembly.Global` object represents a global variable instance, accessible from both JavaScript and importable/exportable across one or more [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) instances.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T101048Z">
        <seg>- : El objeto WebAssembly.Global representa una variable de la instancia global, accesible desde JavaScript e importable/exportable a través de una o más instancias de [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A `WebAssembly.Instance` object is a stateful, executable instance of a `Module`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T103906Z" creationid="gitnacho" creationdate="20221003T101550Z">
        <seg>- : Un objeto `WebAssembly.Instance` es una instancia ejecutable con estado de un `Module`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A `WebAssembly.Memory` object is a resizable {{jsxref("Global_objects/ArrayBuffer", "ArrayBuffer")}} that holds the raw bytes of memory accessed by an `Instance`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T102359Z" creationid="gitnacho" creationdate="20221003T102359Z">
        <seg>- : Un objeto `WebAssembly.Memory` es un {{jsxref("Global_objects/ArrayBuffer", "ArrayBuffer")}} redimensionable que contiene los bytes sin procesar de la memoria a la que accede una `Instance`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A `WebAssembly.Module` object contains stateless WebAssembly code that has already been compiled by the browser and can be efficiently [shared with Workers](/en-US/docs/Web/API/Worker/postMessage), and instantiated multiple times.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T101408Z">
        <seg>- : El objeto `WebAssembly.Module` contiene código WebAssembly sin estado que ya ha compilado el navegador y se puede [compartir con *workers*](/es/docs/Web/API/Worker/postMessage) e instanciar varias veces.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A `WebAssembly.Table` object is a resizable typed array of opaque values, like function references, that are accessed by an `Instance`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T102438Z" creationid="gitnacho" creationdate="20221003T102438Z">
        <seg>- : Un objeto `WebAssembly.Table` es un arreglo de valores opacos de tamaño variable, como referencias de funciones, a las que se accede mediante una `Instance`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A boolean indicating whether or not the event can bubble across the boundary between the shadow DOM and the regular DOM.
- {{domxref("Event.currentTarget")}} {{ReadOnlyInline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T201114Z">
        <seg>- : Un booleano que indica si el evento puede o no burbujear a través del límite entre el DOM oculto y el DOM normal.
- {{DOMxRef("Event.currentTarget")}} {{ReadOnlyInline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A boolean value indicating whether or not the event bubbles up through the DOM.
- {{domxref("Event.cancelable")}} {{ReadOnlyInline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T201044Z">
        <seg>- : Un valor booleano que indica si el evento aparece o no en el DOM.
- {{DOMxRef("Event.cancelable")}} {{ReadOnlyInline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A boolean value indicating whether the event is cancelable.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T201051Z" creationid="gitnacho" creationdate="20221011T201051Z">
        <seg>- : Un valor booleano que indica si el evento es cancelable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A boolean value indicating whether the given event will bubble across through the shadow root into the standard DOM. Use {{domxref("Event.composed", "composed")}} instead.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204836Z">
        <seg>- : Un valor booleano que indica si el evento dado pasará a través de la raíz oculta al DOM estándar. Utiliza {{DOMxRef("Event.composed", "composed")}} en su lugar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A boolean value that defines whether the memory is a shared memory or not.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T215921Z" creationid="gitnacho" creationdate="20221019T215921Z">
        <seg>- : Un valor booleano que define si la memoria es una memoria compartida o no.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A brief description of the changes between the early versions of HTTP, to the modern HTTP/2, the emergent HTTP/3 and beyond.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T063814Z" creationid="gitnacho" creationdate="20221012T063814Z">
        <seg>- : Una breve descripción de los cambios del protocolo HTTP desde sus primeras versiones hasta el moderno HTTP/2 y más allá.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A collection of tips to help operational teams with creating secure web applications.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T063918Z" creationid="gitnacho" creationdate="20221012T063918Z">
        <seg>- : Una colección de tips para ayudar a equipos de desarrollo con la creación de aplicaciones web seguras.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A core use-case for WebAssembly is to take the existing ecosystem of C libraries and allow developers to use them on the web.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T103532Z" creationid="gitnacho" creationdate="20221003T095047Z">
        <seg>- : Uno de los principales casos de uso para WebAssembly es tomar las librerías existentes del ecosistema C y permitir que los desarrolladores las usen en la web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A cryptographic nonce (number used once) to allow scripts in a [script-src Content-Security-Policy](/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T125052Z">
        <seg>- : Un nonce criptográfico (número usado una vez) para permitir scripts en un [script-src Content-Security-Policy](/es/docs/Web/HTTP/Headers/Content-Security-Policy/script-src).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A historical alias to {{domxref("Event.stopPropagation()")}} that should be used instead.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204715Z">
        <seg>- : Un alias histórico para {{DOMxRef("Event.stopPropagation()")}} que se debería usar en su lugar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A historical property still supported in order to ensure existing sites continue to work.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T204807Z" creationid="gitnacho" creationdate="20221011T204807Z">
        <seg>- : Una propiedad histórica aún admitida para garantizar que los sitios existentes continúen funcionando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A new service worker is replacing the current service worker, or the current service worker is being discarded due to an install failure.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223902Z" creationid="gitnacho" creationdate="20221003T223902Z">
        <seg>- : Un nuevo *service worker* está reemplazando al *service worker* actual, o el *service worker* actual se está descartando debido a una falla en la instalación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A project designed to help developers, system administrators, and security professionals configure their sites safely and securely.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T071339Z" creationid="gitnacho" creationdate="20221012T064811Z">
        <seg>- : Proyecto diseñado para ayudar a desarrolladores, administradores de sistemas y profesionales de la seguridad a configurar sus sitios web de forma segura y protegida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A property indicating the specific cause of the error.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T135012Z" creationid="gitnacho" creationdate="20221019T135012Z">
        <seg>- : Una propiedad que indica la causa específica del error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A reference to the currently registered target for the event.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T201121Z" creationid="gitnacho" creationdate="20221011T201121Z">
        <seg>- : Una referencia al objetivo actualmente registrado para el evento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A reference to the object to which the event was originally dispatched.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T204600Z" creationid="gitnacho" creationdate="20221011T204600Z">
        <seg>- : Una referencia al objeto al que se envió originalmente el evento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A short, unique ID for the current MDN document
- `env.files`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070937Z" creationid="gitnacho" creationdate="20221005T070628Z">
        <seg>- : Una ID breve y única para el documento MDN actual
- `env.files`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A string representing the type of value to be stored in the table.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000002Z" creationid="gitnacho" creationdate="20221020T000002Z">
        <seg>- : Una cadena que representa el tipo de valor que se almacenará en la tabla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A textual description of the current revision of the file
- `filename`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071220Z" creationid="gitnacho" creationdate="20221005T071220Z">
        <seg>- : Una descripción textual de la revisión actual del archivo
- `filename`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A very comprehensive article on browser internals and request flow through HTTP protocol.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064937Z" creationid="gitnacho" creationdate="20221012T064937Z">
        <seg>- : Artículo muy exhaustivo sobre el trabajo interno de los navegadores y el flujo de las peticiones a través del protocolo HTTP.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A website consists of many files: text content, code, stylesheets, media content, and so on.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T043359Z" creationid="gitnacho" creationdate="20220925T043157Z">
        <seg>- : Un sitio web consta de muchos archivos: texto del contenido, código, hojas de estilo, contenido multimedia, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A {{jsxref("Promise")}} for a {{domxref("Response")}}, or `undefined` if this fetch is not a navigation, or [navigation preload](/en-US/docs/Web/API/NavigationPreloadManager) is not enabled.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20220922T214149Z">
        <seg>- : {{jsxref("Promise")}} para {{DOMxRef("Response")}}, o `undefined` si `fetch` no esta es una navegación, o la [precarga de navegación](/es/docs/Web/API/NavigationPreloadManager) no está habilitada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : A {{jsxref("Uint8ClampedArray")}} representing a one-dimensional array containing the data in the RGBA order, with integer values between `0` and `255` (included).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T055901Z" creationid="gitnacho" creationdate="20221004T055901Z">
        <seg>- : Un {{jsxref("Uint8ClampedArray")}} que representa un arreglo unidimensional que contiene los datos en el orden RGBA, con valores enteros entre `0` y `255` (incluidos).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Access to [`request/request`](https://github.com/request/request), a library for making HTTP requests.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072653Z" creationid="gitnacho" creationdate="20221005T072653Z">
        <seg>- : Accede a [`request/request`](https://github.com/request/request), una biblioteca para realizar solicitudes HTTP.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Accessibility is the practice of making web content available to as many people as possible regardless of disability, device, locale, or other differentiating factors.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131405Z" creationid="gitnacho" creationdate="20221020T131405Z">
        <seg>- : La accesibilidad es la práctica de hacer que el contenido web esté disponible para tantas personas como sea posible, independientemente de la discapacidad, el dispositivo, la ubicación u otros factores diferenciadores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Accessor function — gets the element stored at a given index.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095222Z" creationid="gitnacho" creationdate="20221006T095222Z">
        <seg>- : Función de acceso: obtiene el elemento almacenado en un índice determinado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : After mastering the essentials of vanilla HTML, CSS, and JavaScript, you should learn about [client-side web development tools](/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools), and then consider digging into [client-side JavaScript frameworks](/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks), and [server-side website programming](/en-US/docs/Learn/Server-side).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T130655Z" creationid="gitnacho" creationdate="20221020T123525Z">
        <seg>- : ¡Excelente! Después de dominar los fundamentos del HTML, CSS y JavaScript puedes estar interesado en explorar las [Guías avanzadas](/es/docs/Web/Guide) y [Tutoriales](/es/docs/Web/Tutoriales). Otra excelente idea es aprender sobre las [herramientas de desarrollo web de lado del cliente](/es/docs/Learn/Tools_and_testing/Understanding_client-side_tools) y luego considera ahondar en los [marcos de desarrollo («frameworks») de JavaScript de lado del cliente](/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks), y la [Programación de sitios web de lado del servidor](/es/docs/Learn/Server-side). Finalmente deberías considerar [Contribuir al Área de Aprendizaje](/es/docs/Learn/como_Contribuir).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : After you have a .wasm, this article covers how to fetch, compile and instantiate it, combining the [WebAssembly JavaScript](/en-US/docs/WebAssembly/JavaScript_interface) API with the [Fetch](/en-US/docs/Web/API/Fetch_API) or [XHR](/en-US/docs/Web/API/XMLHttpRequest) APIs.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T095651Z" creationid="gitnacho" creationdate="20221003T095651Z">
        <seg>- : Una vez que tengas un `.wasm`, este artículo cubre cómo recuperarlo, compilarlo e instanciarlo, combinando la [API JavaScript de WebAssembly](/es/docs/WebAssembly/JavaScript_interface) con las APIs [Fetch](/es/docs/Web/API/Fetch_API) o [XHR](/es/docs/Web/API/XMLHttpRequest).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : An [`WebAssembly.Tag`](/en-US/docs/WebAssembly/JavaScript_interface/Tag) defining the data types expected for each of the values in the `payload`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140306Z" creationid="gitnacho" creationdate="20221019T140306Z">
        <seg>- : Una [`WebAssembly.Tag`](/es/docs/WebAssembly/JavaScript_interface/Tag) que define los tipos de datos esperados para cada uno de los valores en la carga útil — `payload`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : An [`WebAssembly.Tag`](/en-US/docs/WebAssembly/JavaScript_interface/Tag) that can be checked to verify the type of the exception.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T144925Z" creationid="gitnacho" creationdate="20221019T144925Z">
        <seg>- : Una [`WebAssembly.Tag`](/es/docs/WebAssembly/JavaScript_interface/Tag) que se puede verificar para comprobar el tipo de excepción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : An accessor property that returns the buffer contained in the memory.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000330Z" creationid="gitnacho" creationdate="20221008T000330Z">
        <seg>- : Una propiedad de acceso que devuelve el búfer contenido en la memoria.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : An alias (from old versions of Microsoft Internet Explorer) for {{domxref("Event.target")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204848Z">
        <seg>- : Un alias (de versiones antiguas de Microsoft Internet Explorer) para {{DOMxRef("Event.target")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : An array list of tag names for the current MDN document
- `env.modified`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070908Z" creationid="gitnacho" creationdate="20221005T070908Z">
        <seg>- : Un arreglo con la lista de nombres de etiquetas para el documento MDN actual
- `env.modified`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : An array of [data types](/en-US/docs/WebAssembly/Understanding_the_text_format#types) (`"i32"`, `"i64"`, `"f32"`, `"f64"`, `"v128"`, `"externref"`, `"anyfunc"`).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T070905Z" creationid="gitnacho" creationdate="20221020T070905Z">
        <seg>- : Un arreglo de [tipos de datos](/es/docs/WebAssembly/Understanding_the_text_format#tipos) (`"i32"`, `"i64"`, `"f32"`, `"f64"`, `" v128"`, `"externref"`, `"anyfunc"`).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : An array of one or more data fields comprising the payload of the exception.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140328Z" creationid="gitnacho" creationdate="20221019T140328Z">
        <seg>- : Un arreglo de uno o más campos de datos que comprende la carga útil de la excepción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : An array of the files attached to the current MDN document; each object in the array is as described under [File objects](#file_objects) below
- `env.review_tags`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T101521Z" creationid="gitnacho" creationdate="20221005T070718Z">
        <seg>- : Un arreglo de los archivos adjuntos al documento MDN actual; cada objeto en el arreglo es como se describe en [Objetos File](#objetos_file) más adelante
- `env.review_tags`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : An array of the review tags on the article ("technical", "editorial", etc.)
- `env.locale`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T085559Z" creationid="gitnacho" creationdate="20221005T070741Z">
        <seg>- : Un arreglo de etiquetas de revisión en el artículo ("technical", "editorial", etc.)
- `env.locale`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : An array-like structure representing a WebAssembly Table, which stores [references](https://webassembly.github.io/spec/core/syntax/types.html#syntax-reftype), such as function references.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T114321Z" creationid="gitnacho" creationdate="20221019T114321Z">
        <seg>- : Un arreglo similar a una estructura que representa una tabla WebAssembly, que almacena [referencias](https://webassembly.github.io/spec/core/syntax/types.html#syntax-reftype), como referencias a funciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : An object containing the values to be imported into the newly-created</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T101857Z" creationid="gitnacho" creationdate="20221006T101857Z">
        <seg>- : Un objeto que contiene los valores que se importarán en la recién creada</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : An object that can contain the following members:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T215119Z" creationid="gitnacho" creationdate="20221019T215119Z">
        <seg>- : Un objeto que puede contener los siguientes miembros:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : An object that has the following properties:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T135005Z" creationid="gitnacho" creationdate="20221019T135005Z">
        <seg>- : Un objeto que tiene las siguientes propiedades:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : An object that represents a type of WebAssembly exception.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T114347Z" creationid="gitnacho" creationdate="20221019T114347Z">
        <seg>- : Un objeto que representa un tipo de excepción WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : An object whose [`buffer`](/en-US/docs/WebAssembly/JavaScript_interface/Memory/buffer) property is a resizable {{jsxref("ArrayBuffer")}} that holds the raw bytes of memory accessed by a WebAssembly `Instance`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T113506Z" creationid="gitnacho" creationdate="20221019T113506Z">
        <seg>- : Un objeto cuya propiedad [`buffer`](/es/docs/WebAssembly/JavaScript_interface/Memory/buffer) es un {{JSxRef("ArrayBuffer")}} redimensionable que contiene los bytes sin formato de la memoria a la que accede una `Instance` WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : An object with the following optional fields:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140412Z" creationid="gitnacho" creationdate="20221019T140412Z">
        <seg>- : Un objeto con los siguientes campos opcionales:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : An object, which contains two properties:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110510Z" creationid="gitnacho" creationdate="20221007T110510Z">
        <seg>- : Un objeto, que contiene dos propiedades:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : An optional [array](/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array) of {{Glossary("Transferable Objects")}} to transfer ownership of.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115658Z" creationid="gitnacho" creationdate="20221007T115658Z">
        <seg>- : Un [arreglo](/es/docs/Web/JavaScript/Reference/Global_Objects/Array) opcional de {{Glossary("Transferable Objects")}} para transferir la propiedad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Apply a function against an accumulator and each value of the array (from left-to-right) as to reduce it to a single value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052032Z" creationid="gitnacho" creationdate="20221005T052032Z">
        <seg>- : Aplica una función contra un acumulador y cada valor del arreglo (de izquierda a derecha) para reducirlo a un solo valor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Apply a function against an accumulator and each value of the array (from right-to-left) as to reduce it to a single value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052055Z" creationid="gitnacho" creationdate="20221005T052055Z">
        <seg>- : Aplica una función contra un acumulador y cada valor del arreglo (de derecha a izquierda) para reducirlo a un solo valor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Argument to be resolved by this `Promise`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073352Z" creationid="gitnacho" creationdate="20221002T073352Z">
        <seg>- : Argumento a resolver por esta `Promise`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Before you start writing the code for your website, you should plan it first.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T043001Z" creationid="gitnacho" creationdate="20220925T042849Z">
        <seg>- : Antes de comenzar a escribir el código para tu sitio web, primero lo debes planificar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Blah blah blah…</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114044Z" creationid="gitnacho" creationdate="20221005T114044Z">
        <seg>- : Blah blah blah…</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Branches to a loop or block.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094517Z" creationid="gitnacho" creationdate="20221007T094517Z">
        <seg>- : Bifurca a un bucle o bloque.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : CSS is the language that we can use to style and layout our web content, as well as adding behavior like animation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131035Z" creationid="gitnacho" creationdate="20221020T131035Z">
        <seg>- : CSS es el lenguaje que se utiliza para estilizar y organizar el contenido web, así como para añadir comportamiento tal como la animación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Caching is very important for fast Web sites.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T062710Z" creationid="gitnacho" creationdate="20221012T062710Z">
        <seg>- : La gestión de la Caché es fundamental para la eficiencia de sitios Web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Calls a function for each element in the array.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051551Z" creationid="gitnacho" creationdate="20221005T051551Z">
        <seg>- : Llama a una función por cada elemento del arreglo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Calls a function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094532Z" creationid="gitnacho" creationdate="20221007T094532Z">
        <seg>- : Llama a una función.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Can be used to end a `block`, `loop`, `if`, or `else`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094617Z" creationid="gitnacho" creationdate="20221007T094617Z">
        <seg>- : Se puede usar para finalizar un `block`, `loop`, `if` o `else`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Cancels the event (if it is cancelable).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T205001Z" creationid="gitnacho" creationdate="20221011T205001Z">
        <seg>- : Cancela el evento (si es cancelable).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Cascading Style Sheets (CSS) is the code that you use to style your website.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T054440Z" creationid="gitnacho" creationdate="20220925T043854Z">
        <seg>- : Hojas de estilo en cascada (CSS) es el código que utilizas para aplicar estilo a tu sitio web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Cascading Style Sheets are used to describe the appearance of Web documents and apps.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T094444Z" creationid="gitnacho" creationdate="20221002T094444Z">
        <seg>- : Las hojas de estilo en cascada se utilizan para describir la apariencia de documentos y aplicaciones Web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Column number in line that raised this error.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T073449Z" creationid="gitnacho" creationdate="20221008T025556Z">
        <seg>- : Número de columna en la línea que generó este error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Compiles a [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) from WebAssembly binary code, leaving instantiation as a separate step.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T114539Z" creationid="gitnacho" creationdate="20221019T114539Z">
        <seg>- : Compila un [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module) a partir del código binario de WebAssembly, dejando la creación de instancias como un paso aparte.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Compiles and instantiates a WebAssembly module directly from a streamed underlying source, returning both a `Module` and its first `Instance`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T100924Z" creationid="gitnacho" creationdate="20221006T100924Z">
        <seg>- : Compila y crea instancias de un módulo WebAssembly directamente desde una fuente subyacente transmitida, devolviendo tanto un `Module` como su primera `Instance`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Contains stateless WebAssembly code that has already been compiled by the browser and can be efficiently [shared with Workers](/en-US/docs/Web/API/Worker/postMessage), and instantiated multiple times.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T114116Z" creationid="gitnacho" creationdate="20221019T114116Z">
        <seg>- : Contiene código WebAssembly sin estado que el navegador ya ha compilado y se puede [compartir con *Workers*](/es/docs/Web/API/Worker/postMessage) de manera eficiente y crear instancias varias veces.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Copies a sequence of array elements within the array.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051034Z" creationid="gitnacho" creationdate="20221005T051034Z">
        <seg>- : Copia una secuencia de elementos de arreglo dentro del arreglo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a label that can later be branched out of with a [`br`](/en-US/docs/WebAssembly/Reference/Control_flow/br).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094452Z" creationid="gitnacho" creationdate="20221007T094452Z">
        <seg>- : Crea una etiqueta que luego se puede bifurcar con un [`br`](/es/docs/WebAssembly/Reference/Control_flow/br).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a label that can later be branched to with a [`br`](/en-US/docs/WebAssembly/Reference/Control_flow/br).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094733Z" creationid="gitnacho" creationdate="20221007T094733Z">
        <seg>- : Crea una etiqueta que luego se puede bifurcar con un [`br`](/es/docs/WebAssembly/Reference/Control_flow/br).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a new WebAssembly `CompileError` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T102541Z" creationid="gitnacho" creationdate="20221003T102541Z">
        <seg>- : Crea un nuevo objeto `CompileError` de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a new WebAssembly `LinkError` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T102604Z" creationid="gitnacho" creationdate="20221003T102604Z">
        <seg>- : Crea un nuevo objeto `LinkError` de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a new WebAssembly `RuntimeError` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T102619Z" creationid="gitnacho" creationdate="20221003T102619Z">
        <seg>- : Crea un nuevo objeto `RuntimeError` de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a new `Global` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T104406Z" creationid="gitnacho" creationdate="20221007T104406Z">
        <seg>- : Crea un nuevo objeto `Global`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a new `Instance` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T223430Z" creationid="gitnacho" creationdate="20221005T223430Z">
        <seg>- : Crea un nuevo objeto `Instance`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a new `Memory` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000248Z" creationid="gitnacho" creationdate="20221008T000248Z">
        <seg>- : Crea un nuevo objeto `Memory`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a new `Module` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T111633Z" creationid="gitnacho" creationdate="20221007T111633Z">
        <seg>- : Crea un nuevo objeto `Module`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a new `Table` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095123Z" creationid="gitnacho" creationdate="20221006T095102Z">
        <seg>- : Crea un nuevo objeto `Table`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a new `Uint8ClampedArray` from a variable number of arguments.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050600Z" creationid="gitnacho" creationdate="20221005T050600Z">
        <seg>- : Crea un nuevo `Uint8ClampedArray` a partir de un número variable de argumentos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a new `Uint8ClampedArray` from an array-like or iterable object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050536Z" creationid="gitnacho" creationdate="20221005T050536Z">
        <seg>- : Crea un nuevo `Uint8ClampedArray` a partir de un objeto iterable o similar a un arreglo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a new `Uint8ClampedArray` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050417Z" creationid="gitnacho" creationdate="20221005T050417Z">
        <seg>- : Crea un nuevo objeto `Uint8ClampedArray`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a new `WebAssembly.CompileError` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T025338Z" creationid="gitnacho" creationdate="20221008T025338Z">
        <seg>- : Crea un nuevo objeto `WebAssembly.CompileError`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a new `WebAssembly.Exception` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023022Z" creationid="gitnacho" creationdate="20221008T023022Z">
        <seg>- : Crea un nuevo objeto `WebAssembly.Exception`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a new `WebAssembly.LinkError` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T075141Z" creationid="gitnacho" creationdate="20221008T075141Z">
        <seg>- : Crea un nuevo objeto `WebAssembly.LinkError`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a new `WebAssembly.RuntimeError` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T080740Z" creationid="gitnacho" creationdate="20221008T080740Z">
        <seg>- : Crea un nuevo objeto `WebAssembly.RuntimeError`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a new `WebAssembly.Tag` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015418Z" creationid="gitnacho" creationdate="20221008T015418Z">
        <seg>- : Crea un nuevo objeto `WebAssembly.Tag`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a new array with all of the elements of this array for which the provided filtering function returns `true`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051351Z" creationid="gitnacho" creationdate="20221005T051351Z">
        <seg>- : Crea un nuevo arreglo con todos los elementos de este arreglo para los que la función de filtrado proporcionada devuelve `true`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates a new array with the results of calling a provided function on every element in this array.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051954Z" creationid="gitnacho" creationdate="20221005T051954Z">
        <seg>- : Crea una nuevo arreglo con los resultados de llamar a una función proporcionada en cada elemento de este arreglo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Creates an `Event` object, returning it to the caller.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T200954Z" creationid="gitnacho" creationdate="20221011T200954Z">
        <seg>- : Crea un objeto `Event`, devolviéndolo al llamador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Default: Signals automatic determination of fetch priority relative to other external scripts.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T124701Z" creationid="gitnacho" creationdate="20221003T124701Z">
        <seg>- : Predeterminado: Indica la determinación automática de la prioridad de obtención en relación con otros scripts externos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Denotes a point in code that should not be reachable.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094843Z" creationid="gitnacho" creationdate="20221007T094843Z">
        <seg>- : Indica un punto en el código que no debería ser accesible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Describes the three connection management models available in HTTP/1.x, their strengths, and their weaknesses.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064101Z" creationid="gitnacho" creationdate="20221012T064101Z">
        <seg>- : Describe los tres tipos de gestión posibles en una sesión HTTP/1.x, sus principales ventajas e inconvenientes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Describes the type and structure of the different kind of messages of HTTP/1.x and HTTP/2.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T063949Z" creationid="gitnacho" creationdate="20221012T063949Z">
        <seg>- : Describe los tipos de mensajes y distintas estructuras de los mensajes del protocolo HTTP/1.X y HTTP/2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Determines whether a typed array includes a certain element, returning `true` or `false` as appropriate.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051635Z" creationid="gitnacho" creationdate="20221005T051635Z">
        <seg>- : Determina si un arreglo tipado incluye un determinado elemento, devolviendo `true` o `false` según corresponda.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Disables navigation preloading, returning a {{jsxref("Promise")}} that resolves with {{jsxref('undefined')}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T205158Z" creationid="gitnacho" creationdate="20220922T205158Z">
        <seg>- : Deshabilita la precarga de navegación, devolviendo una {{jsxref("Promise")}} que se resuelve con {{jsxref('undefined')}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Documentation for the set of web-developer tools built into Chrome.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T095713Z" creationid="gitnacho" creationdate="20221002T095713Z">
        <seg>- : Documentación para el conjunto de herramientas de desarrollo web integradas en Chrome.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Documentation for the set of web-developer tools built into Edge.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T095741Z" creationid="gitnacho" creationdate="20221002T095741Z">
        <seg>- : Documentación para el conjunto de herramientas de desarrollo web integradas en Edge.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Documentation for the set of web-developer tools built into Firefox.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T095654Z" creationid="gitnacho" creationdate="20221002T095654Z">
        <seg>- : Documentación para el conjunto de herramientas de desarrollo web integradas en Firefox.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Documentation for the set of web-developer tools built into Safari.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T095725Z" creationid="gitnacho" creationdate="20221002T095725Z">
        <seg>- : Documentación para el conjunto de herramientas de desarrollo web integradas en Safari.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Does nothing.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094752Z" creationid="gitnacho" creationdate="20221007T094752Z">
        <seg>- : Hace nada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Enables navigation preloading, returning a {{jsxref("Promise")}} that resolves with {{jsxref('undefined')}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T205130Z" creationid="gitnacho" creationdate="20220922T205130Z">
        <seg>- : Habilita la precarga de navegación, devolviendo una {{jsxref("Promise")}} que se resuelve con {{jsxref('undefined')}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Enabling as many people as possible to use websites, even when those people's abilities are limited in some way.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T093731Z" creationid="gitnacho" creationdate="20221002T093731Z">
        <seg>- : Permite que tantas personas como sea posible utilicen sitios web, incluso cuando las capacidades de esas personas estén limitadas de alguna manera.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Error cause.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T025506Z" creationid="gitnacho" creationdate="20221008T025506Z">
        <seg>- : Causa del error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Error message.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T025432Z" creationid="gitnacho" creationdate="20221008T025432Z">
        <seg>- : Mensaje de error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Error name.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T025449Z" creationid="gitnacho" creationdate="20221008T025449Z">
        <seg>- : Nombre del error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Error type that is thrown whenever WebAssembly specifies a [trap](https://webassembly.github.io/spec/core/exec/index.html).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T114229Z" creationid="gitnacho" creationdate="20221019T114229Z">
        <seg>- : Tipo Error que se genera cada vez que WebAssembly especifica una trampa — [trap](https://webassembly.github.io/spec/core/exec/index.html).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Escapes the characters `&amp;, &lt;, &gt;, "` to `&amp;amp, &amp;lt;, &amp;gt;, &amp;quot;`, respectively.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073331Z" creationid="gitnacho" creationdate="20221005T073331Z">
        <seg>- : Escapa los caracteres `&amp;, &lt;, &gt;, "` a `&amp;amp, &amp;lt;, &amp;gt;, &amp;quot;`, respectivamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Even if you are concentrating on client-side web development, it is still useful to know how servers and server-side code features work.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131811Z" creationid="gitnacho" creationdate="20221020T131811Z">
        <seg>- : Aunque te concentres en el desarrollo web de lado del cliente, sigue siendo útil saber cómo funcionan los servidores y las características del código de lado del servidor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Events are what you build Web apps to react to; for example, when a Web page finishes loading, or a user selects something, presses a key, resizes a window, submits a form, or pauses a video.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T094637Z" creationid="gitnacho" creationdate="20221002T094637Z">
        <seg>- : Los eventos son aquello con lo que creas aplicaciones web para que reaccionen; por ejemplo, cuando una página web se termina de cargar, o un usuario selecciona algo, presiona una tecla, cambia el tamaño de una ventana, envía un formulario o pausa un video.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Executes a statement if the last item on the stack is true (`1`).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094652Z" creationid="gitnacho" creationdate="20221007T094652Z">
        <seg>- : Ejecuta una instrucción si el último elemento de la pila es `true` (`1`).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Executes and returns the result of the named template with the given list of parameters.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T090102Z" creationid="gitnacho" creationdate="20221005T072157Z">
        <seg>- : Ejecuta y devuelve el resultado de la plantilla nombrada con la lista de parámetros dada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Exported WebAssembly functions are the JavaScript reflections of WebAssembly functions which allow calling WebAssembly code from JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T100133Z" creationid="gitnacho" creationdate="20221003T100133Z">
        <seg>- : Las funciones exportadas de WebAssembly son el reflejo en JavaScript de las funciones de WebAssembly que te permiten llamar código WebAssembly desde JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Extends the lifetime of the `install` and `activate` events dispatched on the {{DOMxRef("ServiceWorkerGlobalScope")}}, as part of the service worker lifecycle.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T150705Z" creationid="gitnacho" creationdate="20221002T150705Z">
        <seg>- : Extiende la vida útil de los eventos `install` y `activate` distribuidos en {{DOMxRef("ServiceWorkerGlobalScope")}}, como parte del ciclo de vida del *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Extracts a section of an array and returns a new array.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052211Z" creationid="gitnacho" creationdate="20221005T052211Z">
        <seg>- : Extrae una sección de un arreglo y devuelve un nuevo arreglo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Fetch an RSS feed and parse it into a JS object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073446Z" creationid="gitnacho" creationdate="20221005T073446Z">
        <seg>- : Obtiene una fuente RSS y la procesa a un objeto JS.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Fills all the elements of an array from a start index to an end index with a static value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051309Z" creationid="gitnacho" creationdate="20221005T051309Z">
        <seg>- : Rellena todos los elementos de un arreglo desde un índice inicial hasta un índice final con un valor estático.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Finds the `Cache` entry whose key is the request, returning a {{jsxref("Promise")}} that resolves to `true` if a matching `Cache` entry is found and deleted.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T203413Z" creationid="gitnacho" creationdate="20221003T203413Z">
        <seg>- : Encuentra la entrada `Cache` cuya clave es la petición, devolviendo una {{jsxref("Promise")}} que se resuelve en `true` si se encuentra y elimina una entrada `Cache` coincidente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Fires anytime the {{domxref("ServiceWorker.state")}} changes.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T212558Z">
        <seg>- : Se activa cada vez que cambia {{DOMxRef("ServiceWorker.state")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : For classic scripts, if the `async` attribute is present, then the classic script will be fetched in parallel to parsing and evaluated as soon as it is available.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T122655Z" creationid="gitnacho" creationdate="20221003T122655Z">
        <seg>- : Para los scripts clásicos, si el atributo `async` está presente, el script clásico se buscará en paralelo al análisis y se evaluará tan pronto como esté disponible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : For this particular event, prevent all other listeners from being called.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T205015Z" creationid="gitnacho" creationdate="20221011T205015Z">
        <seg>- : Para este evento en particular, evita que se llame a todos los demás escuchas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Formats, codecs, protocols, APIs, and techniques for embedding and streaming video, audio, and image content in Web documents and apps.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T095108Z" creationid="gitnacho" creationdate="20221002T095108Z">
        <seg>- : Formatos, códecs, protocolos, APIs y técnicas para incrustar y transmitir contenido de video, audio e imagen en documentos y aplicaciones web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Get started by reading the high-level concepts behind WebAssembly — what it is, why it is so useful, how it fits into the web platform (and beyond), and how to use it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T094625Z" creationid="gitnacho" creationdate="20221003T094625Z">
        <seg>- : Comienza leyendo los conceptos de alto nivel detrás de WebAssembly — qué es, por qué es tan útil, cómo encaja en la plataforma web (entre otras cosas) y cómo usarlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Get the size of the memory instance.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T095325Z" creationid="gitnacho" creationdate="20221007T095325Z">
        <seg>- : Obtiene el tamaño de la instancia de `memory`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Given a `Module` and string, returns a copy of the contents of all custom sections in the module with the given string name.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T111724Z" creationid="gitnacho" creationdate="20221007T111724Z">
        <seg>- : Dado un `Module` y una cadena, devuelve una copia del contenido de todas las secciones personalizadas en el módulo con el nombre de cadena dado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Given a `Module`, returns an array containing descriptions of all the declared exports.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T111806Z" creationid="gitnacho" creationdate="20221007T111806Z">
        <seg>- : Dado un `Module`, devuelve un arreglo que contiene descripciones de todas las exportaciones declaradas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Given a `Module`, returns an array containing descriptions of all the declared imports.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T111840Z" creationid="gitnacho" creationdate="20221007T111840Z">
        <seg>- : Dado un `Module`, devuelve un arreglo que contiene descripciones de todas las importaciones declaradas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : HTML is the language that we use to structure the different parts of our content and define what their meaning or purpose is.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T130941Z" creationid="gitnacho" creationdate="20221020T130941Z">
        <seg>- : HTML es el lenguaje utilizado para estructurar las diferentes partes del contenido y definir su significado o propósito.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : HTML provides the fundamental building blocks for structuring Web documents and apps.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T094426Z" creationid="gitnacho" creationdate="20221002T094426Z">
        <seg>- : HTML proporciona los componentes básicos para estructurar documentos y aplicaciones Web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : HTTP is the fundamental Internet protocol for fetching documents, stylesheets, scripts, images, videos, fonts, and other resources over the Web — and for sending data back to Web servers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T094716Z" creationid="gitnacho" creationdate="20221002T094716Z">
        <seg>- : HTTP es el protocolo fundamental de Internet para obtener documentos, hojas de estilo, scripts, imágenes, videos, fuentes y otros recursos a través de la Web, y para enviar datos a los servidores web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : HTTP message headers are used to describe a resource, or the behavior of the server or the client.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064247Z" creationid="gitnacho" creationdate="20221012T064247Z">
        <seg>- : Las cabeceras de mensaje HTTP se usan para describir un recurso, o el comportamiento del servidor o del cliente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : HTTP response codes indicate whether a specific HTTP request has been successfully completed.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064602Z" creationid="gitnacho" creationdate="20221012T064602Z">
        <seg>- : Los códigos de respuesta HTTP indican si una determinada petición HTTP se ha completado correctamente o no.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : How cookies work is defined by [RFC 6265](https://datatracker.ietf.org/doc/html/rfc6265).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T065231Z" creationid="gitnacho" creationdate="20221012T062827Z">
        <seg>- : El funcionamiento de las *cookies* se define en [RFC 6265](https://datatracker.ietf.org/doc/html/rfc6265).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Human-readable description of the error.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T134956Z" creationid="gitnacho" creationdate="20221019T134956Z">
        <seg>- : Descripción del error legible por humanos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : HyperText Markup Language (HTML) is the code that you use to structure your web content and give it meaning and purpose.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T043634Z" creationid="gitnacho" creationdate="20220925T043522Z">
        <seg>- : El lenguaje de marcado de hipertexto (HTML) es el código que utilizas para estructurar tu contenido web y darle significado y propósito.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : If present, its value must be an ASCII case-insensitive match for "`utf-8`".</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T132826Z" creationid="gitnacho" creationdate="20221003T132826Z">
        <seg>- : Si está presente, su valor debe ser una coincidencia ASCII que no distinga entre mayúsculas y minúsculas para "`utf-8`".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : If you apply styling to a macro, it will often break because, for example, a `&lt;/code&gt;` tag may have appeared inside the macro code in the source code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T092926Z" creationid="gitnacho" creationdate="20221005T092443Z">
        <seg>- : Si aplicas estilo a una macro, a menudo se romperá porque, por ejemplo, puede haber aparecido una etiqueta `&lt;/code&gt;` dentro del código de la macro en el código fuente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : If you are a complete beginner to web development, we'd recommend that you start by working through our [Getting started with the web](/en-US/docs/Learn/Getting_started_with_the_web) module, which provides a practical introduction to web development.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T125905Z" creationid="gitnacho" creationdate="20221012T231938Z">
        <seg>- : Si eres un completo novel en desarrollo web, definitivamente el mejor lugar para empezar es el módulo [Primeros pasos en la web](/es/docs/Learn/Getting_started_with_the_web). Una introducción práctica que te dará las bases necesarias para iniciar y avanzar en el desarrollo web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : If you are comfortable with HTML and CSS already, or you are mainly interested in coding, you'll want to move on to {{glossary("JavaScript")}} or server-side development.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T130245Z" creationid="gitnacho" creationdate="20221012T232053Z">
        <seg>- : Si ya te sientes cómodo con el HTML y el CSS, o principalmente estás interesado en la codificación, querrás pasar al desarrollo de {{Glossary("JavaScript")}} o al desarrollo de lado del servidor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : If you have a bit of knowledge already, the next step is to learn {{glossary("HTML")}} and {{glossary("CSS")}} in detail: start with our [Introduction to HTML](/en-US/docs/Learn/HTML/Introduction_to_HTML) module and move on to our [CSS first steps](/en-US/docs/Learn/CSS/First_steps) module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T130205Z" creationid="gitnacho" creationdate="20221012T232016Z">
        <seg>- : ¡Muy bien! Si ya tienes un poco de conocimiento en ese caso te sugerimos profundizar en el corazón de las tecnologías web. El siguiente paso es conocer en detalle {{Glossary("HTML")}} y {{Glossary("CSS")}}: empieza con el módulo de [Introducción a HTML](/es/docs/Learn/HTML) y sigue con el módulo de [primeros pasos en CSS](/es/docs/Learn/CSS/First_steps).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : If you need to use a " or a \ inside of a macro parameter they can be escaped with a \ like this: `\\` or `\"`
- Missing commas between macro parameters.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T092805Z" creationid="gitnacho" creationdate="20221005T092254Z">
        <seg>- : Si necesitas usar una " o una \ dentro de un parámetro de macro, se pueden escapar con una \ como esta: `\\` o `\"`
- Faltan comas entre parámetros de macro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : If you need to write \\{ in a document without calling a macro you can escape it with a \ like this: `\\{`
- Use of a special character in a macro parameter.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T092708Z" creationid="gitnacho" creationdate="20221005T092244Z">
        <seg>- : Si necesitas escribir una \\{ en un documento sin llamar a una macro, la puedes escapar con una \ de la siguiente manera: `\\{`
- El uso de un carácter especial en un parámetro de macro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : If you've written some Rust code, you can compile it into WebAssembly!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T095209Z" creationid="gitnacho" creationdate="20221003T095209Z">
        <seg>- : Si has escrito algo en Rust, ¡lo puedes compilar a WebAssembly!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Increase the size of the memory instance.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T095308Z" creationid="gitnacho" creationdate="20221007T095308Z">
        <seg>- : Aumenta el tamaño de la instancia de `memory`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Increases the size of the Table instance by a specified number of elements.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095247Z" creationid="gitnacho" creationdate="20221006T095247Z">
        <seg>- : Aumenta el tamaño de la instancia de la tabla en un número específico de elementos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Increases the size of the memory instance by a specified number of WebAssembly pages (each one is 64KB in size).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000402Z" creationid="gitnacho" creationdate="20221008T000402Z">
        <seg>- : Aumenta el tamaño de la instancia de memoria en un número específico de páginas de WebAssembly (cada una tiene un tamaño de 64KB).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Indicates an error during WebAssembly decoding or validation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221009T004818Z" creationid="gitnacho" creationdate="20221009T004818Z">
        <seg>- : indica un error durante la decodificación o validación de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Indicates an error during module instantiation (besides [traps](https://webassembly.github.io/simd/core/intro/overview.html#trap) from the start function).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221009T005001Z" creationid="gitnacho" creationdate="20221009T005001Z">
        <seg>- : Indica un error durante la instanciación del módulo (además de [traps](https://webassembly.github.io/simd/core/intro/overview.html#trap) desde la función de inicio).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Indicates how long the results of a preflight request can be cached.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210815Z" creationid="gitnacho" creationdate="20221017T210815Z">
        <seg>- : Indica cuánto tiempo se pueden almacenar en caché los resultados de una solicitud de verificación previa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Indicates where a fetch originates from.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210913Z" creationid="gitnacho" creationdate="20221017T210913Z">
        <seg>- : Indica de dónde se origina una búsqueda.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Indicates whether or not the call to {{domxref("event.preventDefault()")}} canceled the event.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204429Z">
        <seg>- : Indica si la llamada a {{DOMxRef("event.preventDefault()")}} canceló o no el evento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Indicates whether or not the event was initiated by the browser (after a user click, for instance) or by a script (using an event creation method, for example).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T204546Z" creationid="gitnacho" creationdate="20221011T204546Z">
        <seg>- : Indica si el evento fue iniciado o no por el navegador (después de un clic del usuario, por ejemplo) o por un script (utilizando un método de creación de eventos, por ejemplo).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Indicates whether or not the response to the request can be exposed when the credentials flag is true.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210709Z" creationid="gitnacho" creationdate="20221017T210709Z">
        <seg>- : indica si la respuesta a la solicitud se puede exponer o no cuando el indicador de credenciales es `true`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Indicates whether the response can be shared.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210649Z" creationid="gitnacho" creationdate="20221017T210649Z">
        <seg>- : Indica si la respuesta se puede compartir.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Indicates which [referrer](/en-US/docs/Web/API/Document/referrer) to send when fetching the script, or resources fetched by the script:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T125255Z">
        <seg>- : indica qué [referente](/es/docs/Web/API/Document/referrer) enviar al obtener el script o los recursos obtenidos por el script:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Indicates which headers can be exposed as part of the response by listing their names.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210802Z" creationid="gitnacho" creationdate="20221017T210802Z">
        <seg>- : Indica qué encabezados se pueden exponer como parte de la respuesta enumerando sus nombres.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Indicates which phase of the event flow is being processed.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T204443Z" creationid="gitnacho" creationdate="20221011T204443Z">
        <seg>- : Indica qué fase del flujo de eventos se está procesando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Indicates, if `true`, that the object is a custom one.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114040Z" creationid="gitnacho" creationdate="20221005T114040Z">
        <seg>- : Indica, si `true`, que el objeto es personalizado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Information about a particular alarm.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174023Z" creationid="gitnacho" creationdate="20221012T174023Z">
        <seg>- : Información sobre una alarma en particular.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Initializes the value of an Event created.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T205058Z" creationid="gitnacho" creationdate="20221011T205058Z">
        <seg>- : Inicializa el valor de un Evento creado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Is a stateful, executable instance of a [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module)
- [`WebAssembly.LinkError()`](/en-US/docs/WebAssembly/JavaScript_interface/LinkError/LinkError)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221009T004927Z" creationid="gitnacho" creationdate="20221009T004927Z">
        <seg>- : Es una instancia ejecutable con estado de un [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module)
- [`WebAssembly.LinkError()`](/es/docs/WebAssembly/JavaScript_interface/LinkError/LinkError)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : JavaScript is the Web's native programming language.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T094456Z" creationid="gitnacho" creationdate="20221002T094456Z">
        <seg>- : JavaScript es el lenguaje de programación nativo de la Web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : JavaScript is the programming language that you use to add interactive features to your website.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T055518Z" creationid="gitnacho" creationdate="20220925T055014Z">
        <seg>- : JavaScript es el lenguaje de programación que utilizas para agregar funciones interactivas a tu sitio web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : JavaScript is the scripting language used to add dynamic functionality to web pages.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131117Z" creationid="gitnacho" creationdate="20221020T131117Z">
        <seg>- : JavaScript es el lenguaje de scripts usado para añadir funcionalidad dinámica a las páginas web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : JavaScript programming APIs you can use to build apps on the Web.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T094406Z" creationid="gitnacho" creationdate="20221002T094406Z">
        <seg>- : APIs de programación de JavaScript que puedes usar para crear aplicaciones en la Web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Joins all elements of an array into a string.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051804Z" creationid="gitnacho" creationdate="20221005T051804Z">
        <seg>- : Une todos los elementos de un arreglo en una cadena.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Last modified timestamp for the current MDN document
- `env.cache_control`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071013Z" creationid="gitnacho" creationdate="20221005T070930Z">
        <seg>- : Última marca de tiempo en que se modificó el documento MDN actual
- `env.cache_control`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Like the `type` attribute, this attribute identifies the scripting language in use.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T132916Z" creationid="gitnacho" creationdate="20221003T132916Z">
        <seg>- : Al igual que el atributo `type`, este atributo identifica el lenguaje de programación en uso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Line number in file that raised this error.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T025534Z" creationid="gitnacho" creationdate="20221008T025534Z">
        <seg>- : Número de línea en el archivo que generó este error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Load a number from memory.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T095413Z" creationid="gitnacho" creationdate="20221007T095337Z">
        <seg>- : Carga un número de la `memory`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Loads another template as a module; any output is ignored.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072508Z" creationid="gitnacho" creationdate="20221005T072508Z">
        <seg>- : Carga otra plantilla como módulo; cualquier salida es ignorada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Macro parameters need to be delimited by a comma (,) but not at the end of the list of parameters; for example `\{\{compat("html.elements.link", 2)}}`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T092836Z" creationid="gitnacho" creationdate="20221005T092336Z">
        <seg>- : Los parámetros de macro deben estar delimitados por una coma (,) pero no al final de la lista de parámetros; por ejemplo `\{\{compat("html.elements.link", 2)}}`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Making content as available and interactive as possible, as soon as possible.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T094120Z" creationid="gitnacho" creationdate="20221002T094120Z">
        <seg>- : Hace el mayor esfuerzo para que el contenido esté disponible e interactivo, lo antes posible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : MathML is the language that we can use to write mathematical formulas in web pages using fractions, scripts, radicals, matrices, integrals, series, etc.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131616Z" creationid="gitnacho" creationdate="20221020T131616Z">
        <seg>- : MathML es el lenguaje que podemos usar para escribir fórmulas matemáticas en páginas web usando fracciones, scripts, radicales, arreglos, integrales, series, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : MathML lets you display complex mathematical notation on the Web.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T095140Z" creationid="gitnacho" creationdate="20221002T095140Z">
        <seg>- : MathML te permite mostrar notaciones matemáticas complejas en la Web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : My description of params 1, 2, and 3
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183843Z" creationid="gitnacho" creationdate="20221008T183843Z">
        <seg>- : Mi descripción de los parámetros 1, 2 y 3
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : My description of term1</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183254Z" creationid="gitnacho" creationdate="20221008T183205Z">
        <seg>- : Mi descripción de term1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : My description of term2</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183310Z" creationid="gitnacho" creationdate="20221008T183310Z">
        <seg>- : Mi descripción de term2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Normal `script` elements pass minimal information to the {{domxref('Window.error_event', 'window.onerror')}} for scripts which do not pass the standard {{Glossary("CORS")}} checks.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T123446Z" creationid="gitnacho" creationdate="20221003T123446Z">
        <seg>- : Los elementos `script` normales pasan información mínima a {{DOMxRef('Window.error_event', 'window.onerror')}} para scripts que no pasan las comprobaciones estándar {{Glossary("CORS")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Old-style method that returns the value contained inside the global variable.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T104652Z" creationid="gitnacho" creationdate="20221007T104652Z">
        <seg>- : Método antiguo que devuelve el valor contenido dentro de la variable global.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Once you have finished writing the code and organizing the files that make up your website, you need to put it all online so people can find it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T055900Z" creationid="gitnacho" creationdate="20220925T055642Z">
        <seg>- : Una vez que hayas terminado de escribir el código y organizado los archivos que componen tu sitio web, lo debes poner todo en línea para que la gente lo pueda encontrar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Once you've loaded a .wasm module, you'll want to use it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T095826Z" creationid="gitnacho" creationdate="20221003T095826Z">
        <seg>- : Una vez cargado el módulo `.wasm`, querrás usarlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Outputs a debug message into the script log on the page (i.e. the big red box that usually displays errors).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072732Z" creationid="gitnacho" creationdate="20221005T072732Z">
        <seg>- : Genera un mensaje de depuración en el registro del script en la página (es decir, el cuadro rojo grande que generalmente muestra errores).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Path to file that raised this error.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T025523Z" creationid="gitnacho" creationdate="20221008T025523Z">
        <seg>- : Ruta al archivo que generó este error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Pops a value from the stack, and discards it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094543Z" creationid="gitnacho" creationdate="20221007T094543Z">
        <seg>- : Extrae un valor de la pila y lo descarta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Progressive Web Apps provide a user experience similar to native mobile apps.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T095619Z" creationid="gitnacho" creationdate="20221002T095619Z">
        <seg>- : Las aplicaciones web progresivas (PWA — *Progressive Web Apps*) brindan una experiencia de usuario similar a las aplicaciones móviles nativas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Protecting users from data leaks and data theft, side-channel attacks, and attacks such as cross-site scripting, content injection, and click-jacking.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T094252Z" creationid="gitnacho" creationdate="20221002T094252Z">
        <seg>- : Proteger a los usuarios de fugas y robos de datos, ataques de canal lateral y ataques como scripts entre sitios cruzados, inyección de contenido y secuestro de clics.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Provides a hint of the relative priority to use when fetching an external script.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T124602Z" creationid="gitnacho" creationdate="20221003T124602Z">
        <seg>- : Proporciona una pista de la prioridad relativo de uso al obtener un script externo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Provides a practical introduction to web development for complete beginners.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T130827Z" creationid="gitnacho" creationdate="20221020T124446Z">
        <seg>- : Proporciona una introducción práctica al desarrollo de la web para principiantes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Provides an interface for registering and listing sync registrations.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151914Z" creationid="gitnacho" creationdate="20221002T151914Z">
        <seg>- : Proporciona una interfaz para registrar y enumerar los registros de sincronización.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Provides an object representing the service worker as an overall unit in the network ecosystem, including facilities to register, unregister, and update service workers, and access the state of service workers and their registrations.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151800Z" creationid="gitnacho" creationdate="20221002T151800Z">
        <seg>- : Proporciona un objeto que representa al *service worker* como una unidad general en el ecosistema de la red, incluidas las funciones para registrar, cancelar el registro y actualizar los *service workers*, y acceder al estado de los *service workers* y sus registros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Provides methods for managing the preloading of resources with a service worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151506Z" creationid="gitnacho" creationdate="20221002T151506Z">
        <seg>- : Proporciona métodos para administrar la carga previa de recursos con un *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Reference documentation with interactive samples for the set of WebAssembly operators.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T111603Z" creationid="gitnacho" creationdate="20221019T111603Z">
        <seg>- : Documentación de referencia con ejemplos interactivos para el conjunto de operadores WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Renders any JS object as a string, handy for use with `log.debug()`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073242Z" creationid="gitnacho" creationdate="20221005T073242Z">
        <seg>- : Renderiza cualquier objeto JS como una cadena, útil para usar con `log.debug()`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Represents a container for a list of {{DOMxRef("Client")}} objects; the main way to access the active service worker clients at the current origin.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T150644Z" creationid="gitnacho" creationdate="20221002T150644Z">
        <seg>- : Representa un contenedor para una lista de objetos {{DOMxRef("Client")}}; la principal forma de acceder a los clientes del *service worker* activo en el origen actual.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Represents a global variable instance, accessible from both JavaScript and importable/exportable across one or more [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) instances.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221009T004903Z" creationid="gitnacho" creationdate="20221009T004903Z">
        <seg>- : Representa una instancia de variable global, accesible desde JavaScript e importable/exportable a través de una o más instancias de [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Represents a message sent to a {{DOMxRef("ServiceWorkerGlobalScope")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151824Z" creationid="gitnacho" creationdate="20221002T151824Z">
        <seg>- : Representa un mensaje enviado a un {{DOMxRef("ServiceWorkerGlobalScope")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Represents a service worker registration.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151840Z" creationid="gitnacho" creationdate="20221002T151840Z">
        <seg>- : Representa un registro de *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Represents a service worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151635Z" creationid="gitnacho" creationdate="20221002T151635Z">
        <seg>- : Representa un *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Represents the global execution context of a service worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151817Z" creationid="gitnacho" creationdate="20221002T151817Z">
        <seg>- : Representa el contexto de ejecución global de un *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Represents the scope of a service worker client that is a document in a browser context, controlled by an active worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151954Z" creationid="gitnacho" creationdate="20221002T151954Z">
        <seg>- : Representa el alcance de un cliente del *service worker* que es un documento en un contexto de navegador, controlado por un _active worker_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Represents the scope of a service worker client.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T150533Z" creationid="gitnacho" creationdate="20221002T150533Z">
        <seg>- : Representa el alcance de un cliente de *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Represents the storage for {{DOMxRef("Cache")}} objects.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T150444Z" creationid="gitnacho" creationdate="20221002T150444Z">
        <seg>- : Representa el almacenamiento de objetos {{DOMxRef("Cache")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Represents the storage for {{DOMxRef("Request")}} / {{DOMxRef("Response")}} object pairs that are cached as part of the {{DOMxRef("ServiceWorker")}} life cycle.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T150436Z" creationid="gitnacho" creationdate="20221002T150436Z">
        <seg>- : Representa el almacenamiento para pares de objetos {{DOMxRef("Request")}} / {{DOMxRef("Response")}} que se almacenan en caché como parte del ciclo de vida del {{DOMxRef("ServiceWorker")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns `true` if at least one element in this array satisfies the provided testing function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052232Z" creationid="gitnacho" creationdate="20221005T052232Z">
        <seg>- : Devuelve `true` si al menos un elemento de este arreglo satisface la función de prueba proporcionada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns a localized string representing the array and its elements.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052441Z" creationid="gitnacho" creationdate="20221005T052441Z">
        <seg>- : Devuelve una cadena localizada que representa el arreglo y sus elementos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns a new _array iterator_ object that contains the key/value pairs for each index in the array.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051139Z" creationid="gitnacho" creationdate="20221005T051113Z">
        <seg>- : Devuelve un nuevo objeto _array iterator_ que contiene los pares clave/valor para cada índice en el arreglo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns a new _array iterator_ object that contains the values for each index in the array.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052348Z" creationid="gitnacho" creationdate="20221005T052348Z">
        <seg>- : Devuelve un nuevo objeto _array iterator_ que contiene los valores para cada índice en el arreglo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns a new _array iterator_ that contains the keys for each index in the array.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053625Z" creationid="gitnacho" creationdate="20221005T051853Z">
        <seg>- : Devuelve un nuevo _array iterator_ que contiene las claves para cada índice del arreglo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns a new `Uint8ClampedArray` from the given start and end element index.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052319Z" creationid="gitnacho" creationdate="20221005T052319Z">
        <seg>- : Devuelve un nuevo `Uint8ClampedArray` a partir del índice de elemento inicial y final dado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns a number value of the element size.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050435Z" creationid="gitnacho" creationdate="20221005T050435Z">
        <seg>- : Devuelve un valor numérico del tamaño del elemento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns a string representing the array and its elements.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052500Z" creationid="gitnacho" creationdate="20221005T052500Z">
        <seg>- : Devuelve una cadena que representa el arreglo y sus elementos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns a string representing the specified `Error` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T025621Z" creationid="gitnacho" creationdate="20221008T025621Z">
        <seg>- : Devuelve una cadena que representa el objeto `Error` especificado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns a {{DOMxRef("ServiceWorkerContainer")}} object, which provides access to registration, removal, upgrade, and communication with the {{DOMxRef("ServiceWorker")}} objects for the [associated document](https://html.spec.whatwg.org/multipage/browsers.html#concept-document-window).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T220015Z" creationid="gitnacho" creationdate="20221002T151531Z">
        <seg>- : Devuelve un objeto {{DOMxRef("ServiceWorkerContainer")}}, que proporciona acceso al registro, eliminación, actualización y comunicación con los objetos {{DOMxRef("ServiceWorker")}} para el [documento asociado](https://html.spec.whatwg.org/multipage/browsers.html#concept-document-window).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns a {{jsxref("Promise")}} that resolves to an array of `Cache` keys.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T203439Z" creationid="gitnacho" creationdate="20221003T203439Z">
        <seg>- : Devuelve una {{jsxref("Promise")}} que se resuelve en un arreglo de claves `Cache`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns a {{jsxref("Promise")}} that resolves to an array of all matching responses in the `Cache` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T203225Z" creationid="gitnacho" creationdate="20221003T203225Z">
        <seg>- : Devuelve una {{jsxref("Promise")}} que se resuelve en un arreglo de todas las respuestas coincidentes en el objeto `Cache`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns a {{jsxref("Promise")}} that resolves to an object with properties that indicate whether preloading is enabled, and what value will be sent in the {{HTTPHeader("Service-Worker-Navigation-Preload")}} HTTP header in preloading requests.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T205318Z" creationid="gitnacho" creationdate="20220922T205318Z">
        <seg>- : Devuelve una {{jsxref("Promise")}} que se resuelve en un objeto con propiedades que indican si la precarga está habilitada y qué valor se enviará en la Cabecera HTTP  {{HTTPHeader("Service-Worker-Navigation-Preload") }} en solicitudes de precarga.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns a {{jsxref("Promise")}} that resolves to the response associated with the first matching request in the `Cache` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T203209Z" creationid="gitnacho" creationdate="20221003T203209Z">
        <seg>- : Devuelve una {{jsxref("Promise")}} que se resuelve en la respuesta asociada con la primera solicitud coincidente en el objeto `Cache`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns an MD5 hex digest of the given string.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072139Z" creationid="gitnacho" creationdate="20221005T072139Z">
        <seg>- : Devuelve un resumen hexadecimal MD5 de la cadena dada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns an object containing as its members all the functions exported from the WebAssembly module instance, to allow them to be accessed and used by JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T223453Z" creationid="gitnacho" creationdate="20221005T223453Z">
        <seg>- : Devuelve un objeto que contiene como sus miembros todas las funciones exportadas desde la instancia del módulo WebAssembly, para que JavaScript pueda acceder a ellas y utilizarlas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns from a function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094803Z" creationid="gitnacho" creationdate="20221007T094803Z">
        <seg>- : Regresa de una función.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns the `ServiceWorker` serialized script URL defined as part of {{domxref("ServiceWorkerRegistration")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T212356Z">
        <seg>- : Devuelve la URL del script serializado `ServiceWorker` definida como parte de {{DOMxRef("ServiceWorkerRegistration")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns the data fields of an exception that matches a specified tag.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023129Z" creationid="gitnacho" creationdate="20221008T023129Z">
        <seg>- : Devuelve los campos de datos de una excepción que coincide con una etiqueta específica.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns the event's path (an array of objects on which listeners will be invoked).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T204911Z" creationid="gitnacho" creationdate="20221011T204911Z">
        <seg>- : Devuelve la ruta del evento (un arreglo de objetos en los que se invocarán los escuchas).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns the first (least) index of an element within the array equal to the specified value, or `-1` if none is found.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051714Z" creationid="gitnacho" creationdate="20221005T051714Z">
        <seg>- : Devuelve el primer (menor) índice de un elemento dentro del arreglo igual al valor especificado, o `-1` si no se encuentra ninguno.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns the found index in the array, if an element in the array satisfies the provided testing function or `-1` if not found.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051504Z" creationid="gitnacho" creationdate="20221005T051504Z">
        <seg>- : Devuelve el índice encontrado en el arreglo, si un elemento del arreglo satisface la función de prueba proporcionada o `-1` si no se encuentra.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns the found value in the array, if an element in the array satisfies the provided testing function or `undefined` if not found.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051428Z" creationid="gitnacho" creationdate="20221005T051428Z">
        <seg>- : Devuelve el valor encontrado en el arreglo, si un elemento del arreglo satisface la función de prueba proporcionada o `undefined` si no se encuentra.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns the function that created this object's instance.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T104507Z" creationid="gitnacho" creationdate="20221007T104507Z">
        <seg>- : Devuelve la función que creó la instancia de este objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns the last (greatest) index of an element within the array equal to the specified value, or `-1` if none is found.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051920Z" creationid="gitnacho" creationdate="20221005T051920Z">
        <seg>- : Devuelve el último (mayor) índice de un elemento dentro del arreglo igual al valor especificado, o `-1` si no se encuentra ninguno.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns the length (in bytes) of the `Uint8ClampedArray` from the start of its {{jsxref("ArrayBuffer")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050742Z" creationid="gitnacho" creationdate="20221005T050742Z">
        <seg>- : Devuelve la longitud (en bytes) de `Uint8ClampedArray` desde el inicio de su {{jsxref("ArrayBuffer")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns the length of the table, i.e. the number of elements.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095136Z" creationid="gitnacho" creationdate="20221006T095136Z">
        <seg>- : Devuelve la longitud de la tabla, es decir, el número de elementos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns the number of elements held in the `UintClamped8Array`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050946Z" creationid="gitnacho" creationdate="20221005T050946Z">
        <seg>- : Devuelve el número de elementos contenidos en `UintClamped8Array`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns the object defining the data-types array for the tag (as set in its constructor).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015433Z" creationid="gitnacho" creationdate="20221008T015433Z">
        <seg>- : Devuelve el objeto que define el arreglo de tipos de datos para la etiqueta (como se establece en su constructor).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns the offset (in bytes) of the `Uint8ClampedArray` from the start of its {{jsxref("ArrayBuffer")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050908Z" creationid="gitnacho" creationdate="20221005T050908Z">
        <seg>- : Devuelve el desplazamiento (en bytes) de `Uint8ClampedArray` desde el inicio de su {{jsxref("ArrayBuffer")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns the stack trace for the exception, or `undefined`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023147Z" creationid="gitnacho" creationdate="20221008T023147Z">
        <seg>- : Devuelve el seguimiento de la pila para la excepción, o `undefined`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns the state of the service worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T212422Z" creationid="gitnacho" creationdate="20221003T212422Z">
        <seg>- : Devuelve el estado del *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns the string value of the constructor name.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050505Z" creationid="gitnacho" creationdate="20221005T050505Z">
        <seg>- : Devuelve el valor de cadena del nombre del constructor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Returns the {{jsxref("ArrayBuffer")}} referenced by the `Uint8ClampedArray`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050705Z" creationid="gitnacho" creationdate="20221005T050705Z">
        <seg>- : Devuelve el {{jsxref("ArrayBuffer")}} al que hace referencia `Uint8ClampedArray`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Reverses the order of the elements of an array — the first becomes the last, and the last becomes the first.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052114Z" creationid="gitnacho" creationdate="20221005T052114Z">
        <seg>- : Invierte el orden de los elementos de un arreglo: el primero se convierte en el último y el último en el primero.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Scalable Vector Graphics let you create images that scale smoothly to any size.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T095124Z" creationid="gitnacho" creationdate="20221002T095124Z">
        <seg>- : Los gráficos vectoriales escalables te permiten crear imágenes que se escalan sin problemas a cualquier tamaño.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : See also: [node.js `url` module](https://nodejs.org/api/url.html).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073406Z" creationid="gitnacho" creationdate="20221005T073406Z">
        <seg>-: Consulta también: [node.js `url` module](https://nodejs.org/api/url.html).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Selects one of its first two operands based on a boolean condition.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094824Z" creationid="gitnacho" creationdate="20221007T094824Z">
        <seg>- : Selecciona uno de sus dos primeros operandos en función de una condición booleana.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Sets an element stored at a given index to a given value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095318Z" creationid="gitnacho" creationdate="20221006T095318Z">
        <seg>- : Establece un elemento almacenado en un índice dado a un valor dado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Sets the value of the {{HTTPHeader("Service-Worker-Navigation-Preload")}} HTTP header sent in preloading requests and returns an empty {{jsxref("Promise")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T205236Z" creationid="gitnacho" creationdate="20220922T205236Z">
        <seg>- : Establece el valor del encabezado HTTP {{HTTPHeader("Service-Worker-Navigation-Preload")}} que se envía en las solicitudes de precarga y devuelve una {{jsxref("Promise")}} vacía.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Shows and explains the flow of a usual HTTP session.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064017Z" creationid="gitnacho" creationdate="20221012T064017Z">
        <seg>- : Muestra y explica cómo es una sesión HTTP típica.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Signals a high-priority fetch relative to other external scripts.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T124630Z" creationid="gitnacho" creationdate="20221003T124630Z">
        <seg>- : Señala una búsqueda de alta prioridad en relación con otros scripts externos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Signals a low-priority fetch relative to other external scripts.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T124642Z" creationid="gitnacho" creationdate="20221003T124642Z">
        <seg>- : Señala una recuperación de baja prioridad en relación con otros scripts externos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Sorts the elements of an array in place and returns the array.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052306Z" creationid="gitnacho" creationdate="20221005T052306Z">
        <seg>- : Ordena los elementos de un arreglo en su lugar y devuelve el arreglo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Specifies the method or methods allowed when accessing the resource in response to a preflight request.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210749Z" creationid="gitnacho" creationdate="20221017T210749Z">
        <seg>- : Especifica el método o los métodos permitidos al acceder al recurso en respuesta a una solicitud de verificación previa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Stack trace.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T025608Z" creationid="gitnacho" creationdate="20221008T025608Z">
        <seg>- : Rastreo de pila.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Stops the propagation of events further along in the DOM.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T205040Z" creationid="gitnacho" creationdate="20221011T205040Z">
        <seg>- : Detiene la propagación de eventos más adelante en el DOM.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Store a number in memory.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T095402Z" creationid="gitnacho" creationdate="20221007T095402Z">
        <seg>- : Guarda un número en `memory`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Stores multiple values in the typed array, reading input values from a specified array.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052147Z" creationid="gitnacho" creationdate="20221005T052147Z">
        <seg>- : Almacena múltiples valores en el arreglo tipado, leyendo los valores de entrada de un arreglo especificado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Takes a URL, retrieves it and adds the resulting response object to the given cache.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T210906Z" creationid="gitnacho" creationdate="20221003T203254Z">
        <seg>- : Toma una URL, la recupera y agrega el objeto `response` resultante a la memoria caché dada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Takes an array of URLs, retrieves them, and adds the resulting response objects to the given cache.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T203335Z" creationid="gitnacho" creationdate="20221003T203335Z">
        <seg>- : Toma un arreglo de URLs, las recupera y agrega los objetos `response` resultantes a la memoria caché dada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Takes both a request and its response and adds it to the given cache.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T203351Z" creationid="gitnacho" creationdate="20221003T203351Z">
        <seg>- : Toma tanto una petición como su respuesta y la agrega a la memoria caché dada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Tests whether all elements in the array pass the test provided by a function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051204Z" creationid="gitnacho" creationdate="20221005T051204Z">
        <seg>- : Comprueba si todos los elementos del arreglo pasan la prueba proporcionada por una función.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Tests whether the exception matches a particular tag.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023037Z" creationid="gitnacho" creationdate="20221008T023037Z">
        <seg>- : Comprueba si la excepción coincide con una etiqueta en particular.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The MDN Product Advisory Board's mission is to build collaboration between Mozilla, its documentation team, and the key collaborating organizations that help the MDN community collectively maintain MDN Web Docs.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T200758Z" creationid="gitnacho" creationdate="20221008T200758Z">
        <seg>- : La misión del Consejo asesor de productos de MDN es fomentar la colaboración entre Mozilla, su equipo de documentación y las organizaciones colaboradoras clave que ayudan a la comunidad MDN a mantener colectivamente MDN Web Docs.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The MIME type of the file
- `url`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071332Z" creationid="gitnacho" creationdate="20221005T071332Z">
        <seg>- : El tipo MIME del archivo
- `url`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The SyncEvent interface represents a sync action that is dispatched on the {{DOMxRef("ServiceWorkerGlobalScope")}} of a ServiceWorker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151903Z" creationid="gitnacho" creationdate="20221002T151903Z">
        <seg>- : La interfaz `SyncEvent` representa una acción de sincronización que se envía en {{DOMxRef("ServiceWorkerGlobalScope")}} de un *ServiceWorker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The URL at which the file can be found</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071341Z" creationid="gitnacho" creationdate="20221005T071341Z">
        <seg>- : La URL en la que se puede encontrar el archivo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The URL slug of the current MDN document
- `env.tags`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070828Z" creationid="gitnacho" creationdate="20221005T070828Z">
        <seg>- : El slug de la URL del documento MDN actual
- `env.tags`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The Web Developer Guide provides useful how-to content to help you actually use Web technologies to do what you want or need to do.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T093356Z" creationid="gitnacho" creationdate="20221002T093356Z">
        <seg>- : La Guía para desarrolladores Web ofrece contenido práctico útil que te ayudará a utilizar las tecnologías web para hacer lo que quieres o necesitas hacer.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) object to be instantiated.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193835Z" creationid="gitnacho" creationdate="20221007T193835Z">
        <seg>- : El objeto [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module) del que se va a crear una instancia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) object whose custom sections are being</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T221728Z" creationid="gitnacho" creationdate="20221019T221728Z">
        <seg>- : El objeto [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module) cuyas secciones personalizadas se están</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The `WebAssembly.Exception` object represents a runtime exception thrown from WebAssembly to JavaScript, or thrown from JavaScript to a WebAssembly exception handler.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T102530Z" creationid="gitnacho" creationdate="20221003T102530Z">
        <seg>- : El objeto `WebAssembly.Exception` representa una excepción en el entorno de ejecución lanzada desde WebAssembly a JavaScript, o lanzada desde JavaScript a un controlador de excepciones WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The `WebAssembly.Tag` object defines a type of WebAssembly exception that can be thrown to/from WebAssembly code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T102503Z" creationid="gitnacho" creationdate="20221003T102503Z">
        <seg>- : El objeto `WebAssembly.Tag` define un tipo de excepción WebAssembly que se puede lanzar hacia/desde el código WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The `WebAssembly.compile()` function compiles WebAssembly binary code into a `WebAssembly.Module` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T101832Z" creationid="gitnacho" creationdate="20221003T101832Z">
        <seg>- : La función `WebAssembly.compile()` compila el código binario de WebAssembly en un objeto `WebAssembly.Module`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The `WebAssembly.compileStreaming()` function compiles a `WebAssembly.Module` directly from a streamed underlying source.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T102048Z" creationid="gitnacho" creationdate="20221003T102048Z">
        <seg>- : La función `WebAssembly.compileStreaming()` compila un `WebAssembly.Module` directamente desde una fuente subyacente transmitida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The `WebAssembly.instantiate()` function allows you to compile and instantiate WebAssembly code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T102136Z" creationid="gitnacho" creationdate="20221003T102136Z">
        <seg>- : La función `WebAssembly.instantiate()` te permite compilar e instanciar código WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The `WebAssembly.instantiateStreaming()` function is the primary API for compiling and instantiating WebAssembly code, returning both a `Module` and its first `Instance`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T102219Z" creationid="gitnacho" creationdate="20221003T102219Z">
        <seg>- : La función `WebAssembly.instantiateStreaming()` es la API principal para compilar e instanciar código WebAssembly, devolviendo tanto un `Module` como su primera `Instance`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The `WebAssembly.validate()` function validates a given typed array of WebAssembly binary code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T102331Z" creationid="gitnacho" creationdate="20221003T102331Z">
        <seg>- : La función `WebAssembly.validate()` valida un determinado arreglo tipado de código WebAssembly binario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The `payload` and `tag` sequences do not have the same number of elements and/or the elements are not of matching types.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140658Z" creationid="gitnacho" creationdate="20221019T140658Z">
        <seg>- : Las secuencias de carga útil —`payload`— y etiquetas —`tag`— no tienen el mismo número de elementos y/o los elementos no son de tipos coincidentes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The attachment's title
- `description`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071205Z" creationid="gitnacho" creationdate="20221005T071205Z">
        <seg>- : El título del archivo adjunto
- `description`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The basic features of the client-server protocol: what it can do and its intended uses.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T062604Z" creationid="gitnacho" creationdate="20221012T062604Z">
        <seg>- : Se presentan las características básicas del protocolo y su estructura cliente-servidor: qué puede hacer y cuáles son sus usos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The case-insensitive name identifying the type of the event.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T204653Z" creationid="gitnacho" creationdate="20221011T204653Z">
        <seg>- : El nombre sin distinción entre mayúsculas y minúsculas que identifica el tipo de evento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The different operations that can be done with HTTP: {{HTTPMethod("GET")}}, {{HTTPMethod("POST")}}, and also less common requests like {{HTTPMethod("OPTIONS")}}, {{HTTPMethod("DELETE")}}, or {{HTTPMethod("TRACE")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064530Z" creationid="gitnacho" creationdate="20221012T064530Z">
        <seg>- : Las distintas operaciones que se pueden realizar con HTTP: {{HTTPMethod("GET")}}, {{HTTPMethod("POST")}}, y solicitudes menos comunes como {{HTTPMethod("OPTIONS")}}, {{HTTPMethod("DELETE")}}, o {{HTTPMethod("TRACE")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The event object of a {{domxref("ServiceWorkerGlobalScope/message_event", "message")}} event fired on a service worker (when a channel message is received on the {{DOMxRef("ServiceWorkerGlobalScope")}} from another context) — extends the lifetime of such events.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20221002T150853Z">
        <seg>- : El objeto `event` de un evento {{DOMxRef("ServiceWorkerGlobalScope/message_event", "message")}} activado en un *service worker* (cuando se recibe un mensaje del canal en {{DOMxRef("ServiceWorkerGlobalScope")}} de otro contexto) — extiende la vida útil de dichos eventos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The explicit original target of the event.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T204738Z" creationid="gitnacho" creationdate="20221011T204738Z">
        <seg>- : El objetivo original explícito del evento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The file's name
- `size`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071236Z" creationid="gitnacho" creationdate="20221005T071236Z">
        <seg>- : El nombre del archivo
- `size`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The full URL to the current MDN document
- `env.id`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070607Z" creationid="gitnacho" creationdate="20221005T070607Z">
        <seg>- : La URL completa del documento MDN actual
- `env.id`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The index of the function reference you want to mutate.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T234000Z" creationid="gitnacho" creationdate="20221019T234000Z">
        <seg>- : El índice de la referencia de la función que deseas mutar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The index of the function reference you want to retrieve.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T091659Z" creationid="gitnacho" creationdate="20221006T091659Z">
        <seg>- : El índice de referencia de función que deseas recuperar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The index of the value in the data arguments to return, 0-indexed.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142520Z" creationid="gitnacho" creationdate="20221019T142520Z">
        <seg>- : El índice del valor en los argumentos de datos a devolver, indexado en base 0.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The initial number of elements of the WebAssembly Table.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000039Z" creationid="gitnacho" creationdate="20221020T000039Z">
        <seg>- : El número inicial de elementos de la tabla WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The initial size of the WebAssembly Memory, in units of WebAssembly pages.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T215131Z" creationid="gitnacho" creationdate="20221019T215131Z">
        <seg>- : El tamaño inicial de la memoria WebAssembly, en unidades de páginas WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The initial state of a service worker after it is downloaded and confirmed to be runnable.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223354Z" creationid="gitnacho" creationdate="20221003T223354Z">
        <seg>- : El estado inicial de un *service worker* después de descargarlo y confirmar que se puede ejecutar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The initial value of the [@@toStringTag](/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) property is the String value "WebAssembly.Global".</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T104606Z" creationid="gitnacho" creationdate="20221007T104606Z">
        <seg>- : El valor inicial de la propiedad [@@toStringTag](/es/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag) es el valor de cadena "WebAssembly.Global".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The line number of the code that caused the exception.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T135041Z" creationid="gitnacho" creationdate="20221019T135041Z">
        <seg>- : El número de línea del código que provocó la excepción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The locale of the current MDN document
- `env.title`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070757Z" creationid="gitnacho" creationdate="20221005T070757Z">
        <seg>- : La configuración regional del documento MDN actual
- `env.title`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The maximum number of elements the WebAssembly Table is allowed to grow to.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000102Z" creationid="gitnacho" creationdate="20221020T000102Z">
        <seg>- : El número máximo de elementos que puede crecer la tabla WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The maximum size the WebAssembly Memory is allowed to grow to, in units of</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T215143Z" creationid="gitnacho" creationdate="20221019T215143Z">
        <seg>- : El tamaño máximo al que se permite crecer la memoria WebAssembly, en unidades de</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The name of the cache you want to open.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T225100Z" creationid="gitnacho" creationdate="20220921T225100Z">
        <seg>- : El nombre de la caché que deseas abrir.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The name of the file containing the code that caused the exception.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T135031Z" creationid="gitnacho" creationdate="20221019T135031Z">
        <seg>- : El nombre del archivo que contiene el código que provocó la excepción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The number of WebAssembly pages you want to grow the memory by (each one is 64KiB in size).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T214459Z" creationid="gitnacho" creationdate="20221019T214459Z">
        <seg>- : El número de páginas de WebAssembly en las que deseas aumentar la memoria (cada una tiene un tamaño de 64KiB).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The number of elements you want to grow the table by.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T233329Z" creationid="gitnacho" creationdate="20221019T233329Z">
        <seg>- : El número de elementos por los que deseas hacer crecer la tabla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The object to deliver to the worker; this will be in the `data` field in the event delivered to the {{domxref("DedicatedWorkerGlobalScope.message_event")}} event.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221007T115518Z">
        <seg>- : El objeto a entregar al *worker*; esto estará en el campo `data` en el evento entregado al evento {{DOMxRef("DedicatedWorkerGlobalScope.message_event")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The original target of the event, before any retargetings.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T204758Z" creationid="gitnacho" creationdate="20221011T204758Z">
        <seg>- : El objetivo original del evento, antes de cualquier reorientación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The parameter passed into the {{DOMxRef("ServiceWorkerGlobalScope.fetch_event", "onfetch")}} handler, `FetchEvent` represents a fetch action that is dispatched on the {{DOMxRef("ServiceWorkerGlobalScope")}} of a {{DOMxRef("ServiceWorker")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T215915Z" creationid="gitnacho" creationdate="20221002T150942Z">
        <seg>- : El parámetro pasado al controlador {{DOMxRef("ServiceWorkerGlobalScope.fetch_event", "onfetch")}}, `FetchEvent` representa una acción de búsqueda que se envía en {{DOMxRef("ServiceWorkerGlobalScope")}} de un {{DOMxRef("ServiceWorker")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The parameter passed into the {{DOMxRef("ServiceWorkerGlobalScope.install_event", "oninstall")}} handler, the `InstallEvent` interface represents an install action that is dispatched on the {{DOMxRef("ServiceWorkerGlobalScope")}} of a {{DOMxRef("ServiceWorker")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151416Z" creationid="gitnacho" creationdate="20221002T151416Z">
        <seg>- : El parámetro pasado al controlador {{DOMxRef("ServiceWorkerGlobalScope.install_event", "oninstall")}}, la interfaz `InstallEvent` representa una acción de instalación que se envía en {{DOMxRef("ServiceWorkerGlobalScope")}} de un {{DOMxRef("ServiceWorker")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The parameter passed into the {{DOMxRef("ServiceWorkerGlobalScope.notificationclick_event", "onnotificationclick")}} handler, the `NotificationEvent` interface represents a notification click event that is dispatched on the {{DOMxRef("ServiceWorkerGlobalScope")}} of a {{DOMxRef("ServiceWorker")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151622Z" creationid="gitnacho" creationdate="20221002T151622Z">
        <seg>- : El parámetro pasado al controlador {{DOMxRef("ServiceWorkerGlobalScope.notificationclick_event", "onnotificationclick")}}, la interfaz `NotificationEvent` representa un evento de notificación de clic que se envía en {{DOMxRef("ServiceWorkerGlobalScope")}} de un {{DOMxRef("ServiceWorker")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The path to the current MDN document
- `env.url`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070550Z" creationid="gitnacho" creationdate="20221005T070550Z">
        <seg>- : La ruta al documento MDN actual
- `env.url`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The primary API for compiling and instantiating WebAssembly code, returning both a `Module` and its first `Instance`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T114502Z" creationid="gitnacho" creationdate="20221019T114502Z">
        <seg>- : La API principal para compilar e instanciar el código WebAssembly, devolviendo tanto un `Module` como su primera `Instance`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The service worker in this state is considered a waiting worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223659Z" creationid="gitnacho" creationdate="20221003T223659Z">
        <seg>- : El *service worker* en este estado se considera un *worker* en espera.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The service worker in this state is considered an active worker ready to handle functional events.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223825Z" creationid="gitnacho" creationdate="20221003T223825Z">
        <seg>- : El *service worker* en este estado se considera un *worker* activo listo para manejar eventos funcionales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The service worker in this state is considered an active worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223729Z" creationid="gitnacho" creationdate="20221003T223729Z">
        <seg>- : El *service worker* en este estado se considera un *worker* activo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The service worker in this state is considered an installing worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223537Z" creationid="gitnacho" creationdate="20221003T223537Z">
        <seg>- : El *service worker* en este estado se considera un *worker* instalador.¿</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The size of the file in bytes
- `author`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071249Z" creationid="gitnacho" creationdate="20221005T071249Z">
        <seg>- : El tamaño del archivo en bytes
- `author`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The string name of the desired custom section.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T221814Z" creationid="gitnacho" creationdate="20221019T221814Z">
        <seg>- : La cadena con el nombre de la sección personalizada deseada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The tags don't match; the exception was not created with the tag passed to the method.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142552Z" creationid="gitnacho" creationdate="20221019T142552Z">
        <seg>- : Las etiquetas no coinciden; la excepción no se creó con la etiqueta pasada al método.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The time at which the event was created (in milliseconds).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T204607Z" creationid="gitnacho" creationdate="20221011T204607Z">
        <seg>- : La hora a la que se creó el evento (en milisegundos).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The title of the current MDN document
- `env.slug`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070807Z" creationid="gitnacho" creationdate="20221005T070807Z">
        <seg>- : El título del documento MDN actual
- `env.slug`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The username of the person who uploaded the file
- `mime`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071315Z" creationid="gitnacho" creationdate="20221005T071315Z">
        <seg>- : El nombre de usuario de la persona que cargó el archivo
- `mime`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The value contained inside the global variable — this can be used to directly set and get the global's value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T104624Z" creationid="gitnacho" creationdate="20221007T104624Z">
        <seg>-: El valor contenido dentro de la variable global; esto se puede usar para establecer y obtener directamente el valor global.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The value of the `index` parameter is greater than or equal to the number of fields in the data.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142605Z" creationid="gitnacho" creationdate="20221019T142605Z">
        <seg>- : El valor del parámetro `index` es mayor o igual que el número de campos en los datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The value the variable contains.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110731Z" creationid="gitnacho" creationdate="20221007T110731Z">
        <seg>- : El valor que contiene la variable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The value you want to mutate the reference to.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T234006Z" creationid="gitnacho" creationdate="20221019T234006Z">
        <seg>- : El valor al que deseas mutar la referencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : The {{HTTPHeader("Content-Security-Policy")}} response header fields allows website administrators to control resources the user agent is allowed to load for a given page.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064655Z" creationid="gitnacho" creationdate="20221012T064655Z">
        <seg>- : Los campos de respuesta en la cabecera {{HTTPHeader("Content-Security-Policy")}} permiten a los administradores de sitios web controlar los recursos que el agente de usuario tiene permitido cargar en cierta página.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : These guides help you get started with contributing to MDN Web Docs.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T203456Z" creationid="gitnacho" creationdate="20221008T200548Z">
        <seg>- : Estas guías te ayudan a comenzar a contribuir con MDN Web Docs.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : These guides provide all the information about how to write for MDN Web Docs.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T200642Z" creationid="gitnacho" creationdate="20221008T200642Z">
        <seg>- : Estas guías brindan toda la información sobre cómo escribir para MDN Web Docs.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : This Boolean attribute is set to indicate that the script should not be executed in browsers that support [ES modules](/en-US/docs/Web/JavaScript/Guide/Modules) — in effect, this can be used to serve fallback scripts to older browsers that do not support modular JavaScript code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T124948Z" creationid="gitnacho" creationdate="20221003T124948Z">
        <seg>- : Este atributo booleano se establece para indicar que el script no se debe ejecutar en navegadores compatibles con [módulos ES](/es/docs/Web/JavaScript/Guide/Modules) — en efecto, esto se puede usar para servir scripts alternativos para navegadores más antiguos que no admiten el código JavaScript modular.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : This Boolean attribute is set to indicate to a browser that the script is meant to be executed after the document has been parsed, but before firing {{domxref("Document/DOMContentLoaded_event", "DOMContentLoaded")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T123638Z" creationid="gitnacho" creationdate="20221003T123638Z">
        <seg>- : Este atributo booleano se establece para indicar a un navegador que el script se debe ejecutar después de analizar el documento, pero antes de activar {{DOMxRef("Document/DOMContentLoaded_event", "DOMContentLoaded")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : This article explains the wasm text format.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T100255Z" creationid="gitnacho" creationdate="20221003T100255Z">
        <seg>- : Este artículo explica el formato de texto `wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : This article provides a guide on how to convert a WebAssembly module written in the text format into a .wasm binary.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T100443Z" creationid="gitnacho" creationdate="20221003T100443Z">
        <seg>- : Este artículo provee una guía para convertir un módulo WebAssembly escrito en su formato de texto a un binario `.wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : This attribute contains inline metadata that a user agent can use to verify that a fetched resource has been delivered free of unexpected manipulation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T124720Z" creationid="gitnacho" creationdate="20221003T124720Z">
        <seg>- : este atributo contiene metadatos en línea que un agente de usuario puede usar para verificar que un recurso obtenido se entregó sin manipulaciones inesperadas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : This attribute indicates the type of script represented.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T130450Z" creationid="gitnacho" creationdate="20221003T130450Z">
        <seg>- : Este atributo indica el tipo de script representado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : This attribute specifies the URI of an external script; this can be used as an alternative to embedding a script directly within a document.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T102324Z" creationid="gitnacho" creationdate="20221003T130440Z">
        <seg>- : Este atributo especifica la URI de un script externo; esto se puede usar como una alternativa para incrustar un script directamente dentro de un documento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : This object acts as the namespace for all WebAssembly related functionality.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T100901Z" creationid="gitnacho" creationdate="20221003T100735Z">
        <seg>- : Este objeto actúa como el espacio de nombres para todas las funciones relacionadas con WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : This topic covers the tools developers use to facilitate their work, such as cross-browser testing tools, linters, formatters, transformation tools, version control systems, deployment tools, and client-side JavaScript frameworks.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131723Z" creationid="gitnacho" creationdate="20221020T131723Z">
        <seg>- : Este tema abarca las herramientas que los desarrolladores utilizan para facilitar su trabajo, como las herramientas de prueba entre navegadores, analizadores de errores de código fuente, formateadores, herramientas de transformación, sistemas de control de versiones, herramientas de despliegue y marcos de desarrollo JavaScript de lado del cliente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Thrown if at least one of these conditions are met:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T070934Z" creationid="gitnacho" creationdate="20221020T070934Z">
        <seg>- : Se lanza si se cumple al menos una de estas condiciones:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Tools to check your cache-related headers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064828Z" creationid="gitnacho" creationdate="20221012T064828Z">
        <seg>- : Una herramienta para comprobar el estado de las cabeceras de caché.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Tutorials to take you step-by-step through learning HTML, CSS, JavaScript, and Web APIs.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T101617Z" creationid="gitnacho" creationdate="20221002T093448Z">
        <seg>- : Tutoriales que te guiarán paso a paso a través del aprendizaje de HTML, CSS, JavaScript y APIs Web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210735Z" creationid="gitnacho" creationdate="20221017T210735Z">
        <seg>- : Se usa en respuesta a una solicitud de verificación previa para indicar qué encabezados HTTP se pueden usar al realizar la solicitud real.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Used when issuing a preflight request to let the server know which HTTP headers will be used when the actual request is made.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210831Z" creationid="gitnacho" creationdate="20221017T210831Z">
        <seg>- : Se utiliza al emitir una solicitud de verificación previa para que el servidor sepa qué encabezados HTTP se utilizarán cuando se realice la solicitud real.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Used when issuing a preflight request to let the server know which [HTTP method](/en-US/docs/Web/HTTP/Methods) will be used when the actual request is made.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210849Z" creationid="gitnacho" creationdate="20221017T210849Z">
        <seg>- : Se utiliza al emitir una solicitud de verificación previa para que el servidor sepa qué [método HTTP](/es/docs/Web/HTTP/Methods) se utilizará cuando se realice la solicitud real.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Using the given key and cache entry lifetime, cache the results of the given function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072607Z" creationid="gitnacho" creationdate="20221005T072607Z">
        <seg>- : Utilizando la clave dada y la entrada de caché, almacena en caché los resultados de la función dada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Validates a given typed array of WebAssembly binary code, returning whether the bytes are valid WebAssembly code (`true`) or not (`false`).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T114656Z" creationid="gitnacho" creationdate="20221019T114656Z">
        <seg>- : Valida un determinado arreglo tipado de código binario WebAssembly, devolviendo si los bytes son código WebAssembly válido (`true`) o no (`false`).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Web App Manifests let you enable users to install Web apps to their device home screens, with aspects such as portrait/landscape screen orientation and display mode (e.g., full screen) pre-set.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T095525Z" creationid="gitnacho" creationdate="20221002T095424Z">
        <seg>- : Los manifiestos de aplicaciones web permiten a los usuarios instalar aplicaciones web en las pantallas de inicio de sus dispositivos, con aspectos como la orientación de pantalla vertical/horizontal y el modo de visualización preestablecido (por ejemplo, pantalla completa).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Web Components are custom elements that you can define and reuse in your Web apps.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T095216Z" creationid="gitnacho" creationdate="20221002T095216Z">
        <seg>- : Los componentes web son elementos personalizados que puedes definir y reutilizar en tus aplicaciones web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Web Extensions are a way for you to give users enhanced capabilities in their browsers — for doing things such as blocking ads and other content, customizing the appearance of pages, and more.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T095359Z" creationid="gitnacho" creationdate="20221002T095359Z">
        <seg>- : Las extensiones web son una forma de brindar a los usuarios capacidades mejoradas en sus navegadores, para hacer cosas como bloquear anuncios y otro contenido, personalizar la apariencia de las páginas y más.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Web forms are a potent tool for interacting with users — most commonly, they are used for collecting data from users, or allowing them to control a user interface.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131225Z" creationid="gitnacho" creationdate="20221020T131225Z">
        <seg>- : Los formularios HTML son un potente instrumento para interactuar con los usuarios — frecuentemente se utilizan para reunir datos de los usuarios, o permitirte controlar la interfaz de usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : Web performance is the art of making sure web applications download fast and are responsive to user interaction, regardless of a user's bandwidth, screen size, network, or device capabilities.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131451Z" creationid="gitnacho" creationdate="20221020T131451Z">
        <seg>- : El rendimiento web es el arte de asegurarte de que las aplicaciones web se descarguen rápidamente y respondan a la interacción del usuario, independientemente del ancho de banda, el tamaño de la pantalla, la red o las capacidades del dispositivo del usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : WebAssembly allows programs written in C, C++, Rust, Swift, C#, Go, and more to run on the Web.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T094515Z" creationid="gitnacho" creationdate="20221002T094515Z">
        <seg>- : WebAssembly permite que los programas escritos en C, C++, Rust, Swift, C#, Go y más se ejecuten en la Web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : WebDriver is a browser-automation mechanism for remotely controlling a browser by emulating the actions of a real person using the browser.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T095234Z" creationid="gitnacho" creationdate="20221002T095234Z">
        <seg>- : WebDriver es un mecanismo de automatización del navegador para controlar de forma remota un navegador emulando las acciones de una persona real que usa el navegador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : When it comes to tools for building a website, there's a lot to pick from.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T042625Z" creationid="gitnacho" creationdate="20220925T042625Z">
        <seg>- : Cuando se trata de herramientas para construir un sitio web, hay mucho para elegir.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : When you access your favorite website, a lot of complicated things happen in the background that you may not know about.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T092119Z" creationid="gitnacho" creationdate="20220925T060002Z">
        <seg>Cuando accedes a tu sitio web favorito, suceden muchas cosas complicadas en segundo plano que quizás no conozcas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : When you've written code in C/C++, you can then compile it into .wasm using a tool like [Emscripten](https://emscripten.org/).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T094854Z" creationid="gitnacho" creationdate="20221003T094854Z">
        <seg>- : Al escribir código en C/C++, lo puedes compilar a `.wasm` usando una herramienta como [Emscripten](https://emscripten.org/).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : You can look at the list of active macros in the [Yari repo](https://github.com/mdn/yari/tree/main/kumascript/macros).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T093115Z" creationid="gitnacho" creationdate="20221005T093115Z">
        <seg>- : Puedes consultar la lista de macros activas en el [repositorio de Yari](https://github.com/mdn/yari/tree/main/kumascript/macros).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : [Network monitor](https://firefox-source-docs.mozilla.org/devtools-user/network_monitor/index.html)
- [Mozilla Observatory](https://observatory.mozilla.org/)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064752Z" creationid="gitnacho" creationdate="20221012T064752Z">
        <seg>- : [Network monitor](https://firefox-source-docs.mozilla.org/devtools-user/network_monitor/index.html)
- [Mozilla Observatory](https://observatory.mozilla.org/)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : `Cache-Control` header sent in the request for the current MDN document, useful in deciding whether to invalidate caches</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071103Z" creationid="gitnacho" creationdate="20221005T071103Z">
        <seg>- : Cabecera `Cache-Control` enviada en la solicitud del documento MDN actual, útil para decidir si se invalidan las cachés</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : `true` if the `Exception` may have a stack trace attached to its [`stack`](/en-US/docs/WebAssembly/JavaScript_interface/Exception/stack) property, otherwise `false`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140439Z" creationid="gitnacho" creationdate="20221019T140439Z">
        <seg>- : `true` si la `Exception` puede tener un seguimiento de pila adjunto a su propiedad [`stack`](/es/docs/WebAssembly/JavaScript_interface/Exception/stack), de lo contrario `false`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- : compiles a [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) directly from a streamed underlying source, leaving instantiation as a separate step.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T114612Z" creationid="gitnacho" creationdate="20221019T114612Z">
        <seg>- : Compila un [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module) directamente desde una fuente subyacente transmitida, dejando la creación de instancias como un paso separado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- A cache version, which — as we explained above — you need to update when any wasm module is updated or moved to a different URL.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T052011Z" creationid="gitnacho" creationdate="20221004T052011Z">
        <seg>- Una versión de caché que, como explicamos anteriormente, debes actualizar cuando cualquier módulo `wasm` se actualice o se mueva a una URL diferente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- A navigation to an in-scope page occurs.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T141353Z" creationid="gitnacho" creationdate="20221002T141353Z">
        <seg>- Se produce una navegación a una página dentro del alcance.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- A new type, `externref`, which can hold _any_ JavaScript value, for example strings, DOM references, objects, etc. `externref` is opaque from the point of view of WebAssembly — a wasm module can't access and manipulate these values and instead can only receive them and pass them back out.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074925Z" creationid="gitnacho" creationdate="20221007T074925Z">
        <seg>- Un nuevo tipo, `externref`, que puede contener _cualquier_ valor de JavaScript, por ejemplo, cadenas, referencias DOM, objetos, etc. `externref` es opaco desde el punto de vista de WebAssembly: un módulo `wasm` no puede acceder a estos valores ni manipularlos y, en cambio, solo los puede recibir y devolver.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- A number of new instructions that allow wasm modules to directly manipulate [WebAssembly tables](#webassembly_tables), rather than having to do it via the JavaScript API.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T075015Z" creationid="gitnacho" creationdate="20221007T075015Z">
        <seg>- Varias instrucciones nuevas que permiten que los módulos `wasm` manipulen directamente [tablas de WebAssembly](#tablas_webassembly), en lugar de tener que hacerlo a través de la API de JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- A set of [Web APIs](/en-US/docs/Web/API) that the Web app can call to control web browser/device functionality and make things happen ([DOM](/en-US/docs/Web/API/Document_Object_Model), [CSSOM](/en-US/docs/Web/API/CSS_Object_Model), [WebGL](/en-US/docs/Web/API/WebGL_API), [IndexedDB](/en-US/docs/Web/API/IndexedDB_API), [Web Audio API](/en-US/docs/Web/API/Web_Audio_API), etc.).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T005403Z" creationid="gitnacho" creationdate="20221003T005403Z">
        <seg>- Un conjunto de ([APIs Web](/es/docs/Web/API)) que la aplicación Web puede llamar para controlar la funcionalidad del navegador/dispositivo web y hace que las cosas sucedan ([DOM](/es/docs/Web/API/Document_Object_Model), [CSSOM](/es/docs/Web/API/CSS_Object_Model), [WebGL](/es/docs/Web/API/WebGL_API), [IndexedDB](/es/docs/Web/API/IndexedDB_API), [API Web Audio](/es/docs/Web/API/Web_Audio_API), etc.).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- A template can accept parameters, and this parameter list starts and ends with parentheses.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065303Z" creationid="gitnacho" creationdate="20221005T065303Z">
        <seg>- Una plantilla puede aceptar parámetros, y esta lista de parámetros comienza y termina con paréntesis.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- A value containing the variable's actual value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233840Z" creationid="gitnacho" creationdate="20221006T233840Z">
        <seg>- Un valor que contiene el valor real de la variable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- A virtual machine (VM) that runs the Web app's code, e.g. the JavaScript code that powers your apps.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T005229Z" creationid="gitnacho" creationdate="20221003T005229Z">
        <seg>- Una máquina virtual (VM por sus siglas en inglés) que ejecuta el código de la aplicación Web p.e. el código JavaScript que potencia tus aplicaciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- A way to build documents out of content pulled from other documents.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T064605Z" creationid="gitnacho" creationdate="20221005T064605Z">
        <seg>- Una forma de crear documentos a partir de contenido extraído de otros documentos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- A way to fetch and include content from other websites and services (e.g., Bugzilla).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T064617Z" creationid="gitnacho" creationdate="20221005T064617Z">
        <seg>- Una forma de obtener e incluir contenido de otros sitios web y servicios (p. ej., Bugzilla).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- A way to reuse and localize content that appears repeatedly between documents (e.g., compatibility labels, section navigation, warning banners).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T064556Z" creationid="gitnacho" creationdate="20221005T064556Z">
        <seg>- Una forma de reutilizar y localizar el contenido que aparece repetidamente entre documentos (por ejemplo, etiquetas de compatibilidad, navegación por secciones, pancartas de advertencia).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- A {{jsxref("TypeError")}} will be thrown if `type` is not an object, the `type.parameters` property is not supplied, or `type.parameters` contains an unsupported data type.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T071041Z" creationid="gitnacho" creationdate="20221020T071041Z">
        <seg>- Se generará un {{JSxRef("TypeError")}} si `type` no es un objeto, no se proporciona la propiedad `type.parameters` o `type.parameters` contiene un tipo de dato no compatible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- AJAX</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T211008Z" creationid="gitnacho" creationdate="20221011T211008Z">
        <seg>- AJAX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- API</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T224555Z" creationid="gitnacho" creationdate="20220921T224555Z">
        <seg>- API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Abstraction</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T091440Z" creationid="gitnacho" creationdate="20221018T091440Z">
        <seg>- Abstraction
  - Abstracción</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Accessibility</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T231041Z" creationid="gitnacho" creationdate="20220922T231041Z">
        <seg>- Accesibilidad</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Add-ons</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T205703Z" creationid="gitnacho" creationdate="20221006T205703Z">
        <seg>- Add-ons
  - Complementos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Advanced</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T205721Z" creationid="gitnacho" creationdate="20221006T205721Z">
        <seg>- Advanced
  - Avanzado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- All non-numeric parameters must be in quotes.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065313Z" creationid="gitnacho" creationdate="20221005T065313Z">
        <seg>- Todos los parámetros no numéricos deben ir entre comillas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- An event is fired on the service worker and it hasn't been downloaded in the last 24 hours.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T141417Z" creationid="gitnacho" creationdate="20221002T141417Z">
        <seg>- Se activa un evento en el *service worker* y no se ha descargado en las últimas 24 horas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- An import object, if required.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T052051Z" creationid="gitnacho" creationdate="20221004T052051Z">
        <seg>- Un objeto `import`, si es necesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- An object that contains two properties describing the global variable:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233805Z" creationid="gitnacho" creationdate="20221006T233805Z">
        <seg>- Un objeto que contiene dos propiedades que describen la variable global:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Animation</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T092416Z" creationid="gitnacho" creationdate="20221002T102233Z">
        <seg>- Animation
  - Animación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- AnimationTimeline</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T092417Z" creationid="gitnacho" creationdate="20221006T092417Z">
        <seg>- AnimationTimeline</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Anything inside a `&lt;% %&gt;` block is interpreted as JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070112Z" creationid="gitnacho" creationdate="20221005T070112Z">
        <seg>- Cualquier cosa dentro de un bloque `&lt;% %&gt;` se interpreta como JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Apart from the headers automatically set by the user agent (for example, {{HTTPHeader("Connection")}}, {{HTTPHeader("User-Agent")}}, or [the other headers defined in the Fetch spec as a _forbidden header name_](https://fetch.spec.whatwg.org/#forbidden-header-name)), the only headers which are allowed to be manually set are [those which the Fetch spec defines as a CORS-safelisted request-header](https://fetch.spec.whatwg.org/#cors-safelisted-request-header), which are:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220452Z" creationid="gitnacho" creationdate="20221011T220452Z">
        <seg>- Aparte de los encabezados establecidos automáticamente por el agente de usuario (por ejemplo, {{HTTPHeader("Connection")}}, {{HTTPHeader("User-Agent")}}, o [los otros encabezados definidos en la especificación Fetch como un _nombre de encabezado prohibido_](https://fetch.spec.whatwg.org/#forbidden-header-name)), los únicos encabezados que se pueden configurar manualmente son [aquellos que la especificación Fetch define como CORS-safelisted encabezado de solicitud](https://fetch.spec.whatwg.org/#cors-safelisted-request-header), que son:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Apps</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T043301Z" creationid="gitnacho" creationdate="20220923T043301Z">
        <seg>- Apps</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Arithmetic
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T202730Z" creationid="gitnacho" creationdate="20221007T091430Z">
        <seg>- Arithmetic
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- AssemblyScript</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T003603Z" creationid="gitnacho" creationdate="20221003T003603Z">
        <seg>- AssemblyScript</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Assets</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T055901Z" creationid="gitnacho" creationdate="20221019T055901Z">
        <seg>- Assets
  - Activos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Atomic operations are now allowed on non-shared memories ({{bug(1619196)}}).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T220504Z" creationid="gitnacho" creationdate="20221019T220504Z">
        <seg>- Ahora se permiten operaciones atómicas en memorias no compartidas ({{bug(1619196)}}).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Babylon.js</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T085826Z" creationid="gitnacho" creationdate="20221002T085826Z">
        <seg>- Babylon.js</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Background data synchronization.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T145300Z" creationid="gitnacho" creationdate="20221002T145300Z">
        <seg>- Sincronización de datos en segundo plano.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Basic setup and learning how to learn
- Web standards and best practices (such as accessibility and cross-browser compatibility)
- HTML, the language that gives web content structure and meaning
- CSS, the language used to style web pages
- JavaScript, the scripting language used to create dynamic functionality on the web
- Tooling that is used to facilitate modern client-side web development.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223524Z" creationid="gitnacho" creationdate="20221018T223524Z">
        <seg>- Configuración básica y conocimientos sobre cómo aprender
- Estándares web y mejores prácticas (como accesibilidad y compatibilidad entre navegadores)
- HTML, el lenguaje que da estructura y significado al contenido web
- CSS, el lenguaje utilizado para aplicar estilo a las páginas web
- JavaScript, el lenguaje programado por medio de _scripts_ utilizado para crear funciones dinámicas en la web.
- Herramientas que se utilizan para facilitar el desarrollo web moderno de lado del cliente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Be fast, efficient, and portable — WebAssembly code can be executed at near-native speed across different platforms by taking advantage of [common hardware capabilities](https://webassembly.org/docs/portability/#assumptions-for-efficient-execution).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T004420Z" creationid="gitnacho" creationdate="20221003T004420Z">
        <seg>- Ser rápido, eficiente y portable — el código WebAssembly se puede ejecutar a una velocidad casi nativa en diferentes plataformas aprovechando las [capacidades comunes del hardware](http://webassembly.org/docs/portability/#assumptions-for-efficient-execution).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Be readable and debuggable — WebAssembly is a low-level assembly language, but it does have a human-readable text format (the specification for which is still being finalized) that allows code to be written, viewed, and debugged by hand.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T082732Z" creationid="gitnacho" creationdate="20221003T004518Z">
        <seg>- Ser legible y depurable — WebAssembly es un lenguaje ensamblador de bajo nivel, pero tiene un formato de texto que las personas pueden entender (la especificación aún se está terminando) lo cual permite al código ser escrito, visualizado y depurado a mano.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Beginner</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T201104Z" creationid="gitnacho" creationdate="20220925T035244Z">
        <seg>- Beginner
  - Principiante
  - Novato</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Beyond the basics</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T130013Z" creationid="gitnacho" creationdate="20221012T231943Z">
        <seg>- **Conozco la web:**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Braille</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T231044Z" creationid="gitnacho" creationdate="20220922T231044Z">
        <seg>- Braille</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Browser</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T000826Z" creationid="gitnacho" creationdate="20221012T115006Z">
        <seg>- Browser
  - Navegador</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Browsers</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T232414Z" creationid="gitnacho" creationdate="20221018T232414Z">
        <seg>- Browsers
  - Navegadores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Buffer</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T213009Z" creationid="gitnacho" creationdate="20221019T213009Z">
        <seg>- Buffer
  - Búfer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Bugs</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113104Z" creationid="gitnacho" creationdate="20221005T113104Z">
        <seg>- Errores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Build a part of an application — using Rust in an existing JavaScript frontend.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061056Z" creationid="gitnacho" creationdate="20221004T061056Z">
        <seg>- Crea una parte de una aplicación: usa Rust en una interfaz de JavaScript existente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Build an entire application — an entire web app based in Rust.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061030Z" creationid="gitnacho" creationdate="20221004T061030Z">
        <seg>- Crea una aplicación completa: una aplicación web completa basada en Rust.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- By accessing a function exported from a wasm module instance via [`Instance.exports`](/en-US/docs/WebAssembly/JavaScript_interface/Instance/exports).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085105Z" creationid="gitnacho" creationdate="20221006T085105Z">
        <seg>- Accediendo a una función exportada desde una instancia del módulo `wasm` a través de [`Instance.exports`](/es/docs/WebAssembly/JavaScript_interface/Instance/exports).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- By calling [`Table.prototype.get()`](/en-US/docs/WebAssembly/JavaScript_interface/Table/get) on an existing table.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085039Z" creationid="gitnacho" creationdate="20221006T085039Z">
        <seg>- Llamando a [`Table.prototype.get()`](/es/docs/WebAssembly/JavaScript_interface/Table/get) en una tabla existente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- C</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T003600Z" creationid="gitnacho" creationdate="20221003T003600Z">
        <seg>- C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- C++</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T003600Z" creationid="gitnacho" creationdate="20221003T003600Z">
        <seg>- C++</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- C-like</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174740Z" creationid="gitnacho" creationdate="20221008T174740Z">
        <seg>- C-like</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- CORS</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T211008Z" creationid="gitnacho" creationdate="20221011T211008Z">
        <seg>- CORS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- CSS</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T035248Z" creationid="gitnacho" creationdate="20220925T035248Z">
        <seg>- CSS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Cache</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T200810Z" creationid="gitnacho" creationdate="20221003T200810Z">
        <seg>- Caché
  - Cache</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Cache API</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T000152Z" creationid="gitnacho" creationdate="20221003T200817Z">
        <seg>- Cache API
  - API Caché</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- CacheStorage</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T224559Z" creationid="gitnacho" creationdate="20220921T224559Z">
        <seg>- CacheStorage</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Caching</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043305Z" creationid="gitnacho" creationdate="20221004T043305Z">
        <seg>- Caching
  - Cacheo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Canvas</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T061914Z" creationid="gitnacho" creationdate="20221002T061914Z">
        <seg>- Canvas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Change the server-side behavior to avoid the preflight and/or to avoid the redirect
- Change the request such that it is a [simple request](#simple_requests) that doesn't cause a preflight</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T225830Z" creationid="gitnacho" creationdate="20221011T224941Z">
        <seg>- Cambiar el comportamiento de lado del servidor para evitar la preverificación y/o para evitar la redirección
- Cambiar la solicitud para que sea una [solicitud simple](#solicitudes_simples) que no cause una verificación previa</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Class</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015911Z" creationid="gitnacho" creationdate="20220922T231456Z">
        <seg>- Class
  - Clase</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Client hints</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T084731Z" creationid="gitnacho" creationdate="20221012T084731Z">
        <seg>- Sugerencias del cliente</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Client-side compiling and dependency management of CoffeeScript, less, CJS/AMD modules, etc. for development purposes.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T145353Z" creationid="gitnacho" creationdate="20221002T145353Z">
        <seg>- Compilación de lado del cliente y gestión de dependencias de CoffeeScript, less, módulos CJS/AMD, etc. para fines de desarrollo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- CodingScripting</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T100037Z" creationid="gitnacho" creationdate="20221002T100037Z">
        <seg>- CodingScripting</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- CodingScripting
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T100413Z" creationid="gitnacho" creationdate="20221002T100413Z">
        <seg>- CodingScripting
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- CompileError</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T024831Z" creationid="gitnacho" creationdate="20221008T024831Z">
        <seg>- CompileError</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Compiling</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T235053Z" creationid="gitnacho" creationdate="20221003T105102Z">
        <seg>- Compiling
  - Compilar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Compiling to wasm and creating HTML to run our code in, plus all the JavaScript "glue" code needed to run the wasm in the web environment.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105339Z" creationid="gitnacho" creationdate="20221003T105339Z">
        <seg>- Compilar a `wasm` y crear HTML para ejecutar nuestro código, además de todo el código "pegamento" de JavaScript necesario para ejecutar `wasm` en el entorno web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Compiling to wasm and just creating the JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105358Z" creationid="gitnacho" creationdate="20221003T105358Z">
        <seg>- Compilar a `wasm` y simplemente crear el JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Complete beginner</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T125744Z" creationid="gitnacho" creationdate="20221012T231910Z">
        <seg>- **Soy un principiante:** ¡Bienvenido!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Composing</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T055930Z" creationid="gitnacho" creationdate="20221019T055930Z">
        <seg>- Composing
  - Composición</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Constructor</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110100Z" creationid="gitnacho" creationdate="20221007T110100Z">
        <seg>- Constructor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Content</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T055951Z" creationid="gitnacho" creationdate="20221019T055951Z">
        <seg>- Content
  - Contenido</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Control flow
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T081422Z" creationid="gitnacho" creationdate="20221007T094357Z">
        <seg>- Control flow
  - Control de flujo
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Creating new memory and table instances via the [`WebAssembly.Memory()`](/en-US/docs/WebAssembly/JavaScript_interface/Memory)/[`WebAssembly.Table()`](/en-US/docs/WebAssembly/JavaScript_interface/Table) constructors.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221009T004647Z" creationid="gitnacho" creationdate="20221009T003624Z">
        <seg>- Crear nuevas instancias de `memory` y `table` a través de los constructores [`WebAssembly.Memory()`](/es/docs/WebAssembly/JavaScript_interface/Memory)/[`WebAssembly.Table()`](/es/docs/WebAssembly/JavaScript_interface/Table).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Cross-Origin Resource Sharing</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T211008Z" creationid="gitnacho" creationdate="20221011T211008Z">
        <seg>- Cross-Origin Resource Sharing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Custom templating based on certain URL patterns.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T145455Z" creationid="gitnacho" creationdate="20221002T145455Z">
        <seg>- Plantillas personalizadas basadas en ciertos patrones de URL.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- DOM</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T001743Z" creationid="gitnacho" creationdate="20221002T001743Z">
        <seg>- DOM</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Demos</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T072607Z" creationid="gitnacho" creationdate="20221018T072607Z">
        <seg>- Demos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Deprecated</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T060006Z" creationid="gitnacho" creationdate="20221019T060006Z">
        <seg>- Deprecated
  - Obsoleto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Design</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T001227Z" creationid="gitnacho" creationdate="20220925T035253Z">
        <seg>- Design
  - Diseño</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- DevTools</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T111241Z" creationid="gitnacho" creationdate="20221006T111241Z">
        <seg>- DevTools</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Doctype html</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T100235Z" creationid="gitnacho" creationdate="20221002T100235Z">
        <seg>- Doctype html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Document</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T092421Z" creationid="gitnacho" creationdate="20221006T092421Z">
        <seg>- Document</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- DocumentTimeline</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T092425Z" creationid="gitnacho" creationdate="20221006T092425Z">
        <seg>- DocumentTimeline</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Don't break the web — WebAssembly is designed so that it plays nicely with other web technologies and maintains backwards compatibility.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T004930Z" creationid="gitnacho" creationdate="20221003T004930Z">
        <seg>- No rompe la red — WebAssembly está diseñado de tal forma que juegue bien con otras tecnologías web y mantenga compatibilidad con versiones anteriores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Draw on `requestAnimationFrame` and update on a `setInterval` or `setTimeout` in a [Web Worker](/en-US/docs/Web/API/Web_Workers_API/Using_web_workers).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T103826Z" creationid="gitnacho" creationdate="20221007T103826Z">
        <seg>- Dibujar en `requestAnimationFrame` y actualizar en un `setInterval` o `setTimeout` en un [*Web Worker*](/es/docs/Web/API/Web_Workers_API/Using_web_workers).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- ECMAScript 2015</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T072415Z" creationid="gitnacho" creationdate="20221002T072415Z">
        <seg>- ECMAScript 2015</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Each of these top-level GFM `&lt;li&gt;` elements must contain, as its final element, one GFM `&lt;ul&gt;` element.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182522Z" creationid="gitnacho" creationdate="20221008T182522Z">
        <seg>- Cada uno de estos elementos GFM `&lt;li&gt;` de nivel superior debe contener, como elemento final, un elemento GFM `&lt;ul&gt;`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Element</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T235237Z" creationid="gitnacho" creationdate="20221003T115902Z">
        <seg>- Element
  - Elemento</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Emscripten</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T003602Z" creationid="gitnacho" creationdate="20221003T003602Z">
        <seg>- Emscripten</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Entering a geo-fence.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T150411Z" creationid="gitnacho" creationdate="20221002T150411Z">
        <seg>- Entrar en un perímetro virtual —*geo-fence*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Errors</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T092002Z" creationid="gitnacho" creationdate="20221005T092002Z">
        <seg>- Errors
  - Errores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Event</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T224725Z" creationid="gitnacho" creationdate="20221003T224725Z">
        <seg>- Event
  - Evento</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Example</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T072619Z" creationid="gitnacho" creationdate="20221018T072619Z">
        <seg>- Example
  - Ejemplo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Exception</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T022717Z" creationid="gitnacho" creationdate="20221008T022717Z">
        <seg>- Exception
  - Excepción</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Exception
browser-compat: javascript.builtins.WebAssembly.Exception.getArg
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T141619Z">
        <seg>- Exception
browser-compat: javascript.builtins.WebAssembly.Exception.getArg
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Exception
browser-compat: javascript.builtins.WebAssembly.Exception.is
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T145127Z">
        <seg>- Exception
  - Excepción
browser-compat: javascript.builtins.WebAssembly.Exception.is
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Exception
browser-compat: javascript.builtins.WebAssembly.Tag.type
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221020T071338Z">
        <seg>- Exception
browser-compat: javascript.builtins.WebAssembly.Tag.type
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Fetch</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T070833Z" creationid="gitnacho" creationdate="20221004T070833Z">
        <seg>- Fetch</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Fetch API</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T211008Z" creationid="gitnacho" creationdate="20221011T211008Z">
        <seg>- Fetch API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Finally, we use `call_indirect` to call a function from the table — it implicitly pops the value of `$i` off the stack.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072813Z" creationid="gitnacho" creationdate="20221007T072813Z">
        <seg>- Finalmente, usamos `call_indirect` para llamar a una función de la tabla — implícitamente extrae el valor de `$i` de la pila.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Follow each piece of code with an explanation of what it does.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205057Z" creationid="gitnacho" creationdate="20221005T205057Z">
        <seg>- Sigue cada pieza de código con una explicación de lo que hace.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Fonts</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T060028Z" creationid="gitnacho" creationdate="20221019T060028Z">
        <seg>- Fonts
  - Fuentes
  - Tipos de letra</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- For exponentiation, use the caret: `2^53`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191343Z" creationid="gitnacho" creationdate="20221008T191343Z">
        <seg>- Para la exponenciación, usa el signo de intercalación: `2^53`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- For footnotes, don't mark up the footnote references with, e.g., `&lt;sup&gt;[1]&lt;/sup&gt;`; it's unnecessary.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191454Z" creationid="gitnacho" creationdate="20221008T191423Z">
        <seg>- Para notas al pie, no marques las referencias de las notas al pie con, por ejemplo, `&lt;sup&gt;[1]&lt;/sup&gt;`; es innecesario</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- For more details on EJS syntax, [check out the upstream module documentation](https://ejs.co).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T085405Z" creationid="gitnacho" creationdate="20221005T070437Z">
        <seg>- Para obtener más detalles sobre la sintaxis de EJS, [consulta la documentación del módulo anterior](https://ejs.co).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- For ordinal expressions like 1</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191407Z" creationid="gitnacho" creationdate="20221008T191407Z">
        <seg>- Para expresiones ordinales como 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Frameworks and tooling</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T130355Z" creationid="gitnacho" creationdate="20221012T232120Z">
        <seg>- **Soy experto en la web:**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Front-end</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223113Z" creationid="gitnacho" creationdate="20221018T223113Z">
        <seg>- Front-end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Functions</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T044738Z" creationid="gitnacho" creationdate="20221007T044738Z">
        <seg>- Functions
  - Funciones</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- GFM doesn't support any table element attributes like `colspan`, `rowspan`, or `scope`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184951Z" creationid="gitnacho" creationdate="20221008T184951Z">
        <seg>- GFM no admite ningún atributo de elemento de tabla como `colspan`, `rowspan` o `scope`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- GFM doesn't support any table elements beyond `&lt;table&gt;`, `&lt;tr&gt;`, and `&lt;th&gt;`, and `&lt;td&gt;`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184941Z" creationid="gitnacho" creationdate="20221008T184941Z">
        <seg>- GFM no admite ningún elemento de tabla más allá de `&lt;table&gt;`, `&lt;tr&gt;`, `&lt;th&gt;` y `&lt;td&gt;`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- GFM tables may not have a header column.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184903Z" creationid="gitnacho" creationdate="20221008T184903Z">
        <seg>- Las tablas GFM pueden **no** tener una columna de encabezado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- GFM tables must have a header row.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184848Z" creationid="gitnacho" creationdate="20221008T184848Z">
        <seg>- Las tablas GFM deben tener una fila de encabezado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- GFM won't parse GFM block elements in table cells.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184913Z" creationid="gitnacho" creationdate="20221008T184913Z">
        <seg>- GFM no analizará los elementos del bloque GFM en las celdas de la tabla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Games</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T072632Z" creationid="gitnacho" creationdate="20220921T013605Z">
        <seg>- Games
  - Juegos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Get access to data such as user credentials.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T203742Z" creationid="gitnacho" creationdate="20221018T203742Z">
        <seg>- Obtener acceso a datos como las credenciales de usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Get low-level access to a user's computer.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T203735Z" creationid="gitnacho" creationdate="20221018T203735Z">
        <seg>- Obtener acceso de bajo nivel a la computadora de un usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- GitHub "live samples" — A macro that takes a document in a GitHub repo inside the [MDN organization](https://github.com/mdn/), puts it inside an {{htmlelement("iframe")}} element, and embeds it into the page to show the code running live.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204237Z" creationid="gitnacho" creationdate="20221005T204237Z">
        <seg>- GitHub "muestras en vivo": Una macro que toma un documento en un repositorio de GitHub dentro de la [organización MDN](https://github.com/mdn/), lo coloca dentro de un {{htmlelement("iframe")}} y lo incrusta en la página para mostrar el código ejecutándose en vivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- GitHub live samples are useful when you've got an existing example you want to embed, don't want to show the source code for, and/or you want to make sure the example is available in standalone form.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204820Z" creationid="gitnacho" creationdate="20221005T204820Z">
        <seg>- Las muestras en vivo de GitHub son útiles cuando tienes un ejemplo existente que deseas incrustar, no deseas mostrar el código fuente y/o deseas asegurarte de que el ejemplo esté disponible en forma independiente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Go beyond just demonstrating how each piece of the API or technology works.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205359Z" creationid="gitnacho" creationdate="20221005T205359Z">
        <seg>- Ve más allá de simplemente demostrar cómo funciona cada pieza de la API o tecnología.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Graphics</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T061916Z" creationid="gitnacho" creationdate="20221002T061916Z">
        <seg>- Graphics</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Guide</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T084738Z" creationid="gitnacho" creationdate="20220921T014611Z">
        <seg>- Guía</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- HTML</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T035255Z" creationid="gitnacho" creationdate="20220925T035255Z">
        <seg>- HTML</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- HTML
- CSS
- JavaScript
- Result</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211205Z" creationid="gitnacho" creationdate="20221005T211049Z">
        <seg>- HTML
- CSS
- JavaScript
- Resultado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- HTML scripting</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T120013Z" creationid="gitnacho" creationdate="20221003T120013Z">
        <seg>- HTML scripting
  - HTML script</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- HTML tags appearing inside a macro call</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T092858Z" creationid="gitnacho" creationdate="20221005T092344Z">
        <seg>- Etiquetas HTML que aparecen dentro de una llamada de macro</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- HTML:Flow content</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T135451Z" creationid="gitnacho" creationdate="20221003T120043Z">
        <seg>- HTML: Flow content
  - HTML: flujo de contenido</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- HTML:Metadata content</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T135457Z" creationid="gitnacho" creationdate="20221003T120106Z">
        <seg>- HTML: Metadata content
  - HTML: Contenido de metadatos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- HTML:Phrasing content</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T135524Z" creationid="gitnacho" creationdate="20221003T120127Z">
        <seg>- HTML: Phrasing content
  - HTML: Redacción de contenido</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- HTML:Script-supporting element</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T135509Z" creationid="gitnacho" creationdate="20221003T120231Z">
        <seg>- HTML: Script-supporting element
  - HTML: Compatibilidad con el elemento script</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- HTTP</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T211009Z" creationid="gitnacho" creationdate="20221011T211009Z">
        <seg>- HTTP</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- HTTP Access Controls</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T211009Z" creationid="gitnacho" creationdate="20221011T211009Z">
        <seg>- HTTP Access Controls</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- HTTP Header</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T075757Z" creationid="gitnacho" creationdate="20221017T211403Z">
        <seg>- HTTP Header
  - Cabecera HTTP</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- HTTPS</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T201915Z" creationid="gitnacho" creationdate="20221018T201915Z">
        <seg>- HTTPS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- History</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T112504Z" creationid="gitnacho" creationdate="20221019T112504Z">
        <seg>- History
  - Historia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Hit Refresh in your browser.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T074947Z" creationid="gitnacho" creationdate="20221005T074947Z">
        <seg>- Pulsa Actualizar en tu navegador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Hit Shift-Refresh in your browser.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T081646Z" creationid="gitnacho" creationdate="20221005T075041Z">
        <seg>- Presiona "Mayús+Recargar" en tu navegador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Hooks for background services.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T145443Z" creationid="gitnacho" creationdate="20221002T145443Z">
        <seg>- Ganchos para servicios en segundo plano.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- How to avoid the CORS preflight</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T061132Z" creationid="gitnacho" creationdate="20221012T061132Z">
        <seg>- Cómo evitar la preverificación de CORS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- How to fix _"Access-Control-Allow-Origin header must not be the wildcard"_</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T061414Z" creationid="gitnacho" creationdate="20221012T061414Z">
        <seg>- Cómo arreglar _"El encabezado Access-Control-Allow-Origin no debe ser el comodín"_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- How to use a CORS proxy to get around _"No Access-Control-Allow-Origin header"_</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T061346Z" creationid="gitnacho" creationdate="20221012T061346Z">
        <seg>- Cómo usar un proxy CORS para moverse por _"`No Access-Control-Allow-Origin header`"_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Hypertext</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T061825Z" creationid="gitnacho" creationdate="20221012T061825Z">
        <seg>- Hypertext</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Icon: {{Deprecated_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T115213Z" creationid="gitnacho" creationdate="20221005T115213Z">
        <seg>- Icono: {{Deprecated_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Icon: {{Experimental_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114311Z" creationid="gitnacho" creationdate="20221005T114311Z">
        <seg>- Icono: {{Experimental_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Icon: {{Non-standard_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114159Z" creationid="gitnacho" creationdate="20221005T114159Z">
        <seg>- Icono: {{Non-standard_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If _index_ is greater than or equal</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T234038Z" creationid="gitnacho" creationdate="20221019T234038Z">
        <seg>- Si _index_ es mayor o igual</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If _value_ is not an exported WebAssembly function or</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T234131Z" creationid="gitnacho" creationdate="20221019T234131Z">
        <seg>- Si _value_ no es una función WebAssembly exportada o</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If `bufferSource` is not a [typed array](/en-US/docs/Web/JavaScript/Typed_arrays) or {{jsxref("ArrayBuffer")}},</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T180533Z" creationid="gitnacho" creationdate="20221007T180533Z">
        <seg>- Si `bufferSource` no es un [arreglo tipado](/es/docs/Web/JavaScript/Typed_arrays) o {{jsxref("ArrayBuffer")}},</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If `initial` is not specified, a {{jsxref("TypeError")}} is thrown.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T220042Z" creationid="gitnacho" creationdate="20221019T220042Z">
        <seg>- Si no se especifica `initial`, se arroja un {{JSxRef("TypeError")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If `maximum` is specified and is smaller than `initial`, a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000525Z" creationid="gitnacho" creationdate="20221020T000525Z">
        <seg>- Si se especifica `maximum` y es menor que `initial`, se</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If `maximum` is specified and is smaller than `initial`, a {{jsxref("RangeError")}} is thrown.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T220056Z" creationid="gitnacho" creationdate="20221019T220056Z">
        <seg>- Si se especifica `maximum` y es más pequeño que `initial`, se lanza un {{JSxRef("RangeError")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If `memoryDescriptor` is not an object, a {{jsxref("TypeError")}} is thrown.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T220026Z" creationid="gitnacho" creationdate="20221019T220026Z">
        <seg>- Si `memoryDescriptor` no es un objeto, se lanza un {{JSxRef("TypeError")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If `shared` is present and `true`, yet `maximum` is not specified, a {{jsxref("TypeError")}} is thrown.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T220116Z" creationid="gitnacho" creationdate="20221019T220116Z">
        <seg>- Si `shared` está presente y es `true`, pero no se especifica `maximum`, se lanza un {{JSxRef("TypeError")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If `source` is not a [`Response`](/en-US/docs/Web/API/Response) or `Promise` resolving to a `Response`,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T185504Z" creationid="gitnacho" creationdate="20221007T185504Z">
        <seg>- Si `source` no es una [`Response`](/es/docs/Web/API/Response) o `Promise` que se traduce en una `Response`,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If `tableDescriptor.element` is not one of the [reference types](https://webassembly.github.io/spec/core/syntax/types.html#syntax-reftype), then a {{jsxref("TypeError")}} is thrown.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000559Z" creationid="gitnacho" creationdate="20221020T000559Z">
        <seg>- Si `tableDescriptor.element` no es uno de los [tipos de referencia](https://webassembly.github.io/spec/core/syntax/types.html#syntax-reftype), entonces se lanza un {{JSxRef("TypeError ")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If `tableDescriptor` is not of type object, a {{jsxref("TypeError")}} is</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000419Z" creationid="gitnacho" creationdate="20221020T000419Z">
        <seg>- Si `tableDescriptor` no es de tipo `object`, se lanza un</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If compilation fails, the constructor rejects with a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T231449Z" creationid="gitnacho" creationdate="20221019T231449Z">
        <seg>- Si la compilación falla, el constructor rechaza con un</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If compilation fails, the promise rejects with a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T180545Z" creationid="gitnacho" creationdate="20221007T180545Z">
        <seg>- Si la compilación falla, la promesa se rechaza con un</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If either of the parameters are not of the correct type or structure,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193751Z" creationid="gitnacho" creationdate="20221007T193751Z">
        <seg>- Si alguno de los parámetros no es del tipo o estructura correctos,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If either of the parameters are not of the correct type or structure, a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T104156Z" creationid="gitnacho" creationdate="20221006T102507Z">
        <seg>- Si alguno de los parámetros no es del tipo o estructura correctos, se</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If the GFM representation of the table would be more than 150 characters wide, use HTML for the table.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184322Z" creationid="gitnacho" creationdate="20221008T184322Z">
        <seg>- Si la representación GFM de la tabla tiene más de 150 caracteres de ancho, usa HTML para la tabla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If the `source` `Result` has an error (e.g. bad MIME type), the promise rejects an error.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T190225Z" creationid="gitnacho" creationdate="20221007T185548Z">
        <seg>- Si `source` `Result` tiene un error (por ejemplo, tipo MIME incorrecto), la promesa se rechaza con un error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If the `source` is a `Promise` that rejects, the promise rejects with the error.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T185530Z" creationid="gitnacho" creationdate="20221007T185530Z">
        <seg>- Si `source` es una `Promise` que rechaza, la promesa se rechaza con el error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If the operation fails, one of</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T210204Z" creationid="gitnacho" creationdate="20221019T210204Z">
        <seg>- Si la operación falla, uno de</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If the operation fails, the promise rejects with a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T104429Z" creationid="gitnacho" creationdate="20221006T104429Z">
        <seg>- Si la operación falla, la promesa se rechaza con un</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If the parameter is not of the correct type or structure, a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T104359Z" creationid="gitnacho" creationdate="20221006T104359Z">
        <seg>- Si el parámetro no es del tipo o estructura correctos, se</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If the request is made using an {{domxref("XMLHttpRequest")}} object, no event listeners are registered on the object returned by the {{domxref("XMLHttpRequest.upload")}} property used in the request; that is, given an {{domxref("XMLHttpRequest")}} instance `xhr`, no code has called `xhr.upload.addEventListener()` to add an event listener to monitor the upload.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T220947Z">
        <seg>- Si la solicitud se realiza mediante un objeto {{DOMxRef("XMLHttpRequest")}}, no se registra ningún escucha de eventos en el objeto devuelto por la propiedad {{DOMxRef("XMLHttpRequest.upload")}} utilizada en la solicitud; es decir, dada una {{DOMxRef("XMLHttpRequest")}} instancia `xhr`, ningún código ha llamado a `xhr.upload.addEventListener()` para agregar un escucha de eventos para monitorear la carga.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If there are no parameters, you may leave out the parentheses entirely; `\{{macroname()}}` and `\{{macroname}}` are identical.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T095025Z" creationid="gitnacho" creationdate="20221005T095025Z">
        <seg>- Si no hay parámetros, puedes omitir los paréntesis por completo; `\{{macroname()}}` y `\{{macroname}}` son idénticos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If you get errors, review your code carefully.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T095111Z" creationid="gitnacho" creationdate="20221005T095111Z">
        <seg>- Si obtiene errores, revisa tu código cuidadosamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If you try to call an exported wasm function that takes or returns an i64 type value, it currently throws an error because JavaScript currently has no precise way to represent an i64.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T090240Z" creationid="gitnacho" creationdate="20221006T090240Z">
        <seg>- Si intentas llamar a una función `wasm` exportada que toma o devuelve un valor de tipo i64, actualmente arroja un error porque JavaScript actualmente no tiene una forma precisa de representar un i64.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- If your service worker is active on a client being served with the `Service-Worker-Allowed` header, you can specify a list of max scopes for that worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T053157Z" creationid="gitnacho" creationdate="20220921T031504Z">
        <seg>- Si tu *service worker* está activo en un cliente al que se atiende con el encabezado `Service-Worker-Allowed`, puedes especificar una lista de alcances máximos para ese *worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Images/video frames drawn to a canvas using {{domxref("CanvasRenderingContext2D.drawImage()", "drawImage()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T213629Z">
        <seg>- Imágenes/fotogramas de video dibujados en un canvas usando {{DOMxRef("CanvasRenderingContext2D.drawImage()", "drawImage()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- In C++, we see this with virtual functions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T065139Z" creationid="gitnacho" creationdate="20221007T065139Z">
        <seg>- En C++, vemos esto con funciones virtuales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- In C/C++, we see this with function pointers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T065130Z" creationid="gitnacho" creationdate="20221007T065130Z">
        <seg>- En C/C++, vemos esto con punteros de función.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- In Firefox, Service Worker APIs are hidden and cannot be used when the user is in [private browsing mode](https://support.mozilla.org/en-US/kb/private-browsing-use-firefox-without-history).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T031602Z" creationid="gitnacho" creationdate="20220921T031602Z">
        <seg>- En Firefox, las APIs de *Service Worker* están ocultas y no se pueden usar cuando el usuario está en [modo de navegación privada](https://support.mozilla.org/es/kb/private-browsing-use-firefox-without-history).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- In JavaScript, we see this all the time: functions are first-class values.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T065124Z" creationid="gitnacho" creationdate="20221007T065124Z">
        <seg>- En JavaScript, vemos esto todo el tiempo: las funciones son valores de primera clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- In `(table 2 funcref)`, the 2 is the initial size of the table (meaning it will store two references) and `funcref` declares that the element type of these references are function reference.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072105Z" creationid="gitnacho" creationdate="20221007T072105Z">
        <seg>- En `(table 2 funcref)`, el 2 es el tamaño inicial de la tabla (lo cual significa que almacenará dos referencias) y `funcref` declara que el tipo de elemento de estas referencias es referencia de función.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- In the current iteration, there can be at most 1 return type, but [later this will be relaxed](https://github.com/WebAssembly/spec/blob/master/proposals/multi-value/Overview.md) to any number.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054354Z" creationid="gitnacho" creationdate="20221007T054354Z">
        <seg>- En la iteración actual, puede haber como máximo 1 tipo de retorno, pero [más adelante esto se relajará](https://github.com/WebAssembly/spec/blob/master/proposals/multi-value/Overview.md) a cualquier número.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Index</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T001251Z" creationid="gitnacho" creationdate="20220925T035309Z">
        <seg>- Index
  - Índice</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- IndexedDB</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043305Z" creationid="gitnacho" creationdate="20221004T043305Z">
        <seg>- IndexedDB</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Infrastructure</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T205213Z" creationid="gitnacho" creationdate="20221017T205213Z">
        <seg>- Infrastructure
  - infraestructura</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Inside the function, we add one value to the stack — whatever value is passed in as the parameter `$i`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072757Z" creationid="gitnacho" creationdate="20221007T072757Z">
        <seg>- Dentro de la función, agregamos un valor a la pila, cualquier valor que se pase como parámetro `$i`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Interactive examples — Our system for creating [live interactive examples](https://github.com/mdn/interactive-examples) that show the code running live but also allow you to change code on the fly to see what the effect is and easily copy the results.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204103Z" creationid="gitnacho" creationdate="20221005T204103Z">
        <seg>- Ejemplos interactivos: Nuestro sistema para crear [ejemplos interactivos en vivo](https://github.com/mdn/interactive-examples) que muestran el código ejecutándose en vivo pero también te permiten cambiar el código sobre la marcha para ver cuál es el efecto. y copiar fácilmente el resultado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Interface</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T094609Z" creationid="gitnacho" creationdate="20220922T203642Z">
        <seg>- Interface
  - Interfaz</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Internal links are **root-relative** so you should omit `https://developer.mozilla.org` at the beginning of the URL.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T220312Z" creationid="gitnacho" creationdate="20221005T220312Z">
        <seg>- Los enlaces internos son **relativos a la raíz**, por lo que debes omitir `https://developer.mozilla.org` al comienzo de la URL.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Intro</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T222643Z" creationid="gitnacho" creationdate="20221012T222643Z">
        <seg>- Intro</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Invade a user's privacy.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T203728Z" creationid="gitnacho" creationdate="20221018T203728Z">
        <seg>- Invadir la privacidad de un usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Invocations of the {{domxref("XMLHttpRequest")}} or [Fetch APIs](/en-US/docs/Web/API/Fetch_API), as discussed above.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T213333Z">
        <seg>- Invocaciones de {{DOMxRef("XMLHttpRequest")}} o [API `Fetch`](/es/docs/Web/API/Fetch_API), como se explicó anteriormente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- It is an error to include semicolons inside these blocks.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070101Z" creationid="gitnacho" creationdate="20221005T070101Z">
        <seg>- Es un error incluir punto y coma dentro de estos bloques.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- JavaScript</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T013606Z" creationid="gitnacho" creationdate="20220921T013606Z">
        <seg>- JavaScript</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- JavaScript is a high-level language, flexible and expressive enough to write web applications.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T005809Z" creationid="gitnacho" creationdate="20221003T005809Z">
        <seg>- JavaScript es un lenguaje de alto nivel, flexible y suficientemente expresivo para desarrollar aplicaciones web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- JavaScript variables and expressions can be inserted into the output stream with these blocks:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065940Z" creationid="gitnacho" creationdate="20221005T065940Z">
        <seg>- Las variables y expresiones de JavaScript se pueden insertar en el flujo de salida con estos bloques:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Keep secure — WebAssembly is specified to be run in a safe, sandboxed execution environment.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T004803Z" creationid="gitnacho" creationdate="20221003T004803Z">
        <seg>- Mantenerse seguro — WebAssembly se especifica para ejecutarse de manera segura en un entorno de ejecución aislado (*sandbox*).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Kuma</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T064421Z" creationid="gitnacho" creationdate="20221005T064421Z">
        <seg>- Kuma</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- KumaScript</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T064436Z" creationid="gitnacho" creationdate="20221005T064436Z">
        <seg>- KumaScript</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Landing</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T075350Z" creationid="gitnacho" creationdate="20221002T001810Z">
        <seg>- Landing
  - Aterrizaje</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Landing page</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094336Z" creationid="gitnacho" creationdate="20221007T094336Z">
        <seg>- Landing page
  - Página destino</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Learn</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T115013Z" creationid="gitnacho" creationdate="20221012T115013Z">
        <seg>- Learn
  - Aprende</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Libraries, frameworks, etc., to speed up writing common functionality.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T165223Z" creationid="gitnacho" creationdate="20221012T165223Z">
        <seg>- Librerías, frameworks, etc., para agilizar la escritura de funcionalidades comunes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- LinkError</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T073843Z" creationid="gitnacho" creationdate="20221008T073843Z">
        <seg>- LinkError</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Linux: [Firefox](https://www.mozilla.org/en-US/firefox/new/), [Chrome](https://www.google.com/chrome/), [Opera](https://www.opera.com/), [Brave](https://brave.com).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T164022Z" creationid="gitnacho" creationdate="20221012T164022Z">
        <seg>- Linux: [Firefox](https://www.mozilla.org/es-ES/firefox/new/), [Chrome](https://www.google.com/chrome/), [Opera](https://www.opera.com/), [Brave](https://brave.com).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Loading WebAssembly code, using the [`WebAssembly.instantiate()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiate) function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221009T003526Z" creationid="gitnacho" creationdate="20221009T003526Z">
        <seg>- Cargar código WebAssembly, usando la función [`WebAssembly.instantiate()`](/es/docs/WebAssembly/JavaScript_interface/instantiate).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Loop</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T054846Z" creationid="gitnacho" creationdate="20220921T054846Z">
        <seg>- Bucle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- MDN Meta</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T063206Z" creationid="gitnacho" creationdate="20221005T063206Z">
        <seg>- MDN Meta</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- MDN Meta
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T075741Z" creationid="gitnacho" creationdate="20221008T200252Z">
        <seg>- MDN Meta
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Macro names are case-sensitive, but some attempt is made to correct for common capitalization errors; you may use all lowercase even if the macro name uses caps within it, and you may capitalize a macro whose name normally starts with a lower-case letter.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T094952Z" creationid="gitnacho" creationdate="20221005T094952Z">
        <seg>- Los nombres de las macros distinguen entre mayúsculas y minúsculas, pero se intenta corregir los errores comunes de uso de mayúsculas; puedes usar todo en minúsculas incluso si el nombre de la macro usa mayúsculas, y puedes escribir en mayúscula una macro cuyo nombre normalmente comienza con una letra minúscula.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Macros start and end with `\{{` and `\}}` characters.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T084514Z" creationid="gitnacho" creationdate="20221005T065206Z">
        <seg>- Las macros comienzan y terminan con los caracteres `\{{ y \}}`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Main Loop</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T013608Z" creationid="gitnacho" creationdate="20220921T013608Z">
        <seg>- Main Loop</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Memory
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T202719Z" creationid="gitnacho" creationdate="20221007T095205Z">
        <seg>- Memory
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Method</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T233302Z" creationid="gitnacho" creationdate="20220921T224606Z">
        <seg>- Method
  - Método</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Misspelling of macro names or renamed macros.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T093055Z" creationid="gitnacho" creationdate="20221005T093055Z">
        <seg>- Errores ortográficos de nombres de macros o macros renombradas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Module</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043315Z" creationid="gitnacho" creationdate="20221004T043315Z">
        <seg>- Module
  - Módulo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- More tools besides!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T165316Z" creationid="gitnacho" creationdate="20221012T165316Z">
        <seg>- ¡Entre otras herramientas más!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Most text is treated as output and included in the output stream.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065925Z" creationid="gitnacho" creationdate="20221005T065925Z">
        <seg>- La mayor parte del texto se trata como salida y se incluye en el flujo de salida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Moving onto scripting</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T130217Z" creationid="gitnacho" creationdate="20221012T232029Z">
        <seg>- **Me interesa javascript:**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Mozilla
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T205722Z" creationid="gitnacho" creationdate="20221006T205722Z">
        <seg>- Mozilla
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Namespace</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221009T003216Z" creationid="gitnacho" creationdate="20221009T003216Z">
        <seg>- Namespace</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- NativeError</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T024833Z" creationid="gitnacho" creationdate="20221008T024833Z">
        <seg>- NativeError</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Navigation</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T000401Z" creationid="gitnacho" creationdate="20220922T203649Z">
        <seg>- Navigation
  - Navegación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- NavigationPreloadManager</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T203649Z" creationid="gitnacho" creationdate="20220922T203649Z">
        <seg>- NavigationPreloadManager</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- NeedsContent</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T064437Z" creationid="gitnacho" creationdate="20221005T064437Z">
        <seg>- NeedsContent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- NeedsExample</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T121904Z" creationid="gitnacho" creationdate="20221005T121904Z">
        <seg>- NeedsExample</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Next, we define a function that will be exported with the name `callByIndex`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072734Z" creationid="gitnacho" creationdate="20221007T072734Z">
        <seg>- A continuación, definimos una función que se exportará con el nombre `callByIndex`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- No {{domxref("ReadableStream")}} object is used in the request.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T221000Z">
        <seg>- No se usa ningún objeto {{DOMxRef("ReadableStream")}} en la solicitud.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Non-standard
browser-compat: http.headers.X-XSS-Protection
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T074037Z" creationid="gitnacho" creationdate="20221012T074037Z">
        <seg>- Non-standard
browser-compat: http.headers.X-XSS-Protection
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Non-standard
browser-compat: javascript.builtins.WebAssembly.Exception.stack
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T145819Z">
        <seg>- Non-standard
browser-compat: javascript.builtins.WebAssembly.Exception.stack
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Numeric</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T091416Z" creationid="gitnacho" creationdate="20221007T091416Z">
        <seg>- Numeric
  - Numérico</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Numeric parameters can be in quotes, or not.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T095035Z" creationid="gitnacho" creationdate="20221005T095035Z">
        <seg>- Los parámetros numéricos pueden estar entre comillas o no.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Object</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T111959Z" creationid="gitnacho" creationdate="20221006T100958Z">
        <seg>- Object
  - Objeto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Offline</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T220956Z" creationid="gitnacho" creationdate="20220922T203654Z">
        <seg>- Offline
  - Desconectado
  - Fuera de línea</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- One memory or table instance can be used by 0–N module instances — these instances all share the same address space, allowing [dynamic linking](https://github.com/WebAssembly/tool-conventions/blob/main/DynamicLinking.md).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T234217Z" creationid="gitnacho" creationdate="20221006T234217Z">
        <seg>- Una instancia de memoria o tabla puede ser utilizada por instancias de módulo 0-N: todas estas instancias comparten el mismo espacio de direcciones, lo que permite [vinculación dinámica](https://github.com/WebAssembly/tool-conventions/blob/main/DynamicLinking.Maryland).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- One module can have N Instances, in the same way that one function literal can produce N closure values.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T234054Z" creationid="gitnacho" creationdate="20221006T234054Z">
        <seg>- Un módulo puede tener N Instancias, de la misma manera que un literal de función puede producir N valores de cierre.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- One module instance can use 0–1 memory instances, which provide the "address space" of the instance.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T234117Z" creationid="gitnacho" creationdate="20221006T234117Z">
        <seg>- Una instancia de módulo puede usar 0–1 instancias de memoria, que proporcionan el "espacio de direcciones" de la instancia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- One module instance can use 0–1 table instances — this is the "function address space" of the instance, used to implement C function pointers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T234147Z" creationid="gitnacho" creationdate="20221006T234147Z">
        <seg>- Una instancia de módulo puede usar 0–1 instancias de tabla: este es el "espacio de direcciones de función" de la instancia, que se usa para implementar punteros de función C.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- One of the allowed methods:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220352Z" creationid="gitnacho" creationdate="20221011T220352Z">
        <seg>- Uno de los métodos permitidos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Other</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174806Z" creationid="gitnacho" creationdate="20221008T174806Z">
        <seg>- Otro</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Overview</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T133416Z" creationid="gitnacho" creationdate="20221002T061933Z">
        <seg>- Overview
  - Descripción</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Parameters are separated by commas.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T094959Z" creationid="gitnacho" creationdate="20221005T094959Z">
        <seg>- Los parámetros están separados por comas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Performance
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T084745Z" creationid="gitnacho" creationdate="20221012T084745Z">
        <seg>- Rendimiento
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Performance enhancements, for example pre-fetching resources that the user is likely to need in the near future, such as the next few pictures in a photo album.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T145514Z" creationid="gitnacho" creationdate="20221002T145514Z">
        <seg>- Mejoras en el rendimiento, por ejemplo, obtención previa de recursos que es probable que el usuario necesite en un futuro próximo, como las próximas imágenes de un álbum de fotos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Polyfill
browser-compat: javascript.builtins.Uint8ClampedArray
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221005T050200Z">
        <seg>- Polyfill
  - Polirelleno
browser-compat: javascript.builtins.Uint8ClampedArray
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Porting a C/C++ application with [Emscripten](https://emscripten.org/).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T085222Z" creationid="gitnacho" creationdate="20221003T080722Z">
        <seg>- Portar una aplicación C/C++ con [Emscripten](https://emscripten.org/).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Precede each example with an explanation of what the example does and why it's interesting or useful.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205046Z" creationid="gitnacho" creationdate="20221005T205046Z">
        <seg>- Precede cada ejemplo con una explicación de lo que hace el ejemplo y por qué es interesante o útil.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Programming Languages</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174737Z" creationid="gitnacho" creationdate="20221008T174737Z">
        <seg>- Lenguajes de programación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Promise</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T233620Z" creationid="gitnacho" creationdate="20221002T072416Z">
        <seg>- Promise
  - Promesa</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Property</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223042Z" creationid="gitnacho" creationdate="20221003T223042Z">
        <seg>- Property
  - Propiedad</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Providing facilities to handle errors that occur in WebAssembly via the [`WebAssembly.CompileError()`](/en-US/docs/WebAssembly/JavaScript_interface/CompileError)/[`WebAssembly.LinkError()`](/en-US/docs/WebAssembly/JavaScript_interface/LinkError)/[`WebAssembly.RuntimeError()`](/en-US/docs/WebAssembly/JavaScript_interface/RuntimeError) constructors.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221009T004744Z" creationid="gitnacho" creationdate="20221009T004744Z">
        <seg>- Proporcionar facilidades para manejar los errores que ocurren en WebAssembly a través de los constructores [`WebAssembly.CompileError()`](/es/docs/WebAssembly/JavaScript_interface/CompileError)/[`WebAssembly.LinkError()`](/es/docs/WebAssembly/JavaScript_interface/LinkError)/[`WebAssembly.RuntimeError()`](/es/docs/WebAssembly/JavaScript_interface/RuntimeError).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Reacting to a particular time &amp; date.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T145759Z" creationid="gitnacho" creationdate="20221002T145759Z">
        <seg>- Reaccionar a una hora y fecha en particular.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Receiving centralized updates to expensive-to-calculate data such as geolocation or gyroscope, so multiple pages can make use of one set of data.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T145331Z" creationid="gitnacho" creationdate="20221002T145331Z">
        <seg>- Recibir actualizaciones centralizadas de datos costosos de calcular, como la geolocalización o el giroscopio, para que varias páginas puedan utilizar un conjunto de datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Reference</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T232424Z" creationid="gitnacho" creationdate="20220921T224606Z">
        <seg>- Reference
  - Referencia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Reference
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T100015Z" creationid="gitnacho" creationdate="20221007T100015Z">
        <seg>- Reference
  - Referencia
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Reference
browser-compat: api.Event
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221011T200809Z">
        <seg>- Reference
  - Referencia
browser-compat: api.Event
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Reference
browser-compat: html.elements.canvas
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T202331Z" creationid="gitnacho" creationdate="20221002T061941Z">
        <seg>- Reference
browser-compat: html.elements.canvas
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Reference
browser-compat: javascript.builtins.Promise.resolve
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221002T072431Z">
        <seg>- Reference
browser-compat: javascript.builtins.Promise.resolve
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Responding to resource requests from other origins.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T145306Z" creationid="gitnacho" creationdate="20221002T145306Z">
        <seg>- Responder a solicitudes de recursos de otros orígenes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- RuntimeError</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T080109Z" creationid="gitnacho" creationdate="20221008T080109Z">
        <seg>- RuntimeError</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- S-expressions</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T044759Z" creationid="gitnacho" creationdate="20221007T044759Z">
        <seg>- S-expressions
  - expresiones-S</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- SVG
browser-compat: svg.elements.view
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221005T121905Z">
        <seg>- SVG
browser-compat: svg.elements.view
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Same-origin policy</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T211010Z" creationid="gitnacho" creationdate="20221011T211010Z">
        <seg>- Same-origin policy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Script</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T120236Z" creationid="gitnacho" creationdate="20221003T120236Z">
        <seg>- Script</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Secure contexts</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T203205Z" creationid="gitnacho" creationdate="20221018T203136Z">
        <seg>- Secure contexts
  - Contextos seguros</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Security</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T232432Z" creationid="gitnacho" creationdate="20221011T211010Z">
        <seg>- Security
  - Seguridad</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Security
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T205225Z" creationid="gitnacho" creationdate="20221017T205225Z">
        <seg>- Security
  - Seguridad
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Security
spec-urls: https://w3c.github.io/webappsec-secure-contexts/
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T203224Z" creationid="gitnacho" creationdate="20221018T203137Z">
        <seg>- Security
  - Seguridad
spec-urls: https://w3c.github.io/webappsec-secure-contexts/
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- See also the [grammar of the text format](https://github.com/WebAssembly/spec/blob/master/interpreter/README.md#s-expression-syntax) that is implemented by the spec interpreter.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T081215Z" creationid="gitnacho" creationdate="20221007T081215Z">
        <seg>- Consulta también la [gramática del formato de texto](https://github.com/WebAssembly/spec/blob/master/interpreter/README.md#s-expression-syntax) que implementa el intérprete de la especificación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Service</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T014612Z" creationid="gitnacho" creationdate="20220921T014612Z">
        <seg>- Service</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Service Workers</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T224607Z" creationid="gitnacho" creationdate="20220921T224607Z">
        <seg>- Service Workers</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Service Workers
browser-compat: api.NavigationPreloadManager
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20220922T203711Z">
        <seg>- Service Workers
browser-compat: api.NavigationPreloadManager
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Service worker API</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T224610Z" creationid="gitnacho" creationdate="20220921T224610Z">
        <seg>- Service worker API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- ServiceWorker</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T014613Z" creationid="gitnacho" creationdate="20220921T014613Z">
        <seg>- ServiceWorker</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- ServiceWorkerContainer</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T230413Z" creationid="gitnacho" creationdate="20221003T230413Z">
        <seg>- ServiceWorkerContainer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Setup</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T115044Z" creationid="gitnacho" creationdate="20221012T115044Z">
        <seg>- Setup
  - Configuración</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Shared Memory</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T231501Z" creationid="gitnacho" creationdate="20220922T231501Z">
        <seg>- Memoria compartida</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- SharedArrayBuffer</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T231503Z" creationid="gitnacho" creationdate="20220922T231503Z">
        <seg>- SharedArrayBuffer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Simple</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T060033Z" creationid="gitnacho" creationdate="20221019T060033Z">
        <seg>- Simple</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Site-wide
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221005T064438Z">
        <seg>- Site-wide
  - En todo el sitio
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Some browsers may throw a {{jsxref("RangeError")}}, as they prohibit compilation and instantiation of Wasm with large buffers on the UI thread.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T210306Z" creationid="gitnacho" creationdate="20221019T210306Z">
        <seg>- Algunos navegadores pueden lanzar un {{JSxRef("RangeError")}}, ya que prohíben la compilación y creación de instancias de Wasm con grandes búferes en el subproceso de la interfaz de usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Static examples are useful if you just need to show some code, and it isn't super important to show what the live result is.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204403Z" creationid="gitnacho" creationdate="20221005T204403Z">
        <seg>- Los ejemplos estáticos son útiles si solo necesitas mostrar algo de código, y no es muy importante mostrar cuál es el resultado en vivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Static examples — plain code blocks, possibly with a screenshot to statically show the result of such code if it were to be run.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204013Z" creationid="gitnacho" creationdate="20221005T204013Z">
        <seg>- Ejemplos estáticos: bloques de código sin formato, posiblemente con una captura de pantalla para mostrar estáticamente el resultado de dicho código si se ejecutara.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Storage
browser-compat: api.Cache
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221003T161936Z">
        <seg>- Storage
  - Almacenamiento
browser-compat: api.Cache
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Structures
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T202312Z" creationid="gitnacho" creationdate="20221005T093848Z">
        <seg>- Structures
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- TCP/IP</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T061826Z" creationid="gitnacho" creationdate="20221012T061826Z">
        <seg>- TCP/IP</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Tag</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T002406Z" creationid="gitnacho" creationdate="20221008T002406Z">
        <seg>- Tag
  - Etiqueta</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Tag
browser-compat: javascript.builtins.WebAssembly.Tag.Tag
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221020T070646Z">
        <seg>- Tag
browser-compat: javascript.builtins.WebAssembly.Tag.Tag
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The "Forget" button, available in Firefox's customization options, can be used to clear service workers and their caches ({{bug(1252998)}}).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042547Z" creationid="gitnacho" creationdate="20220921T042547Z">
        <seg>- El botón "Olvidar", disponible en las opciones de personalización de Firefox, se puede usar para borrar los *service workers* y sus cachés ({{bug(1252998)}}).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The **body** is just a linear list of low-level instructions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054225Z" creationid="gitnacho" creationdate="20221007T054225Z">
        <seg>- El **`body`** es solo una lista lineal de instrucciones de bajo nivel.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The **link text** must match the title of the page it's linking to.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T220259Z" creationid="gitnacho" creationdate="20221005T220259Z">
        <seg>- El **texto del enlace** debe coincidir con el título de la página a la que se enlaza.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The **locals** are like vars in JavaScript, but with explicit types declared.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054216Z" creationid="gitnacho" creationdate="20221007T054216Z">
        <seg>- Los **`locals`** son como `var`s en JavaScript, pero con tipos explícitos declarados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The **signature** declares what the function takes (parameters) and returns (return values).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054201Z" creationid="gitnacho" creationdate="20221007T054201Z">
        <seg>- La **`signature`** declara lo que la función toma (parámetros) y devuelve (valores devueltos).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The GFM `&lt;ul&gt;` contains any number of top-level GFM `&lt;li&gt;` elements.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182505Z" creationid="gitnacho" creationdate="20221008T182505Z">
        <seg>- El GFM `&lt;ul&gt;` contiene cualquier número de elementos GFM `&lt;li&gt;` de nivel superior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The GFM syntax only supports a subset of the features available in HTML.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184020Z" creationid="gitnacho" creationdate="20221008T184020Z">
        <seg>- La sintaxis GFM solo admite un subconjunto de las funciones disponibles en HTML.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The UI is more performance-intensive than other code examples; you shouldn't put more than one on each MDN article you apply them to.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T085431Z" creationid="gitnacho" creationdate="20221005T210039Z">
        <seg>- La interfaz de usuario requiere más rendimiento que otros ejemplos de código; no deberías poner más de uno en cada artículo de MDN al que lo apliques.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The URL of the wasm module you want to instantiate.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T052037Z" creationid="gitnacho" creationdate="20221004T052037Z">
        <seg>- La URL del módulo `wasm` del que deseas crear una instancia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The [Web Storage API](/en-US/docs/Web/API/Web_Storage_API) provides a mechanism for storing and retrieving smaller, data items consisting of a name and a corresponding value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T230433Z" creationid="gitnacho" creationdate="20221002T230433Z">
        <seg>- La [API de almacenamiento web](/es/docs/Web/API/Web_Storage_API) proporciona un mecanismo para almacenar y recuperar elementos de datos más pequeños que consisten en un nombre y un valor correspondiente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The [`WebAssembly.Global()`](/en-US/docs/WebAssembly/JavaScript_interface/Global) constructor is now supported, along with global variables in WebAssembly ({{bug(1464656)}}).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T105947Z" creationid="gitnacho" creationdate="20221007T105947Z">
        <seg>- El constructor [`WebAssembly.Global()`](/es/docs/WebAssembly/JavaScript_interface/Global) ahora es compatible, junto con las variables globales en WebAssembly ({{bug(1464656)}}).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The [`Worker()`](/en-US/docs/Web/API/Worker#worker) constructor now accepts [data URLs](/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T153702Z">
        <seg>- El constructor [`Worker()`](/es/docs/Web/API/Worker#worker) ahora acepta [URL de datos](/es/docs/Web/HTTP/Basics_of_HTTP/Data_URLs).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The `$throwException` function throws an exception using the `throw` instruction, taking the `$tagname` and the parameter argument.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023302Z" creationid="gitnacho" creationdate="20221008T023302Z">
        <seg>- La función `$throwException` lanza una excepción usando la instrucción `throw`, tomando el argumento `$tagname` y el parámetro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The `(i32.const 0)` value inside the `elem` section is an offset — this needs to be declared at the start of the section, and specifies at what index in the table function references start to be populated.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072259Z" creationid="gitnacho" creationdate="20221007T072259Z">
        <seg>- El valor `(i32.const 0)` dentro de la sección `elem` es un desplazamiento; esto se debe declarar al comienzo de la sección y especifica en qué índice de la tabla las referencias de función se comienzan a completar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The `(type $return_i32 (func (result i32)))` block specifies a type, with a reference name.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072701Z" creationid="gitnacho" creationdate="20221007T072701Z">
        <seg>- El bloque `(type $return_i32 (func (result i32)))` especifica un tipo, con un nombre de referencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The `&lt;li&gt;` element in the final nested `&lt;ul&gt;` will be parsed as a GFM `&lt;li&gt;` element and its internal contents will comprise the contents of the `&lt;dd&gt;`, except for the leading ": ", which will be discarded.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183131Z" creationid="gitnacho" creationdate="20221008T183131Z">
        <seg>- El elemento `&lt;li&gt;` en el `&lt;ul&gt;` final anidado se analizará como un elemento GFM `&lt;li&gt;` y su contenido interno comprenderá el contenido de `&lt;dd&gt;`, excepto por los ": " iniciales, que serán descartados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The `Atomics` object is always available.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T030645Z" creationid="gitnacho" creationdate="20220923T030645Z">
        <seg>- El objeto `Atomics` siempre está disponible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The `elem` section can list any subset of the functions in a module, in any order, allowing duplicates.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072209Z" creationid="gitnacho" creationdate="20221007T072209Z">
        <seg>- La sección `elem` puede listar cualquier subconjunto de las funciones en un módulo, en cualquier orden, permitiendo duplicados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The `type.parameters` contains an unsupported data type.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T071002Z" creationid="gitnacho" creationdate="20221020T071002Z">
        <seg>- `type.parameters` contiene un tipo de dato no compatible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The `type.parameters` property is not supplied.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T070949Z" creationid="gitnacho" creationdate="20221020T070949Z">
        <seg>- No se proporciona la propiedad `type.parameters`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The `type` parameter is not an object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T070944Z" creationid="gitnacho" creationdate="20221020T070944Z">
        <seg>- El parámetro `type` no es un objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The absence of a `(result)` means the function doesn't return anything.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054318Z" creationid="gitnacho" creationdate="20221007T054318Z">
        <seg>- La ausencia de un `(result)` significa que la función no devuelve nada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The binary wasm module code (`hello.wasm`)
- A JavaScript file containing glue code to translate between the native C functions, and JavaScript/wasm (`hello.js`)
- An HTML file to load, compile, and instantiate your wasm code, and display its output in the browser (`hello.html`)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105838Z" creationid="gitnacho" creationdate="20221003T105838Z">
        <seg>- El código del módulo binario `wasm` (`hello.wasm`)
- Un archivo JavaScript que contiene código de conexión para traducir entre las funciones nativas de C y JavaScript/`wasm` (`hello.js`)
- Un archivo HTML para cargar, compilar e instanciar tu código `wasm` y mostrar su salida en el navegador (`hello.html`)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The first part of the macro is the name of a template.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065222Z" creationid="gitnacho" creationdate="20221005T065222Z">
        <seg>- La primera parte de la macro es el nombre de una plantilla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The functions (`func`) sections are just like any other declared wasm functions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072127Z" creationid="gitnacho" creationdate="20221007T072127Z">
        <seg>- Las secciones de funciones (`func`) son como cualquier otra función `wasm` declarada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The interactive examples are great as readers can modify values on the fly — this is very valuable for learning.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204545Z" creationid="gitnacho" creationdate="20221005T204545Z">
        <seg>- Los ejemplos interactivos son excelentes, ya que los lectores pueden modificar los valores sobre la marcha; esto es muy valioso para el aprendizaje.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The interactive live examples are currently only set up to show CSS and JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205946Z" creationid="gitnacho" creationdate="20221005T205946Z">
        <seg>- Los ejemplos interactivos en vivo actualmente solo están configurados para mostrar CSS y JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The main thing that wasn't included is a comprehensive list of all the instructions that can occur in function bodies.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T081128Z" creationid="gitnacho" creationdate="20221007T081128Z">
        <seg>- Lo principal que no se incluyó es una lista completa de todas las instrucciones que pueden aparecer en el cuerpo de funciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The max scope for a service worker is the location of the worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T053153Z" creationid="gitnacho" creationdate="20220921T031411Z">
        <seg>- El alcance máximo para un *service worker* es la ubicación del *worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The module exports the function `run()` that throws an exception with the value "42".</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023315Z" creationid="gitnacho" creationdate="20221008T023315Z">
        <seg>- El módulo exporta la función `run()` que lanza una excepción con el valor "42".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The module imports a tag that is referred to as `$tagname` internally and that has a single `i32` parameter.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023238Z" creationid="gitnacho" creationdate="20221008T023238Z">
        <seg>- El módulo importa una etiqueta que internamente se denomina `$tagname` y que tiene un único parámetro `i32`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The only type/subtype combinations allowed for the {{Glossary("MIME type","media type")}} specified in the {{HTTPHeader("Content-Type")}} header are:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220852Z" creationid="gitnacho" creationdate="20221011T220852Z">
        <seg>- Las únicas combinaciones de tipo/subtipo permitidas para el {{Glossary("MIME type","media type")}} especificado en el encabezado {{HTTPHeader("Content-Type")}} son:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The primary overload takes the WebAssembly binary code, in the form of a [typed array](/en-US/docs/Web/JavaScript/Typed_arrays) or</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193116Z" creationid="gitnacho" creationdate="20221007T193116Z">
        <seg>- La sobrecarga principal toma el código binario de WebAssembly, en forma de [arreglo tipado](/es/docs/Web/JavaScript/Typed_arrays) o</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The secondary overload takes an already-compiled [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193226Z" creationid="gitnacho" creationdate="20221007T193226Z">
        <seg>- La sobrecarga secundaria toma un [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module) ya compilado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The server **must not** specify the "`*`" wildcard for the `Access-Control-Allow-Headers` response-header value, but must instead specify an explicit list of header names; for example, `Access-Control-Allow-Headers: X-PINGOTHER, Content-Type`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053227Z" creationid="gitnacho" creationdate="20221012T053227Z">
        <seg>- El servidor **no debe** especificar el comodín "`*`" para el valor del encabezado de respuesta `Access-Control-Allow-Headers`, sino que debe especificar una lista explícita de nombres de encabezado; por ejemplo, `Access-Control-Allow-Headers: X-PINGOTHER, Content-Type`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The server **must not** specify the "`*`" wildcard for the `Access-Control-Allow-Methods` response-header value, but must instead specify an explicit list of method names; for example, `Access-Control-Allow-Methods: POST, GET`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053250Z" creationid="gitnacho" creationdate="20221012T053250Z">
        <seg>- El servidor **no debe** especificar el comodín "`*`" para el valor del encabezado de respuesta `Access-Control-Allow-Methods`, sino que debe especificar una lista explícita de nombres de métodos; por ejemplo, `Access-Control-Allow-Methods: POST, GET`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The server **must not** specify the "`*`" wildcard for the `Access-Control-Allow-Origin` response-header value, but must instead specify an explicit origin; for example: `Access-Control-Allow-Origin: https://example.com`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T152837Z" creationid="gitnacho" creationdate="20221012T053158Z">
        <seg>- El servidor **no debe** especificar el comodín "`*`" para el valor del encabezado de respuesta `Access-Control-Allow-Origin`, sino que debe especificar un origen explícito; por ejemplo: `Acceso-Control-Permitir-Origin: https://ejemplo.com`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The service worker will only catch requests from clients under the service worker's scope.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T031355Z" creationid="gitnacho" creationdate="20220921T031355Z">
        <seg>- El *service worker* solo capturará las solicitudes de los clientes bajo el alcance del *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The top-level GFM `&lt;li&gt;` element will be parsed as a GFM `&lt;li&gt;` element</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182815Z" creationid="gitnacho" creationdate="20221008T182815Z">
        <seg>- El elemento GFM `&lt;li&gt;` de nivel superior se analizará como un elemento GFM `&lt;li&gt;`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- The {{domxref("Worker")}} interface it belongs to.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221007T121100Z">
        <seg>- La interfaz {{DOMxRef("Worker")}} a la que pertenece.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Their [length](/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length) property is the number of declared arguments in the wasm function signature.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T090159Z" creationid="gitnacho" creationdate="20221006T090159Z">
        <seg>- Su propiedad [`length`](/es/docs/Web/JavaScript/Reference/Global_Objects/Function/length) es el número de argumentos declarados en la firma de la función `wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Their [name](/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name) property is the `toString()` result of the function's index in the wasm module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T090220Z" creationid="gitnacho" creationdate="20221006T090220Z">
        <seg>- Su propiedad [`name`](/es/docs/Web/JavaScript/Reference/Global_Objects/Function/name) es el resultado `toString()` del índice de la función en el módulo `wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- They allow JavaScript to fetch and create the initial contents of memory before or concurrently with module compilation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T230035Z" creationid="gitnacho" creationdate="20221006T230035Z">
        <seg>- Permiten que JavaScript obtenga y cree el contenido inicial de la memoria antes o simultáneamente con la compilación del módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- They allow a single Memory object to be imported by multiple module instances, which is a critical building block for implementing dynamic linking in WebAssembly.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T230101Z" creationid="gitnacho" creationdate="20221006T230101Z">
        <seg>- Permiten que varias instancias de módulos importen un solo objeto `Memory`, lo cual es un componente fundamental para implementar enlaces dinámicos en WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- They are not intended for large code examples — the UI supports a range of fixed sizes, which only really work for short (say, 10–15 line) examples.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T085455Z" creationid="gitnacho" creationdate="20221005T210106Z">
        <seg>- No están pensados ​​para código de ejemplo grande: la interfaz de usuario admite una variedad de tamaños fijos, que solo funcionan para ejemplos cortos (por ejemplo, de 10 a 15 líneas).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- They are specialized for a particular technology — the UI for JavaScript is different from the UI for CSS, and they only illustrate one technology in isolation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205908Z" creationid="gitnacho" creationdate="20221005T205908Z">
        <seg>- Están especializados en una tecnología en particular: la interfaz de usuario para JavaScript es diferente de la interfaz de usuario para CSS y solo ilustran una tecnología de forma aislada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- This final nested `&lt;ul&gt;` must contain a single GFM `&lt;li&gt;` element, whose text content must start with ": " (a colon followed by a space).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182733Z" creationid="gitnacho" creationdate="20221008T182544Z">
        <seg>- Este `&lt;ul&gt;` anidado final debe contener un solo elemento GFM `&lt;li&gt;`, cuyo contenido de texto debe comenzar con ":" (dos puntos seguidos de un espacio).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- To add a callout, create a GFM blockquote whose first paragraph starts with `**Callout:**`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181220Z" creationid="gitnacho" creationdate="20221008T181220Z">
        <seg>- Para agregar una llamada, crea un bloque de cita GFM cuyo primer párrafo comience con `**Llamada:**`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- To add a note, create a GFM blockquote whose first paragraph starts with `**Note:**`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181145Z" creationid="gitnacho" creationdate="20221008T181145Z">
        <seg>- Para agregar una nota, crea un bloque de cita GFM cuyo primer párrafo comience con `**Nota:**`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- To add a warning, create a GFM blockquote whose first paragraph starts with `**Warning:**`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181152Z" creationid="gitnacho" creationdate="20221008T181152Z">
        <seg>- Para agregar una advertencia, crea un bloque de cita GFM cuyo primer párrafo comience con `**Advertencia:**`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Tools</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T115052Z" creationid="gitnacho" creationdate="20221012T115052Z">
        <seg>- Tools
  - Herramientas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Tools
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T202300Z" creationid="gitnacho" creationdate="20221005T063215Z">
        <seg>- Tools
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Traditional MDN "live samples" — A macro that takes plain code blocks, dynamically puts them into a document inside an {{htmlelement("iframe")}} element, and embeds it into the page to show the code running live.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204156Z" creationid="gitnacho" creationdate="20221005T204156Z">
        <seg>- "Muestras en vivo" tradicionales de MDN: Una macro que toma bloques de código sin formato, los coloca dinámicamente en un documento dentro de un elemento {{HTMLElement("iframe")}} y lo incrusta en la página para mostrar el código que se ejecuta en vivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Traditional live samples are useful if you want to show source code on a page, then show it running, and you're not that bothered about it being accessible as a standalone example.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204656Z" creationid="gitnacho" creationdate="20221005T204656Z">
        <seg>- Las muestras en vivo tradicionales son útiles si deseas mostrar el código fuente en una página, luego mostrarlo en ejecución, y no te preocupa que sea accesible como un ejemplo independiente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- TypedArray</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050158Z" creationid="gitnacho" creationdate="20221005T050158Z">
        <seg>- TypedArray</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- TypedArrays</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050159Z" creationid="gitnacho" creationdate="20221005T050159Z">
        <seg>- TypedArrays</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- TypedArrays
browser-compat: javascript.builtins.SharedArrayBuffer
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T231506Z" creationid="gitnacho" creationdate="20220922T231506Z">
        <seg>- TypedArrays
browser-compat: javascript.builtins.SharedArrayBuffer
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Types of events available: [Event reference](/en-US/docs/Web/Events)
- [Comparison of Event Targets](/en-US/docs/Web/API/Event/Comparison_of_Event_Targets) (`target` vs `currentTarget` vs `relatedTarget` vs `originalTarget`)
- [Creating and triggering custom events](/en-US/docs/Web/Events/Creating_and_triggering_events)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T210510Z" creationid="gitnacho" creationdate="20221011T205226Z">
        <seg>- Tipos de eventos disponibles: [Referencia de `Event`](/es/docs/Web/Events)
- [Comparación de destino de `Event`](/es/docs/Web/API/Event/Comparison_of_Event_Targets) (`target` vs `currentTarget` vs `relatedTarget` vs `originalTarget`)
- [Creación y activación de eventos personalizados](/es/docs/Web/Events/Creating_and_triggering_events)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Uint8ClampedArray</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050155Z" creationid="gitnacho" creationdate="20221005T050155Z">
        <seg>- Uint8ClampedArray</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Unless the two headers mentioned above are set, the various `postMessage()` APIs will throw for `SharedArrayBuffer` objects.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T030807Z" creationid="gitnacho" creationdate="20220923T030807Z">
        <seg>- A menos que se establezcan los dos encabezados mencionados anteriormente, las distintas APIs de `postMessage()` se lanzarán para los objetos `SharedArrayBuffer`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Use of curly braces without intending to call a macro.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T092526Z" creationid="gitnacho" creationdate="20221005T092202Z">
        <seg>- El uso de llaves sin intención de llamar a una macro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Using [AssemblyScript](https://www.assemblyscript.org/) which looks similar to TypeScript and compiles to WebAssembly binary.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T080803Z" creationid="gitnacho" creationdate="20221003T080803Z">
        <seg>- Usar [AssemblyScript](https://assemblyscript.org/) que se parece a TypeScript y se compila a un binario de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- We support a special kind of table called a "properties table", which has its own CSS class and is therefore always HTML.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184338Z" creationid="gitnacho" creationdate="20221008T184338Z">
        <seg>- Admitimos un tipo especial de tabla llamada "tabla de propiedades", que tiene su propia clase CSS y, por lo tanto, siempre es HTML.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- We've also specified `--shell-file html_template/shell_minimal.html` — this provides the path to the HTML template you want to use to create the HTML you will run your example through.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111029Z" creationid="gitnacho" creationdate="20221003T111029Z">
        <seg>- También especificamos `--shell-file html_template/shell_minimal.html` — esto proporciona la ruta a la plantilla HTML que deseas usar para crear el HTML con el que ejecutarás tu ejemplo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- We've specified `-o hello2.html`, meaning that the compiler will still output the JavaScript glue code and `.html`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T110953Z" creationid="gitnacho" creationdate="20221003T110853Z">
        <seg>- Hemos especificado `-o hello2.html`, lo cual significa que el compilador seguirá generando el código "pegamento" de JavaScript y `.html`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Web</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T120236Z" creationid="gitnacho" creationdate="20221003T120236Z">
        <seg>- Web</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Web
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T104058Z" creationid="gitnacho" creationdate="20221002T001812Z">
        <seg>- Web
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Web Animations</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T092436Z" creationid="gitnacho" creationdate="20221006T092436Z">
        <seg>- Web Animations
  - Animaciones Web</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Web Development</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T061827Z" creationid="gitnacho" creationdate="20221012T061827Z">
        <seg>- Web Development</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Web Fonts (for cross-domain font usage in `@font-face` within CSS), [so that servers can deploy TrueType fonts that can only be loaded cross-origin and used by web sites that are permitted to do so.](https://www.w3.org/TR/css-fonts-3/#font-fetching-requirements)
- [WebGL textures](/en-US/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T213428Z" creationid="gitnacho" creationdate="20221011T213428Z">
        <seg>- Fuentes web (para el uso de fuentes entre dominios en `@font-face` dentro de CSS), [para que los servidores puedan implementar fuentes TrueType que solo se pueden cargar en un origen cruzado y usar en sitios web que tienen permiso para hacerlo]. (https://www.w3.org/TR/css-fonts-3/#font-fetching-requirements)
- [Texturas WebGL](/es/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Web Standards
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T070724Z" creationid="gitnacho" creationdate="20221018T223204Z">
        <seg>- Web Standards
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Web Workers</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115207Z" creationid="gitnacho" creationdate="20221007T115207Z">
        <seg>- Web Workers</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T003602Z" creationid="gitnacho" creationdate="20221003T003602Z">
        <seg>- WebAssembly</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221009T003224Z">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.CompileError
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221008T025303Z">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.CompileError
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.CompileError.CompileError
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T134657Z">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.CompileError.CompileError
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Exception
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221008T022723Z">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Exception
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Exception.Exception
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T135819Z">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Exception.Exception
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Global
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221007T104347Z">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Global
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Global.Global
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221007T110153Z">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Global.Global
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Instance
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221005T223405Z">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Instance
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Instance.Instance
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T205701Z">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Instance.Instance
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.LinkError
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221008T075056Z">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.LinkError
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.LinkError.LinkError
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T211405Z">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.LinkError.LinkError
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Memory
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221007T234700Z">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Memory
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Memory.Memory
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T214957Z">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Memory.Memory
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Module
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221007T111350Z">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Module
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Module.Module
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T231028Z">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Module.Module
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.RuntimeError
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221008T080110Z">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.RuntimeError
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.RuntimeError.RuntimeError
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T232201Z">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.RuntimeError.RuntimeError
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Table.Table
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T235907Z">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Table.Table
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Tag
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221008T002725Z">
        <seg>- WebAssembly
browser-compat: javascript.builtins.WebAssembly.Tag
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebAssembly is a low-level assembly-like language with a compact binary format that runs with near-native performance and provides languages with low-level memory models such as C++ and Rust with a compilation target so that they can run on the web.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T084451Z" creationid="gitnacho" creationdate="20221003T005946Z">
        <seg>- WebAssembly es un lenguaje de bajo nivel similar a ensamblador, con un compacto formato binario que se ejecuta con rendimiento casi nativo, y provee a lenguajes con esquemas de memoria de bajo nivel como C++ y Rust, con un destino de compilación que también pueden ejecutar en la web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebGL
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T085804Z" creationid="gitnacho" creationdate="20221002T085804Z">
        <seg>- WebGL
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebMechanics</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T115053Z" creationid="gitnacho" creationdate="20221012T115053Z">
        <seg>- WebMechanics</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- WebMechanics
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T211405Z" creationid="gitnacho" creationdate="20221017T211405Z">
        <seg>- WebMechanics
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- When placing samples on a page, try to ensure that all of the features or options of the API or concept you're writing about are covered.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205009Z" creationid="gitnacho" creationdate="20221005T205009Z">
        <seg>- Al colocar muestras en una página, intenta asegurarte de que se cubran todas las características u opciones de la API o el concepto sobre el que estás escribiendo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- When possible, break large examples into smaller pieces.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205107Z" creationid="gitnacho" creationdate="20221005T205107Z">
        <seg>- Cuando sea posible, divide los ejemplos grandes en partes más pequeñas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- When testing you can get around the HTTPS restriction by checking the "Enable Service Workers over HTTP (when toolbox is open)" option in the [Firefox Developer Tools settings](https://firefox-source-docs.mozilla.org/devtools-user/settings/index.html).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042525Z" creationid="gitnacho" creationdate="20220921T042525Z">
        <seg>- Al realizar pruebas, puedes sortear la restricción de HTTPS marcando la opción "Habilitar *service worker* a través de HTTP (cuando la caja de herramientas está abierta)" en la [Configuración de herramientas de desarrollo de Firefox](https://firefox-source-docs.mozilla.org/devtools-user/settings/index.html).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Windows: [Firefox](https://www.mozilla.org/en-US/firefox/new/), [Chrome](https://www.google.com/chrome/), [Opera](https://www.opera.com/), [Microsoft Edge](https://www.microsoft.com/edge), [Brave](https://brave.com) (Windows 10 comes with Edge by default; otherwise, you should install an alternative browser).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T164116Z" creationid="gitnacho" creationdate="20221012T164116Z">
        <seg>- Windows: [Firefox](https://www.mozilla.org/es-ES/firefox/new/), [Chrome](https://www.google.com/chrome/), [Opera](https://www.opera.com/), [Microsoft Edge](https://www.microsoft.com/edge), [Brave](https://brave.com) (Windows 10 viene con Edge de manera predeterminada; de lo contrario, debes instalar un navegador alterno).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Within a template, the parameters passed in from the macro are available as the variables `$0`, `$1`, `$2`, and so on.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065859Z" creationid="gitnacho" creationdate="20221005T065859Z">
        <seg>- Dentro de una plantilla, los parámetros pasados ​​desde la macro están disponibles como variables `$0`, `$1`, `$2`, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Worker</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115212Z" creationid="gitnacho" creationdate="20221007T115212Z">
        <seg>- Worker</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Workers</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T014614Z" creationid="gitnacho" creationdate="20220921T014614Z">
        <seg>- Workers</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Workers
browser-compat: api.ServiceWorker
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221003T211823Z">
        <seg>- Workers
browser-compat: api.ServiceWorker
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Workers
spec-urls: https://w3c.github.io/ServiceWorker/
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T133422Z" creationid="gitnacho" creationdate="20221002T133422Z">
        <seg>- Workers
spec-urls: https://w3c.github.io/ServiceWorker/
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Writing a Rust application and targeting WebAssembly as its output.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T080742Z" creationid="gitnacho" creationdate="20221003T080742Z">
        <seg>- Escribir una aplicación en Rust y generar su salida como WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Writing or generating WebAssembly directly at the assembly level.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T080734Z" creationid="gitnacho" creationdate="20221003T080734Z">
        <seg>- Escribir o generar WebAssembly directamente a nivel de ensamblador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- XMLHttpRequest</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T070835Z" creationid="gitnacho" creationdate="20221004T070835Z">
        <seg>- XMLHttpRequest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- XSS</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T074018Z" creationid="gitnacho" creationdate="20221012T074018Z">
        <seg>- XSS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Yari</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T075644Z" creationid="gitnacho" creationdate="20221019T075644Z">
        <seg>- Yari</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- You can navigate to [`about:debugging`](https://firefox-source-docs.mozilla.org/devtools-user/about_colon_debugging/index.html) to see what SWs are registered and update/remove them.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042422Z" creationid="gitnacho" creationdate="20220921T042422Z">
        <seg>- Puedes navegar a [`about:debugging`](https://firefox-source-docs.mozilla.org/devtools-user/about_colon_debugging/index.html) para ver qué &lt;abbr title="Service Workers"&gt;SW&lt;/abbr&gt;s están registrados y actualizarlos/eliminarlos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- You obviously need to get a suitable code sample onto the [MDN GitHub organization](https://github.com/mdn/) first.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T115524Z" creationid="gitnacho" creationdate="20221005T212406Z">
        <seg>- Obviamente, primero debes obtener una muestra de código adecuada en la [organización MDN GitHub](https://github.com/mdn/).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- Your code sample needs to be suitable to show what you are trying to demonstrate — it should contain one simple example that does one thing well, should have no offensive content in it, and should follow the MDN [Code sample guidelines](/en-US/docs/MDN/Writing_guidelines/Writing_style_guide/Code_style_guide).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T212617Z" creationid="gitnacho" creationdate="20221005T212617Z">
        <seg>- Tu muestra de código debe ser adecuada para mostrar lo que estás tratando de demostrar: debe contener un ejemplo simple que haga una cosa bien, no debe tener contenido ofensivo y debe seguir las [Pautas de muestra de código](/es/docs/MDN/Writing_guidelines/Writing_style_guide/Code_style_guide) de MDN .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [A typical HTTP session](/en-US/docs/Web/HTTP/Session)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064003Z" creationid="gitnacho" creationdate="20221012T064003Z">
        <seg>- [La típica sesión HTTP](/es/docs/Web/HTTP/Session)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Accessibility — make the web usable by everyone](/en-US/docs/Learn/Accessibility)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131335Z" creationid="gitnacho" creationdate="20221020T131335Z">
        <seg>- [Accesibilidad — hace que la web sea utilizable por todos](/es/docs/Learn/Accessibility)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Accessibility](/en-US/docs/Web/Accessibility)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T093643Z" creationid="gitnacho" creationdate="20221002T093451Z">
        <seg>- [Accesibilidad](/es/docs/Web/Accessibility)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Aria attributes](/en-US/docs/Web/SVG/Attribute#aria_attributes)
- [Core attributes](/en-US/docs/Web/SVG/Attribute#core_attributes)
- [Global event attributes](/en-US/docs/Web/SVG/Attribute#global_event_attributes)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T174420Z" creationid="gitnacho" creationdate="20221005T122045Z">
        <seg>- [Atributos Aria](/es/docs/Web/SVG/Attribute#aria_attributes)
- [Atributos Core](/es/docs/Web/SVG/Attribute#core_attributes)
- [Atributos de eventos globales](/es/docs/Web/SVG/Attribute#global_event_attributes)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Async Clipboard API](/en-US/docs/Web/API/Clipboard)
- [Background Sync](https://wicg.github.io/BackgroundSync/spec/) (see {{domxref("SyncManager")}}, for example)
- [`Cache-Control: immutable`](/en-US/docs/Web/HTTP/Headers/Cache-Control)
- [Credential Management API](/en-US/docs/Web/API/Credential_Management_API)
- [Device Orientation / Device Motion](/en-US/docs/Web/API/Device_orientation_events/Detecting_device_orientation)
- [EyeDropper API](/en-US/docs/Web/API/EyeDropper)
- [Encrypted Media Extensions](/en-US/docs/Web/API/Encrypted_Media_Extensions_API)
- [Generic Sensor API](https://w3c.github.io/sensors/)
- {{domxref("Geolocation")}}
- [Notifications API](/en-US/docs/Web/API/Notifications_API)
- [Payment Request API](/en-US/docs/Web/API/Payment_Request_API)
- [Presentation API](/en-US/docs/Web/API/Presentation_API)
- [Push API](/en-US/docs/Web/API/Push_API)
- [Reporting API](/en-US/docs/Web/API/Reporting_API)
- [Service Workers](/en-US/docs/Web/API/Service_Worker_API)
- [Storage API](/en-US/docs/Web/API/Storage_API)
- [Web Authentication API](/en-US/docs/Web/API/Web_Authentication_API)
- [Web Bluetooth](/en-US/docs/Web/API/Web_Bluetooth_API)
- [Web MIDI](/en-US/docs/Web/API/Web_MIDI_API)
- [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API)
- [Web Share API](/en-US/docs/Web/API/Web_Share_API)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T233750Z" creationid="gitnacho" creationdate="20221018T233140Z">
        <seg>- [API del portapapeles asíncrono — `Clipboard`](/es/docs/Web/API/Clipboard)
- [Sincronizar en segundo plano](https://wicg.github.io/BackgroundSync/spec/) (consulta {{DOMxRef("SyncManager")}}, por ejemplo)
- [`Cache-Control: inmutable`](/es/docs/Web/HTTP/Headers/Cache-Control)
- [API de Gestión de Credenciales](/es/docs/Web/API/Credential_Management_API)
- [Orientación del dispositivo / Movimiento del dispositivo](/es/docs/Web/API/Device_orientation_events/Detecting_device_orientation)
- [API EyeDropper](/es/docs/Web/API/EyeDropper)
- [Extensiones de medios cifrados](/es/docs/Web/API/Encrypted_Media_Extensions_API)
- [API de sensor genérico](https://w3c.github.io/sensors/)
- {{DOMxRef("Geolocation", "Geolocalización")}}
- [API de notificaciones](/es/docs/Web/API/Notifications_API)
- [API de Solicitud de Pago](/es/docs/Web/API/Payment_Request_API)
- [API de presentación](/es/docs/Web/API/Presentation_API)
- [API Push](/es/docs/Web/API/Push_API)
- [API de informes](/es/docs/Web/API/Reporting_API)
- [Trabajadores de servicios](/es/docs/Web/API/Service_Worker_API)
- [API de almacenamiento](/es/docs/Web/API/Storage_API)
- [API de autenticación web](/es/docs/Web/API/Web_Authentication_API)
- [WebBluetooth](/es/docs/Web/API/Web_Bluetooth_API)
- [Web MIDI](/es/docs/Web/API/Web_MIDI_API)
- [Web Cripto API](/es/docs/Web/API/Web_Crypto_API)
- [API Web Share](/es/docs/Web/API/Web_Share_API)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Background synchronization](https://github.com/WICG/background-sync): Start up a service worker even when no users are at the site, so caches can be updated, etc.
- [Reacting to push messages](/en-US/docs/Web/API/Push_API): Start up a service worker to send users a message to tell them new content is available.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T145744Z">
        <seg>- [Sincronización en segundo plano](https://github.com/WICG/background-sync): inicia un *service worker* incluso cuando no haya usuarios en el sitio, para que las cachés se puedan actualizar, etc.
- [Reacción a mensajes push](/es/docs/Web/API/Push_API): Inicia un *service worker* para enviar a los usuarios un mensaje para informarles que hay nuevo contenido disponible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Building up a basic demo with Three.js](/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js)
- [Building up a basic demo with Babylon.js](/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js)
- [Building up a basic demo with PlayCanvas](/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas)
- [Building up a basic demo with A-Frame](/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T082341Z">
        <seg>- [Crear una demo básica con Three.js](/es/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js)
- [Crear una demo básica con Babylon.js](/es/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js)
- [Crear una demo básica con PlayCanvas](/es/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas)
- [Crear una demo básica con A-Frame](/es/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Building up a basic demo with Three.js](/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js)
- [Building up a basic demo with PlayCanvas](/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas)
- [Building up a basic demo with Babylon.js](/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js)
- [Building up a basic demo with A-Frame](/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T083220Z">
        <seg>- [Crear una demo básica con Three.js](/es/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js)
- [Crear una demo básica con PlayCanvas](/es/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas)
- [Crear una demo básica con Babylon.js](/es/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js)
- [Crear una demo básica con A-Frame](/es/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [CORS errors](/en-US/docs/Web/HTTP/CORS/Errors)
- [Enable CORS: I want to add CORS support to my server](https://enable-cors.org/server.html)
- {{domxref("XMLHttpRequest")}}
- [Fetch API](/en-US/docs/Web/API/Fetch_API)
- [Will it CORS?](https://httptoolkit.tech/will-it-cors/) - an interactive CORS explainer &amp; generator
- [How to run Chrome browser without CORS](https://alfilatov.com/posts/run-chrome-without-cors/)
- [Using CORS with All (Modern) Browsers](https://www.telerik.com/blogs/using-cors-with-all-modern-browsers)
- [Stack Overflow answer with "how to" info for dealing with common problems](https://stackoverflow.com/questions/43871637/no-access-control-allow-origin-header-is-present-on-the-requested-resource-whe/43881141#43881141):</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221012T061113Z">
        <seg>- [Errores CORS](/es/docs/Web/HTTP/CORS/Errors)
- [Habilitar CORS: quiero agregar compatibilidad con CORS a mi servidor](https://enable-cors.org/server.html)
- {{DOMxRef("XMLHttpRequest")}}
- [Obtener API](/es/docs/Web/API/Fetch_API)
- [¿Será CORS?](https://httptoolkit.tech/will-it-cors/) - Una explicación y generador CORS interactivo.
- [Cómo ejecutar el navegador Chrome sin CORS](https://alfilatov.com/posts/run-chrome-without-cors/)
- [Uso de CORS con todos los navegadores (modernos)](https://www.telerik.com/blogs/using-cors-with-all-modern-browsers)
- [Respuesta de desbordamiento de pila con información de "cómo hacer" para tratar problemas comunes](https://stackoverflow.com/questions/43871637/no-access-control-allow-origin-header-is-present-on-the-requested-resource-whe/43881141#43881141):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [CSP directives](/en-US/docs/Web/HTTP/Headers/Content-Security-Policy)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064636Z" creationid="gitnacho" creationdate="20221012T064636Z">
        <seg>- [Directivas CSP](/es/docs/Web/HTTP/Headers/Content-Security-Policy)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [CSS Shapes from images.](/en-US/docs/Web/CSS/CSS_Shapes/Shapes_From_Images)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T213641Z" creationid="gitnacho" creationdate="20221011T213641Z">
        <seg>- [Formas CSS de imágenes.](/es/docs/Web/CSS/CSS_Shapes/Shapes_From_Images)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [CSS basics](/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T043903Z" creationid="gitnacho" creationdate="20220925T043803Z">
        <seg>- [Conceptos básicos de CSS](/es/docs/Learn/Getting_started_with_the_web/CSS_basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [CSS first steps](/en-US/docs/Learn/CSS/First_steps) (10–15 hour read/exercises)
- [CSS building blocks](/en-US/docs/Learn/CSS/Building_blocks) (35–45 hour read/exercises)
- [CSS styling text](/en-US/docs/Learn/CSS/Styling_text) (15–20 hour read/exercises)
- [CSS layout](/en-US/docs/Learn/CSS/CSS_layout) (30–40 hour read/exercises)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224705Z" creationid="gitnacho" creationdate="20221018T224705Z">
        <seg>- [Primeros pasos en CSS](/es/docs/Learn/CSS/First_steps) (10 a 15 horas de lectura/ejercicios)
- [Bloques de construcción CSS](/es/docs/Learn/CSS/Building_blocks) (35 a 45 horas de lectura/ejercicios)
- [Estilizar texto con CSS](/es/docs/Learn/CSS/Styling_text) (15 a 20 horas de lectura/ejercicios)
- [Diseño CSS](/es/docs/Learn/CSS/CSS_layout) (30 a 40 horas de lectura/ejercicios)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [CSS layout cookbook](/en-US/docs/Web/CSS/Layout_cookbook)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224732Z" creationid="gitnacho" creationdate="20221018T224732Z">
        <seg>- [Libro de recetas de diseño CSS](/es/docs/Web/CSS/Layout_cookbook)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [CSS — Styling the web](/en-US/docs/Learn/CSS)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131014Z" creationid="gitnacho" creationdate="20221020T131014Z">
        <seg>- [CSS — Estilizar la web](/es/docs/Learn/CSS)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [CSS](/en-US/docs/Web/CSS)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T200453Z" creationid="gitnacho" creationdate="20221002T094429Z">
        <seg>- [CSS](/es/docs/Web/CSS)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Calling compiled C functions from JavaScript using ccall/cwrap](https://emscripten.org/docs/porting/connecting_cpp_and_javascript/Interacting-with-code.html#calling-compiled-c-functions-from-javascript-using-ccall-cwrap)
- [Why do functions in my C/C++ source code vanish when I compile to JavaScript, and/or I get No functions to process?](https://emscripten.org/docs/getting_started/FAQ.html#why-do-functions-in-my-c-c-source-code-vanish-when-i-compile-to-javascript-and-or-i-get-no-functions-to-process)
- [WebAssembly on Mozilla Research](https://research.mozilla.org/)
- [Compiling an Existing C Module to WebAssembly](/en-US/docs/WebAssembly/existing_C_to_wasm)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T093253Z">
        <seg>- [Llamar a funciones C compiladas desde JavaScript usando ccall/cwrap](https://emscripten.org/docs/porting/connecting_cpp_and_javascript/Interacting-with-code.html#calling-compiled-c-functions-from-javascript-using-ccall-cwrap)
- [¿Por qué las funciones en mi código fuente C/C++ desaparecen cuando compilo en JavaScript y/o no obtengo funciones para procesar?](https://emscripten.org/docs/getting_started/FAQ.html#why-do-functions-in-my-c-c-source-code-vanish-when-i-compile-to-javascript-and-or-i-get-no-functions-to-process)
- [La investigación de WebAssembly en Mozilla](https://research.mozilla.org/)
- [Compilar un módulo C existente a WebAssembly](/es/docs/WebAssembly/existing_C_to_wasm)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Chrome DevTools](https://developer.chrome.com/docs/devtools/)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T095658Z" creationid="gitnacho" creationdate="20221002T095658Z">
        <seg>- [Chrome DevTools](https://developer.chrome.com/docs/devtools/)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Client Hints headers](/en-US/docs/Web/HTTP/Headers#client_hints)
- [`Vary` HTTP Header](/en-US/docs/Web/HTTP/Headers/Vary)
- [Client Hints Infrastructure](https://wicg.github.io/client-hints-infrastructure/)
- [User Agent Client Hints API](/en-US/docs/Web/API/User-Agent_Client_Hints_API)
- [Improving user privacy and developer experience with User-Agent Client Hints](https://web.dev/user-agent-client-hints/) (web.dev)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092901Z" creationid="gitnacho" creationdate="20221012T092901Z">
        <seg>- [Encabezados de sugerencias de cliente](/es/docs/Web/HTTP/Headers#client_hints)
- [Encabezado HTTP `Vary`](/es/docs/Web/HTTP/Headers/Vary)
- [Infraestructura de sugerencias de cliente](https://wicg.github.io/client-hints-infrastructure/)
- [API de sugerencias de cliente de agente de usuario](/es/docs/Web/API/User-Agent_Client_Hints_API)
- [Mejora de la privacidad del usuario y la experiencia del desarrollador con sugerencias de cliente de agente de usuario](https://web.dev/user-agent-client-hints/) (web.dev)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Community guidelines](/en-US/docs/MDN/Community)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T200533Z" creationid="gitnacho" creationdate="20221008T200533Z">
        <seg>- [Directrices de la comunidad](/es/docs/MDN/Community)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Compiling a New C/C++ Module to WebAssembly](/en-US/docs/WebAssembly/C_to_wasm)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T094812Z">
        <seg>- [Compilar un nuevo módulo de C/C++ a WebAssembly](/es/docs/WebAssembly/C_to_wasm)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Compiling an Existing C Module to WebAssembly](/en-US/docs/WebAssembly/existing_C_to_wasm)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T095005Z">
        <seg>- [Compilar un módulo existente de C a WebAssembly](/es/docs/WebAssembly/existing_C_to_wasm)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Compiling from C/C++ to WebAssembly](/en-US/docs/WebAssembly/C_to_wasm) — tools like Binaryen/Emscripten both compile your source code to wasm, and create the API code needed to run the module in a JavaScript context.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T183235Z" creationid="gitnacho" creationdate="20221007T183235Z">
        <seg>- [Compilar de C/C++ a WebAssembly](/es/docs/WebAssembly/C_to_wasm): herramientas como Binaryen/Emscripten compilan tu código fuente en `wasm` y crean el código API necesario para ejecutar el módulo en un contexto de JavaScript .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Compiling from Rust to WebAssembly](/en-US/docs/WebAssembly/Rust_to_wasm)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T095151Z">
        <seg>- [Compilar de Rust a WebAssembly](/es/docs/WebAssembly/Rust_to_wasm)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Connection management in HTTP/1.x](/en-US/docs/Web/HTTP/Connection_management_in_HTTP_1.x)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064034Z" creationid="gitnacho" creationdate="20221012T064034Z">
        <seg>- [Manejo de conexión en HTTP/1.X](/es/docs/Web/HTTP/Connection_management_in_HTTP_1.x)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Converting WebAssembly text format to wasm](/en-US/docs/WebAssembly/Text_format_to_wasm)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T100416Z">
        <seg>- [Convertir el formato de texto WebAssembly a `wasm`](/es/docs/WebAssembly/Text_format_to_wasm)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Cross-Origin Resource Sharing (CORS)](/en-US/docs/Web/HTTP/CORS)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T063343Z" creationid="gitnacho" creationdate="20221012T063343Z">
        <seg>- [Intercambio de recursos de origen cruzado (CORS)](/es/docs/Web/HTTP/CORS)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Cross-Origin Resource Sharing (CORS)](/en-US/docs/Web/HTTP/CORS) on MDN
- [Cross-origin resource sharing](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing) on Wikipedia
- [Fetch specification](https://fetch.spec.whatwg.org)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210635Z" creationid="gitnacho" creationdate="20221017T210635Z">
        <seg>- [Intercambio de recursos de origen cruzado (CORS)](/es/docs/Web/HTTP/CORS) en MDN
- [Intercambio de recursos de origen cruzado](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing) en Wikipedia
- [Obtén la especificación](https://fetch.spec.whatwg.org)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Cross-browser testing](/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing) (25–30 hour read/exercises)
- [Accessibility](/en-US/docs/Learn/Accessibility) (20–25 hour read/exercises)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T225231Z" creationid="gitnacho" creationdate="20221018T225231Z">
        <seg>- [Pruebas en varios navegadores](/es/docs/Learn/Tools_and_testing/Cross_browser_testing) (25 a 30 horas de lectura/ejercicios)
- [Accesibilidad](/es/docs/Learn/Accessibility) (20 a 25 horas de lectura/ejercicios)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Dealing with files](/en-US/docs/Learn/Getting_started_with_the_web/Dealing_with_files)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T043347Z" creationid="gitnacho" creationdate="20220925T043120Z">
        <seg>- [Manejo de archivos](/es/docs/Learn/Getting_started_with_the_web/Dealing_with_files)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Edge DevTools](https://docs.microsoft.com/microsoft-edge/devtools-guide-chromium/landing/)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T095728Z" creationid="gitnacho" creationdate="20221002T095728Z">
        <seg>- [Edge DevTools](https://docs.microsoft.com/microsoft-edge/devtools-guide-chromium/landing/)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Events](/en-US/docs/Web/Events)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T094522Z">
        <seg>- [Eventos](/es/docs/Web/Events)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Evolution of HTTP](/en-US/docs/Web/HTTP/Basics_of_HTTP/Evolution_of_HTTP)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T063802Z" creationid="gitnacho" creationdate="20221012T063802Z">
        <seg>- [Evolución de HTTP](/es/docs/Web/HTTP/Basics_of_HTTP/Evolution_of_HTTP)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Exported WebAssembly functions](/en-US/docs/WebAssembly/Exported_functions)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T100106Z">
        <seg>- [Funciones exportadas de WebAssembly](/es/docs/WebAssembly/Exported_functions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Firefox Developer Tools](https://firefox-source-docs.mozilla.org/devtools-user/index.html)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T095643Z" creationid="gitnacho" creationdate="20221002T095643Z">
        <seg>- [Firefox Developer Tools](https://firefox-source-docs.mozilla.org/devtools-user/index.html)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Getting started with the web](/en-US/docs/Learn/Getting_started_with_the_web)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T124242Z" creationid="gitnacho" creationdate="20221020T124242Z">
        <seg>- [Primeros pasos en la web](/es/docs/Learn/Getting_started_with_the_web)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Git and GitHub](/en-US/docs/Learn/Tools_and_testing/GitHub) (5 hour read)
- [Understanding client-side web development tools](/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools) (20–25 hour read)
- [Understanding client-side JavaScript frameworks](/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks) (30-60 hour read/exercises)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T225406Z" creationid="gitnacho" creationdate="20221018T225406Z">
        <seg>- [Git y GitHub](/es/docs/Learn/Tools_and_testing/GitHub) (lectura de 5 horas)
- [Comprender las herramientas de desarrollo web de lado del cliente](/es/docs/Learn/Tools_and_testing/Understanding_client-side_tools) (lectura de 20 a 25 horas)
- [Comprender los marcos de JavaScript de lado del cliente](/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks) (30 a 60 horas de lectura/ejercicios)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [HTML basics](/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T043612Z" creationid="gitnacho" creationdate="20220925T043452Z">
        <seg>- [Conceptos básicos de HTML](/es/docs/Learn/Getting_started_with_the_web/HTML_basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [HTML table basics](/en-US/docs/Learn/HTML/Tables/Basics)
- [HTML table advanced features and accessibility](/en-US/docs/Learn/HTML/Tables/Advanced)
- [Structuring planet data](/en-US/docs/Learn/HTML/Tables/Structuring_planet_data)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T175129Z" creationid="Nachec" creationdate="20221020T175129Z">
        <seg>- [HTML table basics](/en-US/docs/Learn/HTML/Tables/Basics)
- [HTML table advanced features and accessibility](/en-US/docs/Learn/HTML/Tables/Advanced)
- [Structuring planet data](/en-US/docs/Learn/HTML/Tables/Structuring_planet_data)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [HTML — Structuring the web](/en-US/docs/Learn/HTML)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T130907Z" creationid="gitnacho" creationdate="20221020T130907Z">
        <seg>- [HTML — Estructurar la web](/es/docs/Learn/HTML)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [HTML](/en-US/docs/Web/HTML)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T094409Z">
        <seg>- [HTML](/es/docs/Web/HTML)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [HTTP Cache](/en-US/docs/Web/HTTP/Caching)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T062659Z" creationid="gitnacho" creationdate="20221012T062659Z">
        <seg>- [Caché HTTP](/es/docs/Web/HTTP/Caching)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [HTTP Client Hints](/en-US/docs/Web/HTTP/Client_hints)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T063624Z" creationid="gitnacho" creationdate="20221012T063624Z">
        <seg>- [Sugerencias de cliente HTTP](/es/docs/Web/HTTP/Client_hints)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [HTTP Cookies](/en-US/docs/Web/HTTP/Cookies)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T062812Z" creationid="gitnacho" creationdate="20221012T062812Z">
        <seg>- [*Cookies*&amp;nbsp;HTTP](/es/docs/Web/HTTP/Cookies)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [HTTP Headers](/en-US/docs/Web/HTTP/Headers)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064233Z" creationid="gitnacho" creationdate="20221012T064233Z">
        <seg>- [Cabeceras HTTP](/es/docs/Web/HTTP/Headers)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [HTTP Messages](/en-US/docs/Web/HTTP/Messages)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T063929Z" creationid="gitnacho" creationdate="20221012T063929Z">
        <seg>- [Mensajes HTTP](/es/docs/Web/HTTP/Messages)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [HTTP Request Methods](/en-US/docs/Web/HTTP/Methods)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064511Z" creationid="gitnacho" creationdate="20221012T064417Z">
        <seg>- [Métodos de Petición HTTP](/es/docs/Web/HTTP/Methods)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [HTTP Status Response Codes](/en-US/docs/Web/HTTP/Status)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064551Z" creationid="gitnacho" creationdate="20221012T064551Z">
        <seg>- [Códigos de Respuesta de Estado HTTP](/es/docs/Web/HTTP/Status)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [HTTPS](https://en.wikipedia.org/wiki/HTTPS) on Wikipedia
- [Moving to HTTPS community guide](https://movingtohttps.com/)
- [Secure Contexts](/en-US/docs/Web/Security/Secure_Contexts)
- [MDN Web Docs Glossary](/en-US/docs/Glossary)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T202341Z" creationid="gitnacho" creationdate="20221018T202341Z">
        <seg>- [HTTPS](https://en.wikipedia.org/wiki/HTTPS) en Wikipedia
- [Guía de la comunidad para pasar a HTTPS](https://movingtohttps.com/)
- [Contextos seguros](/es/docs/Web/Security/Secure_Contexts)
- [Glosario de documentos web de MDN](/es/docs/Glossary)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [HTTP](/en-US/docs/Web/HTTP)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T094640Z">
        <seg>- [HTTP](/es/docs/Web/HTTP)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [How Browsers Work (2011)](https://web.dev/howbrowserswork/)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064901Z" creationid="gitnacho" creationdate="20221012T064901Z">
        <seg>- [Cómo trabajan los navegadores](https://web.dev/howbrowserswork/)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [How the web works](/en-US/docs/Learn/Getting_started_with_the_web/How_the_Web_works)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T060118Z" creationid="gitnacho" creationdate="20220925T055939Z">
        <seg>- [Cómo funciona la web](/es/docs/Learn/Getting_started_with_the_web/How_the_Web_works)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Installing basic software](/en-US/docs/Learn/Getting_started_with_the_web/Installing_basic_software)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T042546Z" creationid="gitnacho" creationdate="20220925T042443Z">
        <seg>- [Instalación de software básico](/es/docs/Learn/Getting_started_with_the_web/Installing_basic_software)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Installing basic software](/en-US/docs/Learn/Getting_started_with_the_web/Installing_basic_software)
- [What will your website look like?](/en-US/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like)
- [Dealing with files](/en-US/docs/Learn/Getting_started_with_the_web/Dealing_with_files)
- [HTML basics](/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics)
- [CSS basics](/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics)
- [JavaScript basics](/en-US/docs/Learn/Getting_started_with_the_web/JavaScript_basics)
- [Publishing your website](/en-US/docs/Learn/Getting_started_with_the_web/Publishing_your_website)
- [How the web works](/en-US/docs/Learn/Getting_started_with_the_web/How_the_Web_works)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T064600Z" creationid="gitnacho" creationdate="20221012T165500Z">
        <seg>- [Instalar software básico](/es/docs/Learn/Getting_started_with_the_web/Installing_basic_software#%C2%BFqu%C3%A9_herramientas_necesito_en_este_momento)
- [¿Cómo se verá tu sitio web?](#lo_primero_es_lo_primero_planificaci%C3%B3n)
- [Manejo de archivos](/es/docs/Learn/Getting_started_with_the_web/Dealing_with_files)
- [Conceptos básicos de HTML](/es/docs/Learn/Getting_started_with_the_web/HTML_basics)
- [Conceptos básicos de CSS](/es/docs/Learn/Getting_started_with_the_web/CSS_basics)
- [Conceptos básicos de JavaScript](/es/docs/Learn/Getting_started_with_the_web/JavaScript_basics)
- [Publicar tu sitio web](/es/docs/Learn/Getting_started_with_the_web/Publishing_your_website)
- [Cómo funciona la web](/es/docs/Learn/Getting_started_with_the_web/How_the_Web_works)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Installing basic software](/en-US/docs/Learn/Getting_started_with_the_web/Installing_basic_software) — basic tool setup (15 min read)
- [Background on the web and web standards](/en-US/docs/Learn/Getting_started_with_the_web/The_web_and_web_standards) (45 min read)
- [Learning and getting help](/en-US/docs/Learn/Learning_and_getting_help) (45 min read)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224134Z" creationid="gitnacho" creationdate="20221018T224134Z">
        <seg>- [Instalación de software básico](/es/docs/Learn/Getting_started_with_the_web/Installing_basic_software): configuración básica de las herramientas (lectura de 15 minutos)
- [Información básica sobre la web y los estándares web](/es/docs/Learn/Getting_started_with_the_web/The_web_and_web_standards) (lectura de 45 minutos)
- [Aprender y obtener ayuda](/es/docs/Learn/Learning_and_getting_help) (lectura de 45 minutos)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Introduction to HTML](/en-US/docs/Learn/HTML/Introduction_to_HTML) (15–20 hour read/exercises)
- [Multimedia and embedding](/en-US/docs/Learn/HTML/Multimedia_and_embedding) (15–20 hour read/exercises)
- [HTML tables](/en-US/docs/Learn/HTML/Tables) (5–10 hour read/exercises)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224305Z" creationid="gitnacho" creationdate="20221018T224305Z">
        <seg>- [Introducción a HTML](/es/docs/Learn/HTML/Introduction_to_HTML) (15 a 20 horas de lectura/ejercicios)
- [Multimedia e inserción](/es/docs/Learn/HTML/Multimedia_and_embedding) (15 a 20 horas de lectura/ejercicios)
- [Tablas HTML](/es/docs/Learn/HTML/Tables) (5 a 10 horas de lectura/ejercicios)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [JavaScript basics](/en-US/docs/Learn/Getting_started_with_the_web/JavaScript_basics)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20220925T054957Z">
        <seg>- [Conceptos básicos de JavaScript](/es/docs/Learn/Getting_started_with_the_web/JavaScript_basics)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [JavaScript first steps](/en-US/docs/Learn/JavaScript/First_steps) (30–40 hour read/exercises)
- [JavaScript building blocks](/en-US/docs/Learn/JavaScript/Building_blocks) (25–35 hour read/exercises)
- [Introducing JavaScript objects](/en-US/docs/Learn/JavaScript/Objects) (25–35 hour read/exercises)
- [Client-side web APIs](/en-US/docs/Learn/JavaScript/Client-side_web_APIs) (30–40 hour read/exercises)
- [Asynchronous JavaScript](/en-US/docs/Learn/JavaScript/Asynchronous) (25–35 hour read/exercises)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224918Z" creationid="gitnacho" creationdate="20221018T224918Z">
        <seg>- [Primeros pasos en JavaScript](/es/docs/Learn/JavaScript/First_steps) (30 a 40 horas de lectura/ejercicios)
- [Bloques de construcción JavaScript](/es/docs/Learn/JavaScript/Building_blocks) (25 a 35 horas de lectura/ejercicios)
- [Introducción a los objetos JavaScript](/es/docs/Learn/JavaScript/Objects) (25 a 35 horas de lectura/ejercicios)
- [API web de lado del cliente](/es/docs/Learn/JavaScript/Client-side_web_APIs) (30 a 40 horas de lectura/ejercicios)
- [JavaScript asincrónico](/es/docs/Learn/JavaScript/Asynchronous) (25 a 35 horas de lectura/ejercicios)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [JavaScript — Dynamic client-side scripting](/en-US/docs/Learn/JavaScript)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131105Z" creationid="gitnacho" creationdate="20221020T131105Z">
        <seg>- [JavaScript — Scripts dinámicos de lado del cliente](/es/docs/Learn/JavaScript)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [JavaScript](/en-US/docs/Web/JavaScript)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T195703Z" creationid="gitnacho" creationdate="20221002T094446Z">
        <seg>- [JavaScript](/es/docs/Web/JavaScript)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [List of all HTTP headers](/en-US/docs/Web/HTTP/Headers)
- Syntax of [headers](https://datatracker.ietf.org/doc/html/rfc7230#section-3.2) in the HTTP specification
- [Glossary](/en-US/docs/Glossary)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T211949Z" creationid="gitnacho" creationdate="20221017T211949Z">
        <seg>- [Lista de todas las cabeceras HTTP](/es/docs/Web/HTTP/Headers)
- Sintaxis de [headers](https://datatracker.ietf.org/doc/html/rfc7230#section-3.2) en la especificación HTTP</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Loading and running WebAssembly code](/en-US/docs/WebAssembly/Loading_and_running)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T095306Z">
        <seg>- [Cargar y ejecutar código WebAssembly](/es/docs/WebAssembly/Loading_and_running)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [MDN Product Advisory Board](/en-US/docs/MDN/MDN_Product_Advisory_Board)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T200735Z" creationid="gitnacho" creationdate="20221008T200735Z">
        <seg>- [Consejo asesor de productos de MDN](/es/docs/MDN/MDN_Product_Advisory_Board)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [MathML](/en-US/docs/Learn/MathML)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131555Z" creationid="gitnacho" creationdate="20221020T131555Z">
        <seg>- [MathML](/es/docs/Learn/MathML)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [MathML](/en-US/docs/Web/MathML)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T095127Z">
        <seg>- [MathML](/es/docs/Web/MathML)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Media](/en-US/docs/Web/Media)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T094719Z">
        <seg>- [Media](/es/docs/Web/Media)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Mozilla developer newsletter](https://www.mozilla.org/en-US/newsletter/developer/)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T174145Z" creationid="Nachec" creationdate="20221020T174145Z">
        <seg>- [Boletín informativo para desarrolladores de Mozilla](https://www.mozilla.org/es/newsletter/developer/)
  - : Nuestro boletín para desarrolladores web, es un excelente recurso para todos los niveles de experiencia.
- [Aprende JavaScript](https://learnjavascript.online/)
  - : Un excelente recurso para los aspirantes a desarrolladores web — aprende JavaScript en un entorno interactivo, con lecciones breves y pruebas interactivas, guiado por una evaluación automatizada. Las primeras 40 lecciones son gratuitas y el curso completo está disponible por un pequeño pago único.
- [Web desmitificada](https://www.youtube.com/playlist?list=PLo3w8EB99pqLEopnunz-dOOBJ8t-Wgt2g)
  - : Una gran serie de videos que explican los fundamentos de la web, dirigida a principiantes absolutos en el desarrollo web. Creada por [Jérémie Patonnier](https://twitter.com/JeremiePat).
- [Codecademy](https://www.codecademy.com/)
  - : Un gran sitio interactivo para aprender lenguajes de programación desde cero.
- [BitDegree](https://www.bitdegree.org/learn/)
  - : Teoría básica de la codificación con un proceso de aprendizaje ludificado. Enfocado principalmente a principiantes.
- [Code.org](https://code.org/)
  - : Teoría y práctica de codificación básica, principalmente dirigida a niños/principiantes.
- [EXLskills](https://exlskills.com/learn-en/courses)
  - : Cursos gratuitos y abiertos para aprender habilidades tecnológicas, con tutorías y aprendizaje basado en proyectos.
- [freeCodeCamp.org](https://www.freecodecamp.org/)
  - : Sitio interactivo con tutoriales y proyectos para aprender desarrollo web.
- [Mapa de alfabetización web](https://foundation.mozilla.org/en/initiatives/web-literacy/core-curriculum/)
  - : Un marco de desarrollo para la alfabetización web a nivel de entrada y las habilidades del siglo XXI, que también brindan acceso a actividades de enseñanza clasificadas por categoría.
- [Edabit](https://edabit.com/challenges/javascript)
  - : Miles de desafíos interactivos de JavaScript.
</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Mozilla web security guidelines](https://infosec.mozilla.org/guidelines/web_security)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T063905Z" creationid="gitnacho" creationdate="20221012T063905Z">
        <seg>- [Consejos de Seguridad Web de Mozilla](https://infosec.mozilla.org/guidelines/web_security)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Node.js and io.js (which have been merged together back)](https://nodejs.org/en/blog/announcements/foundation-v4-announce/)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T193953Z" creationid="gitnacho" creationdate="20221005T193953Z">
        <seg>- [Node.js e io.js(que se fusionaron de nuevo)](https://nodejs.org/es/blog/announcements/foundation-v4-announce/)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Overview of HTTP](/en-US/docs/Web/HTTP/Overview)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T062529Z" creationid="gitnacho" creationdate="20221012T062529Z">
        <seg>- [Generalidades de HTTP](/es/docs/Web/HTTP/Overview)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Performance](/en-US/docs/Web/Performance)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T093808Z" creationid="gitnacho" creationdate="20221002T093808Z">
        <seg>- [Rendimiento](/es/docs/Web/Performance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Platform features restricted to secure contexts](/en-US/docs/Web/Security/Secure_Contexts/features_restricted_to_secure_contexts) — a list of the features available only in secure contexts
- {{domxref("isSecureContext")}}
- &lt;https://permission.site&gt; — A site that allows you to check what API permission checks your browser employs, over HTTP and HTTPS
- [Strict-Transport-Security](/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security) HTTP header</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T204716Z" creationid="gitnacho" creationdate="20221018T204716Z">
        <seg>- [Funciones de la plataforma restringidas a contextos seguros](/es/docs/Web/Security/Secure_Contexts/features_restricted_to_secure_contexts): una lista de las funciones disponibles solo en contextos seguros
- {{DOMxRef("isSecureContext", "Es un contexto seguro")}}
- &lt;https://permission.site&gt;: un sitio que te permite verificar qué API de comprobación de permisos emplea tu navegador, a través de HTTP y HTTPS
- [Strict-Transport-Security](/es/docs/Web/HTTP/Headers/Strict-Transport-Security) cabecera HTTP</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Polyfill of `Uint8ClampedArray` in `core-js`](https://github.com/zloirock/core-js#ecmascript-typed-arrays)
- [JavaScript typed arrays](/en-US/docs/Web/JavaScript/Typed_arrays)
- {{jsxref("ArrayBuffer")}}
- {{jsxref("DataView")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221005T052833Z">
        <seg>- [Polyfill de `Uint8ClampedArray` en `core-js`](https://github.com/zloirock/core-js#ecmascript-typed-arrays)
- [Arreglos con tipo JavaScript](/es/docs/Web/JavaScript/Typed_arrays)
- {{jsxref("ArrayBuffer")}}
- {{jsxref("DataView")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Progressive Web Apps (PWAs)](/en-US/docs/Web/Progressive_web_apps)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T095540Z">
        <seg>- [Aplicaciones web progresivas (PWA)](/es/docs/Web/Progressive_web_apps)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Promises](/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)
- [Using web workers](/en-US/docs/Web/API/Web_Workers_API/Using_web_workers)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T052441Z" creationid="gitnacho" creationdate="20220921T042756Z">
        <seg>- [Promesas](/es/docs/Web/JavaScript/Reference/Global_Objects/Promise)
- [Usar *web workers*](/es/docs/Web/API/Web_Workers_API/Using_web_workers)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Publishing your sample code](/en-US/docs/Learn/Getting_started_with_the_web/Publishing_your_website)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T055837Z" creationid="gitnacho" creationdate="20220925T055627Z">
        <seg>- [Publicar tu sitio web](/es/docs/Learn/Getting_started_with_the_web/Publishing_your_website)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [RFC 7469](https://datatracker.ietf.org/doc/html/rfc7469)
- Wikipedia: [HTTP Public Key Pinning](https://en.wikipedia.org/wiki/HTTP_Public_Key_Pinning)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T070307Z" creationid="gitnacho" creationdate="20221012T070307Z">
        <seg>- [RFC 7469](https://datatracker.ietf.org/doc/html/rfc7469)
- Wikipedia: [Fijar clave pública HTTP](https://en.wikipedia.org/wiki/HTTP_Public_Key_Pinning)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [RedBot](https://redbot.org/)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064813Z" creationid="gitnacho" creationdate="20221012T064813Z">
        <seg>- [RedBot](https://redbot.org/)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [SVG](/en-US/docs/Web/SVG)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T095110Z">
        <seg>- [SVG](/es/docs/Web/SVG)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Safari Web Inspector](https://webkit.org/web-inspector/)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T095717Z" creationid="gitnacho" creationdate="20221002T095717Z">
        <seg>- [Safari Web Inspector](https://webkit.org/web-inspector/)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Same-origin policy](/en-US/docs/Web/Security/Same-origin_policy)
- {{Glossary("Site")}}
- [HTML specification: origin](https://html.spec.whatwg.org/multipage/origin.html#origin)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T072556Z" creationid="gitnacho" creationdate="20221017T151609Z">
        <seg>- [Política del mismo origen](/es/docs/Web/Security/Same-origin_policy)
- {{Glossary("Site")}}
- [Especificación de `Origin` HTML](https://html.spec.whatwg.org/multipage/origin.html#origin)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Secure contexts](/en-US/docs/Web/Security/Secure_Contexts)
- ["secure context" query on Chrome Platform Status](https://chromestatus.com/features#secure%20context)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T233335Z" creationid="gitnacho" creationdate="20221018T233335Z">
        <seg>- [Contextos seguros](/es/docs/Web/Security/Secure_Contexts)
- [consulta "secure context" en el estado de la plataforma Chrome](https://chromestatus.com/features#secure%20context)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Security](/en-US/docs/Web/Security)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T094131Z">
        <seg>- [Seguridad](/es/docs/Web/Security)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Server-side website programming](/en-US/docs/Learn/Server-side)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131749Z" creationid="gitnacho" creationdate="20221020T131749Z">
        <seg>- [Programación de lado del servidor](/es/docs/Learn/Server-side)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [ServiceWorker Cookbook](https://github.com/mdn/serviceworker-cookbook)
- [Using Service Workers](/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers)
- [Service workers basic code example](https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker)
- [Is ServiceWorker ready?](https://jakearchibald.github.io/isserviceworkerready/)
- {{jsxref("Promise")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T152703Z" creationid="gitnacho" creationdate="20221002T152139Z">
        <seg>- [Manual de *ServiceWorker*](https://github.com/mdn/serviceworker-cookbook)
- [Usar *Service Workers*](/es/docs/Web/API/Service_Worker_API/Using_Service_Workers)
- [Código básico de ejemplo para *Service workers*](https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker)
- [¿Está listo el *ServiceWorker*?](https://jakearchibald.github.io/isserviceworkerready/)
- {{jsxref("Promise")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Speed up Service Worker with Navigation Preloads](https://developer.chrome.com/blog/navigation-preload/) (developer.chrome.com)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T213012Z" creationid="gitnacho" creationdate="20220922T211359Z">
        <seg>- [Acelera el *Service Worker*&amp;nbsp;con precargas de navegación](https://developer.chrome.com/blog/navigation-preload/) (developer.chrome.com)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Text format](https://webassembly.github.io/spec/core/text/index.html) — more explanation of the text format, on the WebAssembly GitHub repo.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T183337Z" creationid="gitnacho" creationdate="20221007T183337Z">
        <seg>- [Formato de texto](https://webassembly.github.io/spec/core/text/index.html): más explicación del formato de texto, en el repositorio WebAssembly de GitHub.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [The Offline Cookbook](https://web.dev/offline-cookbook/)(service workers)
- [Using Service Workers](/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers)
- [Service worker basic code example](https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker)
- [Is ServiceWorker ready?](https://jakearchibald.github.io/isserviceworkerready/)
- {{jsxref("Promise")}}
- [Using web workers](/en-US/docs/Web/API/Web_Workers_API/Using_web_workers)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T222916Z" creationid="gitnacho" creationdate="20221003T213626Z">
        <seg>- [El manual de Offline](https://web.dev/offline-cookbook/)(*service workers*)
- [Usar *Service Workers*](/es/docs/Web/API/Service_Worker_API/Using_Service_Workers)
- [Ejemplo de código básico de Service Worker](https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker)
- [¿Está listo el *ServiceWorker*?](https://jakearchibald.github.io/isserviceworkerready/)
- {{jsxref("Promise")}}
- [Usar *web workers*](/es/docs/Web/API/Web_Workers_API/Using_web_workers)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [The Service Worker Cookbook](https://github.com/mdn/serviceworker-cookbook)
- [Is ServiceWorker ready?](https://jakearchibald.github.io/isserviceworkerready/)
- Download the [Service Workers 101 cheatsheet](sw101.png).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042725Z" creationid="gitnacho" creationdate="20220921T042725Z">
        <seg>- [El manual del *service worker*](https://github.com/mdn/serviceworker-cookbook)
- [¿Está listo ServiceWorker?](https://jakearchibald.github.io/isserviceworkerready/)
- Descarga la [hoja de trucos de *service worker* 101](sw101.png).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [The web and web standards](/en-US/docs/Learn/Getting_started_with_the_web/The_web_and_web_standards): This article provides some useful background on the Web — how it came about, what web standard technologies are, how they work together, why "web developer" is a great career to choose, and what kinds of best practices you'll learn about through the course.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T060347Z" creationid="gitnacho" creationdate="20220925T060347Z">
        <seg>- [La web y sus estándares](/es/docs/Learn/Getting_started_with_the_web/The_web_and_web_standards): Este artículo proporciona algunos útiles antecedentes sobre la web: cómo surgió, qué son las tecnologías web estándar, cómo trabajan juntas, por qué "desarrollador web" es una gran carrera para elegir y qué tipo de mejores prácticas aprenderás a través del curso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Tools and testing](/en-US/docs/Learn/Tools_and_testing)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131650Z" creationid="gitnacho" creationdate="20221020T131650Z">
        <seg>- [Herramientas y pruebas](/es/docs/Learn/Tools_and_testing)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Tutorials for Web developers](/en-US/docs/Web/Tutorials)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T093444Z" creationid="gitnacho" creationdate="20221002T093444Z">
        <seg>- [Tutoriales para desarrolladores web](/es/docs/Web/Tutorials)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Understanding WebAssembly text format](/en-US/docs/WebAssembly/Understanding_the_text_format)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T100235Z">
        <seg>- [Entender el formato de texto WebAssembly](/es/docs/WebAssembly/Understanding_the_text_format)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Understanding WebAssembly text format](/en-US/docs/WebAssembly/Understanding_the_text_format) — a detailed explanation of the text format syntax.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T103528Z" creationid="gitnacho" creationdate="20221007T103528Z">
        <seg>- [Entender el formato de texto WebAssembly](/es/docs/WebAssembly/Understanding_the_text_format): una explicación detallada de la sintaxis del formato de texto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Using Service Workers](/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers)
- [Service workers basic code example](https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker)
- [Is ServiceWorker ready?](https://jakearchibald.github.io/isserviceworkerready/)
- [Using web workers](/en-US/docs/Web/API/Web_Workers_API/Using_web_workers)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T232100Z" creationid="gitnacho" creationdate="20221003T232100Z">
        <seg>- [Usar *Service Workers*](/es/docs/Web/API/Service_Worker_API/Using_Service_Workers)
- [Código básico de ejemplo para *Service workers*](https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker)
- [I¿Está listo el *ServiceWorker*?](https://jakearchibald.github.io/isserviceworkerready/)
- [Usar *web workers*](/es/docs/Web/API/Web_Workers_API/Using_web_workers)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Using Service Workers](/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers)
- [Service workers basic code example](https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker)
- [Is ServiceWorker ready?](https://jakearchibald.github.io/isserviceworkerready/)
- {{jsxref("Promise")}}
- [Using web workers](/en-US/docs/Web/API/Web_Workers_API/Using_web_workers)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T202407Z" creationid="gitnacho" creationdate="20221002T152531Z">
        <seg>- [Usar *Service Workers*](/es/docs/Web/API/Service_Worker_API/Using_Service_Workers)
- [Código básico de ejemplo para *Service workers*](https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker)
- [¿Está listo el *ServiceWorker*?](https://jakearchibald.github.io/isserviceworkerready/)
- {{jsxref("Promise")}}
- [Usar *web workers*](/es/docs/Web/API/Web_Workers_API/Using_web_workers)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Using Service Workers](/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers)
- {{domxref("Cache")}}
- {{domxref("caches")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T225546Z">
        <seg>- [Usar *Service Workers*](/es/docs/Web/API/Service_Worker_API/Using_Service_Workers)
- {{DOMxRef("Cache")}}
- {{DOMxRef("caches")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Using the WebAssembly JavaScript API](/en-US/docs/WebAssembly/Using_the_JavaScript_API)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T095812Z">
        <seg>- [Usar la API JavaScript de WebAssembly](/es/docs/WebAssembly/Using_the_JavaScript_API)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Using the WebAssembly JavaScript API](/en-US/docs/WebAssembly/Using_the_JavaScript_API) — find out how to use the other major features of the WebAssembly JavaScript API.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T091656Z">
        <seg>- [Usar la API JavaScript de WebAssembly](/es/docs/WebAssembly/Using_the_JavaScript_API) — descubre cómo usar otras características principales de la API JavaScript de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Using the WebAssembly JavaScript API](/en-US/docs/WebAssembly/Using_the_JavaScript_API) — read this if you want to find out more about how the WebAssembly API code works.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T183317Z" creationid="gitnacho" creationdate="20221007T183317Z">
        <seg>- [Usar la API JavaScript de WebAssembly](/es/docs/WebAssembly/Using_the_JavaScript_API): lee esto si deseas obtener más información sobre cómo funciona el código de la API de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [WASMSobel](https://github.com/JasonWeathersby/WASMSobel)
- See our [webassembly-examples](https://github.com/mdn/webassembly-examples/) repo for a number of other examples.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T102653Z" creationid="gitnacho" creationdate="20221003T102653Z">
        <seg>- [WASMSobel](https://github.com/JasonWeathersby/WASMSobel)
- Consulta nuestro repositorio [webassembly-examples](https://github.com/mdn/webassembly-examples/) para ver otros ejemplos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [WasmFiddle](https://wasdk.github.io/WasmFiddle/)
- [WasmFiddle++](https://anonyco.github.io/WasmFiddlePlusPlus/)
- [WasmExplorer](https://mbebenita.github.io/WasmExplorer/)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T080913Z" creationid="gitnacho" creationdate="20221003T080913Z">
        <seg>- [WasmFiddle](https://wasdk.github.io/WasmFiddle/)
- [WasmFiddle++](https://anonyco.github.io/WasmFiddlePlusPlus/)
- [WasmExplorer](https://mbebenita.github.io/WasmExplorer/)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Web API event reference](/en-US/docs/Web/Events)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T041010Z">
        <seg>- [Referencia de la API de eventos Web](/es/docs/Web/Events)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Web APIs](/en-US/docs/Web/API)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T094345Z">
        <seg>- [APIs Web](/es/docs/Web/API)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Web Animations API](/en-US/docs/Web/API/Web_Animations_API)
- {{domxref("AnimationTimeline")}}
- {{domxref("AnimationTimeline.currentTime")}}
- {{domxref("DocumentTimeline")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221006T092839Z">
        <seg>- [API de animaciones Web](/es/docs/Web/API/Web_Animations_API)
- {{DOMxRef("AnimationTimeline")}}
- {{DOMxRef("AnimationTimeline.currentTime")}}
- {{DOMxRef("DocumentTimeline")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Web App Manifests](/en-US/docs/Web/Manifest)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T095406Z">
        <seg>- [Manifiestos de aplicaciones web](/es/docs/Web/Manifest)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Web Components](/en-US/docs/Web/Web_Components)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T095152Z">
        <seg>- [Componentes Web](/es/docs/Web/Web_Components)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Web Demystified](https://www.youtube.com/playlist?list=PLo3w8EB99pqLEopnunz-dOOBJ8t-Wgt2g): A great series of videos explaining web fundamentals, aimed at complete beginners to web development.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T060203Z" creationid="gitnacho" creationdate="20220925T060203Z">
        <seg>- [La web desmitificada](https://www.youtube.com/playlist?list=PLo3w8EB99pqLEopnunz-dOOBJ8t-Wgt2g): Una gran serie de videos que explican los fundamentos de la web, dirigida a completamente novatos en el desarrollo web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Web Developer Guide](/en-US/docs/Web/Guide)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T093319Z" creationid="gitnacho" creationdate="20221002T093319Z">
        <seg>- [Guía para desarrolladores web](/es/docs/Web/Guide)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Web Extensions](/en-US/docs/Mozilla/Add-ons/WebExtensions)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T095330Z">
        <seg>- [Extensiones Web](/es/docs/Mozilla/Add-ons/WebExtensions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Web Performance — making websites fast and responsive](/en-US/docs/Learn/Performance)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131431Z" creationid="gitnacho" creationdate="20221020T131431Z">
        <seg>- [Rendimiento web — hace que los sitios web sean rápidos y responsivos](/es/docs/Learn/Performance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Web forms — Working with user data](/en-US/docs/Learn/Forms)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131158Z" creationid="gitnacho" creationdate="20221020T131158Z">
        <seg>- [Formularios HTML](/es/docs/Learn/HTML/Forms)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Web forms](/en-US/docs/Learn/Forms) (40–50 hours)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T225035Z" creationid="gitnacho" creationdate="20221018T225035Z">
        <seg>- [Formularios web](/es/docs/Learn/Forms) (40 a 50 horas)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [WebAssembly JavaScript interface](/en-US/docs/WebAssembly/JavaScript_interface)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T100837Z" creationid="gitnacho" creationdate="20221003T100701Z">
        <seg>- [Interfaz JavaScript de WebAssembly ](/es/docs/WebAssembly/JavaScript_interface)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [WebAssembly articles on Mozilla Hacks blog](https://hacks.mozilla.org/category/webassembly/)
- [WebAssembly on Mozilla Research](https://research.mozilla.org/)
- [Loading and running WebAssembly code](/en-US/docs/WebAssembly/Loading_and_running) — find out how to load your own WebAssembly module into a web page.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T091524Z" creationid="gitnacho" creationdate="20221003T091524Z">
        <seg>- [artículos del blog WebAssembly en Mozilla Hacks](https://hacks.mozilla.org/category/webassembly/)
- [La investigación de WebAssembly en Mozilla](https://research.mozilla.org/)
- [Cargar y ejecutar código WebAssembly](/es/docs/WebAssembly/Loading_and_running) — descubre cómo cargar tu propio módulo WebAssembly en una página web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [WebAssembly concepts](/en-US/docs/WebAssembly/Concepts)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T092116Z" creationid="gitnacho" creationdate="20221003T092116Z">
        <seg>- [Conceptos WebAssembly](/es/docs/WebAssembly/Concepts)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [WebAssembly instruction reference](/en-US/docs/WebAssembly/Reference)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T111548Z" creationid="gitnacho" creationdate="20221019T111548Z">
        <seg>- [Referencia de instrucciones de WebAssembly](/es/docs/WebAssembly/Reference)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [WebAssembly on Mozilla Research](https://research.mozilla.org/)
- [webassembly.org](https://webassembly.org/)
- [WebAssembly articles on Mozilla Hacks blog](https://hacks.mozilla.org/category/webassembly/)
- [W3C WebAssembly Community Group](https://www.w3.org/community/webassembly/)
- [Emscripting a C Library to Wasm](https://web.dev/emscripting-a-c-library/)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T045629Z" creationid="gitnacho" creationdate="20221003T093345Z">
        <seg>- [La investigación de WebAssembly en Mozilla](https://research.mozilla.org/)
- [webassembly.org](https://webassembly.org/)
- [Artículos del blog WebAssembly en Mozilla Hacks](https://hacks.mozilla.org/category/webassembly/)
- [Grupo de la comunidad WebAssembly de W3C](https://www.w3.org/community/webassembly/)
- [Emscripting una biblioteca C a Wasm](https://web.dev/emscripting-a-c-library/)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [WebAssembly](/en-US/docs/WebAssembly)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T104330Z" creationid="gitnacho" creationdate="20221002T094459Z">
        <seg>- [WebAssembly](/es/docs/WebAssembly)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [WebAssembly](/en-US/docs/WebAssembly) overview
- [WebAssembly concepts](/en-US/docs/WebAssembly/Concepts)
- [Using the WebAssembly JavaScript API](/en-US/docs/WebAssembly/Using_the_JavaScript_API)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T141021Z" creationid="gitnacho" creationdate="20221003T092841Z">
        <seg>- Resumen [WebAssembly](/es/docs/WebAssembly)
- [Conceptos WebAssembly](/es/docs/WebAssembly/Concepts)
- [Usar la API JavaScript de WebAssembly](/es/docs/WebAssembly/Using_the_JavaScript_API)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [WebAssembly](/en-US/docs/WebAssembly) overview page
- [WebAssembly concepts](/en-US/docs/WebAssembly/Concepts)
- [Using the WebAssembly JavaScript API](/en-US/docs/WebAssembly/Using_the_JavaScript_API)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T212426Z" creationid="gitnacho" creationdate="20221003T092348Z">
        <seg>- Página de resumen de [WebAssembly](/es/docs/WebAssembly)
- [Conceptos WebAssembly](/es/docs/WebAssembly/Concepts)
- [Usar la API JavaScript de WebAssembly](/es/docs/WebAssembly/Using_the_JavaScript_API)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [WebAssembly](/en-US/docs/WebAssembly) overview page
- [WebAssembly concepts](/en-US/docs/WebAssembly/Concepts)
- [Using the WebAssembly JavaScript API](/en-US/docs/WebAssembly/Using_the_JavaScript_API)
- [Import/Export mutable globals proposal](https://github.com/WebAssembly/mutable-global/blob/master/proposals/mutable-global/Overview.md)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T093026Z">
        <seg>- [WebAssembly](/es/docs/WebAssembly) página de resumen
- [Conceptos WebAssembly](/es/docs/WebAssembly/Concepts)
- [Usar la API JavaScript de WebAssembly](/es/docs/WebAssembly/Using_the_JavaScript_API)
- [Import/Export propuesta global mutable](https://github.com/WebAssembly/mutable-global/blob/master/proposals/mutable-global/Overview.md)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [WebDriver](/en-US/docs/Web/WebDriver)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T095219Z">
        <seg>- [WebDriver](/es/docs/Web/WebDriver)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [What will your website look like?](/en-US/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T042944Z" creationid="gitnacho" creationdate="20220925T042817Z">
        <seg>- [¿Cuál será la apariencia de tu sitio web?](/es/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [Writing guidelines](/en-US/docs/MDN/Writing_guidelines)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T200630Z" creationid="gitnacho" creationdate="20221008T200630Z">
        <seg>- [Pautas de escritura](/es/docs/MDN/Writing_guidelines)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`APIRef`](https://github.com/mdn/yari/blob/main/kumascript/macros/APIRef.ejs) generates the sidebar for Web API reference pages.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113843Z" creationid="gitnacho" creationdate="20221005T113843Z">
        <seg>- [`APIRef`](https://github.com/mdn/yari/blob/main/kumascript/macros/APIRef.ejs) genera la barra lateral para las páginas de referencia de la API web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`CSSRef`](https://github.com/mdn/yari/blob/main/kumascript/macros/CSSRef.ejs) generates the sidebar for CSS reference pages.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113819Z" creationid="gitnacho" creationdate="20221005T113819Z">
        <seg>- [`CSSRef`](https://github.com/mdn/yari/blob/main/kumascript/macros/CSSRef.ejs) genera la barra lateral para las páginas de referencia de CSS.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`Cross-Origin-Opener-Policy`](/en-US/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy) with `same-origin` as value (protects your origin from attackers)
- [`Cross-Origin-Embedder-Policy`](/en-US/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy) with `require-corp` as value (protects victims from your origin)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20220923T023729Z">
        <seg>- [`Cross-Origin-Opener-Policy`](/es/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy) with `same-origin` as value (protects your origin from attackers)
- [`Cross-Origin-Embedder-Policy`](/es/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy) with `require-corp` as value (protects victims from your origin)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`EmbedGHLiveSample`](https://github.com/mdn/yari/blob/main/kumascript/macros/EmbedGHLiveSample.ejs) allows to embed live samples from GitHub pages.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113701Z" creationid="gitnacho" creationdate="20221005T113701Z">
        <seg>- [`EmbedGHLiveSample`](https://github.com/mdn/yari/blob/main/kumascript/macros/EmbedGHLiveSample.ejs) permite incrustar muestras en vivo desde páginas de GitHub.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`EmbedLiveSample`](https://github.com/mdn/yari/blob/main/kumascript/macros/EmbedLiveSample.ejs) lets you embed the output of a code sample on a page, as described in [Live samples](/en-US/docs/MDN/Writing_guidelines/Page_structures/Live_samples).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T201520Z" creationid="gitnacho" creationdate="20221005T113613Z">
        <seg>- [`EmbedLiveSample`](https://github.com/mdn/yari/blob/main/kumascript/macros/EmbedLiveSample.ejs) te permite incrustar la salida de un código de ejemplo en una página, como se describe en [Muestras en vivo ](/es/docs/MDN/Writing_guidelines/Page_structures/Live_samples).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`Exception.prototype.getArg()`](/en-US/docs/WebAssembly/JavaScript_interface/Exception/getArg)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023116Z" creationid="gitnacho" creationdate="20221008T023116Z">
        <seg>- [`Exception.prototype.getArg()`](/es/docs/WebAssembly/JavaScript_interface/Exception/getArg)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`Exception.prototype.is()`](/en-US/docs/WebAssembly/JavaScript_interface/Exception/is)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023029Z" creationid="gitnacho" creationdate="20221008T023029Z">
        <seg>- [`Exception.prototype.is()`](/es/docs/WebAssembly/JavaScript_interface/Exception/is)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`Exception.prototype.stack`](/en-US/docs/WebAssembly/JavaScript_interface/Exception/stack) {{non-standard_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023135Z" creationid="gitnacho" creationdate="20221008T023135Z">
        <seg>- [`Exception.prototype.stack`](/es/docs/WebAssembly/JavaScript_interface/Exception/stack) {{non-standard_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`Grow`](/en-US/docs/WebAssembly/Reference/Memory/Grow)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T095245Z" creationid="gitnacho" creationdate="20221007T095245Z">
        <seg>- [`Grow`](/es/docs/WebAssembly/Reference/Memory/Grow)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`HTMLRef`](https://github.com/mdn/yari/blob/main/kumascript/macros/HTMLRef.ejs) generates the sidebar for HTML reference pages.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113830Z" creationid="gitnacho" creationdate="20221005T113830Z">
        <seg>- [`HTMLRef`](https://github.com/mdn/yari/blob/main/kumascript/macros/HTMLRef.ejs) genera la barra lateral para las páginas de referencia HTML.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`LiveSampleLink`](https://github.com/mdn/yari/blob/main/kumascript/macros/LiveSampleLink.ejs) creates a link to a page containing the output of a code sample on a page, as described in [Live samples](/en-US/docs/MDN/Writing_guidelines/Page_structures/Live_samples).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T201539Z" creationid="gitnacho" creationdate="20221005T113645Z">
        <seg>- [`LiveSampleLink`](https://github.com/mdn/yari/blob/main/kumascript/macros/LiveSampleLink.ejs) crea un enlace a una página que contiene el resultado de un código de ejemplo en una página, como se describe en [Muestras en vivo](/es/docs/MDN/Writing_guidelines/Page_structures/Live_samples).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`Load`](/en-US/docs/WebAssembly/Reference/Memory/Load)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T095331Z" creationid="gitnacho" creationdate="20221007T095331Z">
        <seg>- [`Load`](/es/docs/WebAssembly/Reference/Memory/Load)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`MediaDevices.getUserMedia()`](/en-US/docs/Web/API/MediaDevices/getUserMedia)
- [`Navigator.registerProtocolHandler()`](/en-US/docs/Web/API/Navigator/registerProtocolHandler)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T233242Z" creationid="gitnacho" creationdate="20221018T233242Z">
        <seg>- [`MediaDevices.getUserMedia()`](/es/docs/Web/API/MediaDevices/getUserMedia)
- [`Navigator.registerProtocolHandler()`](/es/docs/Web/API/Navigator/registerProtocolHandler)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`Memory.prototype.buffer`](/en-US/docs/WebAssembly/JavaScript_interface/Memory/buffer) {{ReadOnlyInline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000301Z" creationid="gitnacho" creationdate="20221008T000301Z">
        <seg>- [`Memory.prototype.buffer`](/es/docs/WebAssembly/JavaScript_interface/Memory/buffer) {{ReadOnlyInline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`Memory.prototype.grow()`](/en-US/docs/WebAssembly/JavaScript_interface/Memory/grow)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000338Z" creationid="gitnacho" creationdate="20221008T000338Z">
        <seg>- [`Memory.prototype.grow()`](/es/docs/WebAssembly/JavaScript_interface/Memory/grow)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`Numeric instructions`](/en-US/docs/WebAssembly/Reference/Numeric)
- [`Vector/SIMD instructions`](/en-US/docs/WebAssembly/Reference/Vector)
- [`Reference instructions`](/en-US/docs/WebAssembly/Reference/Reference)
- [`Variable instructions`](/en-US/docs/WebAssembly/Reference/Variables)
- [`Table instructions`](/en-US/docs/WebAssembly/Reference/Table)
- [`Memory instructions`](/en-US/docs/WebAssembly/Reference/Memory)
- [`Control flow instructions`](/en-US/docs/WebAssembly/Reference/Control_flow)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T124250Z" creationid="gitnacho" creationdate="20221019T123855Z">
        <seg>- [Instrucciones numéricas](/es/docs/WebAssembly/Reference/Numeric)
- [Instrucciones `Vector/SIMD`](/es/docs/WebAssembly/Reference/Vector)
- [Referencia de instrucciones](/es/docs/WebAssembly/Reference/Reference)
- [Instrucciones de `Variable`s](/es/docs/WebAssembly/Reference/Variables)
- [Instrucciones de `Table`](/es/docs/WebAssembly/Reference/Table)
- [Instrucciones de `Memory`](/es/docs/WebAssembly/Reference/Memory)
- [Instrucciones de control de flujo](/es/docs/WebAssembly/Reference/Control_flow)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`Size`](/en-US/docs/WebAssembly/Reference/Memory/Size)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T095313Z" creationid="gitnacho" creationdate="20221007T095313Z">
        <seg>- [`Size`](/es/docs/WebAssembly/Reference/Memory/Size)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`Store`](/en-US/docs/WebAssembly/Reference/Memory/Store)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T095343Z" creationid="gitnacho" creationdate="20221007T095343Z">
        <seg>- [`Store`](/es/docs/WebAssembly/Reference/Memory/Store)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`Table.prototype.get()`](/en-US/docs/WebAssembly/JavaScript_interface/Table/get)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095203Z" creationid="gitnacho" creationdate="20221006T095203Z">
        <seg>- [`Table.prototype.get()`](/es/docs/WebAssembly/JavaScript_interface/Table/get)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`Table.prototype.grow()`](/en-US/docs/WebAssembly/JavaScript_interface/Table/grow)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095229Z" creationid="gitnacho" creationdate="20221006T095229Z">
        <seg>- [`Table.prototype.grow()`](/es/docs/WebAssembly/JavaScript_interface/Table/grow)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`Table.prototype.length`](/en-US/docs/WebAssembly/JavaScript_interface/Table/length) {{ReadOnlyInline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095118Z" creationid="gitnacho" creationdate="20221006T095118Z">
        <seg>- [`Table.prototype.length`](/es/docs/WebAssembly/JavaScript_interface/Table/length) {{ReadOnlyInline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`Table.prototype.set()`](/en-US/docs/WebAssembly/JavaScript_interface/Table/set)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095303Z" creationid="gitnacho" creationdate="20221006T095303Z">
        <seg>- [`Table.prototype.set()`](/es/docs/WebAssembly/JavaScript_interface/Table/set)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`Tag.prototype.type()`](/en-US/docs/WebAssembly/JavaScript_interface/Tag/type)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015424Z" creationid="gitnacho" creationdate="20221008T015424Z">
        <seg>- [`Tag.prototype.type()`](/es/docs/WebAssembly/JavaScript_interface/Tag/type)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.CompileError()`](/en-US/docs/WebAssembly/JavaScript_interface/CompileError)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T102531Z">
        <seg>- [`WebAssembly.CompileError()`](/es/docs/WebAssembly/JavaScript_interface/CompileError)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.CompileError()`](/en-US/docs/WebAssembly/JavaScript_interface/CompileError/CompileError)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T025327Z" creationid="gitnacho" creationdate="20221008T025327Z">
        <seg>- [`WebAssembly.CompileError()`](/es/docs/WebAssembly/JavaScript_interface/CompileError/CompileError)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.Exception()`](/en-US/docs/WebAssembly/JavaScript_interface/Exception)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T102504Z">
        <seg>- [`WebAssembly.Exception()`](/es/docs/WebAssembly/JavaScript_interface/Exception)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.Exception()`](/en-US/docs/WebAssembly/JavaScript_interface/Exception/Exception)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023011Z" creationid="gitnacho" creationdate="20221008T023011Z">
        <seg>- [`WebAssembly.Exception()`](/es/docs/WebAssembly/JavaScript_interface/Exception/Exception)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.Global()`](/en-US/docs/WebAssembly/JavaScript_interface/Global)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T100903Z">
        <seg>- [`WebAssembly.Global()`](/es/docs/WebAssembly/JavaScript_interface/Global)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.Global()`](/en-US/docs/WebAssembly/JavaScript_interface/Global/Global)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T104400Z" creationid="gitnacho" creationdate="20221007T104400Z">
        <seg>- [`WebAssembly.Global()`](/es/docs/WebAssembly/JavaScript_interface/Global/Global)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.Instance()`](/en-US/docs/WebAssembly/JavaScript_interface/Instance)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T200906Z" creationid="gitnacho" creationdate="20221003T101412Z">
        <seg>- [`WebAssembly.Instance()`](/es/docs/WebAssembly/JavaScript_interface/Instance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.Instance()`](/en-US/docs/WebAssembly/JavaScript_interface/Instance/Instance)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T223421Z" creationid="gitnacho" creationdate="20221005T223421Z">
        <seg>- [`WebAssembly.Instance()`](/es/docs/WebAssembly/JavaScript_interface/Instance/Instance)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.LinkError()`](/en-US/docs/WebAssembly/JavaScript_interface/LinkError)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T102543Z">
        <seg>- [`WebAssembly.LinkError()`](/es/docs/WebAssembly/JavaScript_interface/LinkError)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.LinkError()`](/en-US/docs/WebAssembly/JavaScript_interface/LinkError/LinkError)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T075132Z" creationid="gitnacho" creationdate="20221008T075132Z">
        <seg>- [`WebAssembly.LinkError()`](/es/docs/WebAssembly/JavaScript_interface/LinkError/LinkError)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.Memory()`](/en-US/docs/WebAssembly/JavaScript_interface/Memory)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T102332Z">
        <seg>- [`WebAssembly.Memory()`](/es/docs/WebAssembly/JavaScript_interface/Memory)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.Memory()`](/en-US/docs/WebAssembly/JavaScript_interface/Memory/Memory)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000228Z" creationid="gitnacho" creationdate="20221008T000228Z">
        <seg>- [`WebAssembly.Memory()`](/es/docs/WebAssembly/JavaScript_interface/Memory/Memory)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.Module()`](/en-US/docs/WebAssembly/JavaScript_interface/Module)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T101106Z">
        <seg>- [`WebAssembly.Module()`](/es/docs/WebAssembly/JavaScript_interface/Module)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.Module()`](/en-US/docs/WebAssembly/JavaScript_interface/Module/Module)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T111613Z" creationid="gitnacho" creationdate="20221007T111613Z">
        <seg>- [`WebAssembly.Module()`](/es/docs/WebAssembly/JavaScript_interface/Module/Module)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.Module.customSections()`](/en-US/docs/WebAssembly/JavaScript_interface/Module/customSections)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T111644Z" creationid="gitnacho" creationdate="20221007T111644Z">
        <seg>- [`WebAssembly.Module.customSections()`](/es/docs/WebAssembly/JavaScript_interface/Module/customSections)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.Module.exports()`](/en-US/docs/WebAssembly/JavaScript_interface/Module/exports)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T111731Z" creationid="gitnacho" creationdate="20221007T111731Z">
        <seg>- [`WebAssembly.Module.exports()`](/es/docs/WebAssembly/JavaScript_interface/Module/exports)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.Module.imports()`](/en-US/docs/WebAssembly/JavaScript_interface/Module/imports)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T111813Z" creationid="gitnacho" creationdate="20221007T111813Z">
        <seg>- [`WebAssembly.Module.imports()`](/es/docs/WebAssembly/JavaScript_interface/Module/imports)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.RuntimeError()`](/en-US/docs/WebAssembly/JavaScript_interface/RuntimeError)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T102605Z">
        <seg>- [`WebAssembly.RuntimeError()`](/es/docs/WebAssembly/JavaScript_interface/RuntimeError)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.RuntimeError()`](/en-US/docs/WebAssembly/JavaScript_interface/RuntimeError/RuntimeError)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T080731Z" creationid="gitnacho" creationdate="20221008T080731Z">
        <seg>- [`WebAssembly.RuntimeError()`](/es/docs/WebAssembly/JavaScript_interface/RuntimeError/RuntimeError)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.Table()`](/en-US/docs/WebAssembly/JavaScript_interface/Table)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T102401Z">
        <seg>- [`WebAssembly.Table()`](/es/docs/WebAssembly/JavaScript_interface/Table)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.Table()`](/en-US/docs/WebAssembly/JavaScript_interface/Table/Table)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095051Z" creationid="gitnacho" creationdate="20221006T095051Z">
        <seg>- [`WebAssembly.Table()`](/es/docs/WebAssembly/JavaScript_interface/Table/Table)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.Tag()`](/en-US/docs/WebAssembly/JavaScript_interface/Tag)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T102439Z">
        <seg>- [`WebAssembly.Tag()`](/es/docs/WebAssembly/JavaScript_interface/Tag)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.Tag()`](/en-US/docs/WebAssembly/JavaScript_interface/Tag/Tag)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015412Z" creationid="gitnacho" creationdate="20221008T015412Z">
        <seg>- [`WebAssembly.Tag()`](/es/docs/WebAssembly/JavaScript_interface/Tag/Tag)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.compile()`](/en-US/docs/WebAssembly/JavaScript_interface/compile)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T101713Z">
        <seg>- [`WebAssembly.compile()`](/es/docs/WebAssembly/JavaScript_interface/compile)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.compileStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/compileStreaming)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T101835Z">
        <seg>- [`WebAssembly.compileStreaming()`](/es/docs/WebAssembly/JavaScript_interface/compileStreaming)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.instantiate()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiate)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T102115Z">
        <seg>- [`WebAssembly.instantiate()`](/es/docs/WebAssembly/JavaScript_interface/instantiate)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.instantiateStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T102142Z">
        <seg>- [`WebAssembly.instantiateStreaming()`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebAssembly.validate()`](/en-US/docs/WebAssembly/JavaScript_interface/validate)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T102223Z">
        <seg>- [`WebAssembly.validate()`](/es/docs/WebAssembly/JavaScript_interface/validate)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebGLRenderingContext.bufferData()`](/en-US/docs/Web/API/WebGLRenderingContext/bufferData)
- [`WebGLRenderingContext.bufferSubData()`](/en-US/docs/Web/API/WebGLRenderingContext/bufferSubData)
- [`WebGL2RenderingContext.getBufferSubData()`](/en-US/docs/Web/API/WebGL2RenderingContext/getBufferSubData)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20220923T023533Z">
        <seg>- [`WebGLRenderingContext.bufferData()`](/es/docs/Web/API/WebGLRenderingContext/bufferData)
- [`WebGLRenderingContext.bufferSubData()`](/es/docs/Web/API/WebGLRenderingContext/bufferSubData)
- [`WebGL2RenderingContext.getBufferSubData()`](/es/docs/Web/API/WebGL2RenderingContext/getBufferSubData)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`WebkitBug`](https://github.com/mdn/yari/blob/main/kumascript/macros/WebkitBug.ejs) inserts a link to a bug in the WebKit bug database.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113224Z" creationid="gitnacho" creationdate="20221005T113224Z">
        <seg>- [`WebkitBug`](https://github.com/mdn/yari/blob/main/kumascript/macros/WebkitBug.ejs) inserta un enlace a un error en la base de datos de errores de WebKit.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`block`](/en-US/docs/WebAssembly/Reference/Control_flow/block)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094413Z" creationid="gitnacho" creationdate="20221007T094413Z">
        <seg>- [`block`](/es/docs/WebAssembly/Reference/Control_flow/block)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`br`](/en-US/docs/WebAssembly/Reference/Control_flow/br)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094500Z" creationid="gitnacho" creationdate="20221007T094500Z">
        <seg>- [`br`](/es/docs/WebAssembly/Reference/Control_flow/br)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`bug`](https://github.com/mdn/yari/blob/main/kumascript/macros/bug.ejs) allows you to link to a bug on bugzilla.mozilla.org easily using this syntax: `\{{Bug(123456)}}`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T121535Z" creationid="gitnacho" creationdate="20221005T113141Z">
        <seg>- [`bug`](https://github.com/mdn/yari/blob/main/kumascript/macros/bug.ejs) te permite enlazar a un error en bugzilla.mozilla.org fácilmente usando esta sintaxis: ` \{{Bug(123456)}}`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`call`](/en-US/docs/WebAssembly/Reference/Control_flow/call)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094523Z" creationid="gitnacho" creationdate="20221007T094523Z">
        <seg>- [`call`](/es/docs/WebAssembly/Reference/Control_flow/call)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`drop`](/en-US/docs/WebAssembly/Reference/Control_flow/Drop)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094537Z" creationid="gitnacho" creationdate="20221007T094537Z">
        <seg>- [`drop`](/es/docs/WebAssembly/Reference/Control_flow/Drop)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`end`](/en-US/docs/WebAssembly/Reference/Control_flow/end)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094548Z" creationid="gitnacho" creationdate="20221007T094548Z">
        <seg>- [`end`](/es/docs/WebAssembly/Reference/Control_flow/end)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`exports`](/en-US/docs/WebAssembly/JavaScript_interface/Instance/exports)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T223440Z" creationid="gitnacho" creationdate="20221005T223440Z">
        <seg>- [`exports`](/es/docs/WebAssembly/JavaScript_interface/Instance/exports)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`if...else`](/en-US/docs/WebAssembly/Reference/Control_flow/if...else)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094623Z" creationid="gitnacho" creationdate="20221007T094623Z">
        <seg>- [`if...else`](/es/docs/WebAssembly/Reference/Control_flow/if...else)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`loop`](/en-US/docs/WebAssembly/Reference/Control_flow/loop)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094658Z" creationid="gitnacho" creationdate="20221007T094658Z">
        <seg>- [`loop`](/es/docs/WebAssembly/Reference/Control_flow/loop)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`non-standard_header`](https://github.com/mdn/yari/blob/main/kumascript/macros/Non-standard_Header.ejs): `\{{Non-standard_Header}}` {{Non-standard_Header}}
- [`SeeCompatTable`](https://github.com/mdn/yari/blob/main/kumascript/macros/SeeCompatTable.ejs) should be used on pages that document [experimental features](/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221005T115513Z">
        <seg>- [`non-standard_header`](https://github.com/mdn/yari/blob/main/kumascript/macros/Non-standard_Header.ejs): `\{{Non-standard_Header}}` {{Non-standard_Header}}
- [`SeeCompatTable`](https://github.com/mdn/yari/blob/main/kumascript/macros/SeeCompatTable.ejs) se debe usar en páginas que documentan [características experimentales](/es/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`nop`](/en-US/docs/WebAssembly/Reference/Control_flow/nop)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094740Z" creationid="gitnacho" creationdate="20221007T094740Z">
        <seg>- [`nop`](/es/docs/WebAssembly/Reference/Control_flow/nop)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`return`](/en-US/docs/WebAssembly/Reference/Control_flow/return)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094756Z" creationid="gitnacho" creationdate="20221007T094756Z">
        <seg>- [`return`](/es/docs/WebAssembly/Reference/Control_flow/return)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`select`](/en-US/docs/WebAssembly/Reference/Control_flow/Select)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094808Z" creationid="gitnacho" creationdate="20221007T094808Z">
        <seg>- [`select`](/es/docs/WebAssembly/Reference/Control_flow/Select)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [`unreachable`](/en-US/docs/WebAssembly/Reference/Control_flow/unreachable)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094830Z" creationid="gitnacho" creationdate="20221007T094830Z">
        <seg>- [`unreachable`](/es/docs/WebAssembly/Reference/Control_flow/unreachable)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [emscripten.org](https://emscripten.org/) — learn more about Emscripten and its large variety of options.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T112513Z" creationid="gitnacho" creationdate="20221003T112513Z">
        <seg>- [emscripten.org](https://emscripten.org/): obtén más información sobre Emscripten y su gran variedad de opciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [inline links](https://github.github.com/gfm/#inline-link), in which the destination is given immediately after the link text
- [reference links](https://github.github.com/gfm/#reference-link), in which the destination is defined elsewhere in the document.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T173922Z" creationid="gitnacho" creationdate="20221008T173922Z">
        <seg>- [enlaces en línea](https://github.github.com/gfm/#inline-link), en los que el destino se indica inmediatamente después del texto del enlace
- [enlaces de referencia](https://github.github.com/gfm/#reference-link), en el que el destino se define en otra parte del documento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [wast-loader](https://github.com/xtuc/webassemblyjs/tree/master/packages/wast-loader) — a loader for webpack that takes care of all of this for you.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T183358Z" creationid="gitnacho" creationdate="20221007T183358Z">
        <seg>- [`wast-loader`](https://github.com/xtuc/webassemblyjs/tree/master/packages/wast-loader): un cargador para webpack que se encarga de todo esto por ti.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- [webassembly.org](https://webassembly.org/)
- [WebAssembly concepts](/en-US/docs/WebAssembly/Concepts)
- [WebAssembly on Mozilla Research](https://research.mozilla.org/)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T093507Z" creationid="gitnacho" creationdate="20221003T093159Z">
        <seg>- [webassembly.org](https://webassembly.org/)
- [Conceptos WebAssembly](/es/docs/WebAssembly/Concepts)
- [La investigación de WebAssembly en Mozilla](https://research.mozilla.org/)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `"activated"`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223800Z" creationid="gitnacho" creationdate="20221003T223800Z">
        <seg>- `"activated"`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `"activating"`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223659Z" creationid="gitnacho" creationdate="20221003T223659Z">
        <seg>- `"activating"`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `"installed"`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223632Z" creationid="gitnacho" creationdate="20221003T223632Z">
        <seg>- `"installed"`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `"parsed"`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223337Z" creationid="gitnacho" creationdate="20221003T223337Z">
        <seg>- `"parsed"`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `"redundant"`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223825Z" creationid="gitnacho" creationdate="20221003T223825Z">
        <seg>- `"redundant"`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `-o hello.html` — Specifies that we want Emscripten to generate an HTML page to run our code in (and a filename to use), as well as the wasm module and the JavaScript "glue" code to compile and instantiate the wasm so it can be used in the web environment.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105728Z" creationid="gitnacho" creationdate="20221003T105728Z">
        <seg>- `-o hello.html` — Especifica que queremos que Emscripten genere una página HTML para ejecutar nuestro código (y un nombre de archivo a usar), así como el módulo `wasm` y el código "pegamento" de JavaScript para compilar e instanciar el `wasm` para que se pueda utilizar en el entorno web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `&lt;%- expr %&gt;` — the value of a JavaScript expression is included in output without any escaping.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070027Z" creationid="gitnacho" creationdate="20221005T070027Z">
        <seg>- `&lt;%- expr %&gt;` — el valor de una expresión JavaScript se incluye en la salida sin ningún tipo de escape.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `&lt;%= expr %&gt;` — the value of a JavaScript expression is escaped for HTML before being included in output (e.g., characters like `&lt;` and `&gt;` are turned into `&amp;lt;` and `&amp;gt;`).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070003Z" creationid="gitnacho" creationdate="20221005T070003Z">
        <seg>- `&lt;%= expr %&gt;` — el valor de una expresión de JavaScript se escapa para HTML antes de incluirse en la salida (por ejemplo, caracteres como `&lt;` y `&gt;` se convierten en `&amp;lt;` y `&amp;gt;`) .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `Global.prototype.constructor`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T104501Z" creationid="gitnacho" creationdate="20221007T104501Z">
        <seg>- `Global.prototype.constructor`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `Global.prototype.valueOf()`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T104629Z" creationid="gitnacho" creationdate="20221007T104629Z">
        <seg>- `Global.prototype.valueOf()`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `Global.prototype.value`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T104607Z" creationid="gitnacho" creationdate="20221007T104607Z">
        <seg>- `Global.prototype.value`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `Global.prototype[@@toStringTag]`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T104534Z" creationid="gitnacho" creationdate="20221007T104534Z">
        <seg>- `Global.prototype[@@toStringTag]`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `SharedArrayBuffer` objects are in principle always available, but unfortunately the constructor on the global object is hidden, unless the two headers mentioned above are set, for compatibility with web content.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T030713Z" creationid="gitnacho" creationdate="20220923T030713Z">
        <seg>- En principio, los objetos `SharedArrayBuffer` siempre están disponibles, pero desafortunadamente el constructor del objeto global está oculto, a menos que se establezcan los dos encabezados mencionados anteriormente, por compatibilidad con el contenido web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `TypeError`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140547Z" creationid="gitnacho" creationdate="20221019T140547Z">
        <seg>- `TypeError`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `anyfunc`: A function reference.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110650Z" creationid="gitnacho" creationdate="20221007T110650Z">
        <seg>- `anyfunc`: Una referencia a función.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `application/x-www-form-urlencoded`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220853Z" creationid="gitnacho" creationdate="20221011T220853Z">
        <seg>- `application/x-www-form-urlencoded`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `auto`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T124642Z" creationid="gitnacho" creationdate="20221003T124642Z">
        <seg>- `auto`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `batch` - Batch (Windows Shell)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T175003Z" creationid="gitnacho" creationdate="20221008T175003Z">
        <seg>- `batch` - Batch (Windows Shell)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `bufferSource`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T122223Z" creationid="gitnacho" creationdate="20221007T122223Z">
        <seg>- `bufferSource`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `c` - C</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174741Z" creationid="gitnacho" creationdate="20221008T174741Z">
        <seg>- `c` - C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `cacheFn(key, timeout, function_to_cache)`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072544Z" creationid="gitnacho" creationdate="20221005T072544Z">
        <seg>- `cacheFn(key, timeout, function_to_cache)`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `cacheName`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T225040Z" creationid="gitnacho" creationdate="20220921T225040Z">
        <seg>- `cacheName`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `cause` {{optional_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T135007Z" creationid="gitnacho" creationdate="20221019T135007Z">
        <seg>- `cause` {{optional_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `clike` - C-like (for any C-like language not defined)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174801Z" creationid="gitnacho" creationdate="20221008T174801Z">
        <seg>- `clike` - C-like (para cualquier lenguaje similar a C no definido)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `cpp` - C++</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174742Z" creationid="gitnacho" creationdate="20221008T174742Z">
        <seg>- `cpp` - C++</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `cs` - C#</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174742Z" creationid="gitnacho" creationdate="20221008T174742Z">
        <seg>- `cs` - C#</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `css` - CSS</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174821Z" creationid="gitnacho" creationdate="20221008T174821Z">
        <seg>- `css` - CSS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `data.drop`: Discard the data in an data segment.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074653Z" creationid="gitnacho" creationdate="20221007T074653Z">
        <seg>- `data.drop`: Descarta los datos en un segmento de datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `descriptor`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110503Z" creationid="gitnacho" creationdate="20221007T110503Z">
        <seg>- `descriptor`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `diff` - Diff file</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T175041Z" creationid="gitnacho" creationdate="20221008T175023Z">
        <seg>- `diff` - Archivo de diferencias</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `elem.drop`: Discard the data in an element segment.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074658Z" creationid="gitnacho" creationdate="20221007T074658Z">
        <seg>- `elem.drop`: Descarta los datos en un segmento de elemento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `element`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T235954Z" creationid="gitnacho" creationdate="20221019T235954Z">
        <seg>- `element`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `env.path`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070522Z" creationid="gitnacho" creationdate="20221005T070522Z">
        <seg>- `env.path`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `example-good`: style this example as a good example (one to follow)
- `example-bad`: style this example as a bad example (one to avoid)
- `hidden`: don't render this code block in the page.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T180842Z" creationid="gitnacho" creationdate="20221008T180842Z">
        <seg>- `example-good`: aplicar estilo a este ejemplo como un buen ejemplo (uno a seguir)
- `example-bad`: aplicar estilo a este ejemplo como un mal ejemplo (uno para evitar)
- `hidden`: no renderizar este bloque de código en la página.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `exceptionTag`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142354Z" creationid="gitnacho" creationdate="20221019T142354Z">
        <seg>- `exceptionTag`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `externref`: A host reference.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110626Z" creationid="gitnacho" creationdate="20221007T110626Z">
        <seg>- `externref`: Una referencia de host.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `f32`: A 32-bit floating point number.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110559Z" creationid="gitnacho" creationdate="20221007T110559Z">
        <seg>- `f32`: Un número de coma flotante de 32 bits.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `f64`: A 64-bit floating point number.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110605Z" creationid="gitnacho" creationdate="20221007T110605Z">
        <seg>- `f64`: Un número de coma flotante de 64 bits.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `fileName` {{optional_inline}} {{non-standard_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T135024Z" creationid="gitnacho" creationdate="20221019T135024Z">
        <seg>- `fileName` {{optional_inline}} {{non-standard_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `glsl` - GLSL (OpenGL Shaders)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174812Z" creationid="gitnacho" creationdate="20221008T174812Z">
        <seg>- `glsl` - GLSL (OpenGL Shaders)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `high`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T124612Z" creationid="gitnacho" creationdate="20221003T124612Z">
        <seg>- `high`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `html` - HTML</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174827Z" creationid="gitnacho" creationdate="20221008T174827Z">
        <seg>- `html` - HTML</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `http://Example.com:80`
- `http://example.com`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T152837Z" creationid="gitnacho" creationdate="20221017T151500Z">
        <seg>- `http://ejemplo.com:80`
- `http://ejemplo.com`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `http://example.com/app1/index.html`
- `http://example.com/app2/index.html`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T152837Z" creationid="gitnacho" creationdate="20221017T151450Z">
        <seg>- `http://ejemplo.com/app1/index.html`
- `http://ejemplo.com/app2/index.html`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `http://example.com/app1`
- `https://example.com/app2`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T152837Z" creationid="gitnacho" creationdate="20221017T151507Z">
        <seg>- `http://ejemplo.com/app1`
- `https://ejemplo.com/app2`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `http://example.com`
- `http://example.com:8080`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T152837Z" creationid="gitnacho" creationdate="20221017T151526Z">
        <seg>- `http://ejemplo.com`
- `http://ejemplo.com:8080`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `http://example.com`
- `http://www.example.com`
- `http://myapp.example.com`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T152837Z" creationid="gitnacho" creationdate="20221017T151517Z">
        <seg>- `http://ejemplo.com`
- `http://www.ejemplo.com`
- `http://myapp.ejemplo.com`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `http` - HTTP headers</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T180555Z" creationid="gitnacho" creationdate="20221008T180555Z">
        <seg>- `http` - HTTP headers</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `i32`: 32-bit integer
- `i64`: 64-bit integer
- `f32`: 32-bit float
- `f64`: 64-bit float</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054431Z" creationid="gitnacho" creationdate="20221007T054431Z">
        <seg>- `i32`: 32-bit integer
- `i64`: 64-bit integer
- `f32`: 32-bit float
- `f64`: 64-bit float</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `i32`: A 32-bit integer.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110538Z" creationid="gitnacho" creationdate="20221007T110538Z">
        <seg>- `i32`: A 32-bit integer.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `i64`: A 64-bit integer.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110539Z" creationid="gitnacho" creationdate="20221007T110539Z">
        <seg>- `i64`: A 64-bit integer.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `ignore` - Gitignore file
- Other</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T180553Z" creationid="gitnacho" creationdate="20221008T175045Z">
        <seg>- `ignore` - Archivo Gitignore
- Otro</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `importObject` {{optional_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T101836Z" creationid="gitnacho" creationdate="20221006T101836Z">
        <seg>- `importObject` {{optional_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `index`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T091639Z" creationid="gitnacho" creationdate="20221006T091639Z">
        <seg>- `index`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `ini` - INI</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T175018Z" creationid="gitnacho" creationdate="20221008T175018Z">
        <seg>- `ini` - INI</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `initial`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T215120Z" creationid="gitnacho" creationdate="20221019T215120Z">
        <seg>- `initial`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `instance`: A [`WebAssembly.Instance`](/en-US/docs/WebAssembly/JavaScript_interface/Instance) object that contains all</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T102352Z" creationid="gitnacho" creationdate="20221006T102352Z">
        <seg>- `instance`: Un objeto [`WebAssembly.Instance`](/es/docs/WebAssembly/JavaScript_interface/Instance) que contiene todas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `isCustomObject` {{ReadOnlyInline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114012Z" creationid="gitnacho" creationdate="20221005T114012Z">
        <seg>- `isCustomObject` {{ReadOnlyInline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `java` - Java</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174744Z" creationid="gitnacho" creationdate="20221008T174744Z">
        <seg>- `java` - Java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `js` - JavaScript</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174738Z" creationid="gitnacho" creationdate="20221008T174738Z">
        <seg>- `js` - JavaScript</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `json` - JSON</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T175018Z" creationid="gitnacho" creationdate="20221008T175018Z">
        <seg>- `json` - JSON</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `jsx` - React JSX</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174739Z" creationid="gitnacho" creationdate="20221008T174739Z">
        <seg>- `jsx` - React JSX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `kuma.*` - [Kuma](https://github.com/mdn/yari/blob/main/kumascript/src/api/kuma.js)
- `MDN.*` - [MDN:Common](https://github.com/mdn/yari/blob/main/kumascript/src/api/mdn.js)
- `page.*` - [DekiScript:Page](https://github.com/mdn/yari/blob/main/kumascript/src/api/page.js)
- `string.*` - [DekiScript:String](https://github.com/mdn/yari/blob/main/kumascript/src/api/string.js)
- `web.*` - [DekiScript:Web](https://github.com/mdn/yari/blob/main/kumascript/src/api/web.js)
- `wiki.*` - [DekiScript:Wiki](https://github.com/mdn/yari/blob/main/kumascript/src/api/wiki.js)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073109Z" creationid="gitnacho" creationdate="20221005T073109Z">
        <seg>- `kuma.*` - [Kuma](https://github.com/mdn/yari/blob/main/kumascript/src/api/kuma.js)
- `MDN.*` - [MDN:Common](https://github.com/mdn/yari/blob/main/kumascript/src/api/mdn.js)
- `page.*` - [DekiScript:Page](https://github.com/mdn/yari/blob/main/kumascript/src/api/page.js)
- `string.*` - [DekiScript:String](https://github.com/mdn/yari/blob/main/kumascript/src/api/string.js)
- `web.*` - [DekiScript:Web](https://github.com/mdn/yari/blob/main/kumascript/src/api/web.js)
- `wiki.*` - [DekiScript:Wiki](https://github.com/mdn/yari/blob/main/kumascript/src/api/wiki.js)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `kuma.fetchFeed(url)`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073407Z" creationid="gitnacho" creationdate="20221005T073407Z">
        <seg>- `kuma.fetchFeed(url)`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `kuma.htmlEscape(string)`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073259Z" creationid="gitnacho" creationdate="20221005T073259Z">
        <seg>- `kuma.htmlEscape(string)`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `kuma.inspect(object)`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073217Z" creationid="gitnacho" creationdate="20221005T073217Z">
        <seg>- `kuma.inspect(object)`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `kuma.url`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073333Z" creationid="gitnacho" creationdate="20221005T073333Z">
        <seg>- `kuma.url`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `less` - Less
- Markup</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174827Z" creationid="gitnacho" creationdate="20221008T174827Z">
        <seg>- `less` - Less
- Marcado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `lineNumber` {{optional_inline}} {{non-standard_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T135033Z" creationid="gitnacho" creationdate="20221019T135033Z">
        <seg>- `lineNumber` {{optional_inline}} {{non-standard_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `log.debug(string)`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072715Z" creationid="gitnacho" creationdate="20221005T072715Z">
        <seg>- `log.debug(string)`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `low`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T124630Z" creationid="gitnacho" creationdate="20221003T124630Z">
        <seg>- `low`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `mathml` - MathML</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174829Z" creationid="gitnacho" creationdate="20221008T174829Z">
        <seg>- `mathml` - MathML</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `maximum` {{optional_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T215132Z" creationid="gitnacho" creationdate="20221019T215132Z">
        <seg>- `maximum` {{optional_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `md5(string)`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072123Z" creationid="gitnacho" creationdate="20221005T072123Z">
        <seg>- `md5(string)`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `md` - Markdown
- Command Prompts</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174958Z" creationid="gitnacho" creationdate="20221008T174958Z">
        <seg>- `md` - Markdown
- Símbolos del sistema</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `memory.copy`: Copy from one region of linear memory to another.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074703Z" creationid="gitnacho" creationdate="20221007T074703Z">
        <seg>- `memory.copy`: Copia de una región de memoria lineal a otra.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `memory.fill`: Fill a region of linear memory with a given byte value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074708Z" creationid="gitnacho" creationdate="20221007T074708Z">
        <seg>- `memory.fill`: Rellena una región de memoria lineal con un valor de byte dado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `memory.init`: Copy a region from a data segment.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074714Z" creationid="gitnacho" creationdate="20221007T074714Z">
        <seg>- `memory.init`: Copia una región de un segmento de datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `memoryDescriptor`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T215114Z" creationid="gitnacho" creationdate="20221019T215114Z">
        <seg>- `memoryDescriptor`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `message`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115451Z" creationid="gitnacho" creationdate="20221007T115451Z">
        <seg>- `message`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `message` {{optional_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T134928Z" creationid="gitnacho" creationdate="20221019T134928Z">
        <seg>- `message` {{optional_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `module`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T191319Z" creationid="gitnacho" creationdate="20221007T191319Z">
        <seg>- `module`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `module`: A [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) object representing the</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T102245Z" creationid="gitnacho" creationdate="20221006T102245Z">
        <seg>- `module`: un objeto [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module) que representa el</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `multipart/form-data`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220854Z" creationid="gitnacho" creationdate="20221011T220854Z">
        <seg>- `multipart/form-data`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `mutable`: A boolean value that determines whether the global is</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110658Z" creationid="gitnacho" creationdate="20221007T110658Z">
        <seg>- `mutable`: Un valor booleano que determina si el global es</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `mutable`: a boolean defining whether the value is mutable or not.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233832Z" creationid="gitnacho" creationdate="20221006T233832Z">
        <seg>- `mutable`: un booleano que define si el valor es mutable o no.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `no-referrer-when-downgrade`: The {{HTTPHeader("Referer")}} header will not be sent to {{Glossary("origin")}}s without {{Glossary("TLS")}} ({{Glossary("HTTPS")}}).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T125456Z" creationid="gitnacho" creationdate="20221003T125456Z">
        <seg>- `no-referrer-when-downgrade`: el encabezado {{HTTPHeader("Referer")}} no se enviará a {{Glossary("origin")}} sin {{Glossary("TLS")}} ({{Glossary("HTTPS")}}).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `no-referrer`: The {{HTTPHeader("Referer")}} header will not be sent.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T125414Z" creationid="gitnacho" creationdate="20221003T125414Z">
        <seg>- `no-referrer`: No se enviará el encabezado {{HTTPHeader("Referer")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `number`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T233317Z" creationid="gitnacho" creationdate="20221019T233317Z">
        <seg>- `number`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `options` {{optional_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T134957Z" creationid="gitnacho" creationdate="20221019T134957Z">
        <seg>- `options` {{optional_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `options` {{optional_inline}} {{non-standard_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140404Z" creationid="gitnacho" creationdate="20221019T140404Z">
        <seg>- `options` {{optional_inline}} {{non-standard_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `origin-when-cross-origin`: The referrer sent to other origins will be limited to the scheme, the host, and the port.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T125706Z" creationid="gitnacho" creationdate="20221003T125637Z">
        <seg>- `origin-when-cross-origin`: El remitente —`referrer`— enviado a otros orígenes se limitará al esquema, el host y el puerto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `origin`: The sent referrer will be limited to the origin of the referring page: its [scheme](/en-US/docs/Learn/Common_questions/What_is_a_URL), {{Glossary("host")}}, and {{Glossary("port")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T125601Z" creationid="gitnacho" creationdate="20221003T125601Z">
        <seg>- `origin`: La referencia enviada se limitará al origen de la página de referencia: su [esquema](/es/docs/Learn/Common_questions/What_is_a_URL), {{Glossary("host")}}, y {{Glossary("port")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `pageIncrease`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T214434Z" creationid="gitnacho" creationdate="20221019T214434Z">
        <seg>- `pageIncrease`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `parameterX` {{optional_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114042Z" creationid="gitnacho" creationdate="20221005T114042Z">
        <seg>- `parameterX` {{optional_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `parameters`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T070808Z" creationid="gitnacho" creationdate="20221020T070808Z">
        <seg>- `parameters`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `payload`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140307Z" creationid="gitnacho" creationdate="20221019T140307Z">
        <seg>- `payload`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `php` - PHP</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174808Z" creationid="gitnacho" creationdate="20221008T174808Z">
        <seg>- `php` - PHP</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `powershell` - PowerShell
- Configuration/Data Files</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T175017Z" creationid="gitnacho" creationdate="20221008T175017Z">
        <seg>- `powershell` - PowerShell
- Configuración/Archivos de datos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `pug` - [Pug templates](https://pugjs.org/api/getting-started.html) (which may be used by [Express](/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Template_primer))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T180640Z" creationid="gitnacho" creationdate="20221008T180640Z">
        <seg>- `pug` - [Plantillas Pug](https://pugjs.org/api/getting-started.html) (es lo puede utilizar [Express](/es/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Template_primer))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `python` - Python</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174808Z" creationid="gitnacho" creationdate="20221008T174808Z">
        <seg>- `python` - Python</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `regex` - Regex</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T180641Z" creationid="gitnacho" creationdate="20221008T180641Z">
        <seg>- `regex` - Regex</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `request`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072637Z" creationid="gitnacho" creationdate="20221005T072637Z">
        <seg>- `request`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `require(name)`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072452Z" creationid="gitnacho" creationdate="20221005T072452Z">
        <seg>- `require(name)`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `rust` - Rust</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174809Z" creationid="gitnacho" creationdate="20221008T174809Z">
        <seg>- `rust` - Rust</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `same-origin`: A referrer will be sent for {{Glossary("Same-origin policy", "same origin")}}, but cross-origin requests will contain no referrer information.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T125936Z" creationid="gitnacho" creationdate="20221003T125936Z">
        <seg>- `same-origin`: Se enviará una referencia para {{Glossary("Same-origin policy", "same origin")}}, pero las solicitudes de origen cruzado no contendrán información del remitente —`referrer`—.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `scss` - Sass (SCSS)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174821Z" creationid="gitnacho" creationdate="20221008T174821Z">
        <seg>- `scss` - Sass (SCSS)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `sectionName`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T221739Z" creationid="gitnacho" creationdate="20221019T221739Z">
        <seg>- `sectionName`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `sh` - Bash/Shell</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174959Z" creationid="gitnacho" creationdate="20221008T174959Z">
        <seg>- `sh` - Bash/Shell</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `shared` {{optional_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T215915Z" creationid="gitnacho" creationdate="20221019T215915Z">
        <seg>- `shared` {{optional_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `source`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T101125Z" creationid="gitnacho" creationdate="20221006T101125Z">
        <seg>- `source`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `sql` - SQL Database</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T175032Z" creationid="gitnacho" creationdate="20221008T175020Z">
        <seg>- `sql` - Base de datos SQL</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `strict-origin-when-cross-origin` (default): Send a full URL when performing a same-origin request, only send the origin when the protocol security level stays the same (HTTPS→HTTPS), and send no header to a less secure destination (HTTPS→HTTP).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T130050Z" creationid="gitnacho" creationdate="20221003T130050Z">
        <seg>- `strict-origin-when-cross-origin` (predeterminado): Envía una URL completa cuando realice una solicitud del mismo origen, solo envía el origen cuando el nivel de seguridad del protocolo permanezca igual (HTTPS→HTTPS), y no envía ningún encabezado a un destino menos seguro (HTTPS→HTTP).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `strict-origin`: Only send the origin of the document as the referrer when the protocol security level stays the same (HTTPS→HTTPS), but don't send it to a less secure destination (HTTPS→HTTP).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T130014Z" creationid="gitnacho" creationdate="20221003T130014Z">
        <seg>- `strict-origin`: Solo envía el origen del documento como remitente cuando el nivel de seguridad del protocolo permanezca igual (HTTPS→HTTPS), pero no lo envía a un destino menos seguro (HTTPS→HTTP).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `svg` - SVG</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174828Z" creationid="gitnacho" creationdate="20221008T174828Z">
        <seg>- `svg` - SVG</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `table.copy`: Copy from one region of a table to another.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074719Z" creationid="gitnacho" creationdate="20221007T074719Z">
        <seg>- `table.copy`: Copia de una región de una tabla a otra.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `table.init`: Copy a region from an element segment.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074724Z" creationid="gitnacho" creationdate="20221007T074724Z">
        <seg>- `table.init`: Copia una región de un segmento de elemento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `tableDescriptor`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T235947Z" creationid="gitnacho" creationdate="20221019T235947Z">
        <seg>- `tableDescriptor`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `tag`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140227Z" creationid="gitnacho" creationdate="20221019T140227Z">
        <seg>- `tag`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `template("name", ["arg0", "arg1", …, "argN"])`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072141Z" creationid="gitnacho" creationdate="20221005T072141Z">
        <seg>- `template("name", ["arg0", "arg1", …, "argN"])`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `term2`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183225Z" creationid="gitnacho" creationdate="20221008T183225Z">
        <seg>- `term2`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `text/plain`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220854Z" creationid="gitnacho" creationdate="20221011T220854Z">
        <seg>- `text/plain`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `title`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071141Z" creationid="gitnacho" creationdate="20221005T071141Z">
        <seg>- `title`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `toml` - TOML</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T175019Z" creationid="gitnacho" creationdate="20221008T175019Z">
        <seg>- `toml` - TOML</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `traceStack` {{optional_inline}} {{non-standard_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140413Z" creationid="gitnacho" creationdate="20221019T140413Z">
        <seg>- `traceStack` {{optional_inline}} {{non-standard_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `transfer` {{optional_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115626Z" creationid="gitnacho" creationdate="20221007T115626Z">
        <seg>- `transfer` {{optional_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `ts` - TypeScript</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174739Z" creationid="gitnacho" creationdate="20221008T174739Z">
        <seg>- `ts` - TypeScript</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `tsx` - React TSX</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174740Z" creationid="gitnacho" creationdate="20221008T174740Z">
        <seg>- `tsx` - React TSX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `type`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T070807Z" creationid="gitnacho" creationdate="20221020T070807Z">
        <seg>- `type`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `unsafe-url`: The referrer will include the origin _and_ the path (but not the [fragment](/en-US/docs/Web/API/HTMLAnchorElement/hash), [password](/en-US/docs/Web/API/HTMLAnchorElement/password), or [username](/en-US/docs/Web/API/HTMLAnchorElement/username)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T120401Z" creationid="gitnacho" creationdate="20221003T130254Z">
        <seg>- `unsafe-url`: El referente incluirá el origen _y_ la ruta (pero no el [fragmento](/es/docs/Web/API/HTMLAnchorElement/hash), [contraseña](/es/docs/Web/API/HTMLAnchorElement/password), o [nombre de usuario](/es/docs/Web/API/HTMLAnchorElement/username)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `uri` - URIs and URLs</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T180646Z" creationid="gitnacho" creationdate="20221008T180646Z">
        <seg>- `uri` - URIs y URLs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `v128`: 128 bit vector of packed integer, floating-point data, or a single 128 bit type.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074817Z" creationid="gitnacho" creationdate="20221007T074817Z">
        <seg>- `v128`: vector de 128 bits de entero empaquetado, datos de punto flotante o un solo tipo de 128 bits.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `v128`: A 128-bit vector.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110611Z" creationid="gitnacho" creationdate="20221007T110611Z">
        <seg>- `v128`: Un vector de 128 bits.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `value`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073340Z" creationid="gitnacho" creationdate="20221002T073340Z">
        <seg>- `value`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `value`: A string representing the</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110522Z" creationid="gitnacho" creationdate="20221007T110522Z">
        <seg>- `value`: Una cadena que representa el</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `value`: its data type, which can be any data type accepted within WebAssembly modules — `i32`, `i64`, `f32`, or `f64`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233824Z" creationid="gitnacho" creationdate="20221006T233824Z">
        <seg>- `value`: su tipo de dato, que puede ser cualquier tipo de dato aceptado en los módulos de WebAssembly: `i32`, `i64`, `f32` o `f64`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `wasm` - WebAssembly
- Styling</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174820Z" creationid="gitnacho" creationdate="20221008T174820Z">
        <seg>- `wasm` - WebAssembly
- Estilizado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `xml` - XML</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174829Z" creationid="gitnacho" creationdate="20221008T174829Z">
        <seg>- `xml` - XML</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- `yaml` - YAML</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T175019Z" creationid="gitnacho" creationdate="20221008T175019Z">
        <seg>- `yaml` - YAML</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- assembly</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182421Z" creationid="gitnacho" creationdate="20221007T182421Z">
        <seg>- assembly
  - ensamblador</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- basics
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20220921T014615Z">
        <seg>- basics
  - lo esencial
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- bytecode
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221004T071130Z">
        <seg>- bytecode
  - código de bytes
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- calls</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T044808Z" creationid="gitnacho" creationdate="20221007T044808Z">
        <seg>- calls
  - llamadas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- compile</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043330Z" creationid="gitnacho" creationdate="20221004T043330Z">
        <seg>- compile
  - compilar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- compile
browser-compat: javascript.builtins.WebAssembly.compile
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221007T122142Z">
        <seg>- compile
browser-compat: javascript.builtins.WebAssembly.compile
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- compileStreaming</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T185811Z" creationid="gitnacho" creationdate="20221007T185811Z">
        <seg>- compileStreaming</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- concepts</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T231253Z" creationid="gitnacho" creationdate="20221003T003609Z">
        <seg>- concepts
  - conceptos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- controllerchange
browser-compat: api.ServiceWorkerContainer.controllerchange_event
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221003T230418Z">
        <seg>- controllerchange
browser-compat: api.ServiceWorkerContainer.controllerchange_event
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- conversion</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182430Z" creationid="gitnacho" creationdate="20221007T182430Z">
        <seg>- conversion
  - conversión</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- customSections
browser-compat: javascript.builtins.WebAssembly.Module.customSections
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T221652Z">
        <seg>- customSections
browser-compat: javascript.builtins.WebAssembly.Module.customSections
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- export</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T084629Z" creationid="gitnacho" creationdate="20221006T084629Z">
        <seg>- export</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- exported functions</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T084701Z" creationid="gitnacho" creationdate="20221006T084652Z">
        <seg>- exported functions
  - funciones exportadas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- exported wasm functions</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T084720Z" creationid="gitnacho" creationdate="20221006T084656Z">
        <seg>- exported wasm functions
  - funciones wasm exportadas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- exports</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T093448Z" creationid="gitnacho" creationdate="20221006T093448Z">
        <seg>- exports</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- exports
browser-compat: javascript.builtins.WebAssembly.Module.exports
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T224530Z">
        <seg>- exports
browser-compat: javascript.builtins.WebAssembly.Module.exports
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- features</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T232446Z" creationid="gitnacho" creationdate="20221018T232446Z">
        <seg>- features
  - características</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- get</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T091231Z" creationid="gitnacho" creationdate="20221006T091231Z">
        <seg>- get</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- getArg</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T141558Z" creationid="gitnacho" creationdate="20221019T141558Z">
        <seg>- getArg</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- grow</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T213834Z" creationid="gitnacho" creationdate="20221019T213834Z">
        <seg>- grow
  - crecer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- have access to a database, files, or any other way to store information persistently.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083604Z" creationid="gitnacho" creationdate="20221005T064722Z">
        <seg>- **No** tiene acceso a una base de datos, archivos o cualquier otra forma de almacenar información de forma persistente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- have access to user information, only to the content and metadata of an MDN page being viewed.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083733Z" creationid="gitnacho" creationdate="20221005T064836Z">
        <seg>- **No** tiene acceso a la información del usuario, solo al contenido y metadatos de la página MDN que se está viendo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- header</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T074019Z" creationid="gitnacho" creationdate="20221012T074019Z">
        <seg>- header</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- imports
browser-compat: javascript.builtins.WebAssembly.Module.imports
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T230119Z">
        <seg>- imports
  - importaciones
browser-compat: javascript.builtins.WebAssembly.Module.imports
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- instance
browser-compat: javascript.builtins.WebAssembly.Instance.exports
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221006T093456Z">
        <seg>- instance
browser-compat: javascript.builtins.WebAssembly.Instance.exports
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- instantiate</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T101023Z" creationid="gitnacho" creationdate="20221006T101023Z">
        <seg>- instantiate
  - crear instancia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- instantiate
browser-compat: javascript.builtins.WebAssembly.instantiate
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221007T191354Z">
        <seg>- instantiate
browser-compat: javascript.builtins.WebAssembly.instantiate
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- instantiateStreaming</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T101024Z" creationid="gitnacho" creationdate="20221006T101024Z">
        <seg>- instantiateStreaming</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- is</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T144939Z" creationid="gitnacho" creationdate="20221019T144939Z">
        <seg>- is</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- length</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T105942Z" creationid="gitnacho" creationdate="20221006T105942Z">
        <seg>- length</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- macOS: [Firefox](https://www.mozilla.org/en-US/firefox/new/), [Chrome](https://www.google.com/chrome/), [Opera](https://www.opera.com/), [Safari](https://www.apple.com/safari/), [Brave](https://brave.com) (macOS and iOS come with Safari by default).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T054624Z" creationid="gitnacho" creationdate="20221012T164133Z">
        <seg>- macOS: [Firefox](https://www.mozilla.org/es/firefox/new/), [Chrome](https://www.google.com/chrome/), [Opera](https://www.opera.com/), [Safari](https://www.apple.com/safari/), [Brave](https://brave.com) (macOS e iOS vienen con Safari de manera predeterminada).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- memory</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T111251Z" creationid="gitnacho" creationdate="20221006T111251Z">
        <seg>- memory
  - memoria</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- memory
browser-compat: javascript.builtins.WebAssembly.Memory.buffer
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T213031Z">
        <seg>- memory
browser-compat: javascript.builtins.WebAssembly.Memory.buffer
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- memory
browser-compat: javascript.builtins.WebAssembly.Memory.grow
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T213906Z">
        <seg>- memory
  - memoria
browser-compat: javascript.builtins.WebAssembly.Memory.grow
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- meta</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T094603Z" creationid="gitnacho" creationdate="20221005T094603Z">
        <seg>- meta</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- must be served over `https://` or `wss://` URLs
- the security properties of the network channel used to deliver the resource must not be considered deprecated</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T204313Z" creationid="gitnacho" creationdate="20221018T204313Z">
        <seg>- Se deben publicar a través de las URLs `https://` o `wss://`
- Las propiedades de seguridad del canal de red utilizado para entregar el recurso no se deben considerar obsoletas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- open
browser-compat: api.CacheStorage.open
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20220921T224616Z">
        <seg>- open
  - abrir
browser-compat: api.CacheStorage.open
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- origin
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T151342Z" creationid="gitnacho" creationdate="20221017T151342Z">
        <seg>- origin
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- postMessage
browser-compat: api.Worker.postMessage
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221007T115214Z">
        <seg>- postMessage
browser-compat: api.Worker.postMessage
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- publishing</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T111856Z" creationid="gitnacho" creationdate="20220925T035531Z">
        <seg>- edición
  - publicación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- requestAnimationFrame
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T013612Z" creationid="gitnacho" creationdate="20220921T013612Z">
        <seg>- requestAnimationFrame
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- rust</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T003610Z" creationid="gitnacho" creationdate="20221003T003610Z">
        <seg>- rust</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- set</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T235530Z" creationid="gitnacho" creationdate="20221019T233806Z">
        <seg>- set
  - establece</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- shared address</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T044822Z" creationid="gitnacho" creationdate="20221007T044822Z">
        <seg>- shared address
  - dirección compartida</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- stack</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T145627Z" creationid="gitnacho" creationdate="20221019T145627Z">
        <seg>- stack
  - pila</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- state
browser-compat: api.ServiceWorker.state
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221003T223059Z">
        <seg>- state
  - estado
browser-compat: api.ServiceWorker.state
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- statechange
browser-compat: api.ServiceWorker.statechange_event
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221003T224752Z">
        <seg>- statechange
browser-compat: api.ServiceWorker.statechange_event
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- step by step
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T064826Z" creationid="gitnacho" creationdate="20221019T060701Z">
        <seg>- step by step
  - Paso a paso
translation_of: Learn/Getting_started_with_the_web/What_will_your_website_look_like
original_slug: Learn/Getting_started_with_the_web/¿Cual_será_la_apariencia_de_tu_sitio_web?
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- streaming
browser-compat: javascript.builtins.WebAssembly.compileStreaming
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221007T185826Z">
        <seg>- streaming
  - transmisión en directo
browser-compat: javascript.builtins.WebAssembly.compileStreaming
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- streaming
browser-compat: javascript.builtins.WebAssembly.instantiateStreaming
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221006T101054Z">
        <seg>- streaming
browser-compat: javascript.builtins.WebAssembly.instantiateStreaming
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- support
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221018T232523Z">
        <seg>- support
  - apoyo
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- support interactive scripting of the kind that can accept form submissions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083559Z" creationid="gitnacho" creationdate="20221005T064702Z">
        <seg>- **No** admite scripts interactivos del tipo que puede aceptar envío de formularios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- support site personalization based on the currently logged in user.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083608Z" creationid="gitnacho" creationdate="20221005T064804Z">
        <seg>- **No** admite personalización del sitio basada en el usuario conectado actualmente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- table</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T044829Z" creationid="gitnacho" creationdate="20221007T044829Z">
        <seg>- table
  - tabla</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- table
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T202226Z" creationid="gitnacho" creationdate="20221006T111258Z">
        <seg>- table
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- table
browser-compat: javascript.builtins.WebAssembly.Table
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221006T100005Z">
        <seg>- table
browser-compat: javascript.builtins.WebAssembly.Table
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- table
browser-compat: javascript.builtins.WebAssembly.Table.get
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221006T091548Z">
        <seg>- table
browser-compat: javascript.builtins.WebAssembly.Table.get
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- table
browser-compat: javascript.builtins.WebAssembly.Table.grow
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T233239Z">
        <seg>- table
  - tabla
browser-compat: javascript.builtins.WebAssembly.Table.grow
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- table
browser-compat: javascript.builtins.WebAssembly.Table.length
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221006T105951Z">
        <seg>- table
browser-compat: javascript.builtins.WebAssembly.Table.length
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- table
browser-compat: javascript.builtins.WebAssembly.Table.set
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T233850Z">
        <seg>- table
browser-compat: javascript.builtins.WebAssembly.Table.set
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- table length is still 2
- content for index 0 is now a function which returns 42
- content for index 1 is now a function which returns 83</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T005600Z" creationid="gitnacho" creationdate="20221020T005600Z">
        <seg>- la longitud de `table` sigue siendo 2
- el contenido para el índice 0 ahora es una función que devuelve 42
- el contenido del índice 1 ahora es una función que devuelve 83</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- tag
browser-compat: html.elements.script
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221003T120239Z">
        <seg>- tag
browser-compat: html.elements.script
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- text editor
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T001102Z" creationid="gitnacho" creationdate="20221019T001102Z">
        <seg>- text editor
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- text format</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T003632Z" creationid="gitnacho" creationdate="20221003T003632Z">
        <seg>- formato de texto
  - text format</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- theory
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20220925T035538Z">
        <seg>- theory
  - teoría
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- timeline</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T092436Z" creationid="gitnacho" creationdate="20221006T092436Z">
        <seg>- timeline</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- validate
browser-compat: javascript.builtins.WebAssembly.validate
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221007T195630Z">
        <seg>- validate
browser-compat: javascript.builtins.WebAssembly.validate
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- waapi</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T092439Z" creationid="gitnacho" creationdate="20221006T092439Z">
        <seg>- waapi</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- wabt</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182431Z" creationid="gitnacho" creationdate="20221007T182431Z">
        <seg>- wabt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- was</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T044831Z" creationid="gitnacho" creationdate="20221007T044831Z">
        <seg>- was</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- wasm</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T091356Z" creationid="gitnacho" creationdate="20221007T091356Z">
        <seg>- wasm</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- wasm
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105106Z" creationid="gitnacho" creationdate="20221003T105106Z">
        <seg>- wasm
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- wasm
browser-compat: javascript.builtins.WebAssembly
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221003T093944Z">
        <seg>- wasm
browser-compat: javascript.builtins.WebAssembly
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- wast2wasm</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182432Z" creationid="gitnacho" creationdate="20221007T182432Z">
        <seg>- wast2wasm</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- wat2wasm
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221007T182434Z">
        <seg>- wat2wasm
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- web animations api
browser-compat: api.Document.timeline
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221006T092500Z">
        <seg>- web animations api
  - api de animaciones web
browser-compat: api.Document.timeline
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- web platform
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221003T003653Z">
        <seg>- web platform
  - plataforma web
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- writing-guide
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T091732Z" creationid="gitnacho" creationdate="20221005T094606Z">
        <seg>- writing-guide
  - guía de escritura
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{ARIARole("button")}}
- {{ARIARole("checkbox")}}
- {{ARIARole("menuitem")}}
- {{ARIARole("menuitemcheckbox")}}
- {{ARIARole("menuitemradio")}}
- {{ARIARole("option")}}
- {{ARIARole("radio")}}
- {{ARIARole("switch")}}
- {{ARIARole("tab")}}
- {{ARIARole("treeitem")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T200613Z" creationid="gitnacho" creationdate="20221005T200613Z">
        <seg>- {{ARIARole("button")}}
- {{ARIARole("checkbox")}}
- {{ARIARole("menuitem")}}
- {{ARIARole("menuitemcheckbox")}}
- {{ARIARole("menuitemradio")}}
- {{ARIARole("option")}}
- {{ARIARole("radio")}}
- {{ARIARole("switch")}}
- {{ARIARole("tab")}}
- {{ARIARole("treeitem")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{DOMxRef("Cache")}} {{Experimental_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T150414Z" creationid="gitnacho" creationdate="20221002T150414Z">
        <seg>- {{DOMxRef("Cache")}} {{Experimental_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{DOMxRef("CacheStorage")}} {{Experimental_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T150438Z" creationid="gitnacho" creationdate="20221002T150438Z">
        <seg>- {{DOMxRef("CacheStorage")}} {{Experimental_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{DOMxRef("Client")}} {{Experimental_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T150515Z" creationid="gitnacho" creationdate="20221002T150515Z">
        <seg>- {{DOMxRef("Client")}} {{Experimental_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{DOMxRef("Clients")}} {{Experimental_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T150615Z" creationid="gitnacho" creationdate="20221002T150615Z">
        <seg>- {{DOMxRef("Clients")}} {{Experimental_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{DOMxRef("ExtendableEvent")}} {{Experimental_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T150645Z" creationid="gitnacho" creationdate="20221002T150645Z">
        <seg>- {{DOMxRef("ExtendableEvent")}} {{Experimental_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{DOMxRef("FetchEvent")}} {{Experimental_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T150854Z" creationid="gitnacho" creationdate="20221002T150854Z">
        <seg>- {{DOMxRef("FetchEvent")}} {{Experimental_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{DOMxRef("InstallEvent")}} {{Experimental_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151352Z" creationid="gitnacho" creationdate="20221002T151352Z">
        <seg>- {{DOMxRef("InstallEvent")}} {{Experimental_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{DOMxRef("MessageEvent")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151817Z" creationid="gitnacho" creationdate="20221002T151817Z">
        <seg>- {{DOMxRef("MessageEvent")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{DOMxRef("NavigationPreloadManager")}} {{Experimental_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151436Z" creationid="gitnacho" creationdate="20221002T151436Z">
        <seg>- {{DOMxRef("NavigationPreloadManager")}} {{Experimental_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{DOMxRef("Navigator.serviceWorker")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151507Z" creationid="gitnacho" creationdate="20221002T151507Z">
        <seg>- {{DOMxRef("Navigator.serviceWorker")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{DOMxRef("NotificationEvent")}} {{Experimental_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151532Z" creationid="gitnacho" creationdate="20221002T151532Z">
        <seg>- {{DOMxRef("NotificationEvent")}} {{Experimental_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{DOMxRef("ServiceWorker")}} {{Experimental_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151624Z" creationid="gitnacho" creationdate="20221002T151624Z">
        <seg>- {{DOMxRef("ServiceWorker")}} {{Experimental_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{DOMxRef("ServiceWorkerContainer")}} {{Experimental_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151707Z" creationid="gitnacho" creationdate="20221002T151707Z">
        <seg>- {{DOMxRef("ServiceWorkerContainer")}} {{Experimental_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{DOMxRef("ServiceWorkerGlobalScope")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151801Z" creationid="gitnacho" creationdate="20221002T151801Z">
        <seg>- {{DOMxRef("ServiceWorkerGlobalScope")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{DOMxRef("ServiceWorkerRegistration")}} {{Experimental_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151825Z" creationid="gitnacho" creationdate="20221002T151825Z">
        <seg>- {{DOMxRef("ServiceWorkerRegistration")}} {{Experimental_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{DOMxRef("SyncEvent")}} {{Non-standard_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151841Z" creationid="gitnacho" creationdate="20221002T151841Z">
        <seg>- {{DOMxRef("SyncEvent")}} {{Non-standard_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{DOMxRef("SyncManager")}} {{Non-standard_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151904Z" creationid="gitnacho" creationdate="20221002T151904Z">
        <seg>- {{DOMxRef("SyncManager")}} {{Non-standard_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{DOMxRef("WindowClient")}} {{Experimental_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151915Z" creationid="gitnacho" creationdate="20221002T151915Z">
        <seg>- {{DOMxRef("WindowClient")}} {{Experimental_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{DOMxRef("XMLHttpRequest")}}
- {{DOMxRef("Fetch API")}}
- [Using Fetch API](/en-US/docs/Web/API/Fetch_API/Using_Fetch)
- [Synchronous vs. Asynchronous Communications](https://peoplesofttutorial.com/difference-between-synchronous-and-asynchronous-messaging/)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T200416Z" creationid="gitnacho" creationdate="20221003T135800Z">
        <seg>- {{DOMxRef("XMLHttpRequest")}}
- {{DOMxRef("Fetch API")}}
- [Usar la API Fetch](/es/docs/Web/API/Fetch_API/Using_Fetch)
- [Comunicaciones síncronas vs. asíncronas](https://peoplesofttutorial.com/difference-between-synchronous-and-asynchronous-messaging/)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{Glossary("CORS-safelisted request header")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T211953Z" creationid="gitnacho" creationdate="20221017T211953Z">
        <seg>- {{Glossary("CORS-safelisted request header")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{Glossary("CORS-safelisted response header")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T080414Z" creationid="gitnacho" creationdate="20221018T080414Z">
        <seg>- {{Glossary("CORS-safelisted response header")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{Glossary("Fetch metadata request header")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T080353Z" creationid="gitnacho" creationdate="20221017T211951Z">
        <seg>- {{Glossary("Fetch metate request header")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{Glossary("Fetch metadata request header")}}: Headers with metadata about the resource in the message body (e.g. encoding, media type, etc.).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T080043Z" creationid="gitnacho" creationdate="20221017T211720Z">
        <seg>- {{Glossary("Fetch metadata request header")}}: Cabeceras con metadatos sobre el recurso en el cuerpo del mensaje (por ejemplo, codificación, tipo de medio, etc.).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{Glossary("Forbidden header name")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T211952Z" creationid="gitnacho" creationdate="20221017T211952Z">
        <seg>- {{Glossary("Forbidden header name")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{Glossary("Forbidden response header name")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T211952Z" creationid="gitnacho" creationdate="20221017T211952Z">
        <seg>- {{Glossary("Forbidden response header name")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{Glossary("HTTP header")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T211950Z" creationid="gitnacho" creationdate="20221017T211950Z">
        <seg>- {{Glossary("HTTP header")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{Glossary("Representation header")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T211951Z" creationid="gitnacho" creationdate="20221017T211951Z">
        <seg>- {{Glossary("Representation header")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{Glossary("Representation header")}}: metadata about the resource in the message body (e.g. encoding, media type, etc.).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T080025Z" creationid="gitnacho" creationdate="20221017T211646Z">
        <seg>- {{Glossary("Representation header")}}: Metadatos sobre el recurso en el cuerpo del mensaje (por ejemplo, codificación, tipo de medio, etc.).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{Glossary("Request header")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T211950Z" creationid="gitnacho" creationdate="20221017T211950Z">
        <seg>- {{Glossary("Request header")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{Glossary("Request header")}}: Headers containing more information about the resource to be fetched or about the client itself.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T075942Z" creationid="gitnacho" creationdate="20221017T211558Z">
        <seg>- {{Glossary("Request header")}}: cabeceras que contienen más información sobre el recurso a buscar o sobre el propio cliente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{Glossary("Response header")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T211951Z" creationid="gitnacho" creationdate="20221017T211951Z">
        <seg>- {{Glossary("Response header")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{Glossary("Response header")}}: Headers with additional information about the response, like its location or about the server itself (name, version, …).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T211616Z" creationid="gitnacho" creationdate="20221017T211616Z">
        <seg>- {{Glossary("Response header")}}: Cabeceras con información adicional sobre la respuesta, como su ubicación o sobre el propio servidor (nombre, versión,…).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{HTTPHeader("Accept")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220453Z" creationid="gitnacho" creationdate="20221011T220453Z">
        <seg>- {{HTTPHeader("Accept")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{HTTPHeader("Accept-Language")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220453Z" creationid="gitnacho" creationdate="20221011T220453Z">
        <seg>- {{HTTPHeader("Accept-Language")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{HTTPHeader("Access-Control-Allow-Credentials")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210650Z" creationid="gitnacho" creationdate="20221017T210650Z">
        <seg>- {{HTTPHeader("Access-Control-Allow-Credentials")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{HTTPHeader("Access-Control-Allow-Headers")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210710Z" creationid="gitnacho" creationdate="20221017T210710Z">
        <seg>- {{HTTPHeader("Access-Control-Allow-Headers")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{HTTPHeader("Access-Control-Allow-Methods")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210736Z" creationid="gitnacho" creationdate="20221017T210736Z">
        <seg>- {{HTTPHeader("Access-Control-Allow-Methods")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{HTTPHeader("Access-Control-Allow-Origin")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210643Z" creationid="gitnacho" creationdate="20221017T210643Z">
        <seg>- {{HTTPHeader("Access-Control-Allow-Origin")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{HTTPHeader("Access-Control-Expose-Headers")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210749Z" creationid="gitnacho" creationdate="20221017T210749Z">
        <seg>- {{HTTPHeader("Access-Control-Expose-Headers")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{HTTPHeader("Access-Control-Max-Age")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210803Z" creationid="gitnacho" creationdate="20221017T210803Z">
        <seg>- {{HTTPHeader("Access-Control-Max-Age")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{HTTPHeader("Access-Control-Request-Headers")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210816Z" creationid="gitnacho" creationdate="20221017T210816Z">
        <seg>- {{HTTPHeader("Access-Control-Request-Headers")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{HTTPHeader("Access-Control-Request-Method")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210831Z" creationid="gitnacho" creationdate="20221017T210831Z">
        <seg>- {{HTTPHeader("Access-Control-Request-Method")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{HTTPHeader("Allow")}} header
- [CORS](/en-US/docs/Web/HTTP/CORS)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T133741Z" creationid="gitnacho" creationdate="20221019T133741Z">
        <seg>- {{HTTPHeader("Allow")}} header
- [CORS](/en-US/docs/Web/HTTP/CORS)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{HTTPHeader("Content-Language")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220454Z" creationid="gitnacho" creationdate="20221011T220454Z">
        <seg>- {{HTTPHeader("Content-Language")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{HTTPHeader("Content-Type")}} (please note the additional requirements below)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220752Z" creationid="gitnacho" creationdate="20221011T220513Z">
        <seg>- {{HTTPHeader("Content-Type")}} (ten en cuenta los requisitos adicionales a continuación)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{HTTPHeader("Origin")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210850Z" creationid="gitnacho" creationdate="20221017T210850Z">
        <seg>- {{HTTPHeader("Origin")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{HTTPHeader("Range")}} (only with a [simple range header value](https://fetch.spec.whatwg.org/#simple-range-header-value); e.g., `bytes=256-` or `bytes=127-255`)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220822Z" creationid="gitnacho" creationdate="20221011T220514Z">
        <seg>- {{HTTPHeader("Range")}} (solo con un [valor de encabezado de rango simple](https://fetch.spec.whatwg.org/#simple-range-header-value); por ejemplo, `bytes=256 -` o `bytes=127-255`)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{HTTPMethod("GET")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220353Z" creationid="gitnacho" creationdate="20221011T220353Z">
        <seg>- {{HTTPMethod("GET")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{HTTPMethod("HEAD")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220354Z" creationid="gitnacho" creationdate="20221011T220354Z">
        <seg>- {{HTTPMethod("HEAD")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{HTTPMethod("POST")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220354Z" creationid="gitnacho" creationdate="20221011T220354Z">
        <seg>- {{HTTPMethod("POST")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{SVGAttr("viewBox")}}
- {{SVGAttr("preserveAspectRatio")}}
- {{SVGAttr("zoomAndPan")}} {{Deprecated_Inline}} {{Non-standard_Inline}}
- {{SVGAttr("viewTarget")}} {{Deprecated_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T173708Z" creationid="gitnacho" creationdate="20221005T173708Z">
        <seg>- {{SVGAttr("viewBox")}}
- {{SVGAttr("preserveAspectRatio")}}
- {{SVGAttr("zoomAndPan")}} {{Deprecated_Inline}} {{Non-standard_Inline}}
- {{SVGAttr("viewTarget")}} {{Deprecated_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{SVGElement("feGaussianBlur")}}
- {{SVGAttr("keySplines")}} SVG attribute
- {{htmlattrxref("dir")}}
- {{htmlattrxref("lang")}}
- {{cssxref(":dir")}}
- {{cssxref("direction")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174152Z" creationid="gitnacho" creationdate="20221012T174152Z">
        <seg>- {{SVGElement("feGaussianBlur")}}
- {{SVGAttr("keySplines")}} atributo SVG
- {{htmlattrxref("dir")}}
- {{htmlattrxref("lang")}}
- {{cssxref(":dir")}}
- {{cssxref("direction")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{WebExtAPIRef("alarms.Alarm")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174010Z" creationid="gitnacho" creationdate="20221012T174010Z">
        <seg>- {{WebExtAPIRef("alarms.Alarm")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{cssxref(":dir")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T200455Z" creationid="gitnacho" creationdate="20221005T200455Z">
        <seg>- {{cssxref(":dir")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{cssxref("direction")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T200457Z" creationid="gitnacho" creationdate="20221005T200457Z">
        <seg>- {{cssxref("direction")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{cssxref("unicode-bidi")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T200457Z" creationid="gitnacho" creationdate="20221005T200457Z">
        <seg>- {{cssxref("unicode-bidi")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{cssxref("writing-mode")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T200529Z" creationid="gitnacho" creationdate="20221005T200529Z">
        <seg>- {{cssxref("writing-mode")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("AnimationEvent")}}
- {{domxref("AudioProcessingEvent")}} {{Deprecated_Inline}}
- {{domxref("BeforeUnloadEvent")}}
- {{domxref("BlobEvent")}}
- {{domxref("ClipboardEvent")}}
- {{domxref("CloseEvent")}}
- {{domxref("CompositionEvent")}}
- {{domxref("CustomEvent")}}
- {{domxref("DeviceMotionEvent")}}
- {{domxref("DeviceOrientationEvent")}}
- {{domxref("DeviceProximityEvent")}} {{Deprecated_Inline}}
- {{domxref("DragEvent")}}
- {{domxref("ErrorEvent")}}
- {{domxref("FetchEvent")}}
- {{domxref("FocusEvent")}}
- {{domxref("FontFaceSetLoadEvent")}}
- {{domxref("FormDataEvent")}}
- {{domxref("GamepadEvent")}}
- {{domxref("HashChangeEvent")}}
- {{domxref("HIDInputReportEvent")}}
- {{domxref("IDBVersionChangeEvent")}}
- {{domxref("InputEvent")}}
- {{domxref("KeyboardEvent")}}
- {{domxref("MediaStreamEvent")}} {{Deprecated_Inline}}
- {{domxref("MessageEvent")}}
- {{domxref("MouseEvent")}}
- {{domxref("MutationEvent")}} {{Deprecated_Inline}}
- {{domxref("OfflineAudioCompletionEvent")}}
- {{domxref("PageTransitionEvent")}}
- {{domxref("PaymentRequestUpdateEvent")}}
- {{domxref("PointerEvent")}}
- {{domxref("PopStateEvent")}}
- {{domxref("ProgressEvent")}}
- {{domxref("RTCDataChannelEvent")}}
- {{domxref("RTCPeerConnectionIceEvent")}}
- {{domxref("StorageEvent")}}
- {{domxref("SubmitEvent")}}
- {{domxref("SVGEvent")}} {{Deprecated_Inline}}
- {{domxref("TimeEvent")}}
- {{domxref("TouchEvent")}}
- {{domxref("TrackEvent")}}
- {{domxref("TransitionEvent")}}
- {{domxref("UIEvent")}}
- {{domxref("UserProximityEvent")}} {{Deprecated_Inline}}
- {{domxref("WebGLContextEvent")}}
- {{domxref("WheelEvent")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T200848Z">
        <seg>- {{DOMxRef("AnimationEvent")}}
- {{DOMxRef("AudioProcessingEvent")}} {{Deprecated_Inline}}
- {{DOMxRef("BeforeUnloadEvent")}}
- {{DOMxRef("BlobEvent")}}
- {{DOMxRef("ClipboardEvent")}}
- {{DOMxRef("CloseEvent")}}
- {{DOMxRef("CompositionEvent")}}
- {{DOMxRef("CustomEvent")}}
- {{DOMxRef("DeviceMotionEvent")}}
- {{DOMxRef("DeviceOrientationEvent")}}
- {{DOMxRef("DeviceProximityEvent")}} {{Deprecated_Inline}}
- {{DOMxRef("DragEvent")}}
- {{DOMxRef("ErrorEvent")}}
- {{DOMxRef("FetchEvent")}}
- {{DOMxRef("FocusEvent")}}
- {{DOMxRef("FontFaceSetLoadEvent")}}
- {{DOMxRef("FormDataEvent")}}
- {{DOMxRef("GamepadEvent")}}
- {{DOMxRef("HashChangeEvent")}}
- {{DOMxRef("HIDInputReportEvent")}}
- {{DOMxRef("IDBVersionChangeEvent")}}
- {{DOMxRef("InputEvent")}}
- {{DOMxRef("KeyboardEvent")}}
- {{DOMxRef("MediaStreamEvent")}} {{Deprecated_Inline}}
- {{DOMxRef("MessageEvent")}}
- {{DOMxRef("MouseEvent")}}
- {{DOMxRef("MutationEvent")}} {{Deprecated_Inline}}
- {{DOMxRef("OfflineAudioCompletionEvent")}}
- {{DOMxRef("PageTransitionEvent")}}
- {{DOMxRef("PaymentRequestUpdateEvent")}}
- {{DOMxRef("PointerEvent")}}
- {{DOMxRef("PopStateEvent")}}
- {{DOMxRef("ProgressEvent")}}
- {{DOMxRef("RTCDataChannelEvent")}}
- {{DOMxRef("RTCPeerConnectionIceEvent")}}
- {{DOMxRef("StorageEvent")}}
- {{DOMxRef("SubmitEvent")}}
- {{DOMxRef("SVGEvent")}} {{Deprecated_Inline}}
- {{DOMxRef("TimeEvent")}}
- {{DOMxRef("TouchEvent")}}
- {{DOMxRef("TrackEvent")}}
- {{DOMxRef("TransitionEvent")}}
- {{DOMxRef("UIEvent")}}
- {{DOMxRef("UserProximityEvent")}} {{Deprecated_Inline}}
- {{DOMxRef("WebGLContextEvent")}}
- {{DOMxRef("WheelEvent")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Cache.add", "Cache.add(request)")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T201812Z">
        <seg>- {{DOMxRef("Cache.add", "Cache.add(request)")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Cache.addAll", "Cache.addAll(requests)")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T201818Z">
        <seg>- {{DOMxRef("Cache.addAll", "Cache.addAll(requests)")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Cache.delete", "Cache.delete(request, options)")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T201831Z">
        <seg>- {{DOMxRef("Cache.delete", "Cache.delete(request, options)")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Cache.keys", "Cache.keys(request, options)")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T201844Z">
        <seg>- {{DOMxRef("Cache.keys", "Cache.keys(request, options)")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Cache.match", "Cache.match(request, options)")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T201737Z">
        <seg>- {{DOMxRef("Cache.match", "Cache.match(request, options)")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Cache.matchAll", "Cache.matchAll(request, options)")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T201747Z">
        <seg>- {{DOMxRef("Cache.matchAll", "Cache.matchAll(request, options)")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Cache.put", "Cache.put(request, response)")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T201822Z">
        <seg>- {{DOMxRef("Cache.put", "Cache.put(request, response)")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.Event", "Event()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T200936Z">
        <seg>- {{DOMxRef("Event.Event", "Event()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.bubbles")}} {{ReadOnlyInline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T201011Z">
        <seg>- {{DOMxRef("Event.bubbles")}} {{ReadOnlyInline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.cancelBubble")}} {{deprecated_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204703Z">
        <seg>- {{DOMxRef("Event.cancelBubble")}} {{deprecated_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.composed")}} {{ReadOnlyInline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T201053Z">
        <seg>- {{DOMxRef("Event.composed")}} {{ReadOnlyInline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.composed", "Event.scoped")}} {{ReadOnlyInline}} {{deprecated_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204819Z">
        <seg>- {{DOMxRef("Event.composed", "Event.scoped")}} {{ReadOnlyInline}} {{deprecated_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.composedPath()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204853Z">
        <seg>- {{DOMxRef("Event.composedPath()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.defaultPrevented")}} {{ReadOnlyInline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T201231Z">
        <seg>- {{DOMxRef("Event.defaultPrevented")}} {{ReadOnlyInline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.eventPhase")}} {{ReadOnlyInline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204432Z">
        <seg>- {{DOMxRef("Event.eventPhase")}} {{ReadOnlyInline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.explicitOriginalTarget")}} {{non-standard_inline}} {{ReadOnlyInline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204733Z">
        <seg>- {{DOMxRef("Event.explicitOriginalTarget")}} {{non-standard_inline}} {{ReadOnlyInline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.initEvent()")}} {{deprecated_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T205046Z">
        <seg>- {{DOMxRef("Event.initEvent()")}} {{deprecated_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.isTrusted")}} {{ReadOnlyInline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204454Z">
        <seg>- {{DOMxRef("Event.isTrusted")}} {{ReadOnlyInline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.originalTarget")}} {{non-standard_inline}} {{ReadOnlyInline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204739Z">
        <seg>- {{DOMxRef("Event.originalTarget")}} {{non-standard_inline}} {{ReadOnlyInline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.preventDefault()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204957Z">
        <seg>- {{DOMxRef("Event.preventDefault()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.returnValue")}} {{deprecated_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204759Z">
        <seg>- {{DOMxRef("Event.returnValue")}} {{deprecated_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.srcElement")}} {{ReadOnlyInline}} {{deprecated_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204837Z">
        <seg>- {{DOMxRef("Event.srcElement")}} {{ReadOnlyInline}} {{deprecated_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.stopImmediatePropagation()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T205003Z">
        <seg>- {{DOMxRef("Event.stopImmediatePropagation()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.stopPropagation()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T205031Z">
        <seg>- {{DOMxRef("Event.stopPropagation()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.target")}} {{ReadOnlyInline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204550Z">
        <seg>- {{DOMxRef("Event.target")}} {{ReadOnlyInline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.timeStamp")}} {{ReadOnlyInline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204602Z">
        <seg>- {{DOMxRef("Event.timeStamp")}} {{ReadOnlyInline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("Event.type")}} {{ReadOnlyInline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204629Z">
        <seg>- {{DOMxRef("Event.type")}} {{ReadOnlyInline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("NavigationPreloadManager.disable()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220922T205132Z">
        <seg>- {{DOMxRef("NavigationPreloadManager.disable()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("NavigationPreloadManager.enable()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220922T205114Z">
        <seg>- {{DOMxRef("NavigationPreloadManager.enable()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("NavigationPreloadManager.getState()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220922T205237Z">
        <seg>- {{DOMxRef("NavigationPreloadManager.getState()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("NavigationPreloadManager.setHeaderValue()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220922T205200Z">
        <seg>- {{DOMxRef("NavigationPreloadManager.setHeaderValue()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("ServiceWorker.scriptURL")}} {{ReadOnlyInline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T212340Z">
        <seg>- {{DOMxRef("ServiceWorker.scriptURL")}} {{ReadOnlyInline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("ServiceWorker.state")}} {{ReadOnlyInline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T212407Z">
        <seg>- {{DOMxRef("ServiceWorker.state")}} {{ReadOnlyInline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("ServiceWorker.statechange_event", "statechange")}} {{ReadOnlyInline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T212549Z">
        <seg>- {{DOMxRef("ServiceWorker.statechange_event", "statechange")}} {{ReadOnlyInline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("ServiceWorkerGlobalScope/install_event", "install")}} event
- {{domxref("ServiceWorkerGlobalScope")}}
- [Service Worker API](/en-US/docs/Web/API/Service_Worker_API)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T232518Z">
        <seg>- El evento {{DOMxRef("ServiceWorkerGlobalScope/install_event", "install")}}
- {{DOMxRef("ServiceWorkerGlobalScope")}}
- [API de *Service Worker*](/es/docs/Web/API/Service_Worker_API)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{domxref("document.currentScript")}}
- [Ryan Grove's `&lt;script&gt;` and `&lt;link&gt;` node event compatibility chart](https://pie.gd/test/script-link-events/)
- [Flavio Copes' article on loading JavaScript efficiently and explaining the differences between `async` and `defer`](https://flaviocopes.com/javascript-async-defer/)
- [JavaScript modules](/en-US/docs/Web/JavaScript/Guide/Modules) guide</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T135813Z" creationid="gitnacho" creationdate="20221003T134956Z">
        <seg>- {{DOMxRef("document.currentScript")}}
- [Tabla de compatibilidad de eventos de nodos `&lt;script&gt;` y `&lt;link&gt;` de Ryan Grove](https://pie.gd/test/script-link-events/)
- [Artículo de Flavio Copes sobre la carga eficiente de JavaScript y la explicación de las diferencias entre `async` y `defer`](https://flaviocopes.com/javascript-async-defer/)
- [Módulos JavaScript](/es/docs/Web/JavaScript/Guide/Modules) guía</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{glossary("HTTP")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T202347Z" creationid="gitnacho" creationdate="20221018T202347Z">
        <seg>- {{Glossary("HTTP")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{glossary("SSL")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T202350Z" creationid="gitnacho" creationdate="20221018T202350Z">
        <seg>- {{Glossary("SSL")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{glossary("TLS")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T202355Z" creationid="gitnacho" creationdate="20221018T202355Z">
        <seg>- {{Glossary("TLS")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{htmlattrdef("async")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T122627Z" creationid="gitnacho" creationdate="20221003T122627Z">
        <seg>- {{htmlattrdef("async")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{htmlattrdef("charset")}} {{Deprecated_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T132800Z" creationid="gitnacho" creationdate="20221003T132800Z">
        <seg>- {{htmlattrdef("charset")}} {{Deprecated_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{htmlattrdef("crossorigin")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T123409Z" creationid="gitnacho" creationdate="20221003T123409Z">
        <seg>- {{htmlattrdef("crossorigin")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{htmlattrdef("defer")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T123557Z" creationid="gitnacho" creationdate="20221003T123557Z">
        <seg>- {{htmlattrdef("defer")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{htmlattrdef("fetchpriority")}} {{Experimental_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T124448Z" creationid="gitnacho" creationdate="20221003T124448Z">
        <seg>- {{htmlattrdef("fetchpriority")}} {{Experimental_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{htmlattrdef("integrity")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T124702Z" creationid="gitnacho" creationdate="20221003T124702Z">
        <seg>- {{htmlattrdef("integrity")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{htmlattrdef("language")}} {{Deprecated_inline}} {{Non-standard_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T132858Z" creationid="gitnacho" creationdate="20221003T132858Z">
        <seg>- {{htmlattrdef("language")}} {{Deprecated_inline}} {{Non-standard_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{htmlattrdef("nomodule")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T124800Z" creationid="gitnacho" creationdate="20221003T124800Z">
        <seg>- {{htmlattrdef("nomodule")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{htmlattrdef("nonce")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T124948Z" creationid="gitnacho" creationdate="20221003T124948Z">
        <seg>- {{htmlattrdef("nonce")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{htmlattrdef("referrerpolicy")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T125245Z" creationid="gitnacho" creationdate="20221003T125245Z">
        <seg>- {{htmlattrdef("referrerpolicy")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{htmlattrdef("src")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T130418Z" creationid="gitnacho" creationdate="20221003T130418Z">
        <seg>- {{htmlattrdef("src")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{htmlattrdef("type")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T130440Z" creationid="gitnacho" creationdate="20221003T130440Z">
        <seg>- {{htmlattrdef("type")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{htmlattrxref("dir")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T200531Z" creationid="gitnacho" creationdate="20221005T200531Z">
        <seg>- {{htmlattrxref("dir")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{htmlattrxref("lang")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T200532Z" creationid="gitnacho" creationdate="20221005T200532Z">
        <seg>- {{htmlattrxref("lang")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.cause", "WebAssembly.CompileError.prototype.cause")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T025454Z" creationid="gitnacho" creationdate="20221008T025454Z">
        <seg>- {{jsxref("Error.prototype.cause", "WebAssembly.CompileError.prototype.cause")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.cause", "WebAssembly.LinkError.prototype.cause")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T075158Z" creationid="gitnacho" creationdate="20221008T075158Z">
        <seg>- {{jsxref("Error.prototype.cause", "WebAssembly.LinkError.prototype.cause")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.cause", "WebAssembly.RuntimeError.prototype.cause")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T080749Z" creationid="gitnacho" creationdate="20221008T080749Z">
        <seg>- {{jsxref("Error.prototype.cause", "WebAssembly.RuntimeError.prototype.cause")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.columnNumber", "WebAssembly.CompileError.prototype.columnNumber")}} {{non-standard_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T072835Z" creationid="gitnacho" creationdate="20221008T025544Z">
        <seg>- {{jsxref("Error.prototype.columnNumber", "WebAssembly.CompileError.prototype.columnNumber")}} {{non-standard_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.columnNumber", "WebAssembly.LinkError.prototype.columnNumber")}} {{non-standard_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T075211Z" creationid="gitnacho" creationdate="20221008T075211Z">
        <seg>- {{jsxref("Error.prototype.columnNumber", "WebAssembly.LinkError.prototype.columnNumber")}} {{non-standard_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.columnNumber", "WebAssembly.RuntimeError.prototype.columnNumber")}} {{non-standard_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T080801Z" creationid="gitnacho" creationdate="20221008T080801Z">
        <seg>- {{jsxref("Error.prototype.columnNumber", "WebAssembly.RuntimeError.prototype.columnNumber")}} {{non-standard_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.fileName", "WebAssembly.CompileError.prototype.fileName")}} {{non-standard_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T025511Z" creationid="gitnacho" creationdate="20221008T025511Z">
        <seg>- {{jsxref("Error.prototype.fileName", "WebAssembly.CompileError.prototype.fileName")}} {{non-standard_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.fileName", "WebAssembly.LinkError.prototype.fileName")}} {{non-standard_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T075203Z" creationid="gitnacho" creationdate="20221008T075203Z">
        <seg>- {{jsxref("Error.prototype.fileName", "WebAssembly.LinkError.prototype.fileName")}} {{non-standard_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.fileName", "WebAssembly.RuntimeError.prototype.fileName")}} {{non-standard_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T080754Z" creationid="gitnacho" creationdate="20221008T080754Z">
        <seg>- {{jsxref("Error.prototype.fileName", "WebAssembly.RuntimeError.prototype.fileName")}} {{non-standard_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.lineNumber", "WebAssembly.CompileError.prototype.lineNumber")}} {{non-standard_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T025524Z" creationid="gitnacho" creationdate="20221008T025524Z">
        <seg>- {{jsxref("Error.prototype.lineNumber", "WebAssembly.CompileError.prototype.lineNumber")}} {{non-standard_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.lineNumber", "WebAssembly.LinkError.prototype.lineNumber")}} {{non-standard_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T075207Z" creationid="gitnacho" creationdate="20221008T075207Z">
        <seg>- {{jsxref("Error.prototype.lineNumber", "WebAssembly.LinkError.prototype.lineNumber")}} {{non-standard_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.lineNumber", "WebAssembly.RuntimeError.prototype.lineNumber")}} {{non-standard_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T080756Z" creationid="gitnacho" creationdate="20221008T080756Z">
        <seg>- {{jsxref("Error.prototype.lineNumber", "WebAssembly.RuntimeError.prototype.lineNumber")}} {{non-standard_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.message", "WebAssembly.CompileError.prototype.message")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T025343Z" creationid="gitnacho" creationdate="20221008T025343Z">
        <seg>- {{jsxref("Error.prototype.message", "WebAssembly.CompileError.prototype.message")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.message", "WebAssembly.LinkError.prototype.message")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T075147Z" creationid="gitnacho" creationdate="20221008T075147Z">
        <seg>- {{jsxref("Error.prototype.message", "WebAssembly.LinkError.prototype.message")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.message", "WebAssembly.RuntimeError.prototype.message")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T080743Z" creationid="gitnacho" creationdate="20221008T080743Z">
        <seg>- {{jsxref("Error.prototype.message", "WebAssembly.RuntimeError.prototype.message")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.name", "WebAssembly.CompileError.prototype.name")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T025441Z" creationid="gitnacho" creationdate="20221008T025441Z">
        <seg>- {{jsxref("Error.prototype.name", "WebAssembly.CompileError.prototype.name")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.name", "WebAssembly.LinkError.prototype.name")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T075154Z" creationid="gitnacho" creationdate="20221008T075154Z">
        <seg>- {{jsxref("Error.prototype.name", "WebAssembly.LinkError.prototype.name")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.name", "WebAssembly.RuntimeError.prototype.name")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T080746Z" creationid="gitnacho" creationdate="20221008T080746Z">
        <seg>- {{jsxref("Error.prototype.name", "WebAssembly.RuntimeError.prototype.name")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.stack", "WebAssembly.CompileError.prototype.stack")}} {{non-standard_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T025559Z" creationid="gitnacho" creationdate="20221008T025559Z">
        <seg>- {{jsxref("Error.prototype.stack", "WebAssembly.CompileError.prototype.stack")}} {{non-standard_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.stack", "WebAssembly.LinkError.prototype.stack")}} {{non-standard_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T075215Z" creationid="gitnacho" creationdate="20221008T075215Z">
        <seg>- {{jsxref("Error.prototype.stack", "WebAssembly.LinkError.prototype.stack")}} {{non-standard_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.stack", "WebAssembly.RuntimeError.prototype.stack")}} {{non-standard_inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T080804Z" creationid="gitnacho" creationdate="20221008T080804Z">
        <seg>- {{jsxref("Error.prototype.stack", "WebAssembly.RuntimeError.prototype.stack")}} {{non-standard_inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.toString", "WebAssembly.CompileError.prototype.toString()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T025611Z" creationid="gitnacho" creationdate="20221008T025611Z">
        <seg>- {{jsxref("Error.prototype.toString", "WebAssembly.CompileError.prototype.toString()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.toString", "WebAssembly.LinkError.prototype.toString()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T075222Z" creationid="gitnacho" creationdate="20221008T075222Z">
        <seg>- {{jsxref("Error.prototype.toString", "WebAssembly.LinkError.prototype.toString()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Error.prototype.toString", "WebAssembly.RuntimeError.prototype.toString()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T080812Z" creationid="gitnacho" creationdate="20221008T080812Z">
        <seg>- {{jsxref("Error.prototype.toString", "WebAssembly.RuntimeError.prototype.toString()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Global_Objects/Uint8ClampedArray/Uint8ClampedArray", "Uint8ClampedArray()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050407Z" creationid="gitnacho" creationdate="20221005T050407Z">
        <seg>- {{jsxref("Global_Objects/Uint8ClampedArray/Uint8ClampedArray", "Uint8ClampedArray()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("Promise")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080800Z" creationid="gitnacho" creationdate="20221002T080800Z">
        <seg>- {{jsxref("Promise")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("RangeError")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142553Z" creationid="gitnacho" creationdate="20221019T142553Z">
        <seg>- {{jsxref("RangeError")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("RangeError")}}: If the current size added with `pageIncrease` exceeds the Memory instance's maximum size capacity.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T214540Z" creationid="gitnacho" creationdate="20221019T214540Z">
        <seg>- {{JSxRef("RangeError")}}: Si el tamaño actual agregado con `pageIncrease` excede la capacidad del tamaño máximo de la instancia de memoria.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypeError")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142534Z" creationid="gitnacho" creationdate="20221019T142534Z">
        <seg>- {{jsxref("TypeError")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypeError")}}:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T070922Z" creationid="gitnacho" creationdate="20221020T070922Z">
        <seg>- {{JSxRef("TypeError")}}:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.@@iterator", "Uint8ClampedArray.prototype[@@iterator]()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052508Z" creationid="gitnacho" creationdate="20221005T052508Z">
        <seg>- {{jsxref("TypedArray.@@iterator", "Uint8ClampedArray.prototype[@@iterator]()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.BYTES_PER_ELEMENT", "Uint8ClampedArray.BYTES_PER_ELEMENT")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050425Z" creationid="gitnacho" creationdate="20221005T050425Z">
        <seg>- {{jsxref("TypedArray.BYTES_PER_ELEMENT", "Uint8ClampedArray.BYTES_PER_ELEMENT")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.copyWithin", "Uint8ClampedArray.prototype.copyWithin()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051009Z" creationid="gitnacho" creationdate="20221005T051009Z">
        <seg>- {{jsxref("TypedArray.copyWithin", "Uint8ClampedArray.prototype.copyWithin()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.entries", "Uint8ClampedArray.prototype.entries()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051129Z" creationid="gitnacho" creationdate="20221005T051106Z">
        <seg>- {{jsxref("TypedArray.entries", "Uint8ClampedArray.prototype.entries()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.every", "Uint8ClampedArray.prototype.every()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051148Z" creationid="gitnacho" creationdate="20221005T051148Z">
        <seg>- {{jsxref("TypedArray.every", "Uint8ClampedArray.prototype.every()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.fill", "Uint8ClampedArray.prototype.fill()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051239Z" creationid="gitnacho" creationdate="20221005T051239Z">
        <seg>- {{jsxref("TypedArray.fill", "Uint8ClampedArray.prototype.fill()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.filter", "Uint8ClampedArray.prototype.filter()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051318Z" creationid="gitnacho" creationdate="20221005T051318Z">
        <seg>- {{jsxref("TypedArray.filter", "Uint8ClampedArray.prototype.filter()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.find", "Uint8ClampedArray.prototype.find()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051358Z" creationid="gitnacho" creationdate="20221005T051358Z">
        <seg>- {{jsxref("TypedArray.find", "Uint8ClampedArray.prototype.find()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.findIndex", "Uint8ClampedArray.prototype.findIndex()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051438Z" creationid="gitnacho" creationdate="20221005T051438Z">
        <seg>- {{jsxref("TypedArray.findIndex", "Uint8ClampedArray.prototype.findIndex()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.forEach", "Uint8ClampedArray.prototype.forEach()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051526Z" creationid="gitnacho" creationdate="20221005T051526Z">
        <seg>- {{jsxref("TypedArray.forEach", "Uint8ClampedArray.prototype.forEach()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.from", "Uint8ClampedArray.from()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050520Z" creationid="gitnacho" creationdate="20221005T050520Z">
        <seg>- {{jsxref("TypedArray.from", "Uint8ClampedArray.from()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.includes", "Uint8ClampedArray.prototype.includes()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051605Z" creationid="gitnacho" creationdate="20221005T051605Z">
        <seg>- {{jsxref("TypedArray.includes", "Uint8ClampedArray.prototype.includes()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.indexOf", "Uint8ClampedArray.prototype.indexOf()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051649Z" creationid="gitnacho" creationdate="20221005T051649Z">
        <seg>- {{jsxref("TypedArray.indexOf", "Uint8ClampedArray.prototype.indexOf()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.join", "Uint8ClampedArray.prototype.join()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051722Z" creationid="gitnacho" creationdate="20221005T051722Z">
        <seg>- {{jsxref("TypedArray.join", "Uint8ClampedArray.prototype.join()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.keys", "Uint8ClampedArray.prototype.keys()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051814Z" creationid="gitnacho" creationdate="20221005T051814Z">
        <seg>- {{jsxref("TypedArray.keys", "Uint8ClampedArray.prototype.keys()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.lastIndexOf", "Uint8ClampedArray.prototype.lastIndexOf()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051901Z" creationid="gitnacho" creationdate="20221005T051901Z">
        <seg>- {{jsxref("TypedArray.lastIndexOf", "Uint8ClampedArray.prototype.lastIndexOf()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.map", "Uint8ClampedArray.prototype.map()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051928Z" creationid="gitnacho" creationdate="20221005T051928Z">
        <seg>- {{jsxref("TypedArray.map", "Uint8ClampedArray.prototype.map()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.name", "Uint8ClampedArray.name")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050452Z" creationid="gitnacho" creationdate="20221005T050452Z">
        <seg>- {{jsxref("TypedArray.name", "Uint8ClampedArray.name")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.of", "Uint8ClampedArray.of()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050545Z" creationid="gitnacho" creationdate="20221005T050545Z">
        <seg>- {{jsxref("TypedArray.of", "Uint8ClampedArray.of()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.prototype.buffer", "Uint8ClampedArray.prototype.buffer")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050654Z" creationid="gitnacho" creationdate="20221005T050654Z">
        <seg>- {{jsxref("TypedArray.prototype.buffer", "Uint8ClampedArray.prototype.buffer")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.prototype.byteLength", "Uint8ClampedArray.prototype.byteLength")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050721Z" creationid="gitnacho" creationdate="20221005T050721Z">
        <seg>- {{jsxref("TypedArray.prototype.byteLength", "Uint8ClampedArray.prototype.byteLength")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.reduce", "Uint8ClampedArray.prototype.reduce()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052007Z" creationid="gitnacho" creationdate="20221005T052007Z">
        <seg>- {{jsxref("TypedArray.reduce", "Uint8ClampedArray.prototype.reduce()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.reduceRight", "Uint8ClampedArray.prototype.reduceRight()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052035Z" creationid="gitnacho" creationdate="20221005T052035Z">
        <seg>- {{jsxref("TypedArray.reduceRight", "Uint8ClampedArray.prototype.reduceRight()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.reverse", "Uint8ClampedArray.prototype.reverse()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052056Z" creationid="gitnacho" creationdate="20221005T052056Z">
        <seg>- {{jsxref("TypedArray.reverse", "Uint8ClampedArray.prototype.reverse()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.set", "Uint8ClampedArray.prototype.set()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052116Z" creationid="gitnacho" creationdate="20221005T052116Z">
        <seg>- {{jsxref("TypedArray.set", "Uint8ClampedArray.prototype.set()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.slice", "Uint8ClampedArray.prototype.slice()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052148Z" creationid="gitnacho" creationdate="20221005T052148Z">
        <seg>- {{jsxref("TypedArray.slice", "Uint8ClampedArray.prototype.slice()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.some", "Uint8ClampedArray.prototype.some()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052213Z" creationid="gitnacho" creationdate="20221005T052213Z">
        <seg>- {{jsxref("TypedArray.some", "Uint8ClampedArray.prototype.some()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.sort", "Uint8ClampedArray.prototype.sort()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052235Z" creationid="gitnacho" creationdate="20221005T052235Z">
        <seg>- {{jsxref("TypedArray.sort", "Uint8ClampedArray.prototype.sort()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.subarray", "Uint8ClampedArray.prototype.subarray()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052309Z" creationid="gitnacho" creationdate="20221005T052309Z">
        <seg>- {{jsxref("TypedArray.subarray", "Uint8ClampedArray.prototype.subarray()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.toLocaleString", "Uint8ClampedArray.prototype.toLocaleString()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052349Z" creationid="gitnacho" creationdate="20221005T052349Z">
        <seg>- {{jsxref("TypedArray.toLocaleString", "Uint8ClampedArray.prototype.toLocaleString()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.toString", "Uint8ClampedArray.prototype.toString()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052442Z" creationid="gitnacho" creationdate="20221005T052442Z">
        <seg>- {{jsxref("TypedArray.toString", "Uint8ClampedArray.prototype.toString()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>- {{jsxref("TypedArray.values", "Uint8ClampedArray.prototype.values()")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052320Z" creationid="gitnacho" creationdate="20221005T052320Z">
        <seg>- {{jsxref("TypedArray.values", "Uint8ClampedArray.prototype.values()")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170330T091634Z" creationid="nacho" creationdate="20170330T091634Z">
        <seg>---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: "IMSC: subtitles and captioning for the Web"
slug: Related/IMSC
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T121821Z" creationid="gitnacho" creationdate="20221020T121821Z">
        <seg>---
title: "IMSC: subtitles and captioning for the Web"
slug: Related/IMSC
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: '&lt;script&gt;: The Script element'
slug: Web/HTML/Element/script
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T115901Z" creationid="gitnacho" creationdate="20221003T115901Z">
        <seg>---
title: '&lt;script&gt;: El elemento Script'
slug: Web/HTML/Element/script
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: 'Assessment: Accessibility troubleshooting'
slug: Learn/Accessibility/Accessibility_troubleshooting
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T035144Z" creationid="gitnacho" creationdate="20220925T035144Z">
        <seg>---
title: 'Assessment: Accessibility troubleshooting'
slug: Learn/Accessibility/Accessibility_troubleshooting
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: 'ServiceWorker: statechange event'
slug: Web/API/ServiceWorker/statechange_event
page-type: web-api-event
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T000856Z" creationid="gitnacho" creationdate="20221003T224710Z">
        <seg>---
title: 'ServiceWorker: Evento statechange'
slug: Web/API/ServiceWorker/statechange_event
page-type: web-api-event
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: 'ServiceWorkerContainer: controllerchange event'
slug: Web/API/ServiceWorkerContainer/controllerchange_event
page-type: web-api-event
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T001023Z" creationid="gitnacho" creationdate="20221003T230406Z">
        <seg>---
title: 'ServiceWorkerContainer: Evento controllerchange'
slug: Web/API/ServiceWorkerContainer/controllerchange_event
page-type: web-api-event
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: 'Yari: MDN''s rendering platform'
slug: MDN/Yari
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T075643Z" creationid="gitnacho" creationdate="20221019T075643Z">
        <seg>---
title: 'Yari: MDN''s rendering platform'
slug: MDN/Yari
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: &lt;view&gt;
slug: Web/SVG/Element/view
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T121847Z" creationid="gitnacho" creationdate="20221005T121847Z">
        <seg>---
title: &lt;view&gt;
slug: Web/SVG/Element/view
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: AbortController.abort()
slug: Web/API/AbortController/abort
page-type: web-api-instance-method
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T195035Z" creationid="gitnacho" creationdate="20220922T195035Z">
        <seg>---
title: AbortController.abort()
slug: Web/API/AbortController/abort
page-type: web-api-instance-method
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Abstraction
slug: Glossary/Abstraction
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T091431Z" creationid="gitnacho" creationdate="20221018T091324Z">
        <seg>---
title: Abstracción
slug: Glossary/Abstraction
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Accessibility and Spacial Patterns
slug: Web/Accessibility/Accessibility_and_Spacial_Patterns
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T231028Z" creationid="gitnacho" creationdate="20220922T231028Z">
        <seg>---
title: Accesibilidad y patrones espaciales
slug: Web/Accessibility/Accessibility_and_Spacial_Patterns
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Allowing cross-origin use of images and canvas
slug: Web/HTML/CORS_enabled_image
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T150536Z" creationid="gitnacho" creationdate="20221017T150536Z">
        <seg>---
title: Allowing cross-origin use of images and canvas
slug: Web/HTML/CORS_enabled_image
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Anatomy of a video game
slug: Games/Anatomy
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T013641Z" creationid="gitnacho" creationdate="20220921T013603Z">
        <seg>---
title: Anatomía de un video juego
slug: Games/Anatomy
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Bounding volume collision detection with THREE.js
slug: &gt;-</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T091301Z" creationid="gitnacho" creationdate="20221002T085543Z">
        <seg>---
title: Detección de colisión de volumen límite con THREE.js
slug: &gt;-</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Building up a basic demo with A-Frame
slug: Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T085553Z" creationid="gitnacho" creationdate="20221002T085553Z">
        <seg>---
title: Building up a basic demo with A-Frame
slug: Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Building up a basic demo with Babylon.js
slug: Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T083103Z" creationid="gitnacho" creationdate="20221002T082724Z">
        <seg>---
title: Crear una demo básica con Babylon.js
slug: Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Building up a basic demo with PlayCanvas editor
slug: Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas/editor
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T102231Z" creationid="gitnacho" creationdate="20221002T085556Z">
        <seg>---
title: Crear una demo básica con el editor PlayCanvas
slug: Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas/editor
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: CORS
slug: Glossary/CORS
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T084850Z" creationid="gitnacho" creationdate="20221017T205202Z">
        <seg>---
title: CORS
slug: Glossary/CORS
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: CSS basics
slug: Learn/Getting_started_with_the_web/CSS_basics
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T100533Z" creationid="gitnacho" creationdate="20221002T100533Z">
        <seg>---
title: Conceptos básicos de CSS
slug: Learn/Getting_started_with_the_web/CSS_basics
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Cache
slug: Web/API/Cache
page-type: web-api-interface
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T200758Z" creationid="gitnacho" creationdate="20221003T161919Z">
        <seg>---
title: Caché
slug: Web/API/Cache
page-type: web-api-interface
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Cache.add()
slug: Web/API/Cache/add
page-type: web-api-instance-method
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221001T235137Z" creationid="gitnacho" creationdate="20221001T235137Z">
        <seg>---
title: Cache.add()
slug: Web/API/Cache/add
page-type: web-api-instance-method
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Cache.put()
slug: Web/API/Cache/put
page-type: web-api-instance-method
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T061806Z" creationid="gitnacho" creationdate="20221002T061806Z">
        <seg>---
title: Cache.put()
slug: Web/API/Cache/put
page-type: web-api-instance-method
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: CacheStorage
slug: Web/API/CacheStorage
page-type: web-api-interface
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T232941Z" creationid="gitnacho" creationdate="20220921T232941Z">
        <seg>---
title: CacheStorage
slug: Web/API/CacheStorage
page-type: web-api-interface
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: CacheStorage.keys()
slug: Web/API/CacheStorage/keys
page-type: web-api-instance-method
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T061810Z" creationid="gitnacho" creationdate="20221002T061810Z">
        <seg>---
title: CacheStorage.keys()
slug: Web/API/CacheStorage/keys
page-type: web-api-instance-method
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: CacheStorage.match()
slug: Web/API/CacheStorage/match
page-type: web-api-instance-method
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T061814Z" creationid="gitnacho" creationdate="20221002T061814Z">
        <seg>---
title: CacheStorage.match()
slug: Web/API/CacheStorage/match
page-type: web-api-instance-method
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: CacheStorage.open()
slug: Web/API/CacheStorage/open
page-type: web-api-instance-method
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T224553Z" creationid="gitnacho" creationdate="20220921T224553Z">
        <seg>---
title: CacheStorage.open()
slug: Web/API/CacheStorage/open
page-type: web-api-instance-method
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Caching compiled WebAssembly modules
slug: WebAssembly/Caching_modules
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043251Z" creationid="gitnacho" creationdate="20221004T043251Z">
        <seg>---
title: Cacheo de módulos WebAssembly compilados
slug: WebAssembly/Caching_modules
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Canvas API
slug: Web/API/Canvas_API
page-type: web-api-overview
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T061913Z" creationid="gitnacho" creationdate="20221002T061913Z">
        <seg>---
title: API Canvas
slug: Web/API/Canvas_API
page-type: web-api-overview
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Code examples
slug: MDN/Writing_guidelines/Page_structures/Code_examples
page-type: mdn-writing-guide
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T085618Z" creationid="gitnacho" creationdate="20221005T202333Z">
        <seg>---
title: Código de ejemplo
slug: MDN/Writing_guidelines/Page_structures/Code_examples
page-type: mdn-writing-guide
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Common XSLT Errors
slug: Web/XSLT/Common_errors
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T125937Z" creationid="gitnacho" creationdate="20221019T125937Z">
        <seg>---
title: Common XSLT Errors
slug: Web/XSLT/Common_errors
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Commonly-used macros
slug: MDN/Writing_guidelines/Page_structures/Macros/Commonly_used_macros
page-type: mdn-writing-guide
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T101552Z" creationid="gitnacho" creationdate="20221005T101517Z">
        <seg>---
title: Macros usadas comúnmente
slug: MDN/Writing_guidelines/Page_structures/Macros/Commonly_used_macros
page-type: mdn-writing-guide
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Community discussions
slug: MDN/Community/Discussions
page-type: mdn-community-guide
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T182257Z" creationid="gitnacho" creationdate="20221012T182257Z">
        <seg>---
title: Community discussions
slug: MDN/Community/Discussions
page-type: mdn-community-guide
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Community guidelines
slug: MDN/Community
page-type: mdn-community-guide
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T182314Z" creationid="gitnacho" creationdate="20221012T182314Z">
        <seg>---
title: Community guidelines
slug: MDN/Community
page-type: mdn-community-guide
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Compiling a New C/C++ Module to WebAssembly
slug: WebAssembly/C_to_wasm
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000847Z" creationid="gitnacho" creationdate="20221003T105056Z">
        <seg>---
title: Compilar un nuevo módulo C/C++ a WebAssembly
slug: WebAssembly/C_to_wasm
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Compiling an Existing C Module to WebAssembly
slug: WebAssembly/existing_C_to_wasm
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T052726Z" creationid="gitnacho" creationdate="20221004T052639Z">
        <seg>---
title: Compilar un módulo C existente a WebAssembly
slug: WebAssembly/existing_C_to_wasm
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Compiling from Rust to WebAssembly
slug: WebAssembly/Rust_to_wasm
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T060419Z" creationid="gitnacho" creationdate="20221004T060419Z">
        <seg>---
title: Compilar de Rust a WebAssembly
slug: WebAssembly/Rust_to_wasm
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Contributing to MDN
slug: MDN/Contribute
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T205259Z" creationid="gitnacho" creationdate="20221008T205259Z">
        <seg>---
title: Contribuir a MDN
slug: MDN/Contribute
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Converting WebAssembly text format to wasm
slug: WebAssembly/Text_format_to_wasm
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182413Z" creationid="gitnacho" creationdate="20221007T182315Z">
        <seg>---
title: Convertir de formato de texto WebAssembly a wasm
slug: WebAssembly/Text_format_to_wasm
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Cross-Origin Resource Sharing (CORS)
slug: Web/HTTP/CORS
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T211008Z" creationid="gitnacho" creationdate="20221011T211008Z">
        <seg>---
title: Intercambio de recursos de origen cruzado (CORS)
slug: Web/HTTP/CORS
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Document.timeline
slug: Web/API/Document/timeline
page-type: web-api-instance-property
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T092404Z" creationid="gitnacho" creationdate="20221006T092404Z">
        <seg>---
title: Document.timeline
slug: Web/API/Document/timeline
page-type: web-api-instance-property
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Drop
slug: WebAssembly/Reference/Control_flow/Drop
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T083040Z" creationid="gitnacho" creationdate="20221020T083040Z">
        <seg>---
title: Instrucción Drop
slug: WebAssembly/Reference/Control_flow/Drop
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Event
slug: Web/API/Event
page-type: web-api-interface
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T200801Z" creationid="gitnacho" creationdate="20221011T200801Z">
        <seg>---
title: Event
slug: Web/API/Event
page-type: web-api-interface
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Examples
slug: Games/Examples
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T091124Z" creationid="gitnacho" creationdate="20220925T030810Z">
        <seg>---
title: Ejemplos
slug: Games/Examples
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Explaining basic 3D theory
slug: Games/Techniques/3D_on_the_web/Basic_theory
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T085550Z" creationid="gitnacho" creationdate="20221002T085550Z">
        <seg>---
title: Explaining basic 3D theory
slug: Games/Techniques/3D_on_the_web/Basic_theory
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Exported WebAssembly functions
slug: WebAssembly/Exported_functions
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T103748Z" creationid="gitnacho" creationdate="20221006T074818Z">
        <seg>---
title: Funciones WebAssembly exportadas
slug: WebAssembly/Exported_functions
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Features restricted to secure contexts
slug: Web/Security/Secure_Contexts/features_restricted_to_secure_contexts
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T232403Z" creationid="gitnacho" creationdate="20221018T232403Z">
        <seg>---
title: Características restringidas a contextos seguros
slug: Web/Security/Secure_Contexts/features_restricted_to_secure_contexts
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Filtering our to-do items
slug: Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T182428Z" creationid="gitnacho" creationdate="20221012T182428Z">
        <seg>---
title: Filtering our to-do items
slug: Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Front-end web developer
slug: Learn/Front-end_web_developer
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223150Z" creationid="gitnacho" creationdate="20221018T222959Z">
        <seg>---
title: Desarrollo web Front-end
slug: Learn/Front-end_web_developer
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Game development
slug: Games
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T043254Z" creationid="gitnacho" creationdate="20220923T043254Z">
        <seg>---
title: Desarrollo de juegos
slug: Games
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Getting started with the web
slug: Learn/Getting_started_with_the_web
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T035238Z" creationid="gitnacho" creationdate="20220925T035238Z">
        <seg>---
title: Primeros pasos en la web
slug: Learn/Getting_started_with_the_web
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: HTML basics
slug: Learn/Getting_started_with_the_web/HTML_basics
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T100031Z" creationid="gitnacho" creationdate="20221002T095937Z">
        <seg>---
title: Conceptos básicos de HTML
slug: Learn/Getting_started_with_the_web/HTML_basics
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: HTTP
slug: Web/HTTP
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T061821Z" creationid="gitnacho" creationdate="20221012T061821Z">
        <seg>---
title: HTTP
slug: Web/HTTP
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: HTTP Client hints
slug: Web/HTTP/Client_hints
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T084725Z" creationid="gitnacho" creationdate="20221012T084725Z">
        <seg>---
title: Sugerencias de cliente HTTP
slug: Web/HTTP/Client_hints
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: HTTP authentication
slug: Web/HTTP/Authentication
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T182450Z" creationid="gitnacho" creationdate="20221012T182450Z">
        <seg>---
title: HTTP authentication
slug: Web/HTTP/Authentication
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: HTTP header
slug: Glossary/HTTP_header
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T075744Z" creationid="gitnacho" creationdate="20221017T211152Z">
        <seg>---
title: Cabecera HTTP
slug: Glossary/HTTP_header
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: HTTPS
slug: Glossary/https
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T201913Z" creationid="gitnacho" creationdate="20221018T201913Z">
        <seg>---
title: HTTPS
slug: Glossary/https
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: How to replace deprecated KumaScript macros
slug: MDN/Writing_guidelines/Page_structures/Macros/Deprecated_macros
page-type: mdn-writing-guide
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T215856Z" creationid="gitnacho" creationdate="20221005T215829Z">
        <seg>---
title: Cómo reemplazar las macros obsoletas de KumaScript
slug: MDN/Writing_guidelines/Page_structures/Macros/Deprecated_macros
page-type: mdn-writing-guide
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: How to write in markdown
slug: MDN/Writing_guidelines/Howto/Markdown_in_MDN
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T164903Z" creationid="gitnacho" creationdate="20221008T164903Z">
        <seg>---
title: Cómo escribir en Markdown
slug: MDN/Writing_guidelines/Howto/Markdown_in_MDN
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Installing basic software
slug: Learn/Getting_started_with_the_web/Installing_basic_software
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T115005Z" creationid="gitnacho" creationdate="20221012T115005Z">
        <seg>---
title: Instalación de software básico
slug: Learn/Getting_started_with_the_web/Installing_basic_software
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: KumaScript
slug: MDN/Tools/KumaScript
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T064416Z" creationid="gitnacho" creationdate="20221005T064416Z">
        <seg>---
title: KumaScript
slug: MDN/Tools/KumaScript
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Learn web development
slug: Learn
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T172826Z" creationid="gitnacho" creationdate="20221012T182154Z">
        <seg>---
title: Aprende desarrollo web
slug: Learn
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Loading and running WebAssembly code
slug: WebAssembly/Loading_and_running
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T070828Z" creationid="gitnacho" creationdate="20221004T070828Z">
        <seg>---
title: Cargar y ejecutar código WebAssembly
slug: WebAssembly/Loading_and_running
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Loops and iteration
slug: Web/JavaScript/Guide/Loops_and_iteration
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T054820Z" creationid="gitnacho" creationdate="20220921T054820Z">
        <seg>---
title: Bucles e iteración
slug: Web/JavaScript/Guide/Loops_and_iteration
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: MDN at 10
slug: MDN/At_ten
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T182338Z" creationid="gitnacho" creationdate="20221012T182338Z">
        <seg>---
title: MDN at 10
slug: MDN/At_ten
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: MDN tools
slug: MDN/Tools
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T063201Z" creationid="gitnacho" creationdate="20221005T063201Z">
        <seg>---
title: Herramientas MDN
slug: MDN/Tools
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: MathML fractions and roots
slug: Learn/MathML/First_steps/Fractions_and_roots
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T183046Z" creationid="gitnacho" creationdate="20221005T183046Z">
        <seg>---
title: MathML fractions and roots
slug: Learn/MathML/First_steps/Fractions_and_roots
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Microsoft API extensions
slug: Web/API/Microsoft_Extensions
page-type: landing-page
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T095207Z" creationid="gitnacho" creationdate="20221019T095207Z">
        <seg>---
title: Microsoft API extensions
slug: Web/API/Microsoft_Extensions
page-type: landing-page
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Mozilla
slug: Mozilla
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T205640Z" creationid="gitnacho" creationdate="20221006T205640Z">
        <seg>---
title: Mozilla
slug: Mozilla
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Multiplication
slug: WebAssembly/Reference/Numeric/Multiplication
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T091343Z" creationid="gitnacho" creationdate="20221007T091343Z">
        <seg>---
title: Multiplicación
slug: WebAssembly/Reference/Numeric/Multiplication
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: NavigationPreloadManager
slug: Web/API/NavigationPreloadManager
page-type: web-api-interface
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T203636Z" creationid="gitnacho" creationdate="20220922T203636Z">
        <seg>---
title: NavigationPreloadManager
slug: Web/API/NavigationPreloadManager
page-type: web-api-interface
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: NavigationPreloadManager.disable()
slug: Web/API/NavigationPreloadManager/disable
page-type: web-api-instance-method
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T214023Z" creationid="gitnacho" creationdate="20220922T214023Z">
        <seg>---
title: NavigationPreloadManager.disable()
slug: Web/API/NavigationPreloadManager/disable
page-type: web-api-instance-method
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Origin
slug: Glossary/Origin
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T152404Z" creationid="gitnacho" creationdate="20221017T151341Z">
        <seg>---
title: Origen
slug: Glossary/Origin
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Page structures
slug: MDN/Writing_guidelines/Page_structures
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T093834Z" creationid="gitnacho" creationdate="20221005T093834Z">
        <seg>---
title: Estructuras de página
slug: MDN/Writing_guidelines/Page_structures
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Promise.resolve()
slug: Web/JavaScript/Reference/Global_Objects/Promise/resolve
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T072414Z" creationid="gitnacho" creationdate="20221002T072414Z">
        <seg>---
title: Promise.resolve()
slug: Web/JavaScript/Reference/Global_Objects/Promise/resolve
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: SVGPointList.getItem()
slug: Web/API/SVGPointList/getItem
page-type: web-api-instance-method
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T195207Z" creationid="gitnacho" creationdate="20220922T195207Z">
        <seg>---
title: SVGPointList.getItem()
slug: Web/API/SVGPointList/getItem
page-type: web-api-instance-method
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Secure contexts
slug: Web/Security/Secure_Contexts
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T203157Z" creationid="gitnacho" creationdate="20221018T203136Z">
        <seg>---
title: Contextos seguros
slug: Web/Security/Secure_Contexts
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Service Worker API
slug: Web/API/Service_Worker_API
page-type: web-api-overview
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T133343Z" creationid="gitnacho" creationdate="20220921T053625Z">
        <seg>---
title: API de Service Worker
slug: Web/API/Service_Worker_API
page-type: web-api-overview
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: ServiceWorker
slug: Web/API/ServiceWorker
page-type: web-api-interface
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T002400Z" creationid="gitnacho" creationdate="20221003T002400Z">
        <seg>---
title: ServiceWorker
slug: Web/API/ServiceWorker
page-type: web-api-interface
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: ServiceWorker.state
slug: Web/API/ServiceWorker/state
page-type: web-api-instance-property
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223030Z" creationid="gitnacho" creationdate="20221003T223030Z">
        <seg>---
title: ServiceWorker.state
slug: Web/API/ServiceWorker/state
page-type: web-api-instance-property
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Setting parameters
slug: Web/XSLT/XSLT_JS_interface_in_Gecko/Setting_Parameters
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T101819Z" creationid="gitnacho" creationdate="20221020T101819Z">
        <seg>---
title: Setting parameters
slug: Web/XSLT/XSLT_JS_interface_in_Gecko/Setting_Parameters
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: SharedArrayBuffer
slug: Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T231439Z" creationid="gitnacho" creationdate="20220922T231439Z">
        <seg>---
title: SharedArrayBuffer
slug: Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: The MDN Web Docs project
slug: MDN
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T074117Z" creationid="gitnacho" creationdate="20221008T200144Z">
        <seg>---
title: Proyecto MDN Web Docs
slug: MDN
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: The MDN sample server
slug: MDN/Tools/Sample_server
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T175843Z" creationid="gitnacho" creationdate="20221012T175843Z">
        <seg>---
title: The MDN sample server
slug: MDN/Tools/Sample_server
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: The history of MDN
slug: MDN/At_ten/History_of_MDN
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T112449Z" creationid="gitnacho" creationdate="20221019T112449Z">
        <seg>---
title: La historia de MDN
slug: MDN/At_ten/History_of_MDN
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Third-party APIs
slug: Learn/JavaScript/Client-side_web_APIs/Third_party_APIs
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T150518Z" creationid="gitnacho" creationdate="20221017T150518Z">
        <seg>---
title: Third-party APIs
slug: Learn/JavaScript/Client-side_web_APIs/Third_party_APIs
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Tools and testing
slug: Learn/Tools_and_testing
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T182253Z" creationid="gitnacho" creationdate="20221012T182253Z">
        <seg>---
title: Tools and testing
slug: Learn/Tools_and_testing
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Troubleshooting KumaScript errors
slug: MDN/Tools/KumaScript/Troubleshooting
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T091647Z" creationid="gitnacho" creationdate="20221005T091647Z">
        <seg>---
title: Solución de errores KumaScript
slug: MDN/Tools/KumaScript/Troubleshooting
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Tutorials
slug: Web/Tutorials
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T101419Z" creationid="gitnacho" creationdate="20221002T101402Z">
        <seg>---
title: Tutoriales
slug: Web/Tutorials
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Uint8ClampedArray
slug: Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050153Z" creationid="gitnacho" creationdate="20221005T050153Z">
        <seg>---
title: Uint8ClampedArray
slug: Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Understanding WebAssembly text format
slug: WebAssembly/Understanding_the_text_format
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T103545Z" creationid="gitnacho" creationdate="20221007T044730Z">
        <seg>---
title: Entender el formato de texto WebAssembly
slug: WebAssembly/Understanding_the_text_format
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Using Service Workers
slug: Web/API/Service_Worker_API/Using_Service_Workers
page-type: guide
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T021126Z" creationid="gitnacho" creationdate="20220921T014611Z">
        <seg>---
title: Usar Service Workers
slug: Web/API/Service_Worker_API/Using_Service_Workers
page-type: guide
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Using macros
slug: MDN/Writing_guidelines/Page_structures/Macros
page-type: mdn-writing-guide
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T094602Z" creationid="gitnacho" creationdate="20221005T094602Z">
        <seg>---
title: Usar macros
slug: MDN/Writing_guidelines/Page_structures/Macros
page-type: mdn-writing-guide
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Using the WebAssembly JavaScript API
slug: WebAssembly/Using_the_JavaScript_API
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T111239Z" creationid="gitnacho" creationdate="20221006T111239Z">
        <seg>---
title: Usar la API JavaScript de WebAssembly
slug: WebAssembly/Using_the_JavaScript_API
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: VideoFrame
slug: Web/API/VideoFrame
page-type: web-api-interface
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T233238Z" creationid="gitnacho" creationdate="20221003T233238Z">
        <seg>---
title: VideoFrame
slug: Web/API/VideoFrame
page-type: web-api-interface
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Web APIs
slug: Web/API
page-type: landing-page
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T001742Z" creationid="gitnacho" creationdate="20221002T001742Z">
        <seg>---
title: APIs Web
slug: Web/API
page-type: landing-page
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Web technology for developers
slug: Web
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T092115Z" creationid="gitnacho" creationdate="20221002T091930Z">
        <seg>---
title: Tecnología para desarrolladores Web
slug: Web
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly
slug: WebAssembly
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T093916Z" creationid="gitnacho" creationdate="20221003T093916Z">
        <seg>---
title: WebAssembly
slug: WebAssembly
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly
slug: WebAssembly/JavaScript_interface
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T010455Z" creationid="gitnacho" creationdate="20221006T010455Z">
        <seg>---
title: WebAssembly
slug: WebAssembly/JavaScript_interface
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly Concepts
slug: WebAssembly/Concepts
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T003559Z" creationid="gitnacho" creationdate="20221003T003559Z">
        <seg>---
title: Conceptos WebAssembly
slug: WebAssembly/Concepts
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly control flow instructions
slug: WebAssembly/Reference/Control_flow
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094255Z" creationid="gitnacho" creationdate="20221007T094255Z">
        <seg>---
title: Instrucciones de control de flujo WebAssembly
slug: WebAssembly/Reference/Control_flow
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly instruction reference
slug: WebAssembly/Reference
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T123340Z" creationid="gitnacho" creationdate="20221019T123340Z">
        <seg>---
title: Referencia de instrucciones WebAssembly
slug: WebAssembly/Reference
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly memory instructions
slug: WebAssembly/Reference/Memory
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T095159Z" creationid="gitnacho" creationdate="20221007T095159Z">
        <seg>---
title: Instrucciones memory de WebAssembly
slug: WebAssembly/Reference/Memory
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.CompileError
slug: WebAssembly/JavaScript_interface/CompileError
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T042501Z" creationid="gitnacho" creationdate="20221007T042501Z">
        <seg>---
title: WebAssembly.CompileError
slug: WebAssembly/JavaScript_interface/CompileError
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.CompileError() constructor
slug: WebAssembly/JavaScript_interface/CompileError/CompileError
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T024813Z" creationid="gitnacho" creationdate="20221008T024813Z">
        <seg>---
title: WebAssembly.CompileError() constructor
slug: WebAssembly/JavaScript_interface/CompileError/CompileError
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Exception
slug: WebAssembly/JavaScript_interface/Exception
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T010538Z" creationid="gitnacho" creationdate="20221006T010538Z">
        <seg>---
title: WebAssembly.Exception
slug: WebAssembly/JavaScript_interface/Exception
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Exception constructor
slug: WebAssembly/JavaScript_interface/Exception/Exception
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T135543Z" creationid="gitnacho" creationdate="20221006T010544Z">
        <seg>---
title: Constructor WebAssembly.Exception
slug: WebAssembly/JavaScript_interface/Exception/Exception
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Exception.prototype.getArg()
slug: WebAssembly/JavaScript_interface/Exception/getArg
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T010542Z" creationid="gitnacho" creationdate="20221006T010542Z">
        <seg>---
title: WebAssembly.Exception.prototype.getArg()
slug: WebAssembly/JavaScript_interface/Exception/getArg
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Exception.prototype.is()
slug: WebAssembly/JavaScript_interface/Exception/is
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T010516Z" creationid="gitnacho" creationdate="20221006T010516Z">
        <seg>---
title: WebAssembly.Exception.prototype.is()
slug: WebAssembly/JavaScript_interface/Exception/is
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Exception.prototype.stack
slug: WebAssembly/JavaScript_interface/Exception/stack
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T010511Z" creationid="gitnacho" creationdate="20221006T010511Z">
        <seg>---
title: WebAssembly.Exception.prototype.stack
slug: WebAssembly/JavaScript_interface/Exception/stack
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Global
slug: WebAssembly/JavaScript_interface/Global
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T010501Z" creationid="gitnacho" creationdate="20221006T010501Z">
        <seg>---
title: WebAssembly.Global
slug: WebAssembly/JavaScript_interface/Global
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Global() constructor
slug: WebAssembly/JavaScript_interface/Global/Global
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110047Z" creationid="gitnacho" creationdate="20221006T010507Z">
        <seg>---
title:  Constructor WebAssembly.Global()
slug: WebAssembly/JavaScript_interface/Global/Global
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Instance
slug: WebAssembly/JavaScript_interface/Instance
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T223321Z" creationid="gitnacho" creationdate="20221005T223321Z">
        <seg>---
title: WebAssembly.Instance
slug: WebAssembly/JavaScript_interface/Instance
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Instance() constructor
slug: WebAssembly/JavaScript_interface/Instance/Instance
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T205647Z" creationid="gitnacho" creationdate="20221019T205647Z">
        <seg>---
title: WebAssembly.Instance() constructor
slug: WebAssembly/JavaScript_interface/Instance/Instance
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Instance.prototype.exports
slug: WebAssembly/JavaScript_interface/Instance/exports
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T093445Z" creationid="gitnacho" creationdate="20221006T093445Z">
        <seg>---
title: WebAssembly.Instance.prototype.exports
slug: WebAssembly/JavaScript_interface/Instance/exports
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.LinkError
slug: WebAssembly/JavaScript_interface/LinkError
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T073839Z" creationid="gitnacho" creationdate="20221008T073839Z">
        <seg>---
title: WebAssembly.LinkError
slug: WebAssembly/JavaScript_interface/LinkError
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.LinkError() constructor
slug: WebAssembly/JavaScript_interface/LinkError/LinkError
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T211229Z" creationid="gitnacho" creationdate="20221019T211229Z">
        <seg>---
title: WebAssembly.LinkError() constructor
slug: WebAssembly/JavaScript_interface/LinkError/LinkError
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Memory
slug: WebAssembly/JavaScript_interface/Memory
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T234638Z" creationid="gitnacho" creationdate="20221007T234638Z">
        <seg>---
title: WebAssembly.Memory
slug: WebAssembly/JavaScript_interface/Memory
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Memory() constructor
slug: WebAssembly/JavaScript_interface/Memory/Memory
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T214852Z" creationid="gitnacho" creationdate="20221019T214852Z">
        <seg>---
title: WebAssembly.Memory() constructor
slug: WebAssembly/JavaScript_interface/Memory/Memory
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Memory.prototype.buffer
slug: WebAssembly/JavaScript_interface/Memory/buffer
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T212949Z" creationid="gitnacho" creationdate="20221019T212949Z">
        <seg>---
title: WebAssembly.Memory.prototype.buffer
slug: WebAssembly/JavaScript_interface/Memory/buffer
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Memory.prototype.grow()
slug: WebAssembly/JavaScript_interface/Memory/grow
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T213812Z" creationid="gitnacho" creationdate="20221019T213812Z">
        <seg>---
title: WebAssembly.Memory.prototype.grow()
slug: WebAssembly/JavaScript_interface/Memory/grow
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Module
slug: WebAssembly/JavaScript_interface/Module
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T111436Z" creationid="gitnacho" creationdate="20221007T111436Z">
        <seg>---
title: WebAssembly.Module
slug: WebAssembly/JavaScript_interface/Module
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Module() constructor
slug: WebAssembly/JavaScript_interface/Module/Module
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T230925Z" creationid="gitnacho" creationdate="20221019T230925Z">
        <seg>---
title: Constructor WebAssembly.Module()
slug: WebAssembly/JavaScript_interface/Module/Module
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Module.customSections()
slug: WebAssembly/JavaScript_interface/Module/customSections
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T221617Z" creationid="gitnacho" creationdate="20221019T221617Z">
        <seg>---
title: WebAssembly.Module.customSections()
slug: WebAssembly/JavaScript_interface/Module/customSections
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Module.exports()
slug: WebAssembly/JavaScript_interface/Module/exports
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T224504Z" creationid="gitnacho" creationdate="20221019T224504Z">
        <seg>---
title: WebAssembly.Module.exports()
slug: WebAssembly/JavaScript_interface/Module/exports
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Module.imports()
slug: WebAssembly/JavaScript_interface/Module/imports
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T225835Z" creationid="gitnacho" creationdate="20221019T225835Z">
        <seg>---
title: WebAssembly.Module.imports()
slug: WebAssembly/JavaScript_interface/Module/imports
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.RuntimeError
slug: WebAssembly/JavaScript_interface/RuntimeError
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T080108Z" creationid="gitnacho" creationdate="20221008T080108Z">
        <seg>---
title: WebAssembly.RuntimeError
slug: WebAssembly/JavaScript_interface/RuntimeError
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.RuntimeError() constructor
slug: WebAssembly/JavaScript_interface/RuntimeError/RuntimeError
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T085935Z" creationid="gitnacho" creationdate="20221008T085935Z">
        <seg>---
title: WebAssembly.RuntimeError() constructor
slug: WebAssembly/JavaScript_interface/RuntimeError/RuntimeError
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Table
slug: WebAssembly/JavaScript_interface/Table
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095954Z" creationid="gitnacho" creationdate="20221006T095954Z">
        <seg>---
title: WebAssembly.Table
slug: WebAssembly/JavaScript_interface/Table
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Table() constructor
slug: WebAssembly/JavaScript_interface/Table/Table
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T235624Z" creationid="gitnacho" creationdate="20221019T235624Z">
        <seg>---
title: Constructor WebAssembly.Table()
slug: WebAssembly/JavaScript_interface/Table/Table
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Table.prototype.get()
slug: WebAssembly/JavaScript_interface/Table/get
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T091227Z" creationid="gitnacho" creationdate="20221006T091227Z">
        <seg>---
title: WebAssembly.Table.prototype.get()
slug: WebAssembly/JavaScript_interface/Table/get
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Table.prototype.grow()
slug: WebAssembly/JavaScript_interface/Table/grow
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T233205Z" creationid="gitnacho" creationdate="20221019T233205Z">
        <seg>---
title: WebAssembly.Table.prototype.grow()
slug: WebAssembly/JavaScript_interface/Table/grow
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Table.prototype.length
slug: WebAssembly/JavaScript_interface/Table/length
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T105938Z" creationid="gitnacho" creationdate="20221006T105938Z">
        <seg>---
title: WebAssembly.Table.prototype.length
slug: WebAssembly/JavaScript_interface/Table/length
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Table.prototype.set()
slug: WebAssembly/JavaScript_interface/Table/set
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T233756Z" creationid="gitnacho" creationdate="20221019T233756Z">
        <seg>---
title: WebAssembly.Table.prototype.set()
slug: WebAssembly/JavaScript_interface/Table/set
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Tag
slug: WebAssembly/JavaScript_interface/Tag
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T001957Z" creationid="gitnacho" creationdate="20221008T001957Z">
        <seg>---
title: WebAssembly.Tag
slug: WebAssembly/JavaScript_interface/Tag
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Tag() constructor
slug: WebAssembly/JavaScript_interface/Tag/Tag
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T070750Z" creationid="gitnacho" creationdate="20221019T125950Z">
        <seg>---
title: Constructor WebAssembly.Tag()
slug: WebAssembly/JavaScript_interface/Tag/Tag
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.Tag.prototype.type()
slug: WebAssembly/JavaScript_interface/Tag/type
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T071314Z" creationid="gitnacho" creationdate="20221020T071314Z">
        <seg>---
title: WebAssembly.Tag.prototype.type()
slug: WebAssembly/JavaScript_interface/Tag/type
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.compile()
slug: WebAssembly/JavaScript_interface/compile
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T122117Z" creationid="gitnacho" creationdate="20221007T122117Z">
        <seg>---
title: WebAssembly.compile()
slug: WebAssembly/JavaScript_interface/compile
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.compileStreaming()
slug: WebAssembly/JavaScript_interface/compileStreaming
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T010557Z" creationid="gitnacho" creationdate="20221006T010557Z">
        <seg>---
title: WebAssembly.compileStreaming()
slug: WebAssembly/JavaScript_interface/compileStreaming
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.instantiate()
slug: WebAssembly/JavaScript_interface/instantiate
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T191237Z" creationid="gitnacho" creationdate="20221007T191237Z">
        <seg>---
title: WebAssembly.instantiate()
slug: WebAssembly/JavaScript_interface/instantiate
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.instantiateStreaming()
slug: WebAssembly/JavaScript_interface/instantiateStreaming
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T100941Z" creationid="gitnacho" creationdate="20221006T100941Z">
        <seg>---
title: WebAssembly.instantiateStreaming()
slug: WebAssembly/JavaScript_interface/instantiateStreaming
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: WebAssembly.validate()
slug: WebAssembly/JavaScript_interface/validate
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T195632Z" creationid="gitnacho" creationdate="20221007T195632Z">
        <seg>---
title: WebAssembly.validate()
slug: WebAssembly/JavaScript_interface/validate
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: What will your website look like?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T055842Z" creationid="gitnacho" creationdate="20221019T055842Z">
        <seg>---
title: ¿Cual será la apariencia de tu sitio web?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: Worker.postMessage()
slug: Web/API/Worker/postMessage
page-type: web-api-instance-method
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115206Z" creationid="gitnacho" creationdate="20221007T115206Z">
        <seg>---
title: Worker.postMessage()
slug: Web/API/Worker/postMessage
page-type: web-api-instance-method
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: X-XSS-Protection
slug: Web/HTTP/Headers/X-XSS-Protection
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T074017Z" creationid="gitnacho" creationdate="20221012T073942Z">
        <seg>---
title: Protección X-XSS
slug: Web/HTTP/Headers/X-XSS-Protection
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: block
slug: WebAssembly/Reference/Control_flow/block
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T075130Z" creationid="gitnacho" creationdate="20221020T074823Z">
        <seg>---
title: Instrucción block
slug: WebAssembly/Reference/Control_flow/block
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: br
slug: WebAssembly/Reference/Control_flow/br
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T075710Z" creationid="gitnacho" creationdate="20221020T075710Z">
        <seg>---
title: Instrucción br
slug: WebAssembly/Reference/Control_flow/br
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: caches
slug: Web/API/caches
page-type: web-api-global-property
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T061801Z" creationid="gitnacho" creationdate="20221002T061801Z">
        <seg>---
title: caches
slug: Web/API/caches
page-type: web-api-global-property
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: call
slug: WebAssembly/Reference/Control_flow/call
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T082756Z" creationid="gitnacho" creationdate="20221020T082756Z">
        <seg>---
title: Instrucción call
slug: WebAssembly/Reference/Control_flow/call
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: end
slug: WebAssembly/Reference/Control_flow/end
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T083516Z" creationid="gitnacho" creationdate="20221020T083516Z">
        <seg>---
title: Instrucción end
slug: WebAssembly/Reference/Control_flow/end
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: if...else
slug: WebAssembly/Reference/Control_flow/if...else
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T083935Z" creationid="gitnacho" creationdate="20221020T083935Z">
        <seg>---
title: Instrucción if...else
slug: WebAssembly/Reference/Control_flow/if...else
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: loop
slug: WebAssembly/Reference/Control_flow/loop
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T084616Z" creationid="gitnacho" creationdate="20221020T084616Z">
        <seg>---
title: Instrucción loop
slug: WebAssembly/Reference/Control_flow/loop
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: nop
slug: WebAssembly/Reference/Control_flow/nop
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085941Z" creationid="gitnacho" creationdate="20221020T085941Z">
        <seg>---
title: Instrucción nop
slug: WebAssembly/Reference/Control_flow/nop
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: return
slug: WebAssembly/Reference/Control_flow/return
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T120619Z" creationid="gitnacho" creationdate="20221020T120619Z">
        <seg>---
title: return
slug: WebAssembly/Reference/Control_flow/return
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>---
title: setInterval()
slug: Web/API/setInterval
page-type: web-api-global-function
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T003522Z" creationid="gitnacho" creationdate="20221003T003522Z">
        <seg>---
title: setInterval()
slug: Web/API/setInterval
page-type: web-api-global-function
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>--- | --- | ---
cell 1    | cell 2    | cell 3
cell 4    | cell 5    | cell 6
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184741Z" creationid="gitnacho" creationdate="20221008T184741Z">
        <seg>--- | --- | ---
celda 1 | celda 2 | celda 3
celda 4 | celda 5 | celda 6
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>--&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180616T092632Z" creationid="nacho" creationdate="20170428T105313Z">
        <seg>--&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>--first-color: #488cff;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174250Z" creationid="gitnacho" creationdate="20221012T174250Z">
        <seg>--first-color: #488cff;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>--second-color: #ffff8c;
}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174251Z" creationid="gitnacho" creationdate="20221012T174251Z">
        <seg>--second-color: #ffff8c;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>-I libwebp \</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053629Z" creationid="gitnacho" creationdate="20221004T053629Z">
        <seg>-I libwebp \</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="pacho" changedate="20190801T151801Z" creationid="pacho" creationdate="20190801T151801Z">
        <seg>.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>...</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170326T072837Z" creationid="nacho" creationdate="20170326T072837Z">
        <seg>...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>...
)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072040Z" creationid="gitnacho" creationdate="20221007T072040Z">
        <seg>...
)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>...and for `en-US` / `ko`:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083246Z" creationid="gitnacho" creationdate="20221005T083246Z">
        <seg>...y para `en-US` / `ko`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>...and for `es`:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083222Z" creationid="gitnacho" creationdate="20221005T083222Z">
        <seg>...y para `es`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.catch(() =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220806T055332Z" creationid="nachec" creationdate="20220806T055332Z">
        <seg>.catch(() =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.catch((e) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023515Z" creationid="gitnacho" creationdate="20221008T023515Z">
        <seg>.catch((e) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.catch((err) =&gt; console.error(`Failure to instantiate: ${err}`));
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043952Z" creationid="gitnacho" creationdate="20221004T043952Z">
        <seg>.catch((err) =&gt; console.error(`Error al crear una instancia: ${err}`));
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.catch((error) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T202141Z" creationid="gitnacho" creationdate="20221003T202141Z">
        <seg>.catch((error) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.filter(Boolean)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220827T225513Z" creationid="gitnacho" creationdate="20220827T225513Z">
        <seg>.filter(Boolean)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.match(event.request)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T201929Z" creationid="gitnacho" creationdate="20221003T201929Z">
        <seg>.match(event.request)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.open("v1")</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T225353Z" creationid="gitnacho" creationdate="20220921T225353Z">
        <seg>.open("v1")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.register("service-worker.js", {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213305Z" creationid="gitnacho" creationdate="20221003T213305Z">
        <seg>.register("service-worker.js", {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.respondWith</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035248Z" creationid="gitnacho" creationdate="20220921T035248Z">
        <seg>.respondWith</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then(() =&gt; console.log("Done!"))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T212720Z" creationid="gitnacho" creationdate="20220922T212720Z">
        <seg>.then(() =&gt; console.log("¡Listo!"))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then(() =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210953Z" creationid="gitnacho" creationdate="20220922T210953Z">
        <seg>.then(() =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then((bytes) =&gt; WebAssembly.compile(bytes))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T122157Z" creationid="gitnacho" creationdate="20221007T122157Z">
        <seg>.then((bytes) =&gt; WebAssembly.compile(bytes))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then((bytes) =&gt; WebAssembly.instantiate(bytes, importObject))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T055706Z" creationid="gitnacho" creationdate="20221005T055706Z">
        <seg>.then((bytes) =&gt; WebAssembly.instantiate(bytes, importObject))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then((bytes) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T115415Z" creationid="gitnacho" creationdate="20221019T115415Z">
        <seg>.then((bytes) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then((cache) =&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T225354Z" creationid="gitnacho" creationdate="20220921T225354Z">
        <seg>.then((cache) =&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then((instance) =&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043911Z" creationid="gitnacho" creationdate="20221004T043911Z">
        <seg>.then((instance) =&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then((instance) =&gt; instance.exports.exported_func());
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T185729Z" creationid="gitnacho" creationdate="20221007T185729Z">
        <seg>.then((instance) =&gt; instance.exports.exported_func());
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then((mod) =&gt; worker.postMessage(mod));
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T111600Z" creationid="gitnacho" creationdate="20221007T111600Z">
        <seg>.then((mod) =&gt; worker.postMessage(mod));
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then((module) =&gt; WebAssembly.instantiate(module, importObject))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T185728Z" creationid="gitnacho" creationdate="20221007T185728Z">
        <seg>.then((module) =&gt; WebAssembly.instantiate(module, importObject))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then((obj) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T092043Z" creationid="gitnacho" creationdate="20221006T092043Z">
        <seg>.then((obj) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then((registration) =&gt; registration.navigationPreload.getState())</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T211215Z" creationid="gitnacho" creationdate="20220922T211215Z">
        <seg>.then((registration) =&gt; registration.navigationPreload.getState())</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then((registration) =&gt; registration.navigationPreload.setHeaderValue(newValue))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210952Z" creationid="gitnacho" creationdate="20220922T210952Z">
        <seg>.then((registration) =&gt; registration.navigationPreload.setHeaderValue(newValue))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then((registration) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213309Z" creationid="gitnacho" creationdate="20221003T213309Z">
        <seg>.then((registration) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then((response) =&gt; response.arrayBuffer())</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T055705Z" creationid="gitnacho" creationdate="20221005T055705Z">
        <seg>.then((response) =&gt; response.arrayBuffer())</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then((response) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T201929Z" creationid="gitnacho" creationdate="20221003T201929Z">
        <seg>.then((response) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then((result) =&gt; result.instance.exports.exported_func());
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T191334Z" creationid="gitnacho" creationdate="20221007T191334Z">
        <seg>.then((result) =&gt; result.instance.exports.exported_func());
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then((results) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T055709Z" creationid="gitnacho" creationdate="20221005T055709Z">
        <seg>.then((results) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then((state) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T211217Z" creationid="gitnacho" creationdate="20220922T211217Z">
        <seg>.then((state) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>.then((v) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080705Z" creationid="gitnacho" creationdate="20221002T080705Z">
        <seg>.then((v) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>/</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200809T061837Z" creationid="nacho" creationdate="20200809T061837Z">
        <seg>/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>/ Auf Wiedersehen!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083215Z" creationid="gitnacho" creationdate="20221005T083215Z">
        <seg>/ Auf Wiedersehen!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>/ Goodbye!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083232Z" creationid="gitnacho" creationdate="20221005T083232Z">
        <seg>/ Goodbye!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>/*</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200530T063648Z" creationid="Pacho" creationdate="20200530T063648Z">
        <seg>/*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>/* Log output
example.js:40 WebAssembly.Exception: wasm exception
example.js:41 getArg 0 : 1
*/
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T143049Z" creationid="gitnacho" creationdate="20221019T143049Z">
        <seg>/* Registra la salida
example.js:40 WebAssembly.Exception: wasm exception
example.js:41 getArg 0 : 1
*/
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>/* Log output
example.js:40 WebAssembly.Exception: wasm exception
example.js:41 getArg 0 : 42
*/
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023550Z" creationid="gitnacho" creationdate="20221008T023550Z">
        <seg>/* Log output
example.js:40 WebAssembly.Exception: wasm exception
example.js:41 getArg 0 : 42
*/
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>/* http://www.iana.org/assignments/http-status-codes/http-status-codes.xml */</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T065328Z" creationid="gitnacho" creationdate="20221012T065328Z">
        <seg>/* http://www.iana.org/assignments/http-status-codes/http-status-codes.xml */</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>/**</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180429T055324Z" creationid="nacho" creationdate="20180429T055324Z">
        <seg>/**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>//</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220805T145049Z" creationid="Pacho" creationdate="20200425T214056Z">
        <seg>//</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// (see https://developer.mozilla.org/en-US/docs/Web/API/Request/clone)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T204527Z">
        <seg>// (consulta https://developer.mozilla.org/es/docs/Web/API/Request/clone)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// ...</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041815Z" creationid="gitnacho" creationdate="20220921T041815Z">
        <seg>// ...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// ...
});
%&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082950Z" creationid="gitnacho" creationdate="20221005T082950Z">
        <seg>// ...
});
%&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// All of the Google Web Fonts are served off of a domain that supports CORS, so that isn't an issue here.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204714Z" creationid="gitnacho" creationdate="20221003T204714Z">
        <seg>// Todas las fuentes web de Google se sirven desde un dominio compatible con CORS, por lo que no es un problema aquí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// At this point, swr.waiting OR swr.active might be true.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T225108Z" creationid="gitnacho" creationdate="20221003T225108Z">
        <seg>// En este punto, swr.waiting O swr.active podrían ser true.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Both fetch() and cache.put() "consume" the request, so we need to make a copy.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204454Z" creationid="gitnacho" creationdate="20221003T204454Z">
        <seg>// Tanto fetch() como cache.put() "consumen" la petición, por lo que necesitamos hacer una copia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Call an exported function:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T060526Z" creationid="gitnacho" creationdate="20221005T060526Z">
        <seg>// Llama a una función exportada:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Check we have the right tag for the exception</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023525Z" creationid="gitnacho" creationdate="20221008T023525Z">
        <seg>// Comprueba que tengamos la etiqueta correcta para la excepción</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Console output:
// Object { parameters: (2) […] }
//   parameters: Array [ "i32", "i64" ]
//   &lt;prototype&gt;: Object { … }
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T071607Z" creationid="gitnacho" creationdate="20221020T071607Z">
        <seg>// Salida a consola:
// Object { parameters: (2) […] }
//   parameters: Array [ "i32", "i64" ]
//   &lt;prototype&gt;: Object { … }
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Delete all caches that aren't named in CURRENT_CACHES.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204003Z" creationid="gitnacho" creationdate="20221003T204003Z">
        <seg>// Elimina todas las cachés que no se nombran en CURRENT_CACHES.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Do something else
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T023834Z" creationid="gitnacho" creationdate="20220923T023834Z">
        <seg>// Hace algo más
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Do something with the results!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T055530Z" creationid="gitnacho" creationdate="20221005T055530Z">
        <seg>// ¡Haz algo con el resultado!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Don't forget to handle errors!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T212645Z" creationid="gitnacho" creationdate="20220922T212645Z">
        <seg>// ¡No olvides manejar los errores!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Draw image onto canvas</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054143Z" creationid="gitnacho" creationdate="20221004T054143Z">
        <seg>// Dibuja la imagen en el canvas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Else try the network.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210637Z" creationid="gitnacho" creationdate="20220922T210637Z">
        <seg>// Si no, intenta en la red.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Else, use the preloaded response, if it's there</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210609Z" creationid="gitnacho" creationdate="20220922T210609Z">
        <seg>// De lo contrario, usa la respuesta precargada, si está allí</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Enable navigation preload
const enableNavigationPreload = async () =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041509Z" creationid="gitnacho" creationdate="20220921T041509Z">
        <seg>// Habilita la precarga de navegación
const enableNavigationPreload = async () =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Enable navigation preloads!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041219Z" creationid="gitnacho" creationdate="20220921T041219Z">
        <seg>// ¡Habilitar precargas de navegación!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// First try to get the resource from the cache</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040508Z" creationid="gitnacho" creationdate="20220921T040508Z">
        <seg>// Primero intenta obtener el recurso desde caché</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// From an ArrayBuffer
const buffer = new ArrayBuffer(8);
const z = new Uint8ClampedArray(buffer, 1, 4);
console.log(z.byteOffset); // 1</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052659Z" creationid="gitnacho" creationdate="20221005T052659Z">
        <seg>// Desde un ArrayBuffer
const buffer = new ArrayBuffer(8);
const z = new Uint8ClampedArray(buffer, 1, 4);
console.log(z.byteOffset); // 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// From an array
const x = new Uint8ClampedArray([21, 31]);
console.log(x[1]); // 31</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053717Z" creationid="gitnacho" creationdate="20221005T052635Z">
        <seg>// De un arreglo
const x = new Uint8ClampedArray([21, 31]);
console.log(x[1]); // 31</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// From an iterable
const iterable = function*() { yield* [1, 2, 3]; }();
const uintc8FromIterable = new Uint8ClampedArray(iterable);
console.log(uintc8FromIterable);
// Uint8ClampedArray [1, 2, 3]
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052722Z" creationid="gitnacho" creationdate="20221005T052722Z">
        <seg>// Desde un iterable
const iterable = function*() { yield* [1, 2, 3]; }();
const uintc8FromIterable = new Uint8ClampedArray(iterable);
console.log(uintc8FromIterable);
// Uint8ClampedArray [1, 2, 3]
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// From another TypedArray
const y = new Uint8ClampedArray(x);
console.log(y[0]); // 21</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052648Z" creationid="gitnacho" creationdate="20221005T052648Z">
        <seg>// Desde otro TypedArray
const y = new Uint8ClampedArray(x);
console.log(y[0]); // 21</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// If so, use getArg() to inspect it</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023537Z" creationid="gitnacho" creationdate="20221008T023537Z">
        <seg>// Si es así, usa getArg() para inspeccionarla</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// If the tag is correct, get the value</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T143307Z" creationid="gitnacho" creationdate="20221019T143307Z">
        <seg>// Si la etiqueta es correcta, obtener el valor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// If there is an entry in the cache for event.request, then response will be defined</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204225Z" creationid="gitnacho" creationdate="20221003T204225Z">
        <seg>// Si hay una entrada en la caché para event.request, se definirá la respuesta</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// If this cache name isn't present in the set of "expected" cache names, then delete it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T211216Z" creationid="gitnacho" creationdate="20221003T204110Z">
        <seg>// Si este nombre de caché no está presente en el conjunto de nombres de caché "esperados", lo elimina.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Import the tag using its name from the WebAssembly module</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T144236Z" creationid="gitnacho" creationdate="20221019T143300Z">
        <seg>// Importa la etiqueta usando su nombre del módulo
    // WebAssembly</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// It is something to keep in mind if you're attempting to cache other resources from a cross-origin</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204801Z" creationid="gitnacho" creationdate="20221003T204726Z">
        <seg>// Es algo a tener en cuenta si estás intentando almacenar en caché otros recursos desde un dominio</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// It will return a normal response object that has the appropriate error code set.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T205049Z" creationid="gitnacho" creationdate="20221003T205049Z">
        <seg>// Devolverá un objeto `response` normal que tiene el conjunto de códigos de error apropiado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Load image</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054108Z" creationid="gitnacho" creationdate="20221004T054108Z">
        <seg>// Carga la imagen</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Log output:
// Tag1: true
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T144555Z" creationid="gitnacho" creationdate="20221019T144555Z">
        <seg>// Registra la salida:
// Tag1: true
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Log output:
// Tag2: false
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T144436Z" creationid="gitnacho" creationdate="20221019T144436Z">
        <seg>// Registra la salida:
// Tag2: false
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Make canvas same size as image</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054128Z" creationid="gitnacho" creationdate="20221004T054128Z">
        <seg>// Hace que el canvas tenga el mismo tamaño que la imagen</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Next try to get the resource from the network</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040522Z" creationid="gitnacho" creationdate="20220921T040522Z">
        <seg>// A continuación, intenta obtener el recurso desde la red</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Next try to use (and cache) the preloaded response, if it's there</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041433Z" creationid="gitnacho" creationdate="20220921T041433Z">
        <seg>// A continuación, intenta usar (y almacenar en caché) la respuesta precargada, si está allí</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Note that a HTTP error response (e.g. 404) will NOT trigger an exception.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T205031Z" creationid="gitnacho" creationdate="20221003T205031Z">
        <seg>// Ten en cuenta que una respuesta de error HTTP (por ejemplo, 404) NO activará una excepción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Note that for opaque filtered responses (https://fetch.spec.whatwg.org/#concept-filtered-response-opaque)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204650Z" creationid="gitnacho" creationdate="20221003T204650Z">
        <seg>// Ten en cuenta que para respuestas filtradas opacas (https://fetch.spec.whatwg.org/#concept-filtered-response-opaque)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Note: We declare the exception with "{traceStack: true}"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204246Z" creationid="gitnacho" creationdate="20221019T204246Z">
        <seg>// Nota: Declaramos la excepción con "{traceStack: true}"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Note: import object properties match the WebAssembly import statement!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023507Z" creationid="gitnacho" creationdate="20221008T023507Z">
        <seg>// Nota: ¡las propiedades del objeto import coinciden con la declaración import de WebAssembly!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Note: importObject properties match the WebAssembly import statements.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204341Z" creationid="gitnacho" creationdate="20221019T204341Z">
        <seg>// Nota: Las propiedades de importObject coinciden con
//        las declaraciones import de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Note: the import object properties match the import statement in WebAssembly code!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T144202Z" creationid="gitnacho" creationdate="20221019T143032Z">
        <seg>// Nota: ¡las propiedades del objeto import coinciden con la
//        declaración import en el código de WebAssembly!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Otherwise, if there is no entry in the cache for event.request, response will be</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204317Z" creationid="gitnacho" creationdate="20221003T204317Z">
        <seg>// De lo contrario, si no hay una entrada en el caché para event.request, la respuesta será</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Page is a secure context so service workers are now available</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T204442Z" creationid="gitnacho" creationdate="20221018T204442Z">
        <seg>// La página es un contexto seguro, por lo que los service workers ahora están disponibles</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Perhaps it is too old or we are not in a Secure Context.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213421Z" creationid="gitnacho" creationdate="20221003T213421Z">
        <seg>// Quizás es demasiado antiguo o no estamos en un Contexto Seguro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Post SharedArrayBuffer
} else {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T023815Z" creationid="gitnacho" creationdate="20220923T023815Z">
        <seg>// Post SharedArrayBuffer
} else {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Respond from the cache if we can</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210556Z" creationid="gitnacho" creationdate="20220922T210556Z">
        <seg>// Responder desde la caché si podemos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Return the original response object, which will be used to fulfill the resource request.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T205011Z" creationid="gitnacho" creationdate="20221003T205011Z">
        <seg>// Devuelve el objeto `response` original, que se utilizará para cumplir con la solicitud de recursos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Something went wrong during registration.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213334Z" creationid="gitnacho" creationdate="20221003T213334Z">
        <seg>// Algo salió mal durante el registro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// The current browser doesn't support service workers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213410Z" creationid="gitnacho" creationdate="20221003T213410Z">
        <seg>// El navegador actual no admite service workers.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// The page has the tag "tag"
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071606Z" creationid="gitnacho" creationdate="20221005T071606Z">
        <seg>// La página tiene la etiqueta "tag"
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// The thenable is fulfilled with another thenable</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080701Z" creationid="gitnacho" creationdate="20221002T080701Z">
        <seg>// El thenable se cumple con otro thenable</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Thenable throws after callback
// Promise resolves
const thenable = {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080532Z" creationid="gitnacho" creationdate="20221002T080532Z">
        <seg>// Thenable lanzado después de la devolución de llamada
// Promesa se resuelve
const thenable = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Thenable throws before callback
// Promise rejects
const thenable = {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080421Z" creationid="gitnacho" creationdate="20221002T080421Z">
        <seg>// Thenable lanzado antes de la devolución de llamada
// Promesa rechazada
const thenable = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// This avoids caching responses that we know are errors (i.e. HTTP status code of 4xx or 5xx).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204612Z" creationid="gitnacho" creationdate="20221003T204612Z">
        <seg>// Esto evita el almacenamiento en caché de respuestas que sabemos que son errores (es decir, el código de estado HTTP de 4xx o 5xx).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// This catch() will handle exceptions that arise from the match() or fetch() operations.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T205021Z" creationid="gitnacho" creationdate="20221003T205021Z">
        <seg>// Este catch() manejará las excepciones que surjan de las operaciones match() o fetch().</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// Verify that "tag1" matches this exception
console.log(`Tag1: ${exception1.is(tag1)}`);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T144622Z" creationid="gitnacho" creationdate="20221019T144622Z">
        <seg>// Verifica que "tag1" coincida con esta excepción
console.log(`Tag1: ${exception1.is(tag1)}`);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// We also only want to cache responses that correspond to fonts,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204624Z" creationid="gitnacho" creationdate="20221003T204624Z">
        <seg>// También solo queremos almacenar en caché las respuestas que corresponden a fuentes,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// We call .clone() on the request since we might use it in a call to cache.put() later on.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204443Z" creationid="gitnacho" creationdate="20221003T204443Z">
        <seg>// Llamamos a .clone() en la petición ya que la podríamos usar en una llamada a cache.put() más adelante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// We call .clone() on the response to save a copy of it to the cache.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204830Z" creationid="gitnacho" creationdate="20221003T204830Z">
        <seg>// Llamamos a .clone() en la respuesta para guardar una copia en la caché.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// While there is only one cache in this example, the same logic will handle the case where</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204013Z" creationid="gitnacho" creationdate="20221003T204013Z">
        <seg>// Si bien solo hay una caché en este ejemplo, la misma lógica manejará el caso en el que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// add code here</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T225726Z" creationid="gitnacho" creationdate="20221006T225726Z">
        <seg>// agrega código aquí</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// and serve second one</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040543Z" creationid="gitnacho" creationdate="20220921T040543Z">
        <seg>// y servir el segundo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// and we can just return it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T211252Z" creationid="gitnacho" creationdate="20221003T204233Z">
        <seg>// y podemos simplemente devolverla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// create the buffer
const myBuf = new ArrayBuffer(8);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120237Z" creationid="gitnacho" creationdate="20221007T120110Z">
        <seg>// crea el búfer
const myBuf = new ArrayBuffer(8);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// do stuff with the contents…
%&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082741Z" creationid="gitnacho" creationdate="20221005T082544Z">
        <seg>// hacer cosas con el contenido...
%&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// do whatever you need to do, such as:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071715Z" creationid="gitnacho" creationdate="20221005T071715Z">
        <seg>// haz lo que tengas que hacer, como:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// domain that doesn't support CORS, though!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204820Z" creationid="gitnacho" creationdate="20221003T204739Z">
        <seg>// de origen cruzado que no es compatible con CORS, sin embargo!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// elem section</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072549Z" creationid="gitnacho" creationdate="20221007T072549Z">
        <seg>// sección elem</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// event gets queued, meanwhile the underlying worker may have gone into the waiting</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T225144Z" creationid="gitnacho" creationdate="20221003T225144Z">
        <seg>// el evento se pone en cola, mientras tanto, el worker subyacente puede haber entrado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// expected output: Description: Portable Document Format, Suffix: pdf
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T102644Z" creationid="gitnacho" creationdate="20221002T102644Z">
        <seg>// salida esperada: Description: Portable Document Format, Suffix: pdf
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// function sections:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072500Z" creationid="gitnacho" creationdate="20221007T072500Z">
        <seg>// secciones function:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// i.e. have a Content-Type response header that starts with "font/".</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204634Z" creationid="gitnacho" creationdate="20221003T204634Z">
        <seg>// es decir, tener un encabezado de respuesta de tipo de contenido que comience con "font/".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// include other new resources for the new version…</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041832Z" creationid="gitnacho" creationdate="20220921T041832Z">
        <seg>// incluir otros nuevos recursos para la nueva versión…</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// listen for myWorker to transfer the buffer back to main
myWorker.addEventListener("message", function handleMessageFromWorker(msg) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120224Z" creationid="gitnacho" creationdate="20221007T120105Z">
        <seg>// escucha a myWorker para transferir el búfer de vuelta a main
myWorker.addEventListener("message", function handleMessageFromWorker(msg) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// logState(e.target.state);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213328Z" creationid="gitnacho" creationdate="20221003T213328Z">
        <seg>// logState(e.target.state);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// logState(serviceWorker.state);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213324Z" creationid="gitnacho" creationdate="20221003T213324Z">
        <seg>// logState(serviceWorker.state);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// logs, in order:
// original === cast ?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T074026Z" creationid="gitnacho" creationdate="20221002T074026Z">
        <seg>// registros, en orden:
// original === cast ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// magic goes here</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035255Z" creationid="gitnacho" creationdate="20220921T035255Z">
        <seg>// la magia va aquí</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// might be unavailable or contain a syntax error.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213347Z" creationid="gitnacho" creationdate="20221003T213347Z">
        <seg>// podría no estar disponible o contener un error de sintaxis.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// not called</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073813Z" creationid="gitnacho" creationdate="20221002T073813Z">
        <seg>// no se llama</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// or access the buffer contents of an exported memory:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T060545Z" creationid="gitnacho" creationdate="20221005T060545Z">
        <seg>// o accede al contenido del búfer de una memoria exportada:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// or access the elements of an exported table:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T060554Z" creationid="gitnacho" creationdate="20221005T060554Z">
        <seg>// o accede a los elementos de una tabla exportada:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// response may be used only once</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040528Z" creationid="gitnacho" creationdate="20220921T040528Z">
        <seg>// la respuesta solo se puede usar una vez</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// return a Response object</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040617Z" creationid="gitnacho" creationdate="20220921T040617Z">
        <seg>// devolver un objeto Response</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// send buf back to main and transfer the underlying ArrayBuffer</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120946Z" creationid="gitnacho" creationdate="20221007T120349Z">
        <seg>// envía buf de vuelta a main y transfiere el ArrayBuffer subyacente</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// send myBuf to myWorker and transfer the underlying ArrayBuffer
myWorker.postMessage(myBuf, [myBuf]);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120318Z" creationid="gitnacho" creationdate="20221007T120116Z">
        <seg>// envía myBuf a myWorker y transfiere el ArrayBuffer subyacente
myWorker.postMessage(myBuf, [myBuf]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// state and will be immediately activated if possible.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T225158Z" creationid="gitnacho" creationdate="20221003T225158Z">
        <seg>// en estado de espera y se activará inmediatamente si es posible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// table section</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072448Z" creationid="gitnacho" creationdate="20221007T072448Z">
        <seg>// sección table</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// the original response object which we will return back to the controlled page.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204852Z" creationid="gitnacho" creationdate="20221003T204852Z">
        <seg>// el objeto `response` original que devolveremos a la página controlada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// there are multiple versioned caches.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204029Z" creationid="gitnacho" creationdate="20221003T204029Z">
        <seg>// hay varias cachés versionadas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// there is nothing we can do, but we must always</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040600Z" creationid="gitnacho" creationdate="20220921T040600Z">
        <seg>// no hay nada que podamos hacer, pero siempre debemos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// this tag starts with "a" - woohoo!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071934Z" creationid="gitnacho" creationdate="20221005T071934Z">
        <seg>// esta etiqueta comienza con "a" - ¡wauhoo!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// undefined, and we need to fetch() the resource.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204338Z" creationid="gitnacho" creationdate="20221003T204338Z">
        <seg>// undefined, y necesitamos fetch() el recurso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// we can't access to the response headers, so this check will always fail and the font won't be cached.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204703Z" creationid="gitnacho" creationdate="20221003T204703Z">
        <seg>// no podemos acceder a los encabezados de respuesta, por lo que esta verificación siempre fallará y la fuente no se almacenará en caché.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// we need to save clone to put one copy in cache</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040533Z" creationid="gitnacho" creationdate="20220921T040533Z">
        <seg>// necesitamos guardar el clon para poner una copia en caché</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// when even the fallback response is not available,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040555Z" creationid="gitnacho" creationdate="20220921T040555Z">
        <seg>// cuando incluso la respuesta alternativa no está disponible,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>// …</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T024234Z" creationid="gitnacho" creationdate="20220921T024234Z">
        <seg>// …</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>//Log output (something like):
// stack: throwExceptionWithStack@http://&lt;url&gt;/main.js:76:9
// @http://&lt;url&gt;/example.wasm:wasm-function[3]:0x73
// @http://&lt;url&gt;/main.js:82:38
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204617Z" creationid="gitnacho" creationdate="20221019T204406Z">
        <seg>//registra la salida (algo similar a):
// stack: throwExceptionWithStack@http://&lt;url&gt;/main.js:76:9
// @http://&lt;url&gt;/example.wasm:wasm-function[3]:0x73
// @http://&lt;url&gt;/main.js:82:38
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>/&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T060205Z" creationid="gitnacho" creationdate="20220828T060205Z">
        <seg>/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>/\b(BlackBerry|webOS|iPhone|IEMobile)\b/i.test(UA) ||</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T231004Z" creationid="nachec" creationdate="20220804T231004Z">
        <seg>/\b(BlackBerry|webOS|iPhone|IEMobile)\b/i.test(UA) ||</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>0</seg>
      </tuv>
      <tuv lang="es-MX" changeid="NaPa" changedate="20120320T045741Z">
        <seg>0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>0,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210201T084936Z" creationid="nacho" creationdate="20210201T084936Z">
        <seg>0,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>0;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201210T200212Z" creationid="nacho" creationdate="20201210T200212Z">
        <seg>0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>1</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210906T233543Z" creationid="gitnacho" creationdate="20210906T233543Z">
        <seg>1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>1)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220803T123625Z" creationid="nachec" creationdate="20220803T123625Z">
        <seg>1)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>1,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210828T222536Z" creationid="gitnacho" creationdate="20210828T222536Z">
        <seg>1,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>1.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180729T075434Z">
        <seg>1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>1.1</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210828T222600Z" creationid="gitnacho" creationdate="20210828T222600Z">
        <seg>1.1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>10,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210828T222554Z" creationid="gitnacho" creationdate="20210828T222554Z">
        <seg>10,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>10.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200624T140229Z">
        <seg>10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>100,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210828T222539Z" creationid="gitnacho" creationdate="20210828T222539Z">
        <seg>100,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>11.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200624T140232Z" creationid="nacho" creationdate="20180724T002941Z">
        <seg>11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>12.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200624T140238Z" creationid="nacho" creationdate="20180724T002943Z">
        <seg>12.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>13.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200624T140554Z" creationid="nacho" creationdate="20180731T044200Z">
        <seg>13.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>14.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200624T135312Z" creationid="Pacho" creationdate="20200624T135312Z">
        <seg>14.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>15,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210828T222554Z" creationid="gitnacho" creationdate="20210828T222554Z">
        <seg>15,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>1;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210912T152552Z" creationid="gitnacho" creationdate="20210912T152552Z">
        <seg>1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>2</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210906T233846Z" creationid="gitnacho" creationdate="20210906T233846Z">
        <seg>2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>2,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210828T222538Z" creationid="gitnacho" creationdate="20210828T222538Z">
        <seg>2,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>2.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200624T140053Z">
        <seg>2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>20.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210920T185655Z" creationid="gitnacho" creationdate="20210828T222541Z">
        <seg>1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210906T234339Z" creationid="gitnacho" creationdate="20210906T234339Z">
        <seg>3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210828T222539Z" creationid="gitnacho" creationdate="20210828T222539Z">
        <seg>3,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>3.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200624T140159Z">
        <seg>3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>300</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210826T031720Z" creationid="gitnacho" creationdate="20210826T031720Z">
        <seg>300</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210906T234440Z" creationid="gitnacho" creationdate="20210906T234440Z">
        <seg>4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210828T222552Z" creationid="gitnacho" creationdate="20210828T222552Z">
        <seg>4,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>4.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200624T140205Z">
        <seg>4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>42</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233950Z" creationid="gitnacho" creationdate="20221006T233950Z">
        <seg>42</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>5</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210906T233253Z" creationid="gitnacho" creationdate="20210906T233253Z">
        <seg>5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>5,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211030T040504Z" creationid="gitnacho" creationdate="20211030T040504Z">
        <seg>5,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>5.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200624T140208Z">
        <seg>5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211208T071632Z" creationid="gitnacho" creationdate="20211208T071632Z">
        <seg>6,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>6.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200624T140213Z">
        <seg>6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>7.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200624T140218Z">
        <seg>7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>8.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200624T140222Z">
        <seg>8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>9.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200624T140226Z">
        <seg>9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210105T102252Z" creationid="nacho" creationdate="20210105T102252Z">
        <seg>:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>: `FAIL!&lt;br&gt;Got: ${got}&lt;br&gt;Expected: ${expected}&lt;br&gt;`;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233939Z" creationid="gitnacho" creationdate="20221006T233939Z">
        <seg>: `FAIL!&lt;br&gt;Got: ${got}&lt;br&gt;Expected: ${expected}&lt;br&gt;`;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>: nChr &gt; 96 &amp;&amp; nChr &lt; 123</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T103547Z" creationid="gitnacho" creationdate="20221002T103547Z">
        <seg>: nChr &gt; 96 &amp;&amp; nChr &lt; 123</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>:(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210929T094926Z" creationid="gitnacho" creationdate="20210929T094926Z">
        <seg>:(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>;; $throwException function throws i32 param as a $tagname exception</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T143944Z" creationid="gitnacho" creationdate="20221008T023339Z">
        <seg>;; La función $throwException lanza el parámetro i32
  ;; como una excepción $tagname</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>;; Export tag giving it external name: "exptag"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T143200Z" creationid="gitnacho" creationdate="20221019T143200Z">
        <seg>;; Etiqueta de exportación dándole un nombre externo: "exptag"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>;; Exported function "run" that calls $throwException</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023353Z" creationid="gitnacho" creationdate="20221008T023353Z">
        <seg>;; Función exportada "run" que llama a $throwException</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>;; branch to the block.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T080356Z" creationid="gitnacho" creationdate="20221020T075414Z">
        <seg>;; nueva rama para block.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>;; branch to the loop.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T081731Z" creationid="gitnacho" creationdate="20221020T081731Z">
        <seg>;; rama al bucle.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>;; call $throwExnWithStack passing 42 as parameter</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204117Z" creationid="gitnacho" creationdate="20221019T204117Z">
        <seg>;; llama a $throwExnWithStack pasando 42 como parámetro</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>;; do something</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T084117Z" creationid="gitnacho" creationdate="20221020T084117Z">
        <seg>;; hacer algo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>;; do something
end
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T083704Z" creationid="gitnacho" creationdate="20221020T083704Z">
        <seg>;; hacer algo
end
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>;; do something else</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T084124Z" creationid="gitnacho" creationdate="20221020T084124Z">
        <seg>;; hacer algo más</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>;; drop the top item from the stack (`3`)
drop</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T083208Z" creationid="gitnacho" creationdate="20221020T083208Z">
        <seg>;; suelta el elemento superior de la pila (`3`)
drop</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>;; import function that will be referred to here as $throwExnWithStack</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204057Z" creationid="gitnacho" creationdate="20221019T204057Z">
        <seg>;; importa la función a la que nos referiremos aquí como $throwExnWithStack</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>;; import tag that will be referred to here as $tagname</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T143941Z" creationid="gitnacho" creationdate="20221008T023328Z">
        <seg>;; importa la etiqueta a la que nos referiremos
  ;; aquí como $tagname</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>;; most of the time you'll want to put this in an if statement and only branch on condition,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T075930Z" creationid="gitnacho" creationdate="20221020T075506Z">
        <seg>;; la mayoría de las veces querrás poner esto en una
  ;; declaración if y solo bifurcar con la condición,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>;; multiply one number by the other
i32.mul</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T091601Z" creationid="gitnacho" creationdate="20221007T091601Z">
        <seg>;; multiplica un número por el otro
i32.mul</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>;; otherwise the following control flow are unreachable.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T075933Z" creationid="gitnacho" creationdate="20221020T075533Z">
        <seg>;; de lo contrario, el siguiente control de flujo será
  ;; inalcanzable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>;; otherwise you have an infinite loop.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T081744Z" creationid="gitnacho" creationdate="20221020T081744Z">
        <seg>;; de lo contrario, tendrás un bucle infinito.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>;; the top item on the stack will now be 30 (10 * 3 = 30)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T091623Z" creationid="gitnacho" creationdate="20221007T091623Z">
        <seg>;; El elemento superior en la pila ahora será 30 (10 * 3 = 30)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>;; the top item on the stack will now be `2`
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T083220Z" creationid="gitnacho" creationdate="20221020T083220Z">
        <seg>;; el elemento superior de la pila ahora será `2`
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>;; this will never be reached, since the br jumped out of the block already.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T075939Z" creationid="gitnacho" creationdate="20221020T075614Z">
        <seg>;; esto nunca se alcanzará, puesto que el br ya
  ;; saltó fuera del bloque.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;!--</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170504T073157Z" creationid="nacho" creationdate="20170504T073157Z">
        <seg>&lt;!--</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;!-- MoreActions --&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T093842Z" creationid="gitnacho" creationdate="20221012T093842Z">
        <seg>&lt;!-- Más Acciones --&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;!-- Static --&gt;
&lt;script&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134338Z" creationid="gitnacho" creationdate="20221003T134338Z">
        <seg>&lt;!-- Static --&gt;
&lt;script&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;!----&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T200621Z" creationid="gitnacho" creationdate="20221005T200621Z">
        <seg>&lt;!----&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;!DOCTYPE html&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200607T115448Z" creationid="Pacho" creationdate="20200607T115448Z">
        <seg>&lt;!DOCTYPE html&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;% for (let i = 0; i &lt; $0; i++) { %&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070222Z" creationid="gitnacho" creationdate="20221005T070222Z">
        <seg>&lt;% for (let i = 0; i &lt; $0; i++) { %&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;% } %&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070224Z" creationid="gitnacho" creationdate="20221005T070224Z">
        <seg>&lt;% } %&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/a&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T055851Z" creationid="gitnacho" creationdate="20220828T055851Z">
        <seg>&lt;/a&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/article&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T075846Z" creationid="gitnacho" creationdate="20220828T075846Z">
        <seg>&lt;/article&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/aside&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220728T142956Z" creationid="gitnacho" creationdate="20220728T142956Z">
        <seg>&lt;/aside&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/body&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200510T193044Z" creationid="Pacho" creationdate="20200510T193044Z">
        <seg>&lt;/body&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/body&gt;
&lt;/html&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064620Z" creationid="gitnacho" creationdate="20221004T064620Z">
        <seg>&lt;/body&gt;
&lt;/html&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/button&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T011416Z" creationid="gitnacho" creationdate="20220901T011416Z">
        <seg>&lt;/button&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/clipPath&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220830T083308Z" creationid="gitnacho" creationdate="20220830T083308Z">
        <seg>&lt;/clipPath&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/code&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T013724Z" creationid="gitnacho" creationdate="20220901T013724Z">
        <seg>&lt;/code&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/dd&gt;
&lt;/dl&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183635Z" creationid="gitnacho" creationdate="20221008T183635Z">
        <seg>&lt;/dd&gt;
&lt;/dl&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/defs&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220830T083308Z" creationid="gitnacho" creationdate="20220830T083308Z">
        <seg>&lt;/defs&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/details&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210919T002412Z" creationid="gitnacho" creationdate="20210919T002412Z">
        <seg>&lt;/details&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/div&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180622T061040Z" creationid="nacho" creationdate="20180622T061040Z">
        <seg>&lt;/div&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/dt&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183545Z" creationid="gitnacho" creationdate="20221008T183545Z">
        <seg>&lt;/dt&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/form&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T012757Z" creationid="gitnacho" creationdate="20220901T012757Z">
        <seg>&lt;/form&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/g&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220805T115109Z" creationid="nachec" creationdate="20220805T115109Z">
        <seg>&lt;/g&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/h2&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210920T074513Z" creationid="gitnacho" creationdate="20210920T074513Z">
        <seg>&lt;/h2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/head&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180622T094306Z" creationid="nacho" creationdate="20180622T094306Z">
        <seg>&lt;/head&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/html&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20181128T210655Z" creationid="nacho" creationdate="20181128T210655Z">
        <seg>&lt;/html&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/label&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T012142Z" creationid="gitnacho" creationdate="20220901T012142Z">
        <seg>&lt;/label&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/li&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T055352Z" creationid="gitnacho" creationdate="20220828T055352Z">
        <seg>&lt;/li&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/li&gt;
&lt;/ul&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183518Z" creationid="gitnacho" creationdate="20221008T183518Z">
        <seg>&lt;/li&gt;
&lt;/ul&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/linearGradient&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220830T083820Z" creationid="gitnacho" creationdate="20220830T083820Z">
        <seg>&lt;/linearGradient&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/nav&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201118T111128Z" creationid="nacho" creationdate="20201118T111128Z">
        <seg>&lt;/nav&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/ol&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220830T082331Z" creationid="gitnacho" creationdate="20220830T082331Z">
        <seg>&lt;/ol&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/p&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180622T064235Z" creationid="nacho" creationdate="20180622T064235Z">
        <seg>&lt;/p&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/pre&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211004T102109Z" creationid="gitnacho" creationdate="20211004T102109Z">
        <seg>&lt;/pre&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/script&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170312T032301Z" creationid="nacho" creationdate="20170312T032301Z">
        <seg>&lt;/script&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/section&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T075625Z" creationid="gitnacho" creationdate="20220828T075625Z">
        <seg>&lt;/section&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/select&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T012141Z" creationid="gitnacho" creationdate="20220901T012141Z">
        <seg>&lt;/select&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/span&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T013723Z" creationid="gitnacho" creationdate="20220901T013723Z">
        <seg>&lt;/span&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/style&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180831T115555Z" creationid="nacho" creationdate="20180831T115555Z">
        <seg>&lt;/style&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/svg&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220803T055541Z" creationid="nachec" creationdate="20220803T055541Z">
        <seg>&lt;/svg&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/table&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20181025T043820Z" creationid="nacho" creationdate="20181025T043820Z">
        <seg>&lt;/table&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/tbody&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201210T200413Z" creationid="nacho" creationdate="20201210T200413Z">
        <seg>&lt;/tbody&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/tbody&gt;
&lt;/table&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T122341Z" creationid="gitnacho" creationdate="20221003T122341Z">
        <seg>&lt;/tbody&gt;
&lt;/table&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/td&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210829T163710Z" creationid="gitnacho" creationdate="20210829T163710Z">
        <seg>&lt;/td&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T014000Z" creationid="gitnacho" creationdate="20220901T014000Z">
        <seg>&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/thead&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210919T053117Z" creationid="gitnacho" creationdate="20210919T053117Z">
        <seg>&lt;/thead&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/tr&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20181025T043805Z" creationid="nacho" creationdate="20181025T043805Z">
        <seg>&lt;/tr&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/tr&gt;
&lt;/table&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185330Z" creationid="gitnacho" creationdate="20221008T185330Z">
        <seg>&lt;/tr&gt;
&lt;/table&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/ul&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180622T063338Z" creationid="nacho" creationdate="20180622T063338Z">
        <seg>&lt;/ul&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;/video&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211003T090215Z" creationid="gitnacho" creationdate="20211003T090215Z">
        <seg>&lt;/video&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;Todo todo={ { name: 'a new task with no id!', completed: false } } /&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T093820Z" creationid="gitnacho" creationdate="20221012T093820Z">
        <seg>&lt;Todo todo={ { name: 'a new task with no id!', completed: false } } /&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T075749Z" creationid="gitnacho" creationdate="20220828T075749Z">
        <seg>&lt;a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="../../../../../"&gt; Web technology for developers &lt;/a&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T092035Z" creationid="gitnacho" creationdate="20221002T092035Z">
        <seg>&lt;a href="../../../../../"&gt; Tecnología para desarrolladores Web&lt;/a&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="/en-US/docs/Web/CSS/Reference"&gt;CSS Reference&lt;/a&gt; (/Web/CSS/Reference)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T200742Z" creationid="gitnacho" creationdate="20221005T105246Z">
        <seg>&lt;a href="/es/docs/Web/CSS/Reference"&gt;Referencia CSS&lt;/a&gt; (/Web/CSS/Reference)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="/en-US/docs/Web/Guide/HTML/Content_categories"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T121122Z" creationid="gitnacho" creationdate="20221003T120813Z">
        <seg>&lt;a href="/es/docs/Web/Guide/HTML/Content_categories"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="/en-US/docs/Web/Guide/HTML/Content_categories#flow_content"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T121533Z" creationid="gitnacho" creationdate="20221003T121301Z">
        <seg>&lt;a href="/es/docs/Web/Guide/HTML/Content_categories#flujo_de_contenido"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="/en-US/docs/Web/Guide/HTML/Content_categories#metadata_content"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T121623Z" creationid="gitnacho" creationdate="20221003T121228Z">
        <seg>&lt;a href="/es/docs/Web/Guide/HTML/Content_categories#contenido_de_metadatos"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="/en-US/docs/Web/Guide/HTML/Content_categories#phrasing_content"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T104900Z" creationid="gitnacho" creationdate="20221003T121517Z">
        <seg>&lt;a href="/es/docs/Web/Guide/HTML/Content_categories#redacción_de_contenido"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="/en-US/docs/Web/Guide/HTML/Content_categories#phrasing_content"&gt;phrasing content&lt;/a&gt;.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T104804Z" creationid="gitnacho" creationdate="20221008T104804Z">
        <seg>&lt;a href="/es/docs/Web/Guide/HTML/Content_categories#redacción_de_contenido"&gt;redacción de contenido&lt;/a&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="/en-US/docs/Web/HTML/Element"&gt;HTML Elements reference&lt;/a&gt; (/Web/HTML/Element)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T201052Z" creationid="gitnacho" creationdate="20221005T110741Z">
        <seg>&lt;a href="/es/docs/Web/HTML/Element"&gt;Referencia de elementos HTML&lt;/a&gt; (/Web/HTML/Element)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="/en-US/docs/Web/HTML/Global_attributes"&gt;HTML global attribute description&lt;/a&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T201107Z" creationid="gitnacho" creationdate="20221005T110854Z">
        <seg>&lt;a href="/es/docs/Web/HTML/Global_attributes"&gt;Descripción del atributo HTML global&lt;/a&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="/en-US/docs/Web/HTTP/Headers"&gt;HTTP headers&lt;/a&gt; (/Web/HTTP/Headers).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221005T112844Z">
        <seg>&lt;a href="/es/docs/Web/HTTP/Headers"&gt;Encabezados HTTP&lt;/a&gt; (/Web/HTTP/Headers).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="/en-US/docs/Web/HTTP/Methods"&gt;HTTP request methods&lt;/a&gt; (/Web/HTTP/Methods).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221005T112943Z">
        <seg>&lt;a href="/es/docs/Web/HTTP/Methods"&gt;Métodos de solicitud HTTP&lt;/a&gt; (/Web/HTTP/Methods).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="/en-US/docs/Web/HTTP/Status"&gt;HTTP response status codes&lt;/a&gt; (/Web/HTTP/Status)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221005T113026Z">
        <seg>&lt;a href="/es/docs/Web/HTTP/Status"&gt;Códigos de estado de respuesta HTTP&lt;/a&gt; (/Web/HTTP/Status)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="/en-US/docs/Web/JavaScript/Reference"&gt;JavaScript reference&lt;/a&gt; (/Web/JavaScript/Reference).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221005T111116Z">
        <seg>&lt;a href="/es/docs/Web/JavaScript/Reference"&gt;Referencia de JavaScript&lt;/a&gt; (/Web/JavaScript/Reference).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="/en-US/docs/Web/SVG/Attribute"&gt;SVG Element reference&lt;/a&gt; (/Web/SVG/Element).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221005T112303Z">
        <seg>&lt;a href="/es/docs/Web/SVG/Attribute"&gt;Referencia del elemento SVG&lt;/a&gt; (/Web/SVG/Element).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="/en-US/docs/Web/SVG/Attribute"&gt;SVG attribute reference&lt;/a&gt; (/Web/SVG/Attribute).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221005T111308Z">
        <seg>&lt;a href="/es/docs/Web/SVG/Attribute"&gt;Referencia de atributo SVG&lt;/a&gt; (/Web/SVG/Attribute).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="https://github.com/adobe/brackets/wiki" rel="external"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T121903Z" creationid="gitnacho" creationdate="20221020T121903Z">
        <seg>&lt;a href="https://github.com/adobe/brackets/wiki" rel="external"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="https://github.com/mdn/yari/tree/main/kumascript/macros/DOMxRef.ejs"&gt;DOMxRef&lt;/a&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T105306Z" creationid="gitnacho" creationdate="20221005T105306Z">
        <seg>&lt;a href="https://github.com/mdn/yari/tree/main/kumascript/macros/DOMxRef.ejs"&gt;DOMxRef&lt;/a&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="https://github.com/mdn/yari/tree/main/kumascript/macros/HTMLElement.ejs"&gt;HTMLElement&lt;/a&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T110706Z" creationid="gitnacho" creationdate="20221005T110706Z">
        <seg>&lt;a href="https://github.com/mdn/yari/tree/main/kumascript/macros/HTMLElement.ejs"&gt;HTMLElement&lt;/a&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="https://github.com/mdn/yari/tree/main/kumascript/macros/HTTPMethod.ejs"&gt;HTTPMethod&lt;/a&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T112904Z" creationid="gitnacho" creationdate="20221005T112904Z">
        <seg>&lt;a href="https://github.com/mdn/yari/tree/main/kumascript/macros/HTTPMethod.ejs"&gt;HTTPMethod&lt;/a&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="https://github.com/mdn/yari/tree/main/kumascript/macros/HTTPStatus.ejs"&gt;HTTPStatus&lt;/a&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113009Z" creationid="gitnacho" creationdate="20221005T113009Z">
        <seg>&lt;a href="https://github.com/mdn/yari/tree/main/kumascript/macros/HTTPStatus.ejs"&gt;HTTPStatus&lt;/a&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="https://github.com/mdn/yari/tree/main/kumascript/macros/SVGAttr.ejs"&gt;SVGAttr&lt;/a&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T111140Z" creationid="gitnacho" creationdate="20221005T111140Z">
        <seg>&lt;a href="https://github.com/mdn/yari/tree/main/kumascript/macros/SVGAttr.ejs"&gt;SVGAttr&lt;/a&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="https://github.com/mdn/yari/tree/main/kumascript/macros/cssxref.ejs"&gt;CSSxRef&lt;/a&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T105224Z" creationid="gitnacho" creationdate="20221005T105224Z">
        <seg>&lt;a href="https://github.com/mdn/yari/tree/main/kumascript/macros/cssxref.ejs"&gt;CSSxRef&lt;/a&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="https://github.com/mdn/yari/tree/main/kumascript/macros/htmlattrxref.ejs"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T110816Z" creationid="gitnacho" creationdate="20221005T110816Z">
        <seg>&lt;a href="https://github.com/mdn/yari/tree/main/kumascript/macros/htmlattrxref.ejs"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="https://github.com/mdn/yari/tree/main/kumascript/macros/jsxref.ejs"&gt;JSxRef&lt;/a&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T111052Z" creationid="gitnacho" creationdate="20221005T111052Z">
        <seg>&lt;a href="https://github.com/mdn/yari/tree/main/kumascript/macros/jsxref.ejs"&gt;JSxRef&lt;/a&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="https://webchat.freenode.net/?channels=brackets" rel="external"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T121853Z" creationid="gitnacho" creationdate="20221020T121853Z">
        <seg>&lt;a href="https://webchat.freenode.net/?channels=brackets" rel="external"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;a href="https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T122211Z" creationid="gitnacho" creationdate="20221003T122211Z">
        <seg>&lt;a href="https://www.w3.org/TR/html-aria/#dfn-no-corresponding-role"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;article&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T012131Z" creationid="gitnacho" creationdate="20220901T012131Z">
        <seg>&lt;article&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;aside&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220728T142947Z" creationid="gitnacho" creationdate="20220728T142947Z">
        <seg>&lt;aside&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;body&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20181128T210515Z" creationid="nacho" creationdate="20181128T210515Z">
        <seg>&lt;body&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;br /&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T060338Z" creationid="gitnacho" creationdate="20220828T060338Z">
        <seg>&lt;br /&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;br /&gt;&lt;br /&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210920T084322Z" creationid="gitnacho" creationdate="20210920T084322Z">
        <seg>&lt;br /&gt;&lt;br /&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;button</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T013724Z" creationid="gitnacho" creationdate="20220901T013724Z">
        <seg>&lt;button</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;button id="mybutton"&gt;Run myFunction&lt;/button&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T102152Z" creationid="gitnacho" creationdate="20221003T112245Z">
        <seg>&lt;button id="mybutton"&gt;Ejecuta myFunction&lt;/button&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;circle cx="150" cy="50" r="40" fill="green" /&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T173718Z" creationid="gitnacho" creationdate="20221005T173718Z">
        <seg>&lt;circle cx="150" cy="50" r="40" fill="green" /&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;circle cx="250" cy="50" r="40" fill="blue" /&gt;
&lt;/svg&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T173720Z" creationid="gitnacho" creationdate="20221005T173720Z">
        <seg>&lt;circle cx="250" cy="50" r="40" fill="blue" /&gt;
&lt;/svg&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;circle cx="50" cy="50" r="40" fill="red" /&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T173717Z" creationid="gitnacho" creationdate="20221005T173717Z">
        <seg>&lt;circle cx="50" cy="50" r="40" fill="red" /&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;code class="brush: js"&gt;const thing = 1;&lt;/code&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183516Z" creationid="gitnacho" creationdate="20221008T183516Z">
        <seg>&lt;code class="brush: js"&gt;const cosa = 1;&lt;/code&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;code&gt;&lt;a href="https://github.com/mdn/yari/blob/main/kumascript/macros/httpheader.ejs"&gt;HTTPHeader&lt;/a&gt;&lt;/code&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T112820Z" creationid="gitnacho" creationdate="20221005T112820Z">
        <seg>&lt;code&gt;&lt;a href="https://github.com/mdn/yari/blob/main/kumascript/macros/httpheader.ejs"&gt;HTTPHeader&lt;/a&gt;&lt;/code&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;code&gt;\{{CSSxRef("cursor")}}&lt;/code&gt; results in {{CSSxRef("cursor")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T105259Z" creationid="gitnacho" creationdate="20221005T105259Z">
        <seg>&lt;code&gt;\{{CSSxRef("cursor")}}&lt;/code&gt; resulta en {{CSSxRef("cursor")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;code&gt;\{{DOMxRef("Document")}}&lt;/code&gt; or &lt;code&gt;\{{DOMxRef("document")}}&lt;/code&gt; results in {{DOMxRef("Document")}},&lt;br /&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T105337Z" creationid="gitnacho" creationdate="20221005T105337Z">
        <seg>&lt;code&gt;\{{DOMxRef("Document")}}&lt;/code&gt; o &lt;code&gt;\{{DOMxRef("document")}}&lt;/code&gt; resulta en {{DOMxRef("Document")}},&lt;br /&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;code&gt;\{{DOMxRef("Node")}}&lt;/code&gt; result in {{DOMxRef("Node")}}.&lt;br /&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T110508Z" creationid="gitnacho" creationdate="20221005T110508Z">
        <seg>&lt;code&gt;\{{DOMxRef("Node")}}&lt;/code&gt; resulta en {{DOMxRef("Node")}}.&lt;br /&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;code&gt;\{{DOMxRef("document.getElementsByName()")}}&lt;/code&gt; result in {{DOMxRef("document.getElementsByName()")}}&lt;br /&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T105352Z" creationid="gitnacho" creationdate="20221005T105352Z">
        <seg>&lt;code&gt;\{{DOMxRef("document.getElementsByName()")}}&lt;/code&gt; resulta en {{DOMxRef("document.getElementsByName()")}}&lt;br /&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;code&gt;\{{HTMLAttrxRef("lang")}} &lt;/code&gt;links to the global attribute description {{HTMLAttrxRef("lang")}}.&lt;br /&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T111009Z" creationid="gitnacho" creationdate="20221005T111009Z">
        <seg>&lt;code&gt;\{{HTMLAttrxRef("lang")}} &lt;/code&gt;enlaza a la descripción del atributo global {{HTMLAttrxRef("lang")}}.&lt;br /&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;code&gt;\{{HTMLAttrxRef("type","input")}}&lt;/code&gt; result in a link to the {{htmlattrxref("type","input")}} attribute (on the {{HTMLElement("input")}} element).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T111049Z" creationid="gitnacho" creationdate="20221005T111049Z">
        <seg>&lt;code&gt;\{{HTMLAttrxRef("type","input")}}&lt;/code&gt; da como resultado un enlace al atributo {{htmlattrxref("type","input")}} (en el elemento {{HTMLElement( "input")}}).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;code&gt;\{{HTMLElement("select")}}&lt;/code&gt; results in {{HTMLElement("select")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T110803Z" creationid="gitnacho" creationdate="20221005T110803Z">
        <seg>&lt;code&gt;\{{HTMLElement("select")}}&lt;/code&gt; da como resultado {{HTMLElement("select")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;code&gt;\{{HTTPHeader("ACCEPT")}}&lt;/code&gt; results in {{HTTPHeader("ACCEPT")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T112857Z" creationid="gitnacho" creationdate="20221005T112857Z">
        <seg>&lt;code&gt;\{{HTTPHeader("ACCEPT")}}&lt;/code&gt; da como resultado {{HTTPHeader("ACCEPT")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;code&gt;\{{HTTPMethod("HEAD")}}&lt;/code&gt; results in {{HTTPMethod("HEAD")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113006Z" creationid="gitnacho" creationdate="20221005T113006Z">
        <seg>&lt;code&gt;\{{HTTPMethod("HEAD")}}&lt;/code&gt; da como resultado {{HTTPMethod("HEAD")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;code&gt;\{{HTTPStatus("404")}}&lt;/code&gt; results in {{HTTPStatus("404")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113042Z" creationid="gitnacho" creationdate="20221005T113042Z">
        <seg>&lt;code&gt;\{{HTTPStatus("404")}}&lt;/code&gt; da como resultado {{HTTPStatus("404")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;code&gt;\{{JSxRef("Promise")}}&lt;/code&gt; results in {{JSxRef("Promise")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T111138Z" creationid="gitnacho" creationdate="20221005T111138Z">
        <seg>&lt;code&gt;\{{JSxRef("Promise")}}&lt;/code&gt; da como resultado {{JSxRef("Promise")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;code&gt;\{{SVGAttr("d")}}&lt;/code&gt; results in {{SVGAttr("d")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T111335Z" creationid="gitnacho" creationdate="20221005T111335Z">
        <seg>&lt;code&gt;\{{SVGAttr("d")}}&lt;/code&gt; da como resultado {{SVGAttr("d")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;code&gt;\{{SVGElement("view")}}&lt;/code&gt; results in {{SVGElement("view")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T112810Z" creationid="gitnacho" creationdate="20221005T112810Z">
        <seg>&lt;code&gt;\{{SVGElement("view")}}&lt;/code&gt; resulta en {{SVGElement("view")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;dd&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183611Z" creationid="gitnacho" creationdate="20221008T183611Z">
        <seg>&lt;dd&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;dd&gt;My description of term1&lt;/dd&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183608Z" creationid="gitnacho" creationdate="20221008T183608Z">
        <seg>&lt;dd&gt;Mi descripción del term1&lt;/dd&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;defs&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220830T083304Z" creationid="gitnacho" creationdate="20220830T083304Z">
        <seg>&lt;defs&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;details&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180415T063547Z" creationid="nacho" creationdate="20180415T063547Z">
        <seg>&lt;details&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;div</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T060158Z" creationid="gitnacho" creationdate="20220828T060158Z">
        <seg>&lt;div</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;div id="app"&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210830T143121Z" creationid="gitnacho" creationdate="20210830T143121Z">
        <seg>&lt;div id="app"&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;div&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180622T062854Z" creationid="nacho" creationdate="20180622T062854Z">
        <seg>&lt;div&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;div&gt;&lt;/div&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220910T205920Z" creationid="gitnacho" creationdate="20220910T205920Z">
        <seg>&lt;div&gt;&lt;/div&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;dt&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183539Z" creationid="gitnacho" creationdate="20221008T183539Z">
        <seg>&lt;dt&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;h2&gt;A heading&lt;/h2&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210930T233823Z" creationid="gitnacho" creationdate="20210930T233823Z">
        <seg>&lt;h2&gt;Un título&lt;/h2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;head&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180622T094230Z" creationid="nacho" creationdate="20180622T094230Z">
        <seg>&lt;head&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;html lang="en"&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210830T142151Z" creationid="gitnacho" creationdate="20210830T142151Z">
        <seg>&lt;html lang="es"&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;html&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200521T140001Z" creationid="Pacho" creationdate="20200521T140001Z">
        <seg>&lt;html&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;img</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T075732Z" creationid="gitnacho" creationdate="20220828T075732Z">
        <seg>&lt;img</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;input</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T013809Z" creationid="gitnacho" creationdate="20220901T013809Z">
        <seg>&lt;input</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;label for="pizza"&gt;Pizza&lt;/label&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T072034Z" creationid="gitnacho" creationdate="20221002T072034Z">
        <seg>&lt;label for="pizza"&gt;Pizza&lt;/label&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;label&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T012134Z" creationid="gitnacho" creationdate="20220901T012134Z">
        <seg>&lt;label&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;li&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T055353Z" creationid="gitnacho" creationdate="20220828T055353Z">
        <seg>&lt;li&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;li&gt;: My description of term1&lt;/li&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183419Z" creationid="gitnacho" creationdate="20221008T183419Z">
        <seg>&lt;li&gt;: Mi descripción de term1&lt;/li&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;meta charset="UTF-8" /&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210830T134533Z" creationid="gitnacho" creationdate="20210830T134533Z">
        <seg>&lt;meta charset="UTF-8" /&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;meta charset="utf-8" /&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20181025T043720Z" creationid="nacho" creationdate="20181025T043720Z">
        <seg>&lt;meta charset="utf-8" /&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;nav role="navigation"&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201118T111045Z" creationid="nacho" creationdate="20201118T111045Z">
        <seg>&lt;nav role="navigation"&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;ol&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T014354Z" creationid="gitnacho" creationdate="20220901T014354Z">
        <seg>&lt;ol&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;p class="fancy"&gt;But I am!&lt;/p&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211452Z" creationid="gitnacho" creationdate="20221005T211452Z">
        <seg>&lt;p class="fancy"&gt;¡Pero este sí lo es!&lt;/p&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;p&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T060038Z" creationid="gitnacho" creationdate="20220828T060038Z">
        <seg>&lt;p&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;p&gt;: My description of term2&lt;/p&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183455Z" creationid="gitnacho" creationdate="20221008T183455Z">
        <seg>&lt;p&gt;: Mi descripción de term2&lt;/p&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;p&gt;&lt;code&gt;term2&lt;/code&gt;&lt;/p&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183443Z" creationid="gitnacho" creationdate="20221008T183443Z">
        <seg>&lt;p&gt;&lt;code&gt;term2&lt;/code&gt;&lt;/p&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This is how you write a note.&lt;/p&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181646Z" creationid="gitnacho" creationdate="20221008T181646Z">
        <seg>&lt;p&gt;&lt;strong&gt;Nota:&lt;/strong&gt; Así es como se escribe una nota.&lt;/p&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;p&gt;&lt;strong&gt;This is how you write a callout.&lt;/strong&gt;&lt;/p&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182013Z" creationid="gitnacho" creationdate="20221008T182013Z">
        <seg>&lt;p&gt;&lt;strong&gt;Así es como se escribe un texto resaltado.&lt;/strong&gt;&lt;/p&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; This is how you write a warning.&lt;/p&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181850Z" creationid="gitnacho" creationdate="20221008T181850Z">
        <seg>&lt;p&gt;&lt;strong&gt;Advertencia:&lt;/strong&gt; Así es como se escribe una advertencia.&lt;/p&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;p&gt;&lt;strong&gt;Warnung:&lt;/strong&gt; So schreibt man eine Warnung.&lt;/p&gt;
&lt;/div&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182134Z" creationid="gitnacho" creationdate="20221008T182134Z">
        <seg>&lt;p&gt;&lt;strong&gt;Warnung:&lt;/strong&gt; So schreibt man eine Warnung.&lt;/p&gt;
&lt;/div&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;p&gt;It can contain code blocks.&lt;/p&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182315Z" creationid="gitnacho" creationdate="20221008T182315Z">
        <seg>&lt;p&gt;Puede contener bloques de código.&lt;/p&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;p&gt;It can have multiple lines.&lt;/p&gt;
&lt;/div&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181652Z" creationid="gitnacho" creationdate="20221008T181652Z">
        <seg>&lt;p&gt;Puede tener varias líneas.&lt;/p&gt;
&lt;/div&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;p&gt;It can have multiple paragraphs, and code blocks too:&lt;/p&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183507Z" creationid="gitnacho" creationdate="20221008T183507Z">
        <seg>&lt;p&gt;Puede tener varios párrafos y también bloques de código:&lt;/p&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;p&gt;It can have multiple paragraphs.&lt;/p&gt;
&lt;/div&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181859Z" creationid="gitnacho" creationdate="20221008T181859Z">
        <seg>&lt;p&gt;Puede tener varios párrafos.&lt;/p&gt;
&lt;/div&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;p&gt;Like that.&lt;/p&gt;
&lt;/div&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182329Z" creationid="gitnacho" creationdate="20221008T182329Z">
        <seg>&lt;p&gt;Así.&lt;/p&gt;
&lt;/div&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;p&gt;My description of term2&lt;/p&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183621Z" creationid="gitnacho" creationdate="20221008T183621Z">
        <seg>&lt;p&gt;Mi descripción de term2&lt;/p&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;p&gt;term1&lt;/p&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183352Z" creationid="gitnacho" creationdate="20221008T183352Z">
        <seg>&lt;p&gt;term1&lt;/p&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;path</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T075535Z" creationid="gitnacho" creationdate="20220828T075535Z">
        <seg>&lt;path</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;person&gt;&lt;name&gt;Arun&lt;/name&gt;&lt;/person&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T224419Z" creationid="gitnacho" creationdate="20221011T224419Z">
        <seg>&lt;person&gt;&lt;name&gt;Arun&lt;/name&gt;&lt;/person&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;pre class="brush: js"&gt;const s = "I'm in a code block";&lt;/pre&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182323Z" creationid="gitnacho" creationdate="20221008T182323Z">
        <seg>&lt;pre class="brush: js"&gt;const s = "Estoy en un bloque de código";&lt;/pre&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;pre&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220911T182548Z" creationid="gitnacho" creationdate="20220911T182548Z">
        <seg>&lt;pre&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;script src="./index.js"&gt;&lt;/script&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T070028Z" creationid="gitnacho" creationdate="20221004T070028Z">
        <seg>&lt;script src="./index.js"&gt;&lt;/script&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;script type="module"&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064615Z" creationid="gitnacho" creationdate="20221004T064615Z">
        <seg>&lt;script type="module"&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;script&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170312T032136Z" creationid="nacho" creationdate="20170312T032136Z">
        <seg>&lt;script&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;section id="Quick_links"&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T092730Z" creationid="gitnacho" creationdate="20221002T092730Z">
        <seg>&lt;section id="Quick_links"&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;span</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T075928Z" creationid="gitnacho" creationdate="20220828T075928Z">
        <seg>&lt;span</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;style type="text/css"&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201210T200149Z" creationid="nacho" creationdate="20201210T200149Z">
        <seg>&lt;style type="text/css"&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;sup&gt;st&lt;/sup&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191408Z" creationid="gitnacho" creationdate="20221008T191408Z">
        <seg>&lt;sup&gt;st&lt;/sup&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;svg</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T075530Z" creationid="gitnacho" creationdate="20220828T075530Z">
        <seg>&lt;svg</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;table class="properties"&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T120802Z" creationid="gitnacho" creationdate="20221003T120802Z">
        <seg>&lt;table class="properties"&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;table class="standard-table"&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T105048Z" creationid="gitnacho" creationdate="20221005T105048Z">
        <seg>&lt;table class="standard-table"&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;tbody&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201210T200312Z" creationid="nacho" creationdate="20201210T200312Z">
        <seg>&lt;tbody&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;td</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T013644Z" creationid="gitnacho" creationdate="20220901T013644Z">
        <seg>&lt;td</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;td&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210829T163512Z" creationid="gitnacho" creationdate="20210829T163512Z">
        <seg>&lt;td&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;td&gt;$99&lt;/td&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T122353Z" creationid="gitnacho" creationdate="20221020T122353Z">
        <seg>&lt;td&gt;$99&lt;/td&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;td&gt;&lt;/td&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201210T200358Z" creationid="nacho" creationdate="20201210T200358Z">
        <seg>&lt;td&gt;&lt;/td&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;td&gt;&lt;a href="/en-US/docs/Web/API"&gt;DOM Reference&lt;/a&gt; (/Web/API)&lt;/td&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T201040Z" creationid="gitnacho" creationdate="20221005T105320Z">
        <seg>&lt;td&gt;&lt;a href="/es/docs/Web/API"&gt;Referencia DOM&lt;/a&gt; (/Web/API)&lt;/td&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;td&gt;&lt;a href="https://www.espressoapp.com/"&gt;Espresso&lt;/a&gt;&lt;/td&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T122337Z" creationid="gitnacho" creationdate="20221020T122337Z">
        <seg>&lt;td&gt;&lt;a href="https://www.espressoapp.com/"&gt;Espresso&lt;/a&gt;&lt;/td&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;td&gt;&lt;code&gt;"explicit"&lt;/code&gt;&lt;/td&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191021Z" creationid="gitnacho" creationdate="20221008T191021Z">
        <seg>&lt;td&gt;&lt;code&gt;"explicit"&lt;/code&gt;&lt;/td&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;td&gt;&lt;code&gt;"speakers"&lt;/code&gt;&lt;/td&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191108Z" creationid="gitnacho" creationdate="20221008T191108Z">
        <seg>&lt;td&gt;&lt;code&gt;"altavoces"&lt;/code&gt;&lt;/td&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T190947Z" creationid="gitnacho" creationdate="20221008T190947Z">
        <seg>&lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T190920Z" creationid="gitnacho" creationdate="20221008T190920Z">
        <seg>&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;td&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191045Z" creationid="gitnacho" creationdate="20221008T191045Z">
        <seg>&lt;td&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;td&gt;Closed source&lt;/td&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T122352Z" creationid="gitnacho" creationdate="20221020T122352Z">
        <seg>&lt;td&gt;Fuente cerrada&lt;/td&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;td&gt;Dynamic script such as &lt;code&gt;text/javascript&lt;/code&gt;.&lt;/td&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T121835Z" creationid="gitnacho" creationdate="20221003T121835Z">
        <seg>&lt;td&gt;Script dinámico como &lt;code&gt;text/javascript&lt;/code&gt;.&lt;/td&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;td&gt;Mac&lt;/td&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T122401Z" creationid="gitnacho" creationdate="20221020T122401Z">
        <seg>&lt;td&gt;Mac&lt;/td&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;td&gt;Metadata content.&lt;/td&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T105111Z" creationid="gitnacho" creationdate="20221008T105111Z">
        <seg>&lt;td&gt;Contenido de metadatos.&lt;/td&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;td&gt;No &lt;code&gt;role&lt;/code&gt; permitted&lt;/td&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T122313Z" creationid="gitnacho" creationdate="20221003T122313Z">
        <seg>&lt;td&gt;&lt;code&gt;rol&lt;/code&gt; no permitido&lt;/td&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;td&gt;Something shortish&lt;/td&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185153Z" creationid="gitnacho" creationdate="20221008T185153Z">
        <seg>&lt;td&gt;Algo corto&lt;/td&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;td&gt;{{domxref("HTMLScriptElement")}}&lt;/td&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T135813Z" creationid="gitnacho" creationdate="20221003T122339Z">
        <seg>&lt;td&gt;{{DOMxRef("HTMLScriptElement")}}&lt;/td&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;td&gt;{{no_tag_omission}}&lt;/td&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T121918Z" creationid="gitnacho" creationdate="20221003T121918Z">
        <seg>&lt;td&gt;{{no_tag_omission}}&lt;/td&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th scope="col"&gt;URL&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T140825Z" creationid="gitnacho" creationdate="20221002T140825Z">
        <seg>&lt;th scope="col"&gt;URL&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th scope="row"&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T120811Z" creationid="gitnacho" creationdate="20221003T120811Z">
        <seg>&lt;th scope="row"&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th scope="row"&gt;Channel count mode&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191010Z" creationid="gitnacho" creationdate="20221008T191010Z">
        <seg>&lt;th scope="row"&gt;Modo de conteo de canales&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th scope="row"&gt;Channel count&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191044Z" creationid="gitnacho" creationdate="20221008T191044Z">
        <seg>&lt;th scope="row"&gt;Conteo de canales&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th scope="row"&gt;Channel interpretation&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191100Z" creationid="gitnacho" creationdate="20221008T191100Z">
        <seg>&lt;th scope="row"&gt;Interpretación de canales&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th scope="row"&gt;DOM interface&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T122337Z" creationid="gitnacho" creationdate="20221003T122337Z">
        <seg>&lt;th scope="row"&gt;interfaz DOM&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th scope="row"&gt;Implicit ARIA role&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T122206Z" creationid="gitnacho" creationdate="20221003T122206Z">
        <seg>&lt;th scope="row"&gt;Rol ARIA implícito&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th scope="row"&gt;Number of inputs&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T190919Z" creationid="gitnacho" creationdate="20221008T190919Z">
        <seg>&lt;th scope="row"&gt;Número de entradas&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th scope="row"&gt;Number of outputs&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T190947Z" creationid="gitnacho" creationdate="20221008T190947Z">
        <seg>&lt;th scope="row"&gt;Número de salidas&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th scope="row"&gt;Permitted ARIA roles&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T122250Z" creationid="gitnacho" creationdate="20221003T122250Z">
        <seg>&lt;th scope="row"&gt;Roles ARIA permitidos&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th scope="row"&gt;Permitted content&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T121812Z" creationid="gitnacho" creationdate="20221003T121812Z">
        <seg>&lt;th scope="row"&gt;Contenido permitido&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th scope="row"&gt;Permitted parents&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T121935Z" creationid="gitnacho" creationdate="20221003T121935Z">
        <seg>&lt;th scope="row"&gt;Padres permitidos&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th scope="row"&gt;Tag omission&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T121914Z" creationid="gitnacho" creationdate="20221003T121914Z">
        <seg>&lt;th scope="row"&gt;Etiquetas por omisión&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th&gt;&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210921T050919Z" creationid="gitnacho" creationdate="20210921T050919Z">
        <seg>&lt;th&gt;&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th&gt;A heading 1&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185106Z" creationid="gitnacho" creationdate="20221008T185106Z">
        <seg>&lt;th&gt;Un encabezado 1&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th&gt;A heading 2&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185112Z" creationid="gitnacho" creationdate="20221008T185112Z">
        <seg>&lt;th&gt;Un encabezado 2&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th&gt;A heading 3&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185120Z" creationid="gitnacho" creationdate="20221008T185120Z">
        <seg>&lt;th&gt;Un encabezado 3&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th&gt;A heading 4&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185127Z" creationid="gitnacho" creationdate="20221008T185127Z">
        <seg>&lt;th&gt;Un encabezado 4&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th&gt;A heading 5&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185133Z" creationid="gitnacho" creationdate="20221008T185133Z">
        <seg>&lt;th&gt;Un encabezado 5&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th&gt;A heading 6&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185141Z" creationid="gitnacho" creationdate="20221008T185141Z">
        <seg>&lt;th&gt;Un encabezado 6&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th&gt;Example&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T105216Z" creationid="gitnacho" creationdate="20221005T105216Z">
        <seg>&lt;th&gt;Ejemplo&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th&gt;Links to page under&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T105200Z" creationid="gitnacho" creationdate="20221005T105200Z">
        <seg>&lt;th&gt;Enlaces a la página abajo&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th&gt;Macro&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T105050Z" creationid="gitnacho" creationdate="20221005T105050Z">
        <seg>&lt;th&gt;Macro&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;th&gt;Type&lt;/th&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210919T071053Z" creationid="gitnacho" creationdate="20210919T071053Z">
        <seg>&lt;th&gt;Tipo&lt;/th&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;thead&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210919T053049Z" creationid="gitnacho" creationdate="20210919T053049Z">
        <seg>&lt;thead&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;title&gt;&lt;/title&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211004T004429Z" creationid="gitnacho" creationdate="20211004T004429Z">
        <seg>&lt;title&gt;&lt;/title&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;title&gt;Hello World!&lt;/title&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210917T060455Z" creationid="gitnacho" creationdate="20210830T134545Z">
        <seg>&lt;title&gt;¡Hello World!&lt;/title&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;title&gt;hello-wasm example&lt;/title&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064612Z" creationid="gitnacho" creationdate="20221004T064612Z">
        <seg>&lt;title&gt;Ejemplo hello-wasm&lt;/title&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;tr&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20181025T043750Z" creationid="nacho" creationdate="20181025T043750Z">
        <seg>&lt;tr&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;ul&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180622T093028Z" creationid="nacho" creationdate="20180622T093023Z">
        <seg>&lt;ul&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;view id="one" viewBox="0 0 100 100" /&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T173716Z" creationid="gitnacho" creationdate="20221005T173716Z">
        <seg>&lt;view id="one" viewBox="0 0 100 100" /&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;view id="three" viewBox="200 0 100 100" /&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T173718Z" creationid="gitnacho" creationdate="20221005T173718Z">
        <seg>&lt;view id="three" viewBox="200 0 100 100" /&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&lt;view id="two" viewBox="100 0 100 100" /&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T173717Z" creationid="gitnacho" creationdate="20221005T173717Z">
        <seg>&lt;view id="two" viewBox="100 0 100 100" /&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="NaPa" changedate="20120417T050514Z">
        <seg>&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;
&gt; - Emscripten requires a large variety of JavaScript "glue" code to handle memory allocation, memory leaks, and a host of other problems</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111433Z" creationid="gitnacho" creationdate="20221003T111433Z">
        <seg>&gt;
&gt; - Emscripten requiere una gran variedad de código "pegamento" de JavaScript para manejar la asignación de memoria, las fugas de memoria y una serie de otros problemas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;
&gt; Firefox 87 allows this non-compliant behavior to be enabled by setting the preference: `network.cors_preflight.allow_client_cert` to `true` ({{bug(1511151)}}).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053017Z" creationid="gitnacho" creationdate="20221012T053017Z">
        <seg>&gt;
&gt; Firefox 87 permite habilitar este comportamiento no compatible configurando la preferencia: `network.cors_preflight.allow_client_cert` en `true` ({{bug(1511151)}}).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;
&gt; It can contain code blocks.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182243Z" creationid="gitnacho" creationdate="20221008T182243Z">
        <seg>&gt;
&gt; Puede contener bloques de código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;
&gt; It can have multiple lines.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181745Z" creationid="gitnacho" creationdate="20221008T181555Z">
        <seg>&gt;
&gt; Puede tener varias líneas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;
&gt; It can have multiple paragraphs.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181819Z" creationid="gitnacho" creationdate="20221008T181819Z">
        <seg>&gt;
&gt; Puede tener varios párrafos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;
&gt; We have put together a course that includes all the essential information you need to
&gt; work towards your goal.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T231840Z" creationid="gitnacho" creationdate="20221012T231840Z">
        <seg>&gt;
&gt; Hemos  preparado  un  curso  que incluye  toda  la  información
&gt; esencial que necesitas para que trabajes hacia tu meta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;
&gt; Web teams often include both a graphic designer and a {{Glossary("UX", "user experience")}} (UX) designer.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061851Z" creationid="gitnacho" creationdate="20221019T061851Z">
        <seg>&gt;
&gt; Los equipos web suelen incluir tanto un diseñador gráfico como un diseñador de {{Glossary("UX", "experiencia de usuario")}} (UX).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;
&gt; [**Get started**](/en-US/docs/Learn/Front-end_web_developer)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T125610Z" creationid="gitnacho" creationdate="20221012T231847Z">
        <seg>&gt;
&gt; [Empieza aquí](/es/docs/Learn/Front-end_web_developer)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;
&gt; ```html
&gt; &lt;meta http-equiv="Accept-CH" content="Width, Downlink, Sec-CH-UA" /&gt;
&gt; ```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T091723Z" creationid="gitnacho" creationdate="20221012T091723Z">
        <seg>&gt;
&gt; ```html
&gt; &lt;meta http-equiv="Accept-CH" content="Width, Downlink, Sec-CH-UA" /&gt;
&gt; ```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;
&gt; ```js
&gt; const s = "I'm in a code block";
&gt; ```
&gt;
&gt; Like that.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182404Z" creationid="gitnacho" creationdate="20221008T182404Z">
        <seg>&gt; ```js
&gt; const s = "Estoy en un bloque de código";
&gt; ```
&gt;
&gt; Así.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;
&gt; ```js
&gt; const s = "I'm in a code block";
&gt; ```
&gt; Like that.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182255Z" creationid="gitnacho" creationdate="20221008T182255Z">
        <seg>&gt;
&gt; ```js
&gt; const s = "Estoy en un bloque de código";
&gt; ```
&gt; Así.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;       return Promise.resolve('done');</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T072054Z" creationid="gitnacho" creationdate="20221002T072054Z">
        <seg>&gt;       return Promise.resolve('done');</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;     }</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210921T123144Z" creationid="gitnacho" creationdate="20210921T123144Z">
        <seg>&gt;     }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;   }</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211004T103727Z" creationid="gitnacho" creationdate="20211004T103727Z">
        <seg>&gt;   }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Callout:**
&gt;
&gt; #### Looking to become a front-end web developer?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T125505Z" creationid="gitnacho" creationdate="20221012T231826Z">
        <seg>## Novedades

El contenido del área de aprendizaje se amplía con regularidad. Se han comenzado a guardar [notas de publicación del área de aprendizaje](/es/docs/Learn/Release_notes) para mostrar lo que ha cambiado. ¡Revísalas frecuentemente para mantenerte actualizado!

Si tienes preguntas sobre temas que te gustaría que se abordaran o te parece que faltan, envía un mensaje en el [Foro de discusión](https://discourse.mozilla.org/c/mdn), de la comunidad Mozilla (sitio en inglés).

&gt; ### ¿Quieres convertirte en un desarrollador de interfaz de usuario web?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Callout:**
&gt;
&gt; **This is how you write a callout.**
&gt;
&gt; It can have multiple paragraphs.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182035Z" creationid="gitnacho" creationdate="20221008T182035Z">
        <seg>&gt; **Llamada:**
&gt;
&gt; **Así es como se escribe un texto destacado.**
&gt;
&gt; Puede tener varios párrafos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** A WebAssembly page has a constant size of 65,536 bytes, i.e., 64KiB.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T220010Z" creationid="gitnacho" creationdate="20221019T220010Z">
        <seg>&gt; **Nota:** Una página WebAssembly tiene un tamaño constante de 65,536 bytes, es decir, 64KiB.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** A document timeline that is associated with a non-active document is also considered to be **inactive**.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T092808Z" creationid="gitnacho" creationdate="20221006T092808Z">
        <seg>&gt; **Nota:** Un cronograma de `document` que está asociado con un documento no activo también se considera **inactivo**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Above, note the double semicolon syntax (`;;`) for allowing comments in WebAssembly files.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064828Z" creationid="gitnacho" creationdate="20221007T064828Z">
        <seg>&gt; **Nota:** Arriba, ten en cuenta la sintaxis de doble punto y coma (`;;`) para permitir comentarios en archivos WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** An empty string value (`""`) is both the default value, and a fallback value if `referrerpolicy` is not supported.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T130324Z" creationid="gitnacho" creationdate="20221003T130324Z">
        <seg>&gt; **Nota:** Un valor de cadena vacío (`""`) es tanto el valor predeterminado como un valor alternativo si `referrerpolicy` no es compatible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** As described below, the actual `POST` request does not include the `Access-Control-Request-*` headers; they are needed only for the `OPTIONS` request.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222708Z" creationid="gitnacho" creationdate="20221011T222708Z">
        <seg>&gt; **Nota:** Como se describe a continuación, la solicitud `POST` real no incluye los encabezados `Access-Control-Request-*`; solo se necesitan para la solicitud `OPTIONS`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Because `install`/`activate` events could take a while to complete, the service worker spec provides a {{domxref("ExtendableEvent.waitUntil", "waitUntil()")}} method.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20221002T145019Z">
        <seg>&gt; **Nota:** Debido a que los eventos `install`/`activate` pueden tardar un poco en completarse, la especificación del *service worker* proporciona un método {{DOMxRef("ExtendableEvent.waitUntil", "waitUntil()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Client hints can also be specified in HTML using the {{HTMLElement("meta")}} element with the [`http-equiv`](/en-US/docs/Web/HTML/Element/meta#attr-http-equiv) attribute.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T091716Z" creationid="gitnacho" creationdate="20221012T091716Z">
        <seg>&gt; **Nota:** Las sugerencias del cliente también se pueden especificar en HTML usando el elemento {{HTMLElement("meta")}} con el atributo [`http-equiv`](/es/docs/Web/HTML/Element/meta#attr-http-equiv).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Complex projects need detailed guidelines that go into all the details of colors, fonts, spacing between items on a page, appropriate writing style, and so on.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061211Z" creationid="gitnacho" creationdate="20221019T061211Z">
        <seg>&gt; **Nota:** Los proyectos complejos necesitan pautas detalladas que incluyan todos los detalles de los colores, los tipos de letra, el espacio entre los elementos de una página, el estilo de escritura adecuado, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Even on real, complex websites, the design teams usually start out with rough sketches on paper and later on build digital mockups using a graphics editor or web technologies.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061819Z" creationid="gitnacho" creationdate="20221019T061819Z">
        <seg>&gt; **Nota:** Incluso en sitios web reales y complejos, los equipos de diseño suelen comenzar con bocetos en papel y luego crean maquetas digitales utilizando un editor de gráficos o tecnologías web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Firefox 84 and later support `http://localhost` and `http://*.localhost` URLs as trustworthy origins (earlier versions did not, because `localhost` was not guaranteed to map to a local/loopback address).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T204232Z" creationid="gitnacho" creationdate="20221018T204232Z">
        <seg>&gt; **Nota:** Firefox 84 y versiones posteriores admiten las URLs `http://localhost` y `http://*.localhost` como orígenes fiables (las versiones anteriores no lo hacían, porque no se garantizaba que `localhost` se asignara a un dirección local/de bucle invertido — `loopback`).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Firefox has not implemented `Range` as a safelisted request-header yet.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220539Z" creationid="gitnacho" creationdate="20221011T220539Z">
        <seg>&gt; **Nota:** Firefox aún no ha implementado `Range` como un encabezado de solicitud en la lista segura.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** For more information on how exporting from a WebAssembly module works, have a read of [Using the WebAssembly JavaScript API](/en-US/docs/WebAssembly/Using_the_JavaScript_API), and [Understanding WebAssembly text format](/en-US/docs/WebAssembly/Understanding_the_text_format).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T103457Z" creationid="gitnacho" creationdate="20221005T060726Z">
        <seg>&gt; **Nota:** Para obtener más información sobre cómo funciona la exportación desde un módulo WebAssembly, lee [Usar la API JavaScript de WebAssembly](/es/docs/WebAssembly/Using_the_JavaScript_API) y [Entender el formato de texto WebAssembly](/es/docs/WebAssembly/Understanding_the_text_format).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** For this to work, `.wasm` files should be returned
&gt; with an `application/wasm` MIME type by the server.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T105218Z" creationid="gitnacho" creationdate="20221006T105218Z">
        <seg>&gt; **Nota:** Para que esto funcione, el servidor deben devolver los
&gt; archivos `.wasm` con un tipo MIME `application/wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** From Firefox 84, AppCache has been removed ({{bug("1619673")}}).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T052048Z" creationid="gitnacho" creationdate="20220921T015828Z">
        <seg>&gt; **Nota:** A partir de Firefox 84, se eliminó _AppCache_ ({{bug("1619673")}}).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** If the response from preload and normal fetch operations can be different, then the server must set `Vary: Service-Worker-Navigation-Preload` to ensure that the different responses are cached.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210815Z" creationid="gitnacho" creationdate="20220922T210815Z">
        <seg>&gt; **Nota:** Si la respuesta de la precarga y las operaciones normales de recuperación pueden ser diferentes, entonces el servidor debe establecer `Vary: Service-Worker-Navigation-Preload` para garantizar que las diferentes respuestas se almacenen en caché.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** If the specified {{domxref("Cache")}} does not exist, a new
&gt; cache is created with that `cacheName` and a {{jsxref("Promise")}} that
&gt; resolves to this new {{domxref("Cache")}} object is returned.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T225018Z">
        <seg>&gt; **Nota:** Si la {{DOMxRef("Cache")}} especificada no existe, se crea
&gt; una nueva caché con ese `cacheName` y una {{jsxref("Promise")}} que
&gt; resuelve este nuevo objeto {{DOMxRef("Cache")}} devuelto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** If you are unfamiliar with the basic concepts mentioned in this article and need more explanation, read [WebAssembly concepts](/en-US/docs/WebAssembly/Concepts) first, then come back.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T093121Z" creationid="gitnacho" creationdate="20221003T093121Z">
        <seg>&gt; **Nota:** Si no estás familiarizado con los conceptos básicos mencionados en este artículo y necesitas más explicaciones, primero lee [Conceptos de WebAssembly](/es/docs/WebAssembly/Concepts) y luego regresa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** If you try to open generated HTML file (`hello.html`) directly from your local hard drive (e.g. `file://your_path/hello.html`), you will end up with an error message along the lines of _`both async and sync fetching of the wasm failed`._ You need to run your HTML file through an HTTP server (`http://`) — see [How do you set up a local testing server?](/en-US/docs/Learn/Common_questions/set_up_a_local_testing_server) for more information.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T110415Z" creationid="gitnacho" creationdate="20221003T110415Z">
        <seg>&gt; **Nota:** Si intentas abrir un archivo HTML generado (`hello.html`) directamente desde tu disco duro local (por ejemplo, `file://tu_ruta/a/hello.html`), terminarás con un mensaje de error similar a _`tanto la obtención asincrónica como la sincronización del wasm falló`._ Necesitas ejecutar tu archivo HTML a través de un servidor HTTP (`http://`) — consulta [¿Cómo se configura un servidor de prueba local?](/es/docs/Learn/Common_questions/set_up_a_local_testing_server) para obtener más información.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** If you want advice on the styling and linting of code as it appears on an MDN article, rather than the different ways of including code, see our [Code style guide](/en-US/docs/MDN/Writing_guidelines/Writing_style_guide/Code_style_guide).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T203918Z" creationid="gitnacho" creationdate="20221005T203918Z">
        <seg>&gt; **Nota:** Si deseas obtener asesoramiento sobre el estilo y el deslinde del código tal como aparece en un artículo de MDN, en lugar de las diferentes formas de incluir código, consulta nuestra [Guía de estilo de código](/es/docs/MDN/Writing_guidelines/Writing_style_guide/Code_style_guide).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** In Chrome, visit `chrome://inspect/#service-workers` and click on the "inspect" link below the registered service worker to view logging statements for the various actions the [`service-worker.js`](https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/selective-caching/service-worker.js) script is performing.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T203953Z" creationid="gitnacho" creationdate="20221003T203953Z">
        <seg>&gt; **Nota:** En Chrome, visita `chrome://inspect/#service-workers` y haz clic en el enlace "inspeccionar" debajo del *servicie worker* registrado para ver las declaraciones de registro de las diversas acciones que [`service-worker .js`](https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/selective-caching/service-worker.js) está ejecutando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** It is for this kind of usage that [`WebAssembly.instantiate()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiate) returns both a [`Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) and an [`Instance`](/en-US/docs/WebAssembly/JavaScript_interface/Instance): the Module represents the compiled code and can be stored/retrieved in IDB or shared between Workers via [`postMessage()`](/en-US/docs/Web/API/MessagePort/postMessage); the Instance is stateful and contains the callable JavaScript functions, therefore it cannot be stored/shared.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221004T051749Z">
        <seg>&gt; **Nota:** Es para este tipo de uso que [`WebAssembly.instantiate()`](/es/docs/WebAssembly/JavaScript_interface/instantiate) devuelve un [`Module`](/es/docs/WebAssembly/JavaScript_interface/Module) y una [`Instance`](/es/docs/WebAssembly/JavaScript_interface/Instance): el módulo representa el código compilado y se puede almacenar/recuperar en IDB o compartir entre *workers* a través de [`postMessage()`](/es/docs/Web/API/MessagePort/postMessage); la Instancia tiene estado y contiene las funciones de JavaScript a las que se puede llamar, por lo tanto, no se puede almacenar/compartir.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** It is not enough that the tag has an identical sequence of data types — it must have the same _identity_ (be the same tag) as was used to create the exception.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142351Z" creationid="gitnacho" creationdate="20221019T142351Z">
        <seg>&gt; **Nota:** No es suficiente que la etiqueta tenga una secuencia idéntica de tipos de datos; debe tener la misma _identidad_ (ser la misma etiqueta) que se usó para crear la excepción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Just like Memory, Tables can also be created from JavaScript (see [`WebAssembly.Table()`](/en-US/docs/WebAssembly/JavaScript_interface/Table)) as well as imported to/from another wasm module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073546Z" creationid="gitnacho" creationdate="20221007T073546Z">
        <seg>&gt; **Nota:** Al igual que la memoria, las tablas también se pueden crear a partir de JavaScript (consulta [`WebAssembly.Table()`](/es/docs/WebAssembly/JavaScript_interface/Table)) y también se pueden importar a/de otro módulo `wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Make sure to use an up-to-date web server that supports the `application/wasm` MIME type.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065016Z" creationid="gitnacho" creationdate="20221004T065016Z">
        <seg>&gt; **Nota:** Asegúrate de utilizar un servidor web actualizado que admita el tipo MIME `application/wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Older versions of the specification referred to:
&gt;
&gt; - {{Glossary("General header")}}: Headers applying to both requests and responses but with no relation to the data eventually transmitted in the body.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T080207Z" creationid="gitnacho" creationdate="20221017T211855Z">
        <seg>&gt; **Nota:** Las versiones anteriores de la especificación se refieren a:
&gt;
&gt; - {{Glossary("General header")}}: Cabeceras que se aplican tanto a las solicitudes como a las respuestas, pero sin relación con los datos finalmente transmitidos en el cuerpo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** On Firefox, for testing you can run service workers over HTTP (insecurely); simply check the **Enable Service Workers over HTTP (when toolbox is open)** option in the Firefox Devtools options/gear menu.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T135232Z" creationid="gitnacho" creationdate="20221002T135232Z">
        <seg>&gt; **Nota:** En Firefox, para realizar pruebas, puedes ejecutar *service workers* a través de HTTP (sin seguridad); simplemente marca la opción **Habilitar Service Workers a través de HTTP (cuando la caja de herramientas está abierta)** en el menú de opciones/engrane de Firefox Devtools.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** One element can have several such handlers, even for the exact same event—particularly if separate, independent code modules attach them, each for its own independent purposes.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T201914Z" creationid="gitnacho" creationdate="20221011T201914Z">
        <seg>&gt; **Nota:** Un elemento puede tener varios controladores de este tipo, incluso para exactamente el mismo evento, especialmente si los agregan módulos de código independientes y separados, cada uno para sus propios fines independientes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** One great thing about service workers is that if you use feature detection like we've shown above, browsers that don't support service workers can just use your app online in the normal expected fashion.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T025347Z" creationid="gitnacho" creationdate="20220921T025347Z">
        <seg>&gt; **Nota:** Una gran cosa acerca del *service worker* es que si usas la detección de funciones como se muestra arriba, los navegadores que no son compatibles con los *service workers* pueden usar tu aplicación en línea de la manera normal esperada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Our [glossary](/en-US/docs/Glossary) provides terminology definitions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T130710Z" creationid="gitnacho" creationdate="20221020T124135Z">
        <seg>&gt; **Nota:** el [glosario](/es/docs/Glossary) proporciona definición de términos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Pay attention to the post-install note about needing cargo's `bin` directory in your system `PATH`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061509Z" creationid="gitnacho" creationdate="20221004T061509Z">
        <seg>&gt; **Nota:** Presta atención a la nota posterior a la instalación sobre la necesidad del directorio `bin` de cargo en la variable `PATH` de tu sistema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Servers currently get most of the same information by parsing the {{HTTPHeader("User-Agent")}} header.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092512Z" creationid="gitnacho" creationdate="20221012T092512Z">
        <seg>&gt; **Nota:** Actualmente, los servidores obtienen la mayor parte de la misma información analizando el encabezado {{HTTPHeader("User-Agent")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Service workers make heavy use of [promises](/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise), as generally they will wait for responses to come through, after which they will respond with a success or failure action.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T235612Z" creationid="gitnacho" creationdate="20221002T135433Z">
        <seg>&gt; **Nota:** Los *service workers* hacen un uso intensivo de [promesas](/es/docs/Web/JavaScript/Reference/Global_Objects/Promise), ya que generalmente esperarán a que lleguen las respuestas, después de lo cual responden con una acción de éxito o fracaso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Some enterprise authentication services require that TLS client certificates be sent in preflight requests, in contravention of the [Fetch](https://fetch.spec.whatwg.org/#cors-protocol-and-credentials) specification.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T052954Z" creationid="gitnacho" creationdate="20221011T230745Z">
        <seg>&gt; **Nota:** Algunos servicios de autenticación empresarial requieren que los certificados de cliente TLS se envíen en solicitudes de preverificación, en contravención a la especificación de [Fetch](https://fetch.spec.whatwg.org/#cors-protocol-and-credentials).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Stack traces are not normally sent from WebAssembly code to improve performance.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T203555Z" creationid="gitnacho" creationdate="20221019T203555Z">
        <seg>&gt; **Nota:** Los seguimientos de la pila normalmente no se envían desde el código de WebAssembly para mejorar el rendimiento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Tables can currently only store function references, but this will likely be expanded in the future.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095042Z" creationid="gitnacho" creationdate="20221006T095042Z">
        <seg>&gt; **Nota:** Actualmente, las tablas solo pueden almacenar referencias de funciones, pero es probable que esto se amplíe en el futuro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Text format files are usually saved with a `.wat` extension.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182533Z" creationid="gitnacho" creationdate="20221007T182533Z">
        <seg>&gt; **Nota:** Los archivos en formato de texto generalmente se guardan con una extensión `.wat`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** The [Emscripten Pthreads support page](https://emscripten.org/docs/porting/pthreads.html) shows how to take advantage of this new functionality from Emscripten.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T081058Z" creationid="gitnacho" creationdate="20221007T081058Z">
        <seg>&gt; **Nota:** La [página de soporte de Emscripten Pthreads](https://emscripten.org/docs/porting/pthreads.html) muestra cómo aprovechar esta nueva funcionalidad de Emscripten.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** The [wasm-bindgen](https://rustwasm.github.io/docs/wasm-bindgen/) documentation contains some useful information on how to take advantage of `externref` from Rust.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T075025Z" creationid="gitnacho" creationdate="20221007T075025Z">
        <seg>&gt; **Nota:** La documentación [wasm-bindgen](https://rustwasm.github.io/docs/wasm-bindgen/) contiene información útil sobre cómo aprovechar `externref` de Rust.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** The `origin` value can be `null`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060613Z" creationid="gitnacho" creationdate="20221012T060613Z">
        <seg>&gt; **Nota:** El valor `origin` puede ser `null`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** The above expressions again pop values from the stack implicitly, but you could declare these explicitly inside the command calls instead, for example:
&gt;
&gt; ```wasm
&gt; (i32.store (i32.const 0) (i32.const 42))
&gt; (call_indirect (type $void_to_i32) (i32.const 0))
&gt; ```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074303Z" creationid="gitnacho" creationdate="20221007T074147Z">
        <seg>&gt; **Nota:** Las expresiones anteriores vuelven a sacar valores de la pila
&gt;                 implícitamente, pero los podrías declarar explícitamente
&gt;                 dentro de las llamadas de comando en su lugar, por ejemplo:
&gt;
&gt; ```wasm
&gt; (i32.store (i32.const 0) (i32.const 42))
&gt; (call_indirect (type $void_to_i32) (i32.const 0))
&gt; ```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** The caching API doesn't honor HTTP caching headers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T203152Z" creationid="gitnacho" creationdate="20221003T203152Z">
        <seg>&gt; **Nota:** La API de almacenamiento en caché no respeta los encabezados de almacenamiento en caché HTTP.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** The entire site's wasm cache (not just the given URL) is versioned by the specified `dbVersion` passed into the function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T050939Z" creationid="gitnacho" creationdate="20221004T050939Z">
        <seg>&gt; **Nota:** Toda la caché `wasm` del sitio (no solo la URL dada) está versionada por la `dbVersion` especificada que se pasa a la función.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** The key matching algorithm depends on the [VARY header](https://www.fastly.com/blog/best-practices-using-vary-header) in the value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T203125Z" creationid="gitnacho" creationdate="20221003T203125Z">
        <seg>&gt; **Nota:** El algoritmo de coincidencia de claves depende del valor en el [encabezado VARY](https://www.fastly.com/blog/best-practices-using-vary-header).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** The second overload form takes a [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) object as an argument, and returns a promise directly containing the instance object as the result.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221005T060228Z">
        <seg>&gt; **Nota:** El segunda forma de sobrecarga toma un objeto [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module) como argumento y devuelve una promesa que contiene directamente el objeto `instance` como resultado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** There are future plans to [allow WebAssembly to call Web APIs directly](https://github.com/WebAssembly/gc/blob/master/README.md).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T081438Z" creationid="gitnacho" creationdate="20221003T081438Z">
        <seg>&gt; **Nota:** Hay planes a futuro para [permitir que WebAssembly llame a las APIs web directamente](https://github.com/WebAssembly/gc/blob/master/README.md).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** There are many alternatives.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015535Z" creationid="gitnacho" creationdate="20221008T015535Z">
        <seg>&gt; **Nota:** Hay muchas alternativas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** There is another, slightly more complex example to explore at [Using the Web Storage API](/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T231303Z" creationid="gitnacho" creationdate="20221002T231303Z">
        <seg>&gt; **Nota:** Hay otro ejemplo un poco más complejo para explorar en [Usar la API de almacenamiento web](/es/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** This feature is available in [Web Workers](/en-US/docs/Web/API/Web_Workers_API) (`self.fonts` provides access to {{domxref('FontFaceSet')}}).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T090715Z" creationid="gitnacho" creationdate="20221019T090715Z">
        <seg>&gt; **Nota:** Esta característica está disponible en [Web Workers](/es/docs/Web/API/Web_Workers_API) (`self.fonts` brinda acceso a {{DOMxRef('FontFaceSet')}}) .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** This feature is available in [Web Workers](/en-US/docs/Web/API/Web_Workers_API) (although not current versions of Firefox, as [WorkerNavigator.permissions](/en-US/docs/Web/API/WorkerNavigator/permissions) is not implemented).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T090841Z" creationid="gitnacho" creationdate="20221019T090841Z">
        <seg>&gt; **Nota:** Esta característica está disponible en [Web Workers](/es/docs/Web/API/Web_Workers_API) (aunque no en las versiones actuales de Firefox, como [WorkerNavigator.permissions](/es/docs/Web/API/WorkerNavigator/permissions) no está implementado).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** This feature is available in [Web Workers](/en-US/docs/Web/API/Web_Workers_API).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T090731Z" creationid="gitnacho" creationdate="20221019T090731Z">
        <seg>&gt; **Nota:** Esta característica está disponible en [Web Workers](/es/docs/Web/API/Web_Workers_API).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** This is a convoluted, long-winded example that achieves very little, but it does serve to illustrate what is possible — using WebAssembly code alongside JavaScript in your web applications.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T181501Z" creationid="gitnacho" creationdate="20221006T181501Z">
        <seg>&gt; **Nota:** Este es un ejemplo intrincado y extenso que logra muy poco, pero sirve para ilustrar lo que es posible: usar el código WebAssembly junto con JavaScript en tus aplicaciones web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** This is how you write a note.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181713Z" creationid="gitnacho" creationdate="20221008T181713Z">
        <seg>&gt; **Nota:** Así es como se escribe una nota.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** This is potentially overkill if you are a web developer who just wants to load a wasm module into a page and use it in your code (see [Using the WebAssembly JavaScript API](/en-US/docs/WebAssembly/Using_the_JavaScript_API)), but it is more useful if for example, you want to write wasm modules to optimize the performance of your JavaScript library, or build your own WebAssembly compiler.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053448Z" creationid="gitnacho" creationdate="20221007T053448Z">
        <seg>&gt; **Nota:** Esto, es potencialmente excesivo si eres un desarrollador web que solo quiere cargar un módulo `wasm` en una página y usarlo en tu código (consulta [Usar la API JavaScript de WebAssembly](/es/docs/WebAssembly/Using_the_JavaScript_API)), pero es más útil si, por ejemplo, deseas escribir módulos `wasm` para optimizar el rendimiento de tu biblioteca JavaScript o crear tu propio compilador WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** This strategy will not work with every C project.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053643Z" creationid="gitnacho" creationdate="20221004T053643Z">
        <seg>&gt; **Nota:** Esta estrategia no funcionará con todos los proyectos C.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Uninitialized elements are given a default throw-on-call value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072425Z" creationid="gitnacho" creationdate="20221007T072425Z">
        <seg>&gt; **Nota:** A los elementos no inicializados se les otorga un valor predeterminado de activación — `throw-on-call`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Unlike previous attempts in this area such as [AppCache](https://alistapart.com/article/application-cache-is-a-douchebag/), service workers don't make assumptions about what you are trying to do, but then break when those assumptions are not exactly right.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T135322Z" creationid="gitnacho" creationdate="20221002T135322Z">
        <seg>&gt; **Nota:** A diferencia de los intentos anteriores en esta área, como [AppCache](https://alistapart.com/article/application-cache-is-a-douchebag/), los *service workers* no hacen suposiciones sobre qué estás tratando de hacer, pero luego se rompe cuando esas suposiciones no son exactamente correctas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Usually we only care about the instance, but it's useful to have the module in case we want to cache it, share it with another worker or window via [`postMessage()`](/en-US/docs/Web/API/MessagePort/postMessage), or create more instances.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221005T060201Z">
        <seg>&gt; **Nota:** Por lo general, solo nos preocupamos por la instancia, pero es útil tener el módulo en caso de que queramos almacenarlo en caché, compartirlo con otro *worker* o `window` a través de [`postMessage()`](/es/docs/Web/API/MessagePort/postMessage), o crear más instancias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** We are including the `#ifdef` blocks so that if you are trying to include this in C++ code, the example will still work.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111751Z" creationid="gitnacho" creationdate="20221003T111751Z">
        <seg>&gt; **Nota:** Estamos incluyendo los bloques `#ifdef` para que si intentas incluir esto en el código C++, el ejemplo seguirá funcionando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** WebAssembly will also have uses outside web and JavaScript environments (see [Non-web embeddings](https://webassembly.org/docs/non-web/)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T005006Z" creationid="gitnacho" creationdate="20221003T005006Z">
        <seg>&gt; **Nota:** WebAssembly tendrá también usos fuera de la red y de los ambientes JavaScript (ve [Incrustaciones no-web](http://webassembly.org/docs/non-web/)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** WebKit Nightly and Safari Technology Preview place additional restrictions on the values allowed in the {{HTTPHeader("Accept")}}, {{HTTPHeader("Accept-Language")}}, and {{HTTPHeader("Content-Language")}} headers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T221024Z" creationid="gitnacho" creationdate="20221011T221024Z">
        <seg>&gt; **Nota:** WebKit Nightly y Safari Technology Preview imponen restricciones adicionales sobre los valores permitidos en {{HTTPHeader("Accept")}}, {{HTTPHeader("Accept-Language")}} y {{HTTPHeader("Content-Language")}} encabezados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Webpages that have strict [Content Security Policy (CSP)](/en-US/docs/Web/HTTP/CSP) might block WebAssembly from compiling and executing modules.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T101620Z" creationid="gitnacho" creationdate="20221006T101620Z">
        <seg>&gt; **Nota:** Las páginas web que tienen una estricta [Política de seguridad de contenido (CSP)](/es/docs/Web/HTTP/CSP) pueden impedir que WebAssembly compile y ejecute módulos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** When making credentialed requests to a different domain, third-party cookie policies will still apply.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T225952Z" creationid="gitnacho" creationdate="20221011T225952Z">
        <seg>&gt; **Nota:** Al realizar solicitudes con credenciales a un dominio diferente, se seguirán aplicando las políticas de *cookies* de terceros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** When responding to a [credentialed requests](#requests_with_credentials) request, the server **must** specify an origin in the value of the `Access-Control-Allow-Origin` header, instead of specifying the "`*`" wildcard.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222256Z" creationid="gitnacho" creationdate="20221011T222256Z">
        <seg>&gt; **Nota:** Al responder a una solicitud de [solicitudes con credenciales](#solicitudes_con_credenciales), el servidor **debe** especificar un origen en el valor del encabezado `Access-Control-Allow-Origin`, en lugar de especificar el comodín "`*`".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You can also convert the assembly back into the text representation using the wasm2wat tool; for example `wasm2wat simple.wasm -o text.wat`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182922Z" creationid="gitnacho" creationdate="20221007T182922Z">
        <seg>&gt; **Nota:** También puedes volver a convertir el ensamblador en la representación de texto usando la herramienta `wasm2wat`; por ejemplo `wasm2wat simple.wasm -o text.wat`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You can also find this example as [instantiate-streaming.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/instantiate-streaming.html)
&gt; on GitHub ([view it live also](https://mdn.github.io/webassembly-examples/js-api-examples/instantiate-streaming.html)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T094513Z" creationid="gitnacho" creationdate="20221006T093728Z">
        <seg>&gt; **Nota:** También puedes encontrar este ejemplo como [instantiate-streaming.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/instantiate-streaming.html)
&gt; en GitHub también lo puedes ([ver en vivo](https://mdn.github.io/webassembly-examples/js-api-examples/instantiate-streaming.html)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You can also find this example at [index.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index.html)
&gt; on GitHub ([view it live also](https://mdn.github.io/webassembly-examples/js-api-examples/)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T194232Z" creationid="gitnacho" creationdate="20221007T194232Z">
        <seg>&gt; **Nota:** También puedes encontrar este ejemplo en [index.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index.html)
&gt; en GitHub (además lo puedes [ver en vivo](https://mdn.github.io/webassembly-examples/js-api-examples/)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You can find a lot more details in the [Threading proposal for WebAssembly](https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080938Z" creationid="gitnacho" creationdate="20221007T080938Z">
        <seg>&gt; **Nota:** Puedes encontrar muchos más detalles en la [Propuesta de subprocesos para WebAssembly](https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You can find more information in the [Bulk Memory Operations and Conditional Segment Initialization](https://github.com/WebAssembly/bulk-memory-operations/blob/master/proposals/bulk-memory-operations/Overview.md) proposal.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074745Z" creationid="gitnacho" creationdate="20221007T074745Z">
        <seg>&gt; **Nota:** Puedes encontrar más información en la propuesta de [Operaciones masivas de memoria e inicialización de segmento condicional](https://github.com/WebAssembly/bulk-memory-operations/blob/master/proposals/bulk-memory-Operations/Overview.md).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You can find our complete demo at [memory.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/memory.html) ([see it live also](https://mdn.github.io/webassembly-examples/js-api-examples/memory.html)) .</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T230147Z" creationid="gitnacho" creationdate="20221006T230147Z">
        <seg>&gt; **Nota:** Puedes encontrar nuestra demostración completa en [memory.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/memory.html) lo puedes ([ver en vivo también](https://mdn.github.io/webassembly-examples/js-api-examples/memory.html)) .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You can find our complete demo at [table.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table.html) ([see it live also](https://mdn.github.io/webassembly-examples/js-api-examples/table.html)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233643Z" creationid="gitnacho" creationdate="20221006T233601Z">
        <seg>&gt; **Nota:** Puedes encontrar nuestra demostración completa en [table.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table.html) (también puedes [verla en vivo](https://mdn.github.io/webassembly-examples/js-api-examples/table.html)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You can find the full source on GitHub as [logger2.html](https://github.com/mdn/webassembly-examples/blob/master/understanding-text-format/logger2.html) ([also see it live](https://mdn.github.io/webassembly-examples/understanding-text-format/logger2.html)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064923Z" creationid="gitnacho" creationdate="20221007T064923Z">
        <seg>&gt; **Nota:** Puedes encontrar la fuente completa en GitHub como [logger2.html](https://github.com/mdn/webassembly-examples/blob/master/understanding-text-format/logger2.html) (también la puedes [ver en vivo](https://mdn.github.io/webassembly-examples/understanding-text-format/logger2.html)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You can find the sample code in our [webassembly-examples](https://github.com/mdn/webassembly-examples) GitHub repo.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T112536Z" creationid="gitnacho" creationdate="20221006T112536Z">
        <seg>&gt; **Nota:** Puedes encontrar el código de muestra en nuestro repositorio [webassembly-examples](https://github.com/mdn/webassembly-examples) de GitHub.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You can find this example in GitHub as [add.html](https://github.com/mdn/webassembly-examples/blob/master/understanding-text-format/add.html) ([see it live also](https://mdn.github.io/webassembly-examples/understanding-text-format/add.html)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061002Z" creationid="gitnacho" creationdate="20221007T061002Z">
        <seg>&gt; **Nota:** Puedes encontrar este ejemplo en GitHub como [add.html](https://github.com/mdn/webassembly-examples/blob/master/understanding-text-format/add.html) (además lo puedes [ver en vivo](https://mdn.github.io/webassembly-examples/understanding-text-format/add.html)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You can find this example on GitHub as [logger.html](https://github.com/mdn/webassembly-examples/blob/master/understanding-text-format/logger.html) ([see it live also](https://mdn.github.io/webassembly-examples/understanding-text-format/logger.html)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061626Z" creationid="gitnacho" creationdate="20221007T061626Z">
        <seg>&gt; **Nota:** Puedes encontrar este ejemplo en GitHub como [logger.html](https://github.com/mdn/webassembly-examples/blob/master/understanding-text-format/logger.html) (también lo puedes [ver en vivo](https://mdn.github.io/webassembly-examples/understanding-text-format/logger.html)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You can find this example on GitHub as [shared-address-space.html](https://github.com/mdn/webassembly-examples/blob/master/understanding-text-format/shared-address-space.html) ([see it live also](https://mdn.github.io/webassembly-examples/understanding-text-format/shared-address-space.html)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T085622Z" creationid="gitnacho" creationdate="20221007T074407Z">
        <seg>&gt; **Nota:** Puedes encontrar este ejemplo en GitHub como [shared-address-space.html](https://github.com/mdn/webassembly-examples/blob/master/understanding-text-format/shared-address-space.html) (puedes [verlo en vivo también](https://mdn.github.io/webassembly-examples/understanding-text-format/shared-address-space.html)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You can find this example on GitHub as [wasm-table.html](https://github.com/mdn/webassembly-examples/blob/master/understanding-text-format/wasm-table.html) ([see it live also](https://mdn.github.io/webassembly-examples/understanding-text-format/wasm-table.html)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073523Z" creationid="gitnacho" creationdate="20221007T073407Z">
        <seg>&gt; **Nota:** Puedes encontrar este ejemplo en GitHub como [wasm-table.html](https://github.com/mdn/webassembly-examples/blob/master/understanding-text-format/wasm-table.html) (lo puedes [ver en vivo también](https://mdn.github.io/webassembly-examples/understanding-text-format/wasm-table.html)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You can see an example of this in action in [xhr-wasm.html](https://mdn.github.io/webassembly-examples/js-api-examples/xhr-wasm.html).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T061119Z" creationid="gitnacho" creationdate="20221005T061119Z">
        <seg>&gt; **Nota:** Puedes ver un ejemplo de esto en acción en [xhr-wasm.html](https://mdn.github.io/webassembly-examples/js-api-examples/xhr-wasm.html).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You can see the example [running live on GitHub](https://mdn.github.io/webassembly-examples/js-api-examples/global.html);
&gt; see also the [source code](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/global.html).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110429Z" creationid="gitnacho" creationdate="20221007T110429Z">
        <seg>&gt; **Nota:** Puedes ver el [ejemplo en vivo en GitHub](https://mdn.github.io/webassembly-examples/js-api-examples/global.html);
&gt; ve también el [código fuente](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/global.html).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You can see the example [running live on GitHub](https://mdn.github.io/webassembly-examples/js-api-examples/global.html); see also the [source code](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/global.html).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T234011Z" creationid="gitnacho" creationdate="20221006T234011Z">
        <seg>&gt; **Nota:** Puedes ver la ejecución del ejemplo [en vivo en GitHub](https://mdn.github.io/webassembly-examples/js-api-examples/global.html); consulta también el [código fuente](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/global.html).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You can see the module's text representation at [memory.wat](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/memory.wat).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T225604Z" creationid="gitnacho" creationdate="20221006T225604Z">
        <seg>&gt; **Nota:** Puedes ver la representación de texto del módulo en [memory.wat](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/memory.wat).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You can see the module's text representation at [table.wat](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table.wat).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233327Z" creationid="gitnacho" creationdate="20221006T233327Z">
        <seg>&gt; **Nota:** Puedes ver la representación de texto del módulo en [table.wat](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table.wat).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You can't access the values of an exception with a new tag that just happens to have the same parameters; it's a different tag!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015342Z" creationid="gitnacho" creationdate="20221008T015342Z">
        <seg>&gt; **Nota:** No puedes acceder a los valores de una excepción con una nueva etiqueta que tiene los mismos parámetros; ¡es una etiqueta diferente!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You could specify outputting just the JavaScript "glue" file\* rather than the full HTML by specifying a .js file instead of an HTML file in the `-o` flag, e.g. `emcc -o hello2.js hello2.c -O3`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T082332Z" creationid="gitnacho" creationdate="20221003T111349Z">
        <seg>&gt; **Nota:** Puedes especificar la salida solo del archivo "pegamento" de JavaScript\* en lugar del HTML completo especificando un archivo .js en lugar de un archivo HTML en el indicador `-o`, p.ej. `emcc -o hello2.js hello2.c -O3`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You may serve your app from `http://localhost` (e.g. using `me@localhost:/my/app$ python -m SimpleHTTPServer`) for local development.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042605Z" creationid="gitnacho" creationdate="20220921T042605Z">
        <seg>&gt; **Nota:** Puedes servir tu aplicación desde `http://localhost` (por ejemplo, usando `me@localhost:/my/app$ python -m SimpleHTTPServer`) para el desarrollo local.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You probably don't want to try to embed the contents of a non-text file this way, as the raw contents would be injected as text.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082818Z" creationid="gitnacho" creationdate="20221005T082710Z">
        <seg>&gt; **Nota:** Probablemente no quieras intentar incrustar el contenido de un archivo que no sea de texto de esta manera, ya que el contenido sin procesar se inyectaría como texto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You'll probably want to use
&gt; [`WebAssembly.compileStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/compileStreaming) in most cases, as it is more efficient
&gt; than `compile()`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T180732Z" creationid="gitnacho" creationdate="20221007T180732Z">
        <seg>&gt; **Nota:** Probablemente querrás usar:
&gt;
&gt; [`WebAssembly.compileStreaming()`](/es/docs/WebAssembly/JavaScript_interface/compileStreaming) en la mayoría de los casos, ya que es más eficiente
&gt; que `compile()`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** You'll probably want to use [`WebAssembly.instantiateStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming) in most cases, as it is more efficient than `instantiate()`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T194015Z" creationid="gitnacho" creationdate="20221007T194015Z">
        <seg>&gt; **Nota:** Probablemente querrás usar [`WebAssembly.instantiateStreaming()`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming) en la mayoría de los casos, ya que es más eficiente que `instantiate()`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** Your service worker functions like a proxy server, allowing you to modify requests and responses, replace them with items from its own cache, and more.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T213847Z" creationid="gitnacho" creationdate="20220921T025248Z">
        <seg>&gt; **Nota:** Tu *service worker* funciona como un servidor proxy, lo que te permite modificar solicitudes y respuestas, reemplazarlas con elementos de su propio caché y más.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** [IndexedDB](/en-US/docs/Web/API/IndexedDB_API) can be used inside a service worker for data storage if you require it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034948Z" creationid="gitnacho" creationdate="20220921T034948Z">
        <seg>&gt; **Nota:** [IndexedDB](/es/docs/Web/API/IndexedDB_API) se puede usar dentro de un *service worker* para el almacenamiento de datos si lo requieres.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** [localStorage](/en-US/docs/Web/API/Web_Storage_API) works in a similar way to service worker cache, but it is synchronous, so not allowed in service workers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034924Z" creationid="gitnacho" creationdate="20220921T034924Z">
        <seg>&gt; **Nota:** [localStorage](/es/docs/Web/API/Web_Storage_API) funciona de manera similar a la memoria caché del *service worker*, pero es síncrono, por lo que no está permitido en el *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** `i32.const` just defines a 32-bit integer and pushes it onto the stack.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061202Z" creationid="gitnacho" creationdate="20221007T061202Z">
        <seg>&gt; **Nota:** `i32.const` solo define un número entero de 32 bits y lo empuja a la pila.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** `new Uint8Array(someBuffer)` will create a new view onto the same memory chunk, while `new Uint8Array(someTypedArray)` will copy the data.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054926Z" creationid="gitnacho" creationdate="20221004T054926Z">
        <seg>&gt; **Nota:** `new Uint8Array(someBuffer)` creará una nueva vista en el mismo fragmento de memoria, mientras que `new Uint8Array(someTypedArray)` copiará los datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** `postMessage()` can only send a single object at once.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115935Z" creationid="gitnacho" creationdate="20221007T115935Z">
        <seg>&gt; **Nota:** `postMessage()` únicamente puede enviar un solo objeto a la vez.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Note:** libwebp returns the current version a.b.c as a hexadecimal number 0xabc.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053848Z" creationid="gitnacho" creationdate="20221004T053848Z">
        <seg>&gt; **Nota:** `libwebp` devuelve la versión actual a.b.c como un número hexadecimal 0xabc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Warning:** Do not call `Promise.resolve()` on a thenable that resolves to itself.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080725Z" creationid="gitnacho" creationdate="20221002T080725Z">
        <seg>&gt; **Advertencia:** No llames a `Promise.resolve()` en un thenable que se resuelve solo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Warning:** Experimental [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) IndexedDB serialization support is being removed from browsers; see {{bug("1469395")}} and [this spec issue](https://github.com/WebAssembly/spec/issues/821).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T192353Z" creationid="gitnacho" creationdate="20221004T044809Z">
        <seg>&gt; **Advertencia:** Experimental [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module) El soporte de serialización de IndexedDB se está eliminando de los navegadores; consulta {{bug("1469395")}} y [este problema de la especificación](https://github.com/WebAssembly/spec/issues/821).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Warning:** Never call `document.write()` from an async script.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T192353Z" creationid="gitnacho" creationdate="20221003T134740Z">
        <seg>&gt; **Advertencia:** Nunca llames a `document.write()` desde un script asíncrono.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Warning:** Since compilation for large modules can be expensive,
&gt; developers should only use the `Module()` constructor when synchronous
&gt; compilation is absolutely required; the asynchronous
&gt; [`WebAssembly.compileStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/compileStreaming) method should be used at all other times.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T231432Z" creationid="gitnacho" creationdate="20221019T231432Z">
        <seg>&gt; **Advertencia:** Dado que la compilación de módulos grandes
&gt; puede ser costosa, los desarrolladores solo deberían usar el
&gt; constructor `Module()` cuando la compilación sincrónica es
&gt; absolutamente necesaria; el método [`WebAssembly.compileStreaming()`](/es/docs/WebAssembly/JavaScript_interface/compileStreaming)
&gt; sincrónico se debe usar en todos los demás momentos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Warning:** Since instantiation for large modules can be expensive,
&gt; developers should only use the `Instance()` constructor when synchronous
&gt; instantiation is absolutely required; the asynchronous
&gt; [`WebAssembly.instantiateStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming) method should be used at all other
&gt; times.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T210953Z" creationid="gitnacho" creationdate="20221019T210129Z">
        <seg>&gt; **Advertencia:** Dado que la creación de instancias para
&gt; módulos grandes puede ser costosa, los desarrolladores
&gt; solo deberían usar el constructor `Instance()` sincrónico
&gt; cuando la creación de instancias es absolutamente
&gt; necesaria; El método asincrónico [`WebAssembly.instantiateStreaming()`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming) se
&gt; debe usar en todos los demás momentos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Warning:** This attribute must not be used if the `src` attribute is absent (i.e. for inline scripts), in this case it would have no effect.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T192353Z" creationid="gitnacho" creationdate="20221003T123718Z">
        <seg>&gt; **Advertencia:** Este atributo no se debe usar si el atributo `src` está ausente (es decir, para scripts en línea), en este caso no tendría efecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Warning:** This is how you write a warning.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T192204Z" creationid="gitnacho" creationdate="20221008T181915Z">
        <seg>&gt; **Advertencia:** Así es como se escribe una advertencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; **Warning:** This method is not the most efficient way of fetching and
&gt; instantiating wasm modules.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T192353Z" creationid="gitnacho" creationdate="20221007T193329Z">
        <seg>&gt; **Advertencia:** Este método no es la forma más eficiente de obtener e
&gt; instanciar módulos `wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; - {{Glossary("Entity header")}}: Headers containing more information about the body of the entity, like its content length or its MIME-type (this is a superset of what are now referred to as the Representation metadata headers)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T080254Z" creationid="gitnacho" creationdate="20221017T211931Z">
        <seg>&gt; - {{Glossary("Entity header")}}: Cabeceras que contienen más información sobre el cuerpo de la entidad, como la longitud de su contenido o su tipo MIME (este es un superconjunto de lo que ahora se conoce como cabeceras de representación de metadatos)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; 1.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210113T055301Z" creationid="nacho" creationdate="20210113T055301Z">
        <seg>&gt; 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; 2.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210113T055302Z" creationid="nacho" creationdate="20210113T055302Z">
        <seg>&gt; 2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; 3.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210113T055303Z" creationid="nacho" creationdate="20210113T055303Z">
        <seg>&gt; 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; Code can still catch and rethrow exceptions that it does not understand.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015401Z" creationid="gitnacho" creationdate="20221008T015401Z">
        <seg>&gt; El código aún puede atrapar y volver a lanzar excepciones que no entiende.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; For historical reasons this header contains a lot of largely irrelevant information, and information that might be used to identify a _particular user_.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092530Z" creationid="gitnacho" creationdate="20221012T092530Z">
        <seg>&gt; Por razones históricas, este encabezado contiene mucha información en gran medida irrelevante e información que se podría usar para identificar a un _usuario en particular_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; For more information on allowing WebAssembly compilation and execution, see the [script-src CSP](/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T101654Z" creationid="gitnacho" creationdate="20221006T101654Z">
        <seg>&gt; Para obtener más información sobre cómo permitir la compilación y ejecución de WebAssembly, consulta el [script-src CSP](/es/docs/Web/HTTP/Headers/Content-Security-Policy/script-src).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; Request requires preflight, which is disallowed to follow cross-origin redirects.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T224825Z" creationid="gitnacho" creationdate="20221011T224825Z">
        <seg>&gt; La solicitud requiere preverificación, que no está permitida para seguir redireccionamientos de origen cruzado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; The `defer` attribute has no effect on [module scripts](/en-US/docs/Web/JavaScript/Guide/Modules) — they defer by default.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T124349Z" creationid="gitnacho" creationdate="20221003T123728Z">
        <seg>&gt; El atributo `defer` no tiene efecto en [module scripts](/es/docs/Web/JavaScript/Guide/Modules) — de manera predeterminada difieren.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; The ability to add stack traces to these exceptions is provided for developer tooling, and is not generally recommended for broader use.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T203613Z" creationid="gitnacho" creationdate="20221019T203613Z">
        <seg>&gt; La capacidad de agregar seguimientos de pila a estas excepciones se proporciona para herramientas de desarrollador y, por lo general, no se recomienda para un uso más amplio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; The first word of the info string is typically used to specify the language of the code sample, and rendered in the class attribute of the code tag.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174613Z" creationid="gitnacho" creationdate="20221008T174613Z">
        <seg>&gt; La primera palabra de la cadena de información se usa normalmente para especificar el lenguaje del código de ejemplo y se renderiza en el atributo de clase de la etiqueta `&lt;code&gt;`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; The request was redirected to 'https\://example.com/foo', which is disallowed for cross-origin requests that require preflight.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T152837Z" creationid="gitnacho" creationdate="20221011T224811Z">
        <seg>&gt; La solicitud se redirigió a 'https\://ejemplo.com/foo', que no está permitido para solicitudes de origen cruzado que requieren preverificación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; They are eventually expected to replace this older approach.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092622Z" creationid="gitnacho" creationdate="20221012T092622Z">
        <seg>&gt; Se espera que eventualmente reemplacen este enfoque anterior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; This ensures that WebAssembly modules can keep exception information internal if required.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015353Z" creationid="gitnacho" creationdate="20221008T015353Z">
        <seg>&gt; Esto asegura que los módulos WebAssembly puedan mantener la información de excepción interna si es necesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; UA client hints provide a more efficient and privacy preserving way of getting the desired information.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092614Z" creationid="gitnacho" creationdate="20221012T092614Z">
        <seg>&gt; Sugerencias de cliente AU cLas proporcionan una forma más eficiente y de preservación de la privacidad para obtener la información deseada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; ```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170330T084604Z" creationid="nacho" creationdate="20170330T084604Z">
        <seg>&gt; ```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt; ```js</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211004T103639Z" creationid="gitnacho" creationdate="20211004T103639Z">
        <seg>&gt; ```js</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T121240Z" creationid="gitnacho" creationdate="20221003T121240Z">
        <seg>&gt;,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;, or any element that accepts</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T122107Z" creationid="gitnacho" creationdate="20221003T122107Z">
        <seg>&gt;, o cualquier elemento que acepte</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T121706Z" creationid="gitnacho" creationdate="20221003T121706Z">
        <seg>&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;Content categories&lt;/a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T120908Z" creationid="gitnacho" creationdate="20221003T120908Z">
        <seg>&gt;Categorías de contenido&lt;/a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;Flow content&lt;/a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T121310Z" creationid="gitnacho" creationdate="20221003T121310Z">
        <seg>&gt;Flujo de contenido&lt;/a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;GitHub Wiki&lt;/a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T121956Z" creationid="gitnacho" creationdate="20221020T121956Z">
        <seg>&gt;GitHub Wiki&lt;/a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;HTMLAttrxRef&lt;/a&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T110817Z" creationid="gitnacho" creationdate="20221005T110817Z">
        <seg>&gt;HTMLAttrxRef&lt;/a&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;IRC&lt;/a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T121900Z" creationid="gitnacho" creationdate="20221020T121900Z">
        <seg>&gt;IRC&lt;/a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;Metadata content&lt;/a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T121239Z" creationid="gitnacho" creationdate="20221003T121239Z">
        <seg>&gt;Contenido de metadatos&lt;/a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;No corresponding role&lt;/a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T122223Z" creationid="gitnacho" creationdate="20221003T122223Z">
        <seg>&gt;Sin rol correspondiente&lt;/a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;Phrasing content&lt;/a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T104659Z" creationid="gitnacho" creationdate="20221003T121657Z">
        <seg>&gt;Redacción de contenido&lt;/a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;metadata content&lt;/a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T122042Z" creationid="gitnacho" creationdate="20221003T122042Z">
        <seg>&gt;contenido de metadatos&lt;/a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>&gt;phrasing content&lt;/a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T104638Z" creationid="gitnacho" creationdate="20221003T122131Z">
        <seg>&gt;redacción de contenido&lt;/a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="NaPa" changedate="20120422T103408Z">
        <seg>?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A</seg>
      </tuv>
      <tuv lang="es-MX" changeid="NaPa" changedate="20120320T045800Z">
        <seg>A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A (possibly empty) array containing {{jsxref("ArrayBuffer")}} copies of the contents of all custom sections matching `sectionName`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T221936Z" creationid="gitnacho" creationdate="20221019T221936Z">
        <seg>Un arreglo (posiblemente vacío) que contiene {{JSxRef("ArrayBuffer")}} copias del contenido de todas las secciones personalizadas que coinciden con `sectionName`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A **`WebAssembly.Global()`** constructor creates a new `Global` object representing a global variable instance, accessible from both JavaScript and importable/exportable across one or more [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) instances.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110912Z" creationid="gitnacho" creationdate="20221007T110912Z">
        <seg>Un constructor **`WebAssembly.Global()`** crea un nuevo objeto `Global` que representa una instancia de variable global, accesible desde JavaScript e importable/exportable a través de una o más instancias de [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A **`WebAssembly.Global`** object represents a global variable instance, accessible from both JavaScript and importable/exportable across one or more [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) instances.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T104344Z" creationid="gitnacho" creationdate="20221007T104344Z">
        <seg>Un objeto **`WebAssembly.Global`** representa una instancia de variable global, accesible desde JavaScript e importable/exportable a través de una o más instancias de [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A **`WebAssembly.Instance`** object is a stateful, executable instance of a [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T223949Z" creationid="gitnacho" creationdate="20221005T223317Z">
        <seg>Un objeto **`WebAssembly.Instance`** es una instancia ejecutable con estado de un [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A **`WebAssembly.Module()`** constructor creates a new Module
object containing stateless WebAssembly code that has already been compiled by the
browser and can be efficiently [shared with Workers](/en-US/docs/Web/API/Worker/postMessage), and instantiated multiple times.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T231126Z" creationid="gitnacho" creationdate="20221019T231126Z">
        <seg>Un constructor **`WebAssembly.Module()`** crea un nuevo objeto `Module` que contiene código WebAssembly sin estado que ya ha sido compilado por el navegador y se puede [compartir con los `workers`](/es/docs/Web/API/Worker/postMessage) de manera eficiente y se puede instanciar varias veces.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A **`WebAssembly.Module`** object contains stateless WebAssembly code that has already been compiled by the browser — this can be efficiently [shared with Workers](/en-US/docs/Web/API/Worker/postMessage), and instantiated multiple times.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T111342Z" creationid="gitnacho" creationdate="20221007T111342Z">
        <seg>Un objeto **`WebAssembly.Module`** contiene código WebAssembly sin estado que ya ha sido compilado por el navegador; esto se puede [compartir con *workers*](/es/docs/Web/API/Worker/postMessage) de manera eficiente e instanciar varias veces.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A **secure context** is a `Window` or `Worker` for which certain minimum standards of authentication and confidentiality are met.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T203309Z" creationid="gitnacho" creationdate="20221018T203129Z">
        <seg>Un **contexto seguro** es un `Window` o `Worker` para el cual se cumplen ciertos estándares mínimos de autenticación y confidencialidad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A MUST-READ for any web developer.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064947Z" creationid="gitnacho" creationdate="20221012T064947Z">
        <seg>Una lectura OBLIGATORIA para cualquier desarrollador web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A Module declares imports and exports just like an ES module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T075745Z" creationid="gitnacho" creationdate="20221003T075745Z">
        <seg>Un módulo declara 'imports' y 'exports' igual que un módulo ES2015module.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A Module is stateless and thus, like a [`Blob`](/en-US/docs/Web/API/Blob), can be explicitly shared between windows and workers (via [`postMessage()`](/en-US/docs/Web/API/MessagePort/postMessage)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T011006Z">
        <seg>Un módulo no tiene estado, y es solo eso, como un [Blob](/es/docs/Web/API/Blob), se puede compartir explícitamente entre ventanas y *workers* (por medio de [`postMessage()`](/es/docs/Web/API/MessagePort/postMessage)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A Shift-Reload is necessary to invalidate caches beyond just the content of the page itself.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T075603Z" creationid="gitnacho" creationdate="20221005T075510Z">
        <seg>Se necesita "Mayús+Recargar" para invalidar cachés más allá del contenido de la página en sí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A WebAssembly Table is a resizable typed array of [references](&lt;https://en.wikipedia.org/wiki/Reference_(computer_science)&gt;) that can be accessed by both JavaScript and WebAssembly code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T230244Z" creationid="gitnacho" creationdate="20221006T230244Z">
        <seg>Una `Table` de WebAssembly es un arreglo de tamaño variable de [referencias](&lt;https://en.wikipedia.org/wiki/Reference_(computer_science)&gt;) a las que se puede acceder mediante código JavaScript y WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A _simple request_ is one that **meets all the following conditions**:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220344Z" creationid="gitnacho" creationdate="20221011T220344Z">
        <seg>Una _solicitud simple_ es aquella que **cumple todas las siguientes condiciones**:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A `Promise` that resolves to a [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) object
representing the compiled module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T180517Z" creationid="gitnacho" creationdate="20221007T180517Z">
        <seg>Una `promise` que se resuelve en un objeto [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module) que representa el módulo compilado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A `Promise` that resolves to a `ResultObject` which contains two
fields:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T102211Z" creationid="gitnacho" creationdate="20221006T102211Z">
        <seg>Una `Promise` que se resuelve en un `ResultObject` que contiene dos campos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A `Promise` that resolves to an [`WebAssembly.Instance`](/en-US/docs/WebAssembly/JavaScript_interface/Instance) object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193953Z" creationid="gitnacho" creationdate="20221007T193953Z">
        <seg>Una `Promise` que se resuelve en un objeto [`WebAssembly.Instance`](/es/docs/WebAssembly/JavaScript_interface/Instance).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A `ServiceWorker` object has an associated {{domxref("ServiceWorker.state")}}, related to its lifecycle.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T212255Z">
        <seg>Un objeto `ServiceWorker` tiene un {{DOMxRef("ServiceWorker.state")}} asociado, relacionado con su ciclo de vida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A `ServiceWorker` object is available in the {{domxref("ServiceWorkerRegistration.active")}} property, and the {{domxref("ServiceWorkerContainer.controller")}} property — this is a service worker that has been activated and is controlling the page (the service worker has been successfully registered, and the controlled page has been reloaded.)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T212221Z">
        <seg>Un objeto `ServiceWorker` está disponible en la propiedad {{DOMxRef("ServiceWorkerRegistration.active")}}, y la propiedad {{DOMxRef("ServiceWorkerContainer.controller")}} — este es un *service worker* que ha sido activado y está controlando la página (el *service worker* se ha registrado correctamente y la página controlada se ha vuelto a cargar).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A `SharedArrayBuffer` is not a {{Glossary("Transferable Objects", "Transferable Object")}}, unlike an `ArrayBuffer` which is transferable.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T231631Z" creationid="gitnacho" creationdate="20220922T231631Z">
        <seg>Un `SharedArrayBuffer` no es un {{Glossary("Objetos transferibles", "Objeto transferible")}}, a diferencia de un `ArrayBuffer` que es transferible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A `fetch` event fires every time any resource controlled by a service worker is fetched, which includes the documents inside the specified scope, and any resources referenced in those documents (for example if `index.html` makes a cross origin request to embed an image, that still goes through its service worker.)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035142Z" creationid="gitnacho" creationdate="20220921T035142Z">
        <seg>Un evento `fetch` se activa cada vez que se recupera cualquier recurso controlado por un *service worker*, lo que incluye los documentos dentro del alcance especificado y cualquier recurso al que se haga referencia en esos documentos (por ejemplo, si `index.html` hace una solicitud de origen cruzado para incrustar una imagen, que todavía pasa por su *service worker*).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A basic request with one header:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T080051Z" creationid="gitnacho" creationdate="20221017T211727Z">
        <seg>Una solicitud básica con una cabecera:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A boolean `true` if the specified tag matches the exception, and `false` otherwise.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T144755Z" creationid="gitnacho" creationdate="20221019T144755Z">
        <seg>Un valor booleano `true` si la etiqueta especificada coincide con la excepción y `false` en caso contrario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A boolean that specifies whether `bufferSource` is valid wasm code
(`true`) or not (`false`).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T200039Z" creationid="gitnacho" creationdate="20221007T200039Z">
        <seg>Un valor booleano que especifica si `bufferSource` es un código `wasm` válido
(`true`) o no (`false`).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A bounded key range can either be open (the endpoints are excluded) or closed (the endpoints are included).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220911T211710Z" creationid="gitnacho" creationdate="20220911T211710Z">
        <seg>Un rango de clave delimitado puede ser abierto (se excluyen los puntos finales) o cerrado (se incluyen los puntos finales).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A common usage of the macro is as follows:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T220127Z" creationid="gitnacho" creationdate="20221005T220127Z">
        <seg>Un uso común de la macro es el siguiente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A context is considered secure when it meets certain minimum standards of authentication and confidentiality defined in the [Secure Contexts](https://w3c.github.io/webappsec-secure-contexts/) specification.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T203816Z" creationid="gitnacho" creationdate="20221018T203816Z">
        <seg>Un contexto se considera seguro cuando cumple con ciertos estándares mínimos de autenticación y confidencialidad definidos en la especificación de [Contextos seguros](https://w3c.github.io/webappsec-secure-contexts/).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A core use-case for WebAssembly is to take the existing ecosystem of C libraries and allow developers to use them on the web.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053216Z" creationid="gitnacho" creationdate="20221004T053216Z">
        <seg>Un caso de uso central para WebAssembly es tomar el ecosistema existente de bibliotecas C y permitir que los desarrolladores las usen en la web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A few notes about macro calls:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T094926Z" creationid="gitnacho" creationdate="20221005T094926Z">
        <seg>Algunas notas sobre llamadas a macros:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A framework tends to take this idea further, offering a complete system with some custom syntaxes for you to write a web app on top of.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T165250Z" creationid="gitnacho" creationdate="20221012T165250Z">
        <seg>Un marco tiende a llevar esta idea más allá, ofreciendo un sistema completo con algunas sintaxis personalizadas para que puedas escribir una aplicación web encima.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A function reference — this is an [exported WebAssembly function](/en-US/docs/WebAssembly/Exported_functions), a
JavaScript wrapper for an underlying wasm function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T091757Z" creationid="gitnacho" creationdate="20221006T091757Z">
        <seg>Una referencia de función: esta es una [función WebAssembly exportada](/es/docs/WebAssembly/Exported_functions), una envoltura de JavaScript para una función `wasm` subyacente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A generic {{domxref("Event")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T224950Z">
        <seg>Un {{DOMxRef("Event")}} genérico.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A key range can be a single value or a range with upper and lower bounds or endpoints.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220911T211655Z" creationid="gitnacho" creationdate="20220911T211655Z">
        <seg>Un rango de clave puede ser un valor único o un rango con límites superior e inferior o puntos finales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A library tends to be an existing JavaScript or CSS file that provides ready-rolled functionality for you to make use of in your code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T165235Z" creationid="gitnacho" creationdate="20221012T165235Z">
        <seg>Una biblioteca tiende a ser un archivo JavaScript o CSS existente que proporciona una funcionalidad lista para usar en tu código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A memory instance can be grown by calls to [`Memory.prototype.grow()`](/en-US/docs/WebAssembly/JavaScript_interface/Memory/grow), where again the argument is specified in units of WebAssembly pages:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T210458Z" creationid="gitnacho" creationdate="20221006T210458Z">
        <seg>Se puede hacer crecer una instancia de `memory` mediante llamadas a [`Memory.prototype.grow()`](/es/docs/WebAssembly/JavaScript_interface/Memory/grow), donde nuevamente el argumento se especifica en unidades de páginas WebAssembly:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A memory object created by JavaScript or in WebAssembly code will be accessible and mutable from both JavaScript and WebAssembly, provided that the code constructed the object, or has been given the object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T215110Z" creationid="gitnacho" creationdate="20221019T215110Z">
        <seg>Un objeto de memoria creado por JavaScript o en código WebAssembly será accesible y mutable desde JavaScript y WebAssembly, siempre que el código haya construido el objeto o se le haya dado el objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A module can be defined in a template like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073533Z" creationid="gitnacho" creationdate="20221005T073533Z">
        <seg>Un módulo se puede definir en una plantilla con algo como esto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A module contains a "name" custom section if `WebAssembly.Module.customSections`
returns an `ArrayBuffer` with a length greater than 0.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T222735Z" creationid="gitnacho" creationdate="20221019T222735Z">
        <seg>Un módulo contiene una sección `name` personalizada si `WebAssembly.Module.customSections` devuelve un `ArrayBuffer` con una longitud mayor que 0.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A number of new wasm instructions have been added that can be used to implement higher level features like mutexes, condition variables, etc.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T081016Z" creationid="gitnacho" creationdate="20221007T081016Z">
        <seg>Se han agregado varias nuevas instrucciones `wasm` que se pueden usar para implementar funciones de nivel superior como `mutexes`, variables de condición, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A particular document is considered to be in a secure context when it is the [active document](https://html.spec.whatwg.org/multipage/browsers.html#active-document) of a [top-level browsing context](https://html.spec.whatwg.org/multipage/browsers.html#top-level-browsing-context) (basically, a containing window or tab) that is a secure context.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T203851Z" creationid="gitnacho" creationdate="20221018T203851Z">
        <seg>Se considera que un documento en particular está en un contexto seguro cuando es el [documento activo](https://html.spec.whatwg.org/multipage/browsers.html#active-document) de un [contexto de navegación de nivel superior ](https://html.spec.whatwg.org/multipage/browsers.html#top-level-browsing-context) (básicamente, una ventana o pestaña contenedora) que es un contexto seguro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A returned resource may have one {{HTTPHeader("Access-Control-Allow-Origin")}} header with the following syntax:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053739Z" creationid="gitnacho" creationdate="20221012T053739Z">
        <seg>Un recurso devuelto puede tener un encabezado {{HTTPHeader("Access-Control-Allow-Origin")}} con la siguiente sintaxis:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A sample template might look like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065023Z" creationid="gitnacho" creationdate="20221005T065023Z">
        <seg>Una plantilla de muestra se podría ver así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A script in KumaScript is a _template_, and each template is a file in [the macros directory](https://github.com/mdn/yari/tree/main/kumascript/macros) of the `mdn/yari` repository on GitHub.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065005Z" creationid="gitnacho" creationdate="20221005T065005Z">
        <seg>Un script en KumaScript es una _plantilla_, y cada plantilla es un archivo en el [directorio de macros](https://github.com/mdn/yari/tree/main/kumascript/macros) del repositorio `mdn/yari` en GitHub.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A server can replace the set of client hints it is interested in receiving by resending the `Accept-CH` response header with a new list.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092038Z" creationid="gitnacho" creationdate="20221012T092038Z">
        <seg>Un servidor puede reemplazar el conjunto de sugerencias de clientes en que está interesado recibir al reenviar el encabezado de respuesta `Accept-CH` con una nueva lista.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A server must announce that it supports client hints, using the {{HTTPHeader("Accept-CH")}} header to specify the hints that it is interested in receiving.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T091437Z" creationid="gitnacho" creationdate="20221012T091437Z">
        <seg>Un servidor debe anunciar que admite sugerencias de clientes, utilizando el encabezado {{HTTPHeader("Accept-CH")}} para especificar las sugerencias que le interesa recibir.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A server specifies the client hint headers that it is interested in getting in the `Accept-CH` response header.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T091947Z" creationid="gitnacho" creationdate="20221012T091947Z">
        <seg>Un servidor especifica los encabezados de sugerencia del cliente que está interesado en obtener en el encabezado de respuesta `Accept-CH`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A service worker cannot process events from the browser until it has booted.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T205551Z" creationid="gitnacho" creationdate="20220922T205551Z">
        <seg>Un *service worker* no puede procesar eventos desde el navegador hasta que se haya iniciado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A service worker client is either a document in a browser context or a {{DOMxRef("SharedWorker")}}, which is controlled by an active worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T150614Z" creationid="gitnacho" creationdate="20221002T150614Z">
        <seg>Un cliente de *service worker* es un documento en un contexto de navegador o un {{DOMxRef("SharedWorker")}}, que está controlado por un _active worker_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A service worker is an event-driven [worker](/en-US/docs/Web/API/Worker) registered against an origin and a path.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T153915Z" creationid="gitnacho" creationdate="20221002T133939Z">
        <seg>Un *service worker* es un [*worker*](/es/docs/Web/API/Worker) manejado por eventos registrado para una fuente y una ruta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A service worker is first registered using the {{DOMxRef("ServiceWorkerContainer.register()")}} method.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T135513Z" creationid="gitnacho" creationdate="20221002T135513Z">
        <seg>Un *service worker* se registra primero mediante el método {{DOMxRef("ServiceWorkerContainer.register()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A service worker is never updated to this state, so this will never be the value of the {{DOMxRef("ServiceWorker.statechange_event")}}
- `"installing"`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223418Z" creationid="gitnacho" creationdate="20221003T223418Z">
        <seg>Un *service worker* nunca se actualiza a este estado, por lo que este nunca será el valor de {{DOMxRef("ServiceWorker.statechange_event")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A service worker is run in a worker context: it therefore has no DOM access, and runs on a different thread to the main JavaScript that powers your app, so it is non-blocking.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T134445Z" creationid="gitnacho" creationdate="20221002T134445Z">
        <seg>Un *service worker* se ejecuta en un contexto *worker*: por lo tanto no tiene acceso al DOM, y se ejecuta en un hilo distinto al de JavaScript principal de la aplicación, de manera que no es bloqueante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A single parameter is written `(param i32)` and the return type is written `(result i32)`, hence a binary function that takes two 32-bit integers and returns a 64-bit float would be written like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054451Z" creationid="gitnacho" creationdate="20221007T054451Z">
        <seg>Un solo parámetro se escribe `(param i32)` y el tipo de retorno se escribe `(result i32)`, por lo tanto, una función binaria que toma dos enteros de 32 bits y devuelve un flotante de 64 bits se escribiría así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A single service worker can control many pages.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T025126Z" creationid="gitnacho" creationdate="20220921T025126Z">
        <seg>Un solo *service worker* puede controlar muchas páginas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A specific flag has to be set on the `XMLHttpRequest` object or the {{domxref("Request")}} constructor when it is invoked.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T230337Z">
        <seg>Se debe establecer un indicador específico en el objeto `XMLHttpRequest` o en el constructor {{DOMxRef("Request")}} cuando se invoca.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A string containing the stack trace, or {{jsxref("undefined")}} if no trace has been assigned.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T203636Z" creationid="gitnacho" creationdate="20221019T203636Z">
        <seg>Una cadena que contiene el seguimiento de la pila, o {{JSxRef("undefined")}} si no se ha asignado ningún seguimiento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A table created by JavaScript or in WebAssembly code will be accessible and mutable from both JavaScript and WebAssembly.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095022Z" creationid="gitnacho" creationdate="20221006T095022Z">
        <seg>Una tabla creada por JavaScript o en código WebAssembly será accesible y mutable tanto desde JavaScript como desde WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A typical set of headers:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T080130Z" creationid="gitnacho" creationdate="20221017T211823Z">
        <seg>Un conjunto típico de cabeceras:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A useful strategy is to just give it **all** the C files and rely on the compiler to strip out everything that is unnecessary.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053617Z" creationid="gitnacho" creationdate="20221004T053617Z">
        <seg>Una estrategia útil es darle **todos** los archivos C y confiar en el compilador para eliminar todo lo que no sea necesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A useful tip when debugging.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T074525Z" creationid="gitnacho" creationdate="20221005T074525Z">
        <seg>Un consejo útil al depurar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A view is a defined way to view the image, like a zoom level or a detail view.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T181112Z" creationid="gitnacho" creationdate="20221005T121943Z">
        <seg>Un `view` es una forma definida de ver la imagen, con un nivel de zoom o una vista detallada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A wasm module consists of a sequence of **sections**.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T222024Z" creationid="gitnacho" creationdate="20221019T222024Z">
        <seg>Un módulo `wasm` consta de una secuencia de **secciones**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A website can do basically anything, but, for your first try, you should keep things simple.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061018Z" creationid="gitnacho" creationdate="20221019T061018Z">
        <seg>Un sitio web puede hacer básicamente cualquier cosa, pero, en tu primer intento, debes mantener las cosas simples.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A {{domxref("DocumentTimeline")}} object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221006T092819Z">
        <seg>Un objeto {{DOMxRef("DocumentTimeline")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A {{jsxref("Promise")}} that is resolved with the given value, or the promise passed as value, if the value was a promise object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073610Z" creationid="gitnacho" creationdate="20221002T073610Z">
        <seg>Una {{jsxref("Promise")}} que se resuelve con el valor dado, o la promesa pasada como valor, si el valor era un objeto `promise`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A {{jsxref("Promise")}} that resolves to the requested {{domxref("Cache")}} object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T225122Z">
        <seg>Una {{jsxref("Promise")}} que se resuelve en el objeto {{DOMxRef("Cache")}} solicitado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A {{jsxref("String")}} that can take one of the following values:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223336Z" creationid="gitnacho" creationdate="20221003T223336Z">
        <seg>Una {{jsxref("String")}} que puede tomar uno de los siguientes valores:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A {{jsxref("WeakMap")}} is a collection of key/value pairs whose keys must be objects, with values of any arbitrary [JavaScript type](/en-US/docs/Web/JavaScript/Data_structures#javascript_types), and which does not create strong references to its keys.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T111556Z" creationid="gitnacho" creationdate="20221008T110103Z">
        <seg>Un {{jsxref("WeakMap")}} es una colección de pares clave/valor cuyas claves deben ser objetos, con valores de cualquier [tipo de JavaScript](/es/docs/Web/JavaScript/Data_structures#tipos_javascript) arbitrario, y que no crea fuertes referencias a sus claves.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>A,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210920T055729Z" creationid="gitnacho" creationdate="20210920T055729Z">
        <seg>A,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>About to fetch " +</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204404Z" creationid="gitnacho" creationdate="20221003T204404Z">
        <seg>A punto de fetch " +</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Above we talked about the raw primitives that WebAssembly adds to the Web platform: a binary format for code and APIs for loading and running this binary code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T080521Z" creationid="gitnacho" creationdate="20221003T080521Z">
        <seg>Previamente se describieron las primitivas que WebAssembly añade a la plataforma Web: un formato binario para el código y APIs para cargar y ejecutar este código binario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Accessing the `buffer` property after calling `grow`, will yield an `ArrayBuffer` with the correct length.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T214350Z" creationid="gitnacho" creationdate="20221019T214350Z">
        <seg>Acceder a la propiedad `buffer` después de llamar a `grow` generará un `ArrayBuffer` con la longitud correcta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>According to WebAssembly, memory is just a large array of bytes that can grow over time.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T083549Z" creationid="gitnacho" creationdate="20221007T063838Z">
        <seg>De acuerdo a WebAssembly, `memory` es solo un gran arreglo de bytes que puede crecer con el tiempo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Activate</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T141032Z" creationid="gitnacho" creationdate="20221002T141032Z">
        <seg>Activación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Activation can happen sooner using {{DOMxRef("ServiceWorkerGlobalScope.skipWaiting()")}} and existing pages can be claimed by the active worker using {{DOMxRef("Clients.claim()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T142143Z" creationid="gitnacho" creationdate="20221002T142143Z">
        <seg>La activación se puede realizar antes mediante {{DOMxRef("ServiceWorkerGlobalScope.skipWaiting()")}} y las páginas existentes se pueden llamar por el *active worker* usando {{DOMxRef("Clients.claim()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Add a `&lt;script&gt;&lt;/script&gt;` element to the page.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T210037Z" creationid="gitnacho" creationdate="20221006T210037Z">
        <seg>Agregue un elemento `&lt;script&gt;&lt;/script&gt;` a la página.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Add a {{HTMLElement("button")}} element as shown below, just above the first opening `&lt;script type='text/javascript'&gt;` tag.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T112243Z" creationid="gitnacho" creationdate="20221003T112243Z">
        <seg>Agrega un elemento {{HTMLElement("button")}} como se muestra a continuación, justo encima de la primera etiqueta de apertura `&lt;script type='text/javascript'&gt;`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Add the following into your code, where indicated:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T225838Z" creationid="gitnacho" creationdate="20221006T225838Z">
        <seg>Agrega lo siguiente en tu código, donde se indica:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Add the following to your script, below the first block:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T181345Z" creationid="gitnacho" creationdate="20221006T181345Z">
        <seg>Agrega lo siguiente a tu script, debajo del primer bloque:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>AddType text/cache-manifest           appcache</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T212839Z" creationid="gitnacho" creationdate="20220921T212839Z">
        <seg>AddType text/cache-manifest           appcache</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Additional languages may be requested by following the [this process](https://github.com/orgs/mdn/discussions/170#discussioncomment-3404366).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T180731Z" creationid="gitnacho" creationdate="20221008T180731Z">
        <seg>Se pueden solicitar lenguajes adicionales siguiendo [este proceso](https://github.com/orgs/mdn/discussions/170#discussioncomment-3404366).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Additionally, for HTTP request methods that can cause side-effects on server data (in particular, HTTP methods other than {{HTTPMethod("GET")}}, or {{HTTPMethod("POST")}} with certain [MIME types](/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types)), the specification mandates that browsers "preflight" the request, soliciting supported methods from the server with the HTTP {{HTTPMethod("OPTIONS")}} request method, and then, upon "approval" from the server, sending the actual request.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T213838Z" creationid="gitnacho" creationdate="20221011T213838Z">
        <seg>Además, para los métodos de solicitud HTTP que pueden causar efectos secundarios en los datos del servidor (en particular, los métodos HTTP distintos de {{HTTPMethod("GET")}} o {{HTTPMethod("POST")}} con ciertos [tipos MIME ](/es/docs/Web/HTTP/Basics_of_HTTP/MIME_types)), la especificación exige que los navegadores realicen una "verificación previa" de la solicitud, solicitando métodos admitidos del servidor con la solicitud HTTP {{HTTPMethod("OPTIONS")}} y luego, con la "aprobación" del servidor, enviar la solicitud real.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Additionally, it handles creating a database to cache the compiled wasm modules in, attempts to store new modules in the database, and retrieves previously cached modules from the database, saving you from having to download them again.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T050904Z" creationid="gitnacho" creationdate="20221004T050904Z">
        <seg>Además, maneja la creación de una base de datos para almacenar en caché los módulos `wasm` compilados, intenta almacenar nuevos módulos en la base de datos y recupera módulos previamente almacenados en caché de la base de datos, evitando que tengas que descargarlos nuevamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Additionally, the cost of downloading, parsing, and compiling very large JavaScript applications can be prohibitive.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T005621Z" creationid="gitnacho" creationdate="20221003T005621Z">
        <seg>Adicionalmente, el costo de descargar, analizar gramaticalmente (*parsing*) y compilar aplicaciones JavaScript muy grandes resulta prohibitivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>After a successful installation, the service worker activates.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034640Z" creationid="gitnacho" creationdate="20220921T034640Z">
        <seg>Después de una instalación exitosa, el *service worker* se activa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>After converting to assembly, we then use `shared0.wasm` and `shared1.wasm` in JavaScript via the following code:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074325Z" creationid="gitnacho" creationdate="20221007T074158Z">
        <seg>Después de convertir a ensamblador, usamos `shared0.wasm` y `shared1.wasm` en JavaScript a través del siguiente código:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>After exposing the function to JavaScript using cwrap, you can use that number to find the start of our buffer and copy the image data:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054348Z" creationid="gitnacho" creationdate="20221004T054348Z">
        <seg>Después de exponer la función a JavaScript usando `cwrap`, puedes usar ese número para encontrar el inicio de nuestro búfer y copiar los datos de la imagen:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>After fetching some WebAssembly bytecode using fetch, we compile and instantiate the
module using the [`WebAssembly.instantiate()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiate) function, importing a
JavaScript function into the WebAssembly Module in the process.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T120306Z" creationid="gitnacho" creationdate="20221007T194159Z">
        <seg>Después de obtener algún código de bytes de WebAssembly usando `fetch`, compilamos y creamos una instancia del `module` usando la función [`WebAssembly.instantiate()`](#sintaxis), importando en el proceso, una función de JavaScript en el módulo WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>After fetching some WebAssembly bytecode using fetch, we compile and instantiate the
module using the [`WebAssembly.instantiateStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming) function, importing a
JavaScript function into the WebAssembly Module in the process.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T094002Z" creationid="gitnacho" creationdate="20221006T094002Z">
        <seg>Después de obtener algún código de bytes de WebAssembly usando `fetch`, compilamos e instanciamos usando la función [`WebAssembly.instantiateStreaming()`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming), importando una función de JavaScript en el módulo WebAssembly en el proceso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>After instantiating `table2.wasm`, `tbl` is updated with the following:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T005532Z" creationid="gitnacho" creationdate="20221020T005532Z">
        <seg>Después de instanciar `table2.wasm`, `tbl` se actualiza con lo siguiente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>After that, it is updated when:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T141338Z" creationid="gitnacho" creationdate="20221002T141338Z">
        <seg>Después de esto, se actualiza cuando:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>After that, we put a clone of the response into the cache.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040228Z" creationid="gitnacho" creationdate="20220921T040228Z">
        <seg>Después de eso, colocamos en caché un clon de la respuesta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>After the signature, locals are listed with their type, for example `(local i32)`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054506Z" creationid="gitnacho" creationdate="20221007T054506Z">
        <seg>Después de la firma, los locales se enumeran con su tipo, por ejemplo `(local i32)`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>After your service worker is registered, the browser will attempt to install then activate the service worker for your page/site.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034018Z" creationid="gitnacho" creationdate="20220921T034018Z">
        <seg>Después de que tu *service worker* esté registrado, el navegador intentará instalar y luego activar el *service worker* para tu página/sitio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Again, assuming our module is called `simple.wasm`:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T060826Z" creationid="gitnacho" creationdate="20221005T060826Z">
        <seg>Nuevamente, asumiendo que nuestro módulo se llama `simple.wasm`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Again, it implicitly pops these values off the stack, so the result is that it stores the value `42` in memory index `0`,
4.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074048Z" creationid="gitnacho" creationdate="20221007T074048Z">
        <seg>De nuevo, saca implícitamente estos valores de la pila, por lo que el resultado es que almacena el valor `42` en el índice de memoria `0`,
4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>All `Global` instances inherit from the `Global()` constructor's prototype object — this can be modified to affect all `Global` instances.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T104453Z" creationid="gitnacho" creationdate="20221007T104453Z">
        <seg>Todas las instancias `Global` heredan del objeto prototipo del constructor `Global()`; esto se puede modificar para afectar a todas las instancias `Global`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>All client hints that are not low entropy hints are considered high entropy hints.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092305Z" creationid="gitnacho" creationdate="20221012T092305Z">
        <seg>Todas las sugerencias de cliente que no son sugerencias de baja entropía se consideran sugerencias de alta entropía.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>All code in a webassembly module is grouped into functions, which have the following pseudocode structure:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054123Z" creationid="gitnacho" creationdate="20221007T054123Z">
        <seg>Todo el código en un módulo webassembly se agrupa en funciones, cuyo pseudocódigo tiene la siguiente estructura:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>All of these concepts are reflected 1:1 in the [WebAssembly JavaScript API](/en-US/docs/WebAssembly/JavaScript_interface).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T091818Z" creationid="gitnacho" creationdate="20221003T010815Z">
        <seg>Todos estos conceptos están reflejados uno a uno en la [API JavaScript de WebAssembly](/es/docs/WebAssembly/JavaScript_interface).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>All the code knows is that an error occurred.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T214009Z" creationid="gitnacho" creationdate="20221011T214009Z">
        <seg>Todo lo que el código sabe es que ocurrió un error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>All these examples use {{domxref("XMLHttpRequest")}}, which can make cross-origin requests in any supporting browser.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T220000Z">
        <seg>Todos estos ejemplos usan {{DOMxRef("XMLHttpRequest")}}, que puede realizar solicitudes de origen cruzado en cualquier navegador compatible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>All you need is a computer that can run modern web browsers, an internet connection, and a willingness to learn.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223618Z" creationid="gitnacho" creationdate="20221018T223618Z">
        <seg>Todo lo que necesitas es una computadora que pueda ejecutar navegadores web modernos, una conexión a Internet y la voluntad de aprender.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Allowed values:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T124612Z" creationid="gitnacho" creationdate="20220827T102142Z">
        <seg>Valores permitidos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Also because on-page code and source code are in two different places, it is easier for them to get out of sync.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204851Z" creationid="gitnacho" creationdate="20221005T204851Z">
        <seg>Además, debido a que el código en la página y el código fuente están en dos lugares diferentes, es más fácil que no estén sincronizados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Also note that any `Set-Cookie` response header in a response would not set a cookie if the `Access-Control-Allow-Origin` value in that response is the "`*`" wildcard rather an actual origin.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053416Z" creationid="gitnacho" creationdate="20221012T053416Z">
        <seg>También ten en cuenta que cualquier encabezado de respuesta `Set-Cookie` en una respuesta no establecería una *cookie* si el valor `Access-Control-Allow-Origin` en esa respuesta es el comodín "`*`" en lugar de un origen real.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Also note:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T031314Z" creationid="gitnacho" creationdate="20220921T031314Z">
        <seg>También ten en cuenta:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Also see [`WebAssembly.instantiateStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming) for more details about the instantiate function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061042Z" creationid="gitnacho" creationdate="20221007T061042Z">
        <seg>Consulta también [`WebAssembly.instantiateStreaming()`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming) para obtener más detalles sobre la creación de instancias `function`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Also, a non-standard HTTP `X-PINGOTHER` request header is set.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222619Z" creationid="gitnacho" creationdate="20221011T222619Z">
        <seg>Además, se establece un encabezado de solicitud HTTP `X-PINGOTHER` no estándar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Also:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211101T205249Z" creationid="gitnacho" creationdate="20211101T205249Z">
        <seg>Also:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Alternatively, copy the image's web address from your browser's address bar for later use.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062614Z" creationid="gitnacho" creationdate="20221019T062614Z">
        <seg>Alternativamente, copia la dirección web de la imagen de la barra de direcciones de tu navegador para su posterior uso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Although line 10 contains the Cookie destined for the content on `https://bar.other`, if bar.other did not respond with an {{HTTPHeader("Access-Control-Allow-Credentials")}}`: true` (line 16), the response would be ignored and not made available to the web content.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230647Z" creationid="gitnacho" creationdate="20221011T230647Z">
        <seg>Aunque la línea 10 contiene la *Cookie* destinada al contenido en `https://bar.other`, si `bar.other` no respondió con {{HTTPHeader("Access-Control-Allow-Credentials")}}`: true` (línea 16), la respuesta sería ignorada y no estaría disponible para el contenido web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Although the browser compiles it to something more efficient, wasm execution is defined in terms of a stack machine where the basic idea is that every type of instruction pushes and/or pops a certain number of `i32`/`i64`/`f32`/`f64` values to/from a stack.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T082302Z" creationid="gitnacho" creationdate="20221007T054942Z">
        <seg>Aunque el navegador lo compila a algo más eficiente, la ejecución de `wasm` se define en términos de una máquina apiladora donde la idea básica es que cada tipo de instrucción empuja y/o saca un cierto número de valores `i32`/`i64`/`f32` /`f64` a/desde una pila.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>An **HTTP header** is a field of an HTTP request or response that passes additional context and metadata about the request or response.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T075816Z" creationid="gitnacho" creationdate="20221017T211423Z">
        <seg>Una **cabecera HTTP** es un campo de una solicitud o respuesta HTTP que transmite contexto y metadatos adicionales sobre la solicitud o respuesta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>An Install event is always the first one sent to a service worker (this can be used to start the process of populating an IndexedDB, and caching site assets).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T051647Z" creationid="gitnacho" creationdate="20220921T022916Z">
        <seg>Un evento de instalación siempre es el primero que se envía a un *service worker* (esto se puede usar para iniciar el proceso de completar un `IndexedDB` y almacenar en caché los activos del sitio).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>An Instance is like an ES module that has been loaded into a particular global with a particular set of imports.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T075952Z" creationid="gitnacho" creationdate="20221003T075952Z">
        <seg>Una instancia es como un módulo ES2015 que ha sido cargado en un global particular con un conjunto particular de `imports`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>An \\{{EmbedGHLiveSample}} call dynamically grabs the document at a specified URL (which has to be inside the **mdn** GitHub organization), and inserts into the page inside an {{htmlelement("iframe")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211958Z" creationid="gitnacho" creationdate="20221005T211958Z">
        <seg>Una llamada a \\{{EmbedGHLiveSample}} captura dinámicamente el documento en una URL específica (que debe estar dentro de la organización **mdn** GitHub) y lo inserta en la página dentro de un {{htmlelement("iframe")}} .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>An \\{{EmbedLiveSample}} call dynamically grabs the code blocks in the same document section as itself and puts them into a document, which it then inserts into the page inside an {{htmlelement("iframe")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T210904Z" creationid="gitnacho" creationdate="20221005T210904Z">
        <seg>Una llamada a \\{{EmbedLiveSample}} captura dinámicamente los bloques de código en la misma sección del documento que ella y los coloca en un documento, que luego inserta en la página dentro de un {{htmlelement("iframe")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>An alert box appears on the screen, with `Hello, WebAssembly!` in it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065055Z" creationid="gitnacho" creationdate="20221004T065055Z">
        <seg>Aparece un cuadro de alerta en la pantalla con `¡Hola, WebAssembly!`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>An array containing objects representing the exported functions of the given module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T224637Z" creationid="gitnacho" creationdate="20221019T224637Z">
        <seg>Un arreglo que contiene objetos que representan las funciones exportadas del módulo dado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>An array containing objects representing the imported functions of the given module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T230239Z" creationid="gitnacho" creationdate="20221019T230239Z">
        <seg>Un arreglo que contiene objetos que representan las funciones importadas del módulo dado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>An event can be triggered by the user action e.g. clicking the mouse button or tapping keyboard, or generated by APIs to represent the progress of an asynchronous task.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T201625Z" creationid="gitnacho" creationdate="20221011T201625Z">
        <seg>La acción del usuario puede desencadenar un evento, p. ej. haciendo clic en el botón del mouse o tocando el teclado, o generado por las APIs para representar el progreso de una tarea asincrónica.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>An example of a cross-origin request: the front-end JavaScript code served from `https://domain-a.com` uses {{domxref("XMLHttpRequest")}} to make a request for `https://domain-b.com/data.json`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T212903Z">
        <seg>Un ejemplo de una solicitud de origen cruzado: el código JavaScript de front-end servido desde `https://dominio-a.com` usa {{DOMxRef("XMLHttpRequest")}} para realizar una solicitud de `https://dominio-b.com/data.json`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>An example of a {{Glossary("preflight request")}} is given above, including an example which sends this header to the browser.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054515Z" creationid="gitnacho" creationdate="20221012T054515Z">
        <seg>Arriba se proporciona un ejemplo de una {{Glossary("Solicitud de preverificación")}}, que incluye un ejemplo que envía este encabezado al navegador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>An example result might look like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205545Z" creationid="gitnacho" creationdate="20221005T205545Z">
        <seg>Un resultado de ejemplo se podría ver así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>An index is a kind of object store for looking up records in another object store, called the referenced object store.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220911T211239Z" creationid="gitnacho" creationdate="20220911T211239Z">
        <seg>Un índice es una especie de almacén de objetos para buscar registros en otro almacén de objetos, denominado almacén de objetos referido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>An object with a property named `parameters` that references the array of data types associated with this [`Tag`](/en-US/docs/WebAssembly/JavaScript_interface/Tag).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T071523Z" creationid="gitnacho" creationdate="20221020T071428Z">
        <seg>Un objeto con una propiedad llamada `parameters` que hace referencia al arreglo de tipos de datos asociados con esta etiqueta — [`Tag`](/es/docs/WebAssembly/JavaScript_interface/Tag).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>An origin can have multiple, named `Cache` objects.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T202521Z" creationid="gitnacho" creationdate="20221003T202521Z">
        <seg>Un origen puede tener varios objetos `Cache` con nombre.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>And WebAssembly code is itself able to manipulate tables using instructions added as part of [Reference types](#reference_types), such as `table.get` and `table.set`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073652Z" creationid="gitnacho" creationdate="20221007T073652Z">
        <seg>Y el código WebAssembly es capaz de manipular tablas usando instrucciones agregadas como parte de [Tipos `Reference`](#tipos_reference), como `table.get` y `table.set`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>And the following examples show how to put (an inline) script inside the `&lt;script&gt;` element.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134012Z" creationid="gitnacho" creationdate="20221003T134012Z">
        <seg>Y los siguientes ejemplos muestran cómo colocar un script (en línea) dentro del elemento `&lt;script&gt;`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>And their cross-origin (and cross-site) counterparts need to set the same header with `cross-origin` as value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T030407Z" creationid="gitnacho" creationdate="20220923T030407Z">
        <seg>Y sus contrapartes de origen cruzado (y de sitios cruzados) deben establecer el mismo encabezado con "origen cruzado" —`cross-origin`— como valor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>And then could write `local.get $p1` instead of `local.get 0`, etc. (Note that when this text gets converted to binary, though, the binary will contain only the integer.)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054748Z" creationid="gitnacho" creationdate="20221007T054748Z">
        <seg>Y luego podrías escribir `local.get $p1` en lugar de `local.get 0`, etc. (Sin embargo, ten en cuenta que cuando este texto se convierta a binario, el binario contendrá solo el número entero).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>And there you have it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T055052Z" creationid="gitnacho" creationdate="20221004T055052Z">
        <seg>Y ahí lo tienes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>And this will produce:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182122Z" creationid="gitnacho" creationdate="20221008T182122Z">
        <seg>Y producirá esto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>And what's even better is that it is being developed as a web standard via the [W3C WebAssembly Working Group](https://www.w3.org/wasm/) and [Community Group](https://www.w3.org/community/webassembly/) with active participation from all major browser vendors.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T102944Z" creationid="gitnacho" creationdate="20221003T094536Z">
        <seg>Y lo mejor es que se está desarrollando como un estándar web a través del grupo de trabajo WebAssembly del W3C y su grupo comunitario con la participación activa de todos los principales fabricantes de navegadores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>And you will see the correct version number in the [output](https://googlechrome.github.io/samples/webassembly/version.html):</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053813Z" creationid="gitnacho" creationdate="20221004T053813Z">
        <seg>Y verás el número de versión correcto en la [salida](https://googlechrome.github.io/samples/webassembly/version.html):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>And you won't be able to work around it at all unless you have control over the server the request is being made to.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T225930Z" creationid="gitnacho" creationdate="20221011T225930Z">
        <seg>Y no la podrás evitar en absoluto a menos que tengas control sobre el servidor al que se realiza la solicitud.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>And, the output of this template would be:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073642Z" creationid="gitnacho" creationdate="20221005T073642Z">
        <seg>Y, la salida de esta plantilla sería:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Another cell with lots of text in it, that also really goes into a lot of</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185316Z" creationid="gitnacho" creationdate="20221008T185316Z">
        <seg>Otra celda con una gran cantidad de texto, que también entra en una gran cantidad de</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Another more recent addition to the language (for example, in [Firefox 78](/en-US/docs/Mozilla/Firefox/Releases/78)) is WebAssembly multi-value, meaning that WebAssembly functions can now return multiple values, and instruction sequences can consume and produce multiple stack values.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T075141Z" creationid="gitnacho" creationdate="20221007T075141Z">
        <seg>Otra adición más reciente al lenguaje (por ejemplo, en [Firefox 78](/es/docs/Mozilla/Firefox/Releases/78)) es el multivalor de WebAssembly, lo cual significa que las funciones de WebAssembly ahora pueden devolver valores múltiples y las secuencias de instrucciones pueden consumir y producir múltiples valores de pila.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Any</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210916T071556Z" creationid="nacho" creationdate="20201124T213905Z">
        <seg>`Any`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Any element that accepts</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T122004Z" creationid="gitnacho" creationdate="20221003T122004Z">
        <seg>Cualquier elemento que acepte</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Any occurrences that still exist in actively-maintained
content should be replaced with a plain Markdown style link.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T220113Z" creationid="gitnacho" creationdate="20221005T220113Z">
        <seg>Cualquier ocurrencia que aún exista en el contenido en mantenimiento/activo
se debe reemplazar con un enlace de estilo Markdown simple.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Any subsequent call to `instantiateCachedURL()` will then clear out the entire cache, allowing you to avoid using out-of-date modules.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T051017Z" creationid="gitnacho" creationdate="20221004T051017Z">
        <seg>Cualquier llamada posterior a `instantiateCachedURL()` borrará toda la caché, lo que te permitirá evitar el uso de módulos desactualizados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Anything assigned to `module.exports` in the template is returned.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072518Z" creationid="gitnacho" creationdate="20221005T072518Z">
        <seg>Se devuelve cualquier cosa asignada a `module.exports` en la plantilla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Applications are free to interpret a drag and drop interaction in an application-specific way.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220902T054407Z" creationid="gitnacho" creationdate="20220902T054407Z">
        <seg>Las aplicaciones son libres de interpretar una interacción de arrastrar y soltar de una manera específica de la aplicación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Arbitrary JavaScript functions can also be synchronously called by WebAssembly code by passing in those JavaScript functions as the imports to a WebAssembly instance.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T080208Z" creationid="gitnacho" creationdate="20221003T080208Z">
        <seg>Se puede llamar arbitrariamente a funciones JavaScript sincrónicamente también desde el código WebAssembly, pasando dichas funciones de JavaScript como `imports` a la instancia de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>As a baseline requirement, your document needs to be in a [secure context](/en-US/docs/Web/Security/Secure_Contexts).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20220923T023648Z">
        <seg>Como requisito básico, tu documento debe estar en un [contexto seguro](/es/docs/Web/Security/Secure_Contexts).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>As a child of {{DOMxRef("ExtendableEvent")}}, it ensures that functional events such as {{DOMxRef("FetchEvent")}} are not dispatched during installation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151436Z" creationid="gitnacho" creationdate="20221002T151436Z">
        <seg>Como elemento secundario de {{DOMxRef("ExtendableEvent")}}, garantiza que los eventos funcionales como {{DOMxRef("FetchEvent")}} no se envíen durante la instalación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>As a semi-experimental feature (not guaranteed to work), you can supply a JSON object for the first and only parameter, like so:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065357Z" creationid="gitnacho" creationdate="20221005T065357Z">
        <seg>Como función semiexperimental (no se garantiza que funcione), puedes proporcionar un objeto JSON para el primer y único parámetro, así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>As a workaround for cases where an author needs to associate multiple `&lt;dt&gt;` items with a single `&lt;dd&gt;`, consider providing them as a single `&lt;dt&gt;` that holds multiple terms, separated by commas, like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183820Z" creationid="gitnacho" creationdate="20221008T183820Z">
        <seg>Como solución para los casos en los que un autor necesita asociar varios elementos `&lt;dt&gt;` con un solo `&lt;dd&gt;`, considera proporcionarlos como un solo `&lt;dt&gt;` que contenga varios términos, separados por comas, como este:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>As an example, let's compile an encoder for WebP to wasm.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053307Z" creationid="gitnacho" creationdate="20221004T053307Z">
        <seg>Como ejemplo, compilemos un codificador para WebP en `wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>As before, fetch, compile, and instantiate your wasm module — add the following into a {{htmlelement("script")}} element at the bottom of your HTML body:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233430Z" creationid="gitnacho" creationdate="20221006T233430Z">
        <seg>Como antes, `fetch`, compila y crea una instancia de tu módulo `wasm`: agrega lo siguiente en un elemento {{htmlelement("script")}} en la parte inferior del `body` de tu HTML:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>As described above, you can create shared WebAssembly [`Memory`](/en-US/docs/WebAssembly/JavaScript_interface/Memory) objects, which can be transferred between Window and Worker contexts using [`postMessage()`](/en-US/docs/Web/API/Window/postMessage), in the same fashion as a [`SharedArrayBuffer`](/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T090232Z" creationid="gitnacho" creationdate="20221007T080618Z">
        <seg>Como se describió anteriormente, puedes crear objetos [`Memory`](/es/docs/WebAssembly/JavaScript_interface/Memory) compartidos de WebAssembly, que se pueden transferir entre los contextos *Window* y *Worker* usando [`postMessage()`](/es/docs/Web/API/Window/postMessage), de la misma forma que [`SharedArrayBuffer`](/es/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>As far as the JavaScript code can tell, this is just a normal module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T070010Z" creationid="gitnacho" creationdate="20221004T070010Z">
        <seg>Por lo que el código JavaScript puede decir, este es solo un módulo normal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>As mentioned before, the function body is a list of instructions that are followed as the function is called.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055253Z" creationid="gitnacho" creationdate="20221007T055253Z">
        <seg>Como se mencionó anteriormente, el cuerpo de la función es una lista de instrucciones que se siguen cuando se llama a la función.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>As seen above, if you want to pass multiple values you can send an array.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120004Z" creationid="gitnacho" creationdate="20221007T120004Z">
        <seg>Como se vio anteriormente, si deseas pasar múltiples valores, puedes enviar un arreglo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>As soon as there are no more pages to be loaded, the new service worker activates (becoming the _active worker_).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T141952Z" creationid="gitnacho" creationdate="20221002T141802Z">
        <seg>Tan pronto como no haya más páginas para cargar, el nuevo *service worker* se activa (convirtiéndose en el _active worker_).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>As soon as there are no more such pages still loaded, the new service worker activates.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041746Z" creationid="gitnacho" creationdate="20220921T041746Z">
        <seg>Tan pronto como no queden más páginas cargadas, se activa el nuevo *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>As we've said elsewhere, WebAssembly doesn't aim to replace JavaScript; the two instead can work together, drawing on each other's strengths.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T181521Z" creationid="gitnacho" creationdate="20221006T181521Z">
        <seg>Como hemos dicho en otra parte, WebAssembly no pretende reemplazar a JavaScript; en cambio, los dos pueden trabajar juntos, aprovechando las fortalezas de cada uno.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>As you might suspect, this is [the `alert` function provided by JavaScript](/en-US/docs/Web/API/Window/alert).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062810Z" creationid="gitnacho" creationdate="20221004T062810Z">
        <seg>Como puedes sospechar, esta es [la función `alert` proporcionada por JavaScript](/es/docs/Web/API/Window/alert).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Aside from the specific system for presenting the live samples, there are style and content considerations to keep in mind when adding or updating samples on MDN.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204945Z" creationid="gitnacho" creationdate="20221005T204945Z">
        <seg>Además del sistema específico para presentar las muestras en vivo, hay consideraciones de estilo y contenido que se deben tener en cuenta al agregar o actualizar muestras en MDN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>AssemblyScript compiles a strict variant of TypeScript to WebAssembly, allowing web developers to keep using TypeScript-compatible tooling they are familiar with — such as Prettier, ESLint, VS Code intellisense, etc.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T091043Z" creationid="gitnacho" creationdate="20221003T091043Z">
        <seg>AssemblyScript compila una variante estricta de TypeScript en WebAssembly, lo que permite a los desarrolladores web seguir usando herramientas compatibles con TypeScript con las que están familiarizados, como Prettier, ESLint, VS Code intellisense, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Assuming this template were saved in the macros directory as `MathLib.ejs`, you could use it in another template like so:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073556Z" creationid="gitnacho" creationdate="20221005T073556Z">
        <seg>Suponiendo que esta plantilla se guardó en el directorio de macros como `MathLib.ejs`, la podrías usar en otra plantilla así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>At a minimum, at least the most-common options or properties should be included in examples.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205027Z" creationid="gitnacho" creationdate="20221005T205027Z">
        <seg>Como mínimo, al menos las opciones o propiedades más comunes se deben incluir en los ejemplos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>At the moment, this technique will work in Firefox and Edge, as they both have support for structured cloning of WebAssembly modules.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T044104Z" creationid="gitnacho" creationdate="20221004T044104Z">
        <seg>Por el momento, esta técnica trabajará en Firefox y Edge, ya que ambos tienen soporte para la clonación estructurada de módulos WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>At the time of writing (June 2020) this is at an early stage, and the only multi-value instructions available are calls to functions that themselves return multiple values.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080232Z" creationid="gitnacho" creationdate="20221007T080232Z">
        <seg>En el momento de escribir este artículo (junio de 2020), esto se encuentra en una etapa inicial y las únicas instrucciones de valores múltiples disponibles son llamadas a funciones que devuelven valores múltiples.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>At this point in your source directory you should have:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105744Z" creationid="gitnacho" creationdate="20221003T105744Z">
        <seg>En este punto en tu directorio fuente deberías tener:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>At this point, it's good to start putting together the content that will eventually appear on your webpage.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062227Z" creationid="gitnacho" creationdate="20221019T062206Z">
        <seg>En este punto, es bueno comenzar a reunir el contenido que eventualmente aparecerá en tu página web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>At this point, your service worker will observe the following lifecycle:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T141010Z" creationid="gitnacho" creationdate="20221002T141010Z">
        <seg>En este punto, tu *service worker* observará el siguiente ciclo de vida:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>B,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201125T191935Z" creationid="nacho" creationdate="20201125T191935Z">
        <seg>B,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Bear in mind therefore that you need to be careful with global variables in the service worker script: each page doesn't get its own unique worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T053147Z" creationid="gitnacho" creationdate="20220921T025214Z">
        <seg>Por lo tanto, ten en cuenta que debes tener cuidado con las variables globales en el script del *service worker*: cada página no tiene su propio *worker* único.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Because IndexedDB is a somewhat old-fashioned API, we wanted to provide a library function to speed up writing caching code, and make it work better along with today's more modern APIs.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T050713Z" creationid="gitnacho" creationdate="20221004T050713Z">
        <seg>Debido a que IndexedDB es una API un tanto anticuada, queríamos proporcionar una biblioteca de funciones para acelerar la escritura de código de almacenamiento en caché y hacer que funcione mejor junto con las APIs más modernas de hoy día.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Because JavaScript has full access to function references, the Table object can be mutated from JavaScript using the [`grow()`](/en-US/docs/WebAssembly/JavaScript_interface/Table/grow), [`get()`](/en-US/docs/WebAssembly/JavaScript_interface/Table/get) and [`set()`](/en-US/docs/WebAssembly/JavaScript_interface/Table/set) methods.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073636Z" creationid="gitnacho" creationdate="20221007T073636Z">
        <seg>Debido a que JavaScript tiene acceso completo a las referencias de funciones, el objeto `Table` se puede mutar desde JavaScript usando los métodos [`grow()`](/es/docs/WebAssembly/JavaScript_interface/Table/grow), [`get()`](/es/docs/WebAssembly/JavaScript_interface/Table/get) y [`set()`](/es/docs/WebAssembly/JavaScript_interface/Table/set).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Because Kuma supports localization differently, these macros aren't actually needed any more.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082317Z" creationid="gitnacho" creationdate="20221005T082317Z">
        <seg>Debido a que Kuma admite la localización de manera diferente, estas macros ya no son necesarias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Because functions in C can't have arrays as return types (unless you allocate memory dynamically), this example resorts to a static global array.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054747Z" creationid="gitnacho" creationdate="20221004T054747Z">
        <seg>Debido a que las funciones en C no pueden tener arreglos como tipos de retorno (a menos que asignes memoria dinámicamente), este ejemplo recurre a un arreglo global estático.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Because tables are mutable, they can be used to implement sophisticated load-time and run-time [dynamic linking schemes](https://github.com/WebAssembly/tool-conventions/blob/main/DynamicLinking.md).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073712Z" creationid="gitnacho" creationdate="20221007T073712Z">
        <seg>Debido a que las tablas son mutables, se pueden usar para implementar sofisticados esquemas de enlace dinámico en tiempo de carga y tiempo de ejecución (https://github.com/WebAssembly/tool-conventions/blob/main/DynamicLinking.md).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Because the
`compileStreaming()` function accepts a promise for a [`Response`](/en-US/docs/Web/API/Response)
object, you can directly pass it a [`fetch()`](/en-US/docs/Web/API/fetch)
call, and it will pass the response into the function when it fulfills.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T190900Z" creationid="gitnacho" creationdate="20221007T185726Z">
        <seg>Debido a que la función `compileStreaming()` acepta una promesa para un objeto [`Response`](/es/docs/Web/API/Response), puedes pasarle directamente una llamada a [`fetch()`](/es/docs/Web/API/fetch), y pasará la respuesta a la función cuando se cumpla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Because the `instantiateStreaming()` function accepts a promise for a [`Response`](/en-US/docs/Web/API/Response)
object, you can directly pass it a [`fetch()`](/en-US/docs/Web/API/fetch)
call, and it will pass the response into the function when it fulfills.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T105020Z" creationid="gitnacho" creationdate="20221006T105020Z">
        <seg>Debido a que la función `instantiateStreaming()` acepta una promesa para un objeto [`Response`](/es/docs/Web/API/Response), le puedes pasar directamente una llamada a [`fetch()`](/es/docs/Web/API/fetch), y pasará la respuesta a la función cuando se cumpla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Because the `instantiateStreaming()` function accepts a promise for a [`Response`](/en-US/docs/Web/API/Response) object, you can directly pass it a [`fetch()`](/en-US/docs/Web/API/fetch) call, and it will pass the response into the function when it fulfills.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T114952Z" creationid="gitnacho" creationdate="20221019T114952Z">
        <seg>Debido a que la función `instantiateStreaming()` acepta una promesa para un objeto [`Response`](/es/docs/Web/API/Response), puede pasarle directamente un [`fetch()`](/es/docs/Web/API/fetch), y pasará la respuesta a la función cuando se cumpla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Because the output file is assembly-based, it can't be viewed in a normal text editor.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T183001Z" creationid="gitnacho" creationdate="20221007T183001Z">
        <seg>Debido a que el archivo de salida está basado en un ensamblador, no se puede ver en un editor de texto normal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Because the text "Note:" or "Warning:" also appears in the rendered output, it has to be sensitive to translations.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181506Z" creationid="gitnacho" creationdate="20221008T181506Z">
        <seg>Debido a que el texto "Nota:" o "Advertencia:" también aparece en la salida renderizada, debe ser sensible a las traducciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Before doing anything, you need some ideas.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T060944Z" creationid="gitnacho" creationdate="20221019T060944Z">
        <seg>Antes de hacer nada, necesitas algunas ideas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Before going on, you should install at least two of these browsers and have them ready for testing.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T164236Z" creationid="gitnacho" creationdate="20221012T164236Z">
        <seg>Antes de continuar, deberías instalar al menos dos de estos navegadores y tenerlos disponibles para pruebas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Before we can write a function body, we have to talk about one more thing: **stack machines**.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054900Z" creationid="gitnacho" creationdate="20221007T054900Z">
        <seg>Antes de poder escribir el cuerpo de una función, tenemos que hablar de una cosa más: **máquinas apiladoras**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Before we move on to the next section, we should talk a bit more about `wasm-bindgen`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062401Z" creationid="gitnacho" creationdate="20221004T062401Z">
        <seg>Antes de pasar a la siguiente sección, deberíamos hablar un poco más sobre `wasm-bindgen`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Begin with our [JavaScript first steps](/en-US/docs/Learn/JavaScript/First_steps) and [Server-side first steps](/en-US/docs/Learn/Server-side/First_steps) modules.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T130329Z" creationid="gitnacho" creationdate="20221012T232115Z">
        <seg>Empieza con los módulos de [primeros pasos con JavaScript](/es/docs/Learn/JavaScript/First_steps) y [primeros pasos en la programación de lado del servidor](/es/docs/Learn/Server-side/First_steps).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Behold, the glory of a new WebP image.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T052909Z" creationid="gitnacho" creationdate="20221004T052909Z">
        <seg>He aquí la gloria de una nueva imagen WebP.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Below is a list of all the APIs and interfaces (object types) that you may be able to use while developing your Web app or site.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T040105Z" creationid="gitnacho" creationdate="20221002T001852Z">
        <seg>A continuación, mostramos una lista de todas las APIs e interfaces (es decir, tipos de objetos) que puedes usar al desarrollar tu sitio o aplicación Web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Below is a list of interfaces which are based on the main `Event` interface, with links to their respective documentation in the MDN API reference.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T202522Z" creationid="gitnacho" creationdate="20221011T202522Z">
        <seg>A continuación se muestra una lista de interfaces que se basan en la interfaz principal de `Event`, con enlaces a su documentación respectiva en la referencia de la API de MDN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Below we enable navigation preloading in the service worker's `activate` event handler, after first using {{domxref("ServiceWorkerRegistration.navigationPreload")}} to determine if the feature is supported (this returns either the `NavigationPreloadManager` for the service worker or `undefined` if the feature is not supported).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220922T210154Z">
        <seg>A continuación, habilitamos la precarga de navegación en el controlador de eventos `activate` del *service worker*, después de usar primero {{DOMxRef("ServiceWorkerRegistration.navigationPreload")}} para determinar si la función es compatible (esto devuelve el `NavigationPreloadManager` para el *service worker* o `undefined` si la característica no es compatible).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Below you'll find links to our Web technology documentation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T092956Z" creationid="gitnacho" creationdate="20221002T092956Z">
        <seg>A continuación encontrarás enlaces a nuestra documentación sobre tecnología web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Besides, if you have a specific question about web development, our [Common questions](/en-US/docs/Learn/Common_questions) section may have something to help you.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T130732Z" creationid="gitnacho" creationdate="20221020T124201Z">
        <seg>Además, si tienes una pregunta específica sobre el desarrollo web, la sección de [preguntas frecuentes](/es/docs/Learn/Common_questions) te puede brindar información de gran utilidad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Beyond the basics, the KumaScript system offers some advanced features.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070453Z" creationid="gitnacho" creationdate="20221005T070453Z">
        <seg>Más allá de lo básico, el sistema KumaScript ofrece algunas funciones avanzadas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Blobs represent data that isn't necessarily in a JavaScript-native format.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T070744Z" creationid="gitnacho" creationdate="20220828T070744Z">
        <seg>Los blobs representan datos que no necesariamente están en un formato nativo de JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Both WebAssembly and JavaScript can create `Memory` objects.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000141Z" creationid="gitnacho" creationdate="20221008T000141Z">
        <seg>Tanto WebAssembly como JavaScript pueden crear objetos `Memory`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Browse through detailed HTTP reference documentation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T071334Z" creationid="gitnacho" creationdate="20221012T064219Z">
        <seg>Explora la detallada documentación de referencia HTTP.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Browser compatibility</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T105310Z" creationid="gitnacho" creationdate="20221008T105310Z">
        <seg>Compatibilidad con navegadores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Browsers that support the `module` value for the {{htmlattrxref("type", "script")}} attribute ignore any script with a `nomodule` attribute.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134118Z" creationid="gitnacho" creationdate="20221003T134118Z">
        <seg>Los navegadores que admiten el valor `module` para el atributo {{htmlattrxref("type", "script")}} ignoran cualquier script con un atributo `nomodule`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Bulk memory operations are a newer addition to the language (for example, in [Firefox 79](/en-US/docs/Mozilla/Firefox/Releases/79)) — seven new built-in operations are provided for bulk memory operations such as copying and initializing, to allow WebAssembly to model native functions such as `memcpy` and `memmove` in a more efficient, performant way.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074640Z" creationid="gitnacho" creationdate="20221007T074640Z">
        <seg>Las operaciones masiva de memoria son una adición más reciente al lenguaje (por ejemplo, en [Firefox 79](/es/docs/Mozilla/Firefox/Releases/79)): se proporcionan siete nuevas operaciones integradas para operaciones masivas de memoria como copiar e inicializar, para permitir que WebAssembly modele funciones nativas como `memcpy` y `memmove` de una manera más eficiente y eficaz.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>But CORS gives web servers the ability to say they want to opt into allowing cross-origin access to their resources.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210549Z" creationid="gitnacho" creationdate="20221017T210549Z">
        <seg>Pero CORS brinda a los servidores web la capacidad de decir que desean optar por permitir el acceso de origen cruzado a sus recursos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>But here is a selection of useful methods exposed to templates:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072119Z" creationid="gitnacho" creationdate="20221005T072119Z">
        <seg>Pero aquí hay una selección de métodos útiles expuestos a plantillas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>But if a request does include a credential (like the `Cookie` header) and the response includes an actual origin rather than the wildcard (like, for example, `Access-Control-Allow-Origin: https://example.com`), then the browser will allow access to the response from the specified origin.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T152837Z" creationid="gitnacho" creationdate="20221012T053358Z">
        <seg>Pero si una solicitud incluye una credencial (como el encabezado `Cookie`) y la respuesta incluye un origen real en lugar del comodín (como, por ejemplo, `Access-Control-Allow-Origin: https://ejemplo.com`), entonces el navegador permitirá el acceso a la respuesta desde el origen especificado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>But if you're putting empty files on the wiki, you're doing it wrong.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082909Z" creationid="gitnacho" creationdate="20221005T082909Z">
        <seg>Pero si estás poniendo archivos vacíos en la wiki, lo estás haciendo mal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>But make sure you don't skip.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224035Z" creationid="gitnacho" creationdate="20221018T224035Z">
        <seg>Pero asegúrate de no saltarla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>But not:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211004T130938Z" creationid="gitnacho" creationdate="20211004T130938Z">
        <seg>Pero no:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>But the overriding problem is that there still isn't a good overall control mechanism for asset caching and custom network requests.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T015600Z" creationid="gitnacho" creationdate="20220921T015600Z">
        <seg>Pero el problema primordial es que todavía no existe un buen mecanismo de control general para el almacenamiento en caché de activos y las solicitudes de red personalizadas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>But the path needs to be written as `/sw.js`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T025708Z" creationid="gitnacho" creationdate="20220921T025708Z">
        <seg>Pero la ruta se debe escribir como `/sw.js`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>But the reason is that we don't want to wait until the response clone has been added to the cache before returning a response.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040420Z" creationid="gitnacho" creationdate="20220921T040420Z">
        <seg>Pero la razón es que no queremos esperar hasta que el clon de respuesta se haya agregado a la caché antes de devolver una respuesta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>But this is a fair shortcut for keeping things simple:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054818Z" creationid="gitnacho" creationdate="20221004T054818Z">
        <seg>Pero este es un atajo justo para mantener las cosas simples:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>But this is very useful for allowing wasm modules to call JavaScript functions, DOM APIs, etc., and generally to pave the way for easier interoperability with the host environment.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074947Z" creationid="gitnacho" creationdate="20221007T074947Z">
        <seg>Pero esto es muy útil para permitir que los módulos `wasm` llamen a funciones de JavaScript, API DOM, etc. y, en general, allanan el camino para una interoperabilidad más sencilla con el entorno del host.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>But this will pave the way for more useful instruction types, and other things besides.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080255Z" creationid="gitnacho" creationdate="20221007T080255Z">
        <seg>Pero esto allanará el camino para tipos de instrucción más útiles y otras cosas además.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>But, as a logged-in user, you have two options to force a page to be regenerated, in case you notice issues with scripting:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T074932Z" creationid="gitnacho" creationdate="20221005T074932Z">
        <seg>Pero, como usuario que has iniciado sesión, tienes dos opciones para forzar la regeneración de una página, en caso de que observes problemas con los scripts:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>But, they've been left intact in case we need to revisit the relationships between localized pages.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082329Z" creationid="gitnacho" creationdate="20221005T082329Z">
        <seg>Sin embargo, se han dejado intactas en caso de que necesitemos revisar las relaciones entre las páginas localizadas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>But, you can transition from JS mode to output mode using `&lt;% %&gt;`—for example:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070218Z" creationid="gitnacho" creationdate="20221005T070138Z">
        <seg>Pero puedes pasar del modo JS al modo de salida usando `&lt;% %&gt;`, por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>By</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T190732Z" creationid="gitnacho" creationdate="20211102T190732Z">
        <seg>Creando</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>By default Windows includes [Notepad](https://en.wikipedia.org/wiki/Microsoft_Notepad) and macOS comes with [TextEdit](https://en.wikipedia.org/wiki/TextEdit).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T154737Z" creationid="gitnacho" creationdate="20221012T154737Z">
        <seg>De manera predeterminada, Windows incluye el [Bloc de notas](https://en.wikipedia.org/wiki/Microsoft_Notepad) y macOS viene con [TextEdit](https://en.wikipedia.org/wiki/TextEdit).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>By default this is the [`WebAssembly.Global()`](/en-US/docs/WebAssembly/JavaScript_interface/Global) constructor.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T104527Z" creationid="gitnacho" creationdate="20221007T104527Z">
        <seg>De manera predeterminada, este es el constructor [`WebAssembly.Global()`](/es/docs/WebAssembly/JavaScript_interface/Global).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>By default, Emscripten-generated code always just calls the `main()` function, and other functions are eliminated as dead code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111712Z" creationid="gitnacho" creationdate="20221003T111712Z">
        <seg>De forma predeterminada, el código generado por Emscripten siempre llama a la función `main()` y otras funciones se eliminan como código inactivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>By default, WebAssembly memories are unshared.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T001001Z" creationid="gitnacho" creationdate="20221008T001001Z">
        <seg>De forma predeterminada, las memorias de WebAssembly no se comparten.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>By default, in cross-origin `XMLHttpRequest` or [Fetch](/en-US/docs/Web/API/Fetch_API) invocations, browsers will **not** send credentials.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230326Z" creationid="gitnacho" creationdate="20221011T230326Z">
        <seg>De forma predeterminada, en invocaciones de origen cruzado `XMLHttpRequest` o [Fetch](/es/docs/Web/API/Fetch_API), los navegadores **no** enviarán credenciales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>By default, it installs the latest stable Rust release, which you can use for general Rust development.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061403Z" creationid="gitnacho" creationdate="20221004T061403Z">
        <seg>De forma predeterminada, instala la última versión estable de Rust, que puedes usar para el desarrollo general de Rust.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>By default, the invocation is made without Cookies.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230508Z" creationid="gitnacho" creationdate="20221011T230508Z">
        <seg>De manera predeterminada, la invocación se realiza sin *Cookies*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>By default, this is `false`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110725Z" creationid="gitnacho" creationdate="20221007T110725Z">
        <seg>De manera predeterminada, esto es `false`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>By doing so, we get to keep</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204835Z" creationid="gitnacho" creationdate="20221003T204835Z">
        <seg>Al hacerlo, podemos mantener</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>By itself, WebAssembly cannot currently directly access the DOM; it can only call JavaScript, passing in integer and floating point primitive data types.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T081256Z" creationid="gitnacho" creationdate="20221003T081256Z">
        <seg>Por sí mismo, WebAssembly no puede acceder directamente al DOM; únicamente puede llamar a JavaScript, y pasarle primitivos enteros o de coma flotante como datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>By specification, this value is time since epoch—but in reality, browsers' definitions vary.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T204619Z" creationid="gitnacho" creationdate="20221011T204619Z">
        <seg>Por especificación, este valor es el tiempo desde la época, pero en realidad, las definiciones de los navegadores varían.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>By static examples, we are talking about static code blocks that show how a feature might be used in code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205454Z" creationid="gitnacho" creationdate="20221005T205454Z">
        <seg>Por ejemplos estáticos, estamos hablando de bloques de código estático que muestran cómo se puede usar una función en el código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>By working through the articles listed below, you will go from nothing to getting your first webpage online.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T042356Z" creationid="gitnacho" creationdate="20220925T042356Z">
        <seg>Al trabajar en orden a través de los artículos que se enumeran a continuación, pasarás de la nada a tener tu primera página web en línea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>C</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201125T191936Z" creationid="nacho" creationdate="20201125T191936Z">
        <seg>C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>CORS allows web developers to control how their site reacts to cross-site requests.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T063534Z" creationid="gitnacho" creationdate="20221012T063534Z">
        <seg>El Control de Acceso HTTP posibilita a los desarrolladores web a controlar cómo su sitio web responde a solicitudes de otros orígenes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>CORS also relies on a mechanism by which browsers make a "preflight" request to the server hosting the cross-origin resource, in order to check that the server will permit the actual request.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T212829Z" creationid="gitnacho" creationdate="20221011T212829Z">
        <seg>CORS también se basa en un mecanismo mediante el cual los navegadores realizan una solicitud de "verificación previa" al servidor que aloja el recurso de origen cruzado, para verificar que el servidor permita la solicitud real.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>CORS failures result in errors but for security reasons, specifics about the error _are not available to JavaScript_.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T214000Z" creationid="gitnacho" creationdate="20221011T214000Z">
        <seg>Las fallas de CORS dan como resultado errores, pero por razones de seguridad, los detalles sobre el error _no están disponibles para JavaScript_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>CORS-preflight requests must never include credentials.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230715Z" creationid="gitnacho" creationdate="20221011T230715Z">
        <seg>Las solicitudes de preverificación de CORS nunca deben incluir credenciales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Cache the result if it returns.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041359Z" creationid="gitnacho" creationdate="20220921T041359Z">
        <seg>Guardar en caché el resultado si regresa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Caching is useful for improving the performance of an app — we can store compiled WebAssembly modules on the client, so they don't have to be downloaded and compiled every time.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T044834Z" creationid="gitnacho" creationdate="20221004T044834Z">
        <seg>El almacenamiento en caché es útil para mejorar el rendimiento de una aplicación: podemos almacenar módulos WebAssembly compilados en el cliente, por lo que no es necesario descargarlos y compilarlos cada vez.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Can also be a `Promise` or a thenable to resolve.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073544Z" creationid="gitnacho" creationdate="20221002T073544Z">
        <seg>También puede ser una `Promise` o una que posiblemente se pueda resolver.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Changes done on it are reflected on the object it relates to.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220913T033823Z" creationid="gitnacho" creationdate="20220913T033823Z">
        <seg>Los cambios realizados en él se reflejan en el objeto con el que se relaciona.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Check cache
2.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041335Z" creationid="gitnacho" creationdate="20220921T041335Z">
        <seg>Comprobar la caché
2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Check for:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T092151Z" creationid="gitnacho" creationdate="20221005T092151Z">
        <seg>Comprueba:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Check the source view to see what's there, and remove any unnecessary styling.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T092946Z" creationid="gitnacho" creationdate="20221005T092946Z">
        <seg>Verifica la vista fuente para ver qué hay allí y elimina cualquier estilo innecesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Choose your operating system below and click the relevant links to download installers for your favorite browsers:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T154953Z" creationid="gitnacho" creationdate="20221012T154953Z">
        <seg>Elige tu sistema operativo y a continuación haz clic en los enlaces correspondientes para descargar instaladores para tus navegadores favoritos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Chrome has `chrome://inspect/#service-workers`, which shows current service worker activity and storage on a device, and `chrome://serviceworker-internals`, which shows more detail and allows you to start/stop/debug the worker process.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T053218Z" creationid="gitnacho" creationdate="20220921T042250Z">
        <seg>Chrome tiene `chrome://inspect/#service-workers`, que muestra la actividad actual de los *service workers* y el almacenamiento en un dispositivo, y `chrome://serviceworker-internals`, que muestra más detalles y te permite iniciar/detener/depurar el proceso del *worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Chrome has support implemented behind the _WebAssembly structured cloning support_ flag, but is yet to turn it on by default because of some concerns ([see this discussion](https://github.com/WebAssembly/design/issues/972), for example).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T044305Z" creationid="gitnacho" creationdate="20221004T044305Z">
        <seg>Chrome ha implementado  la compatibilidad detrás del indicador _WebAssembly atructured cloning support_, pero aún lo debe activar de forma predeterminada debido a algunas preocupaciones ([consulta esta discusión](https://github.com/WebAssembly/design/issues/972), para un ejemplo).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Chromium-based browsers currently always send TLS client certificates in CORS preflight requests ([Chrome bug 775438](https://bugs.chromium.org/p/chromium/issues/detail?id=775438)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053125Z" creationid="gitnacho" creationdate="20221012T053021Z">
        <seg>Actualmente, los navegadores basados ​​en Chromium siempre envían certificados de cliente TLS en solicitudes CORS de preverificación ([Error de Chrome 775438](https://bugs.chromium.org/p/chromium/issues/detail?id=775438)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Click on the _Tools_ button, then on the resulting _Usage rights_ option that appears below.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062739Z" creationid="gitnacho" creationdate="20221019T062739Z">
        <seg>Haz clic en el botón _Herramientas_ y luego en la opción _Derechos de uso_ resultante que aparece a continuación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Client hints are available to web page JavaScript via the [User Agent Client Hints API](/en-US/docs/Web/API/User-Agent_Client_Hints_API).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092456Z" creationid="gitnacho" creationdate="20221012T092456Z">
        <seg>Las sugerencias del cliente están disponibles para JavaScript de la página web a través de la [API de sugerencias del cliente del agente de usuario](/es/docs/Web/API/User-Agent_Client_Hints_API).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Client hints are broadly divided into high and low entropy hints.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092104Z" creationid="gitnacho" creationdate="20221012T092104Z">
        <seg>Las sugerencias del cliente se dividen en términos generales en sugerencias de alta y baja entropía.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Client hints that determine which resources are sent in responses should generally also be included in the affected response's {{HTTPHeader("Vary")}} header.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T091754Z" creationid="gitnacho" creationdate="20221012T091754Z">
        <seg>Las sugerencias del cliente que determinan qué recursos se envían en las respuestas generalmente también se deben incluir en el encabezado {{HTTPHeader("Vary")}} de la respuesta afectada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Cloning the response is necessary because request and response streams can only be read once.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040319Z" creationid="gitnacho" creationdate="20220921T040319Z">
        <seg>La clonación de la respuesta es necesaria porque los flujos de solicitud y respuesta solo se pueden leer una vez.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Code of this sort might be used in JavaScript deployed on `foo.example`:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T221250Z" creationid="gitnacho" creationdate="20221011T221250Z">
        <seg>El código de este tipo se podría usar en JavaScript implementado en `foo.example`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Compiles your Rust code to WebAssembly.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064140Z" creationid="gitnacho" creationdate="20221004T064140Z">
        <seg>Compila tu código Rust a WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Completing the assessments confirms that you are ready to move on to the next module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224225Z" creationid="gitnacho" creationdate="20221018T224225Z">
        <seg>Completar las evaluaciones confirma que estás listo para pasar al siguiente módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Condition:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220803T051404Z" creationid="nachec" creationdate="20220803T051404Z">
        <seg>Condition:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Congratulations, you've just compiled C to WebAssembly and run it in your browser!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T230035Z" creationid="gitnacho" creationdate="20221003T110510Z">
        <seg>¡Felicidades!, ¡acabas de compilar C a WebAssembly y ejecutarlo en tu navegador!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Consider possible real-world use cases you might try to demonstrate.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205413Z" creationid="gitnacho" creationdate="20221005T205413Z">
        <seg>Considera posibles casos de uso del mundo real que podrías tratar de demostrar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Consider the following WebAssembly code, which is assumed to be compiled to a file "example.wasm".</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142737Z" creationid="gitnacho" creationdate="20221019T142737Z">
        <seg>Considera el siguiente código de WebAssembly, que se supone que está compilado en un archivo "`example.wasm`".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Consider the following WebAssembly code, which is assumed to be compiled to a file **example.wasm**.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023223Z" creationid="gitnacho" creationdate="20221008T023223Z">
        <seg>Considera el siguiente código WebAssembly, que se supone está compilado en un archivo **`example.wasm`**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Consider the following WebAssembly code, which is assumed to be compiled to a file named **example.wasm**.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T203816Z" creationid="gitnacho" creationdate="20221019T203816Z">
        <seg>Considera el siguiente código WebAssembly, que se supone está compilado en un archivo llamado **`example.wasm`**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Consider the following code:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210921T040542Z" creationid="gitnacho" creationdate="20210921T040542Z">
        <seg>Considera el siguiente código:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Consider:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210930T182555Z" creationid="gitnacho" creationdate="20210930T182555Z">
        <seg>Considera:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Content on foo.example might contain JavaScript like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230423Z" creationid="gitnacho" creationdate="20221011T230423Z">
        <seg>El contenido de foo.example podría contener JavaScript como este:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Continuing the example from the previous sections, we insert the code to wait for the preloaded resource after the cache check, and before fetching from the network if that doesn't succeed.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041324Z" creationid="gitnacho" creationdate="20220921T041324Z">
        <seg>Continuando con el ejemplo de las secciones anteriores, insertamos el código para esperar el recurso precargado después de la verificación de la caché y antes de recuperarlo de la red si eso no tiene éxito.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Cookie in the request (line 10) may also be suppressed in normal third-party cookie policies.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053542Z" creationid="gitnacho" creationdate="20221012T053542Z">
        <seg>La *cookie* en la solicitud (línea 10) también se puede suprimir en las políticas normales de *cookies* de terceros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Cookie policy around the [SameSite](/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite) attribute would apply.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053629Z" creationid="gitnacho" creationdate="20221012T053629Z">
        <seg>Se aplicaría la política de *cookies* en torno al atributo [SameSite](/es/docs/Web/HTTP/Headers/Set-Cookie/SameSite).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Copies your `README.md` (if you have one) into the package.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064246Z" creationid="gitnacho" creationdate="20221004T064246Z">
        <seg>Copia tu `README.md` (si tienes uno) en el paquete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Copy it into a subdirectory called `html_template` inside your previous new directory.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T110717Z" creationid="gitnacho" creationdate="20221003T110717Z">
        <seg>Cópialo en un subdirectorio llamado `html_template` dentro de tu nuevo directorio anterior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Copy the code down somewhere safe for now.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062407Z" creationid="gitnacho" creationdate="20221019T062407Z">
        <seg>Copia el código en un lugar seguro por ahora.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Copy the lines of code Google gives you into your text editor to save for later.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T063144Z" creationid="gitnacho" creationdate="20221019T063021Z">
        <seg>Haz clic en el icono "más" (Agregar a) junto al tipo de letra que desees.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Create `webpack.config.js` and put the following in it:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065727Z" creationid="gitnacho" creationdate="20221004T065727Z">
        <seg>Crea `webpack.config.js` y coloca lo siguiente en él:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Create a `&lt;script&gt;&lt;/script&gt;` element in your HTML file, and add the following code to it:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T113248Z" creationid="gitnacho" creationdate="20221006T113248Z">
        <seg>Crea un elemento `&lt;script&gt;&lt;/script&gt;` en tu archivo HTML y agrégale el siguiente código:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Create a new copy of our [HTML template](https://github.com/mdn/webassembly-examples/blob/master/template/template.html) in the same directory and call it `table.html`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233344Z" creationid="gitnacho" creationdate="20221006T233344Z">
        <seg>Crea una nueva copia de nuestra [plantilla HTML](https://github.com/mdn/webassembly-examples/blob/master/template/template.html) en el mismo directorio y nómbrala `table.html`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Create a new file, `package.json`, and put the following code in it:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065653Z" creationid="gitnacho" creationdate="20221004T065653Z">
        <seg>Crea un nuevo archivo, `package.json`, y coloca el siguiente código en él:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Create a new {{domxref("XMLHttpRequest()")}} instance, and use its {{domxref("XMLHttpRequest.open","open()")}} method to open a request, setting the request method to `GET`, and declaring the path to the file we want to fetch.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221005T060910Z">
        <seg>Crea una nueva instancia de {{DOMxRef("XMLHttpRequest()")}} y usa su método {{DOMxRef("XMLHttpRequest.open","open()")}} para abrir una solicitud, configurando el método de solicitud a `GET`, y declarando la ruta al archivo que queremos obtener.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Create another new simple HTML page (copy our [simple template](https://github.com/mdn/webassembly-examples/blob/master/template/template.html)) and call it `memory.html`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T210025Z" creationid="gitnacho" creationdate="20221006T183929Z">
        <seg>Crea otra nueva página HTML simple (copia nuestra [plantilla simple](https://github.com/mdn/webassembly-examples/blob/master/template/template.html)) y nómbrala `memory.html`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Created by [Jérémie Patonnier](https://twitter.com/JeremiePat).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T060210Z" creationid="gitnacho" creationdate="20220925T060210Z">
        <seg>Creada por [Jérémie Patonnier](https://twitter.com/JeremiePat).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Created library `hello-wasm` project
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061713Z" creationid="gitnacho" creationdate="20221004T061713Z">
        <seg>Created library `hello-wasm` project
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Creates a `pkg` directory and moves that JavaScript file and your WebAssembly code into it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064218Z" creationid="gitnacho" creationdate="20221004T064218Z">
        <seg>Crea un directorio `pkg` y mueve ese archivo JavaScript y tu código WebAssembly a él.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Currently, the most-used browsers are [Firefox](https://www.mozilla.org/en-US/firefox/new/), [Chrome](https://www.google.com/chrome/), [Opera](https://www.opera.com/), [Safari](https://www.apple.com/safari/), [Internet Explorer](https://support.microsoft.com/en-us/windows/internet-explorer-downloads-d49e1f0d-571c-9a7b-d97e-be248806ca70) and [Microsoft Edge](https://www.microsoft.com/edge).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T164929Z" creationid="gitnacho" creationdate="20221012T164929Z">
        <seg>Actualmente, los navegadores más utilizados son [Firefox](https://www.mozilla.org/es-ES/firefox/new/), [Chrome](https://www.google.com/chrome/), [Opera](https://www.opera.com/), [Safari](https://www.apple.com/safari/), [Internet Explorer](https://support.microsoft.com/es-es/windows/internet-explorer-downloads-d49e1f0d-571c-9a7b-d97e-be248806ca70) y [Microsoft Edge](https://www.microsoft.com/edge).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Custom proprietary headers have historically been used with an `X-` prefix, but this convention was deprecated in June 2012 because of the inconveniences it caused when nonstandard fields became standard in [RFC 6648](https://datatracker.ietf.org/doc/html/rfc6648); others are listed in an [IANA registry](https://www.iana.org/assignments/message-headers/message-headers.xhtml#perm-headers), whose original content was defined in [RFC 4229](https://datatracker.ietf.org/doc/html/rfc4229).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T065619Z" creationid="gitnacho" creationdate="20221012T065619Z">
        <seg>Históricamente, los encabezados propietarios personalizados se han usado con un prefijo `X-`, pero esta convención quedó obsoleta en junio de 2012 debido a los inconvenientes que causó cuando los campos no estándar se convirtieron en estándar en [RFC 6648](https://datatracker.ietf.org/doc/html/rfc6648); otros figuran en un [registro IANA](https://www.iana.org/assignments/message-headers/message-headers.xhtml#perm-headers), cuyo contenido original se definió en [RFC 4229](https://datatracker.ietf.org/doc/html/rfc4229).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>D</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210919T133653Z" creationid="gitnacho" creationdate="20210919T133653Z">
        <seg>D</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Data sections allow a string of bytes to be written at a given offset at instantiation time and are similar to the `.data` sections in native executable formats.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064634Z" creationid="gitnacho" creationdate="20221007T064634Z">
        <seg>Las secciones de datos permiten escribir una cadena de bytes en un desplazamiento dado en el momento de la creación de instancias y son similares a las secciones `.data` en formatos ejecutables nativos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Defaults</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220830T110916Z" creationid="gitnacho" creationdate="20220827T081338Z">
        <seg>Predefinidos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Defaults to `false`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211005T063345Z" creationid="gitnacho" creationdate="20211005T063345Z">
        <seg>El valor predeterminado es `false`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Definition lists written using this syntax must consist of pairs of `&lt;dt&gt;`/`&lt;dd&gt;` elements.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183652Z" creationid="gitnacho" creationdate="20221008T183652Z">
        <seg>Las listas de definición escritas con esta sintaxis deben constar de pares de elementos `&lt;dt&gt;`/`&lt;dd&gt;`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Depending on the size of your image, you might run into an error where wasm can't grow the memory enough to accommodate both the input and the output image:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T055003Z" creationid="gitnacho" creationdate="20221004T055003Z">
        <seg>Dependiendo del tamaño de tu imagen, es posible que te encuentres con un error en el que `wasm` no puede aumentar la memoria lo suficiente como para acomodar tanto la imagen de entrada como la de salida:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Depending on the system (the CPU, the OS, the Browser) it can take a while until the change is propagated to all contexts.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T023448Z" creationid="gitnacho" creationdate="20220923T023448Z">
        <seg>Dependiendo del sistema (la CPU, el sistema operativo, el navegador), puede llevar cierto tiempo hasta que el cambio se propague a todos los contextos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Depending on whether or not the memory was constructed with `shared: true`, the buffer is either an {{jsxref("ArrayBuffer")}} or a {{jsxref("SharedArrayBuffer")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T213142Z" creationid="gitnacho" creationdate="20221019T213142Z">
        <seg>Dependiendo de si la memoria se construyó o no con `shared: true`, el búfer es {{JSxRef("ArrayBuffer")}} o {{JSxRef("SharedArrayBuffer")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Depending on whether the above security measures are taken, the various memory-sharing APIs have different availabilities:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T030631Z" creationid="gitnacho" creationdate="20220923T030631Z">
        <seg>Dependiendo de si se toman las medidas de seguridad anteriores, las diversas APIs de uso de memoria compartida tienen diferentes disponibilidades:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Detaches the previous `buffer`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000420Z" creationid="gitnacho" creationdate="20221008T000420Z">
        <seg>Separa el 'búfer' anterior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Detachment means that the {{jsxref("ArrayBuffer")}}'s `byteLength` becomes zero, and it no longer has bytes accessible to JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T214336Z" creationid="gitnacho" creationdate="20221019T214336Z">
        <seg>Separación significa que el `byteLength` de {{JSxRef("ArrayBuffer")}} se convierte en cero, y ya no tiene bytes accesibles para JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Developers must use a valid MIME type that is not a JavaScript MIME type to denote data blocks.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T132657Z" creationid="gitnacho" creationdate="20221003T132657Z">
        <seg>Los desarrolladores deben usar un tipo MIME válido que no sea un tipo MIME JavaScript para indicar bloques de datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Developers using cross-origin {{domxref("XMLHttpRequest")}} capability do not have to set any cross-origin sharing request headers programmatically.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221012T060511Z">
        <seg>Los desarrolladores que utilizan la capacidad {{DOMxRef("XMLHttpRequest")}} de origen cruzado no tienen que establecer ningún encabezado de solicitud de intercambio de recursos de origen cruzado mediante programación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Device client hints allow a server to vary responses based on device characteristics including available memory and screen properties.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092704Z" creationid="gitnacho" creationdate="20221012T092704Z">
        <seg>Las sugerencias del dispositivo cliente permiten que un servidor varíe las respuestas en función de las características del dispositivo, incluida la memoria disponible y las propiedades de la pantalla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Direct access between two top-level window contexts essentially only work if they are same-origin and carry the same two headers with the same two values.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T030548Z" creationid="gitnacho" creationdate="20220923T030548Z">
        <seg>El acceso directo entre dos contextos *window* de nivel superior esencialmente solo funciona si son del mismo origen y llevan los mismos dos encabezados con los dos mismos valores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Do I have a data table?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T113942Z" creationid="gitnacho" creationdate="20220925T043708Z">
        <seg>¿Tengo una tabla de datos?;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Do I have images inserted on my page?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T113938Z" creationid="gitnacho" creationdate="20220925T043657Z">
        <seg>¿Tengo imágenes insertadas en mi página?,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Do you want to build your own compiler, or your own tools, or make a JavaScript library that generates WebAssembly at runtime?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T101806Z" creationid="gitnacho" creationdate="20221003T090305Z">
        <seg>¿Quieres crear tu propio compilador, tus propias herramientas o crear una biblioteca de JavaScript que genere WebAssembly en tiempo de ejecución?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Don't panic.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223718Z" creationid="gitnacho" creationdate="20221018T223718Z">
        <seg>No entres en pánico.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Download
2.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T141017Z" creationid="gitnacho" creationdate="20221002T141017Z">
        <seg>Descarga
2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Due to C versus C++ name mangling rules, this would otherwise break, but here we are setting it so that it treats it as an external C function if you are using C++.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111822Z" creationid="gitnacho" creationdate="20221003T111822Z">
        <seg>Debido a las reglas de manipulación de nombres de C frente a C++, de lo contrario esto se rompería, pero aquí lo estamos configurando para que lo trate como una función C externa si estás usando C++.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>During this state, {{DOMxRef("ExtendableEvent.waitUntil()")}} can be called inside the `install` event handler to extend the life of the installing worker until the passed promise resolves successfully.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223609Z" creationid="gitnacho" creationdate="20221003T223609Z">
        <seg>Durante este estado, se puede llamar a {{DOMxRef("ExtendableEvent.waitUntil()")}} dentro del controlador de eventos `install` para extender la vida útil del *worker* de instalación hasta que la promesa pasada se resuelva correctamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>During this state, {{DOMxRef("ExtendableEvent.waitUntil()")}} can be called inside the `onactivate` event handler to extend the life of the active worker until the passed promise resolves successfully.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223752Z" creationid="gitnacho" creationdate="20221003T223752Z">
        <seg>Durante este estado, se puede llamar a {{DOMxRef("ExtendableEvent.waitUntil()")}} dentro del controlador de eventos `onactivate` para extender la vida útil del *worker* activo hasta que la promesa pasada se resuelva correctamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>E.g.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211004T113748Z" creationid="gitnacho" creationdate="20211004T113748Z">
        <seg>por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>EMSCRIPTEN_KEEPALIVE
int get_result_pointer() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054826Z" creationid="gitnacho" creationdate="20221004T054826Z">
        <seg>EMSCRIPTEN_KEEPALIVE
int get_result_pointer() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>EMSCRIPTEN_KEEPALIVE
int get_result_size() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054828Z" creationid="gitnacho" creationdate="20221004T054828Z">
        <seg>EMSCRIPTEN_KEEPALIVE
int get_result_size() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>EMSCRIPTEN_KEEPALIVE
int version() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053423Z" creationid="gitnacho" creationdate="20221004T053423Z">
        <seg>EMSCRIPTEN_KEEPALIVE
int version() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>EMSCRIPTEN_KEEPALIVE
uint8_t* create_buffer(int width, int height) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054229Z" creationid="gitnacho" creationdate="20221004T054229Z">
        <seg>EMSCRIPTEN_KEEPALIVE
uint8_t* create_buffer(int width, int height) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>EMSCRIPTEN_KEEPALIVE
void destroy_buffer(uint8_t* p) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054247Z" creationid="gitnacho" creationdate="20221004T054247Z">
        <seg>EMSCRIPTEN_KEEPALIVE
void destroy_buffer(uint8_t* p) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>EMSCRIPTEN_KEEPALIVE
void free_result(uint8_t* result) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054825Z" creationid="gitnacho" creationdate="20221004T054825Z">
        <seg>EMSCRIPTEN_KEEPALIVE
void free_result(uint8_t* result) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>EXTERN EMSCRIPTEN_KEEPALIVE void myFunction(int argc, char ** argv) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111642Z" creationid="gitnacho" creationdate="20221003T111642Z">
        <seg>EXTERN EMSCRIPTEN_KEEPALIVE void myFunction(int argc, char ** argv) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Each KumaScript template is a file under [the macros directory](https://github.com/mdn/yari/tree/main/kumascript/macros) of the `mdn/yari` repository on GitHub.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065748Z" creationid="gitnacho" creationdate="20221005T065748Z">
        <seg>Cada plantilla de KumaScript es un archivo en [el directorio de macros](https://github.com/mdn/yari/tree/main/kumascript/macros) del repositorio `mdn/yari` en GitHub.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Each browser has a hard limit on the amount of cache storage that a given origin can use.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T202655Z" creationid="gitnacho" creationdate="20221003T202655Z">
        <seg>Cada navegador tiene un límite estricto en la cantidad de almacenamiento en caché que puede usar un determinado origen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Each file object has the following fields:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071139Z" creationid="gitnacho" creationdate="20221005T071139Z">
        <seg>Cada objeto `file` tiene los siguientes campos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Each input is used to fill a channel of the output.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T015714Z" creationid="gitnacho" creationdate="20220901T015714Z">
        <seg>Cada entrada se utiliza para llenar un canal de la salida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Each locale may also take an object containing a mapping of keys to strings, for more than one string.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083013Z" creationid="gitnacho" creationdate="20221005T083013Z">
        <seg>Cada configuración regional también puede tomar un objeto que contenga una asignación de claves a cadenas, para más de una cadena.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Each node in the tree goes inside a pair of parentheses — `( ... )`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053618Z" creationid="gitnacho" creationdate="20221007T053618Z">
        <seg>Cada nodo del árbol va dentro de un par de paréntesis — `(... )`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Each of the modules that is being compiled can import the same memory and table objects and thus share the same linear memory and table "address space".</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074348Z" creationid="gitnacho" creationdate="20221007T074348Z">
        <seg>Cada uno de los módulos que se está compilando puede importar los mismos objetos de memoria y tabla y, por lo tanto, compartir el mismo "espacio de direcciones" de memoria lineal y tabla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Each of these top-level GFM `&lt;li&gt;` elements will be transformed into a
`&lt;dt&gt;`/`&lt;dd&gt;` pair, as follows:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182801Z" creationid="gitnacho" creationdate="20221008T182625Z">
        <seg>Cada uno de estos elementos GFM `&lt;li&gt;` de nivel superior se transformará en un
par `&lt;dt&gt;`/`&lt;dd&gt;`, de la siguiente manera:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Each parameter has a type explicitly declared; wasm [Number types](#number_types), [Reference types](#reference_types), [Vector types](#vector_types).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054422Z" creationid="gitnacho" creationdate="20221007T054422Z">
        <seg>Cada parámetro tiene un tipo declarado explícitamente; `wasm` [Tipos `Number`](#tipos_number), [Tipos `Reference`](#tipos_reference), [Tipos `Vector`](#tipos_vector).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Each section includes exercises and assessments to test your understanding before you move forward.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223430Z" creationid="gitnacho" creationdate="20221018T223430Z">
        <seg>Cada sección incluye desafíos y ejercicios para evaluar tu comprensión antes de seguir adelante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Each time a page within your scope is loaded, the service worker is installed against that page and operates on it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T213847Z" creationid="gitnacho" creationdate="20220921T025144Z">
        <seg>Cada vez que se carga una página dentro de su alcance, el *service worker* se instala en esa página y opera en ella.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Each type of code example has its own use cases.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204343Z" creationid="gitnacho" creationdate="20221005T204343Z">
        <seg>Cada tipo de ejemplo de código tiene sus propios casos de uso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Either way, you get the same kind of wrapper for the underlying function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085115Z" creationid="gitnacho" creationdate="20221006T085115Z">
        <seg>De cualquier manera, obtienes el mismo tipo de contenedor para la función subyacente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Emscripten first feeds the C/C++ into clang+LLVM — a mature open-source C/C++ compiler toolchain, shipped as part of XCode on OSX for example.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T081135Z" creationid="gitnacho" creationdate="20221003T081135Z">
        <seg>Emscripten primero compila C/C++ en clang+LLVM — un compilador C/C++ de código abierto, que por ejemplo se distribuye como parte de XCode en OSX.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Emscripten provides `emconfigure` and `emmake` to wrap these commands and inject the appropriate parameters.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053710Z" creationid="gitnacho" creationdate="20221004T053710Z">
        <seg>Emscripten proporciona `emconfigure` y `emmake` para envolver estos comandos e inyectar los parámetros apropiados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Emscripten provides most of these features, although there are some [limitations](https://emscripten.org/docs/porting/guidelines/api_limitations.html).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053250Z" creationid="gitnacho" creationdate="20221004T053250Z">
        <seg>Emscripten proporciona la mayoría de estas funciones, aunque existen algunas [limitaciones](https://emscripten.org/docs/porting/guidelines/api_limitations.html).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Emscripten therefore creates the HTML and JavaScript glue code needed to achieve this.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T110308Z" creationid="gitnacho" creationdate="20221003T081404Z">
        <seg>Emscripten por lo tanto crea el documento HTML y el código "pegamento" en JavaScript necesario para conseguir esto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Emscripten transforms the compiled result of clang+LLVM into a .wasm binary.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T081151Z" creationid="gitnacho" creationdate="20221003T081151Z">
        <seg>Emscripten transforma el resultado de la compilación de clang+LLVM en un binario `.wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Enough setup; let's create a new package in Rust.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061654Z" creationid="gitnacho" creationdate="20221004T061654Z">
        <seg>Suficiente configuración; vamos a crear un nuevo paquete en Rust.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Equivalent to</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210921T122438Z" creationid="gitnacho" creationdate="20210921T122438Z">
        <seg>Equivalente a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Even if a service worker does have to boot, much of the time it may be returning values from a cache, which is very fast.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T205726Z" creationid="gitnacho" creationdate="20220922T205726Z">
        <seg>Incluso si un *service worker* tiene que arrancar, la mayor parte del tiempo puede estar devolviendo valores de una caché, lo cual es muy rápido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Even when a table could be written in GFM it is sometimes better to use HTML, because GFM uses an "ASCII art" approach to tables that is not readable when table rows get long.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185049Z" creationid="gitnacho" creationdate="20221008T185049Z">
        <seg>Incluso cuando una tabla se puede escribir en GFM, a veces es mejor usar HTML, porque GFM usa un enfoque de "arte ASCII" para las tablas que no se pueden leer cuando las filas de la tabla son largas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Event-handlers are usually connected (or "attached") to various [HTML elements](/en-US/docs/Web/HTML/Element) (such as `&lt;button&gt;`, `&lt;div&gt;`, `&lt;span&gt;`, etc.) using [`EventTarget.addEventListener()`](/en-US/docs/Web/API/EventTarget/addEventListener), and this generally replaces using the old HTML [event handler attributes](/en-US/docs/Web/HTML/Global_attributes).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T205821Z" creationid="gitnacho" creationdate="20221011T201835Z">
        <seg>Los controladores de eventos generalmente están conectados (o "adjuntos") a varios [elementos HTML](/es/docs/Web/HTML/Element) (como `&lt;button&gt;`, `&lt;div&gt;`, `&lt;span&gt;`, etc.) usando [`EventTarget.addEventListener()`](/es/docs/Web/API/EventTarget/addEventListener), y esto generalmente reemplaza el uso de los antiguos [atributos del controlador de eventos](/es/docs/Web/HTML/Global_attributes) HTML.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Every call to `grow` will detach any references to the old `buffer`, even for `grow(0)`!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T214320Z" creationid="gitnacho" creationdate="20221019T214304Z">
        <seg>¡Cada llamada a `grow` separará cualquier referencia al antiguo `buffer`, incluso para `grow(0)`!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200408T063834Z" creationid="Pacho" creationdate="20200408T063834Z">
        <seg>Ejemplo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example using the `DOMxRef` macro: `&lt;%- template("DOMxRef", ["Event.bubbles", "bubbles"]) %&gt;`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072237Z" creationid="gitnacho" creationdate="20221005T072237Z">
        <seg>Ejemplo usando la macro `DOMxRef`: `&lt;%- template("DOMxRef", ["Event.bubbles", "bubbles"]) %&gt;`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180617T085150Z" creationid="nacho" creationdate="20180617T085150Z">
        <seg>Ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example: `&lt;%- template("warning", ["foo", "bar", "baz"]) %&gt;`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072209Z" creationid="gitnacho" creationdate="20221005T072209Z">
        <seg>Ejemplo: `&lt;%- template("warning", ["foo", "bar", "baz"]) %&gt;`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example: `\{{SecureContext_Header}}` {{SecureContext_Header}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T115628Z" creationid="gitnacho" creationdate="20221005T115628Z">
        <seg>Ejemplo: `\{{SecureContext_Header}}` {{SecureContext_Header}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example: `\{{SeeCompatTable}}` {{SeeCompatTable}}
- [`deprecated_header`](https://github.com/mdn/yari/blob/main/kumascript/macros/Deprecated_Header.ejs): `\{{Deprecated_Header}}` {{Deprecated_Header}}
- [`secureContext_header`](https://github.com/mdn/yari/blob/main/kumascript/macros/secureContext_header.ejs).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T115550Z" creationid="gitnacho" creationdate="20221005T115550Z">
        <seg>Ejemplo: `\{{SeeCompatTable}}` {{SeeCompatTable}}
- [`deprecated_header`](https://github.com/mdn/yari/blob/main/kumascript/macros/Deprecated_Header.ejs): `\{{Deprecated_Header}}` {{Deprecated_Header}}
- [`secureContext_header`](https://github.com/mdn/yari/blob/main/kumascript/macros/secureContext_header.ejs).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Example: `myvar = "&lt;li&gt;" + template("LXRSearch", ["ident", "i", $1]) + "&lt;/li&gt;";`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072451Z" creationid="gitnacho" creationdate="20221005T072451Z">
        <seg>Ejemplo: `myvar = "&lt;li&gt;" + template("LXRSearch", ["ident", "i", $1]) + "&lt;/li&gt;";`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Examples</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180514T112236Z" creationid="nacho" creationdate="20180514T112236Z">
        <seg>Ejemplos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Examples include:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T070406Z" creationid="gitnacho" creationdate="20220828T070406Z">
        <seg>Ejemplos incluyen:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Examples of this usage can be [found above.](#preflighted_requests)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060813Z" creationid="gitnacho" creationdate="20221012T060813Z">
        <seg>Se pueden encontrar ejemplos de este uso [más arriba.](#solicitudes_preverificadas)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Examples of this usage can be [found above](#preflighted_requests).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060943Z" creationid="gitnacho" creationdate="20221012T060943Z">
        <seg>Se pueden [encontrar arriba](#solicitudes_preverificadas) ejemplos de este uso.
</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Exceptions from WebAssembly code do not include a stack trace by default.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T203433Z" creationid="gitnacho" creationdate="20221019T203433Z">
        <seg>Las excepciones del código de WebAssembly no incluyen un seguimiento de pila de forma predeterminada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Explore the island and defeat the monsters.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T071319Z" creationid="gitnacho" creationdate="20221012T071319Z">
        <seg>Explora la isla y derrota a los monstruos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Exported WebAssembly functions are basically just JavaScript wrappers that represent WebAssembly functions in JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T103748Z" creationid="gitnacho" creationdate="20221006T084916Z">
        <seg>Las Funciones WebAssembly exportadas básicamente son envoltorios de JavaScript que representan funciones de WebAssembly en JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Exported WebAssembly functions are how WebAssembly functions are represented in JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T103748Z" creationid="gitnacho" creationdate="20221006T084751Z">
        <seg>Las Funciones WebAssembly exportadas son cómo se representan las funciones de WebAssembly en JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Fill in your own repository and use the same info that `git` uses for the `authors` field.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063703Z" creationid="gitnacho" creationdate="20221004T063703Z">
        <seg>Completa tu propio repositorio y usa la misma información que usa `git` para el campo `authors`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Finally, we load and instantiate a wasm module (table2.wasm) using the
[`WebAssembly.instantiateStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming), log the table length, and invoke the
two referenced functions that are now stored in the table (the table2.wasm module (see
[text representation](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.wat))
adds two function references to the table, both of which print out
a simple value):</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T234646Z" creationid="gitnacho" creationdate="20221019T234646Z">
        <seg>Finalmente, cargamos e instanciamos un módulo `wasm` (`table2.wasm`) usando el [`WebAssembly.instantiateStreaming()`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming), registra la longitud de la tabla e invoca a las dos funciones referenciadas que ahora están almacenadas en la tabla (el módulo `table2.wasm` (ve la [representación de texto](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.wat)) agrega dos referencias de función a la tabla, las cuales imprimen un valor simple):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Finally, we load and instantiate a wasm module (table2.wasm) using the [`WebAssembly.instantiateStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming) method.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095621Z" creationid="gitnacho" creationdate="20221006T095621Z">
        <seg>Finalmente, cargamos e instanciamos un módulo `wasm` (`table2.wasm`) usando el método [`WebAssembly.instantiateStreaming()`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Finally, we need to modify the HTML file; open the `index.html` file and replace the current contents with the following:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T070027Z" creationid="gitnacho" creationdate="20221004T070027Z">
        <seg>Finalmente, necesitamos modificar el archivo HTML; abre el archivo `index.html` y reemplaza el contenido actual con lo siguiente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Finally, {{HTTPHeader("Access-Control-Max-Age")}} gives the value in seconds for how long the response to the preflight request can be cached without sending another preflight request.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T224334Z" creationid="gitnacho" creationdate="20221011T224334Z">
        <seg>Finalmente, {{HTTPHeader("Access-Control-Max-Age")}} proporciona el valor en segundos durante cuánto tiempo se puede almacenar en caché la respuesta a la solicitud de preverificación sin enviar otra solicitud de preverificación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Find out more about how to use them.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T183248Z" creationid="gitnacho" creationdate="20221007T183248Z">
        <seg>Obtén más información sobre cómo usarlos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Firefox has also started to implement some useful tools related to service workers:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042333Z" creationid="gitnacho" creationdate="20220921T042333Z">
        <seg>Firefox también ha comenzado a implementar algunas herramientas útiles relacionadas con los *service workers*:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>First of all, open up your hello3.html file in a text editor.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T112218Z" creationid="gitnacho" creationdate="20221003T112218Z">
        <seg>En primer lugar, abre tu archivo `hello3.html` en un editor de texto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>First of all, save the following C code in a file called `hello2.c`, in a new directory:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T110637Z" creationid="gitnacho" creationdate="20221003T110637Z">
        <seg>En primer lugar, guarda el siguiente código C en un archivo llamado `hello2.c`, en un nuevo directorio:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>First the feature must be enabled during service worker activation, using {{domxref("NavigationPreloadManager.enable()", "registration.navigationPreload.enable()")}}:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T041152Z">
        <seg>Primero, la función debe estar habilitada durante la activación del *service worker*, usando {{DOMxRef("NavigationPreloadManager.enable()", "registration.navigationPreload.enable()")}}:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>First we need a wasm module!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T112614Z" creationid="gitnacho" creationdate="20221006T112614Z">
        <seg>¡Primero necesitamos un módulo `wasm`!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>First we need an example to compile.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105454Z" creationid="gitnacho" creationdate="20221003T105454Z">
        <seg>Primero necesitamos un ejemplo para compilar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>First, let's see what an S-expression looks like.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053606Z" creationid="gitnacho" creationdate="20221007T053606Z">
        <seg>Primero, veamos cómo se ve una expresión-S.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>First, let's set up the required development environment.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105154Z" creationid="gitnacho" creationdate="20221003T105154Z">
        <seg>Primero, configuremos el entorno de desarrollo requerido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>First, we have `Cargo.toml`; this is the file that we use to configure our build.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061739Z" creationid="gitnacho" creationdate="20221004T061739Z">
        <seg>Primero, tenemos `Cargo.toml`; este es el archivo que usamos para configurar nuestra compilación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Fixed at construction time and thus **read only**.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050721Z" creationid="gitnacho" creationdate="20221005T050721Z">
        <seg>Se corrigió en el momento de la construcción y, por lo tanto, **read only**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Fixed at construction time and thus **read only.**</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051001Z" creationid="gitnacho" creationdate="20221005T051001Z">
        <seg>Se corrigió en el momento de la construcción y, por lo tanto, **read only**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Fixed at construction time and thus **read only.**
- {{jsxref("TypedArray.prototype.byteOffset", "Uint8ClampedArray.prototype.byteOffset")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050851Z" creationid="gitnacho" creationdate="20221005T050851Z">
        <seg>Se corrigió en el momento de la construcción y, por lo tanto, **read only**.
- {{jsxref("TypedArray.prototype.byteOffset", "Uint8ClampedArray.prototype.byteOffset")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Fixed at construction time and thus **read only.**
- {{jsxref("TypedArray.prototype.length", "Uint8ClampedArray.prototype.length")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050935Z" creationid="gitnacho" creationdate="20221005T050935Z">
        <seg>Se corrigió en el momento de la construcción y, por lo tanto, **read only**.
- {{jsxref("TypedArray.prototype.length", "Uint8ClampedArray.prototype.length")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T195511Z" creationid="gitnacho" creationdate="20211102T195511Z">
        <seg>Por</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For [`PreviousNext`](https://github.com/mdn/yari/blob/main/kumascript/macros/PreviousNext.ejs), the two parameters needed are the wiki locations of the appropriate articles.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113450Z" creationid="gitnacho" creationdate="20221005T113450Z">
        <seg>Para [`PreviousNext`](https://github.com/mdn/yari/blob/main/kumascript/macros/PreviousNext.ejs), los dos parámetros necesarios son las ubicaciones wiki de los artículos correspondientes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For [module scripts](/en-US/docs/Web/JavaScript/Guide/Modules), if the `async` attribute is present then the scripts and all their dependencies will be executed in the defer queue, therefore they will get fetched in parallel to parsing and evaluated as soon as they are available.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T122837Z" creationid="gitnacho" creationdate="20221003T122837Z">
        <seg>Para [scripts del módulo](/es/docs/Web/JavaScript/Guide/Modules), si el atributo `async` está presente, los scripts y todas sus dependencias se ejecutarán en la cola diferida, por lo tanto, se obtendrán en paralelo al análisis y serán evaluados tan pronto como estén disponibles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For a complete tutorial to show how to build up your first basic example, read [Using Service Workers](/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T145213Z" creationid="gitnacho" creationdate="20221002T145213Z">
        <seg>Para ver un tutorial completo que muestra cómo crear tu primer ejemplo básico, lee [Usar *Service Workers*](/es/docs/Web/API/Service_Worker_API/Using_Service_Workers).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For a full example, see our [simple worker example](https://github.com/mdn/dom-examples/tree/main/web-workers/simple-web-worker) ([run example](https://mdn.github.io/dom-examples/web-workers/simple-web-worker/)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115923Z" creationid="gitnacho" creationdate="20221007T115923Z">
        <seg>Para ver un ejemplo completo, consulta nuestro [ejemplo de *worker* simple](https://github.com/mdn/dom-examples/tree/main/web-workers/simple-web-worker) ([ejemplo en ejecución](https://mdn.github.io/dom-examples/web-workers/simple-web-worker/)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For a full list of the available opcodes, consult the [webassembly.org Semantics reference](https://webassembly.github.io/spec/core/exec/index.html).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055347Z" creationid="gitnacho" creationdate="20221007T055347Z">
        <seg>Para obtener una lista completa de los códigos de operación disponibles, consulta la [referencia de semántica de webassembly.org](https://webassembly.github.io/spec/core/exec/index.html).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For a list of deprecated macros and documentation on how to replace these macros, please see our [deprecated macros documentation](/en-US/docs/MDN/Writing_guidelines/Page_structures/Macros/Deprecated_macros).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T194105Z" creationid="gitnacho" creationdate="20221005T095351Z">
        <seg>Para obtener una lista de macros obsoletas y documentación sobre cómo reemplazar estas macros, consulta nuestra [documentación de macros obsoletas](/es/docs/MDN/Writing_guidelines/Page_structures/Macros/Deprecated_macros).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For a more sophisticated full working example of `ArrayBuffer` transfer, see this Firefox demo add-on: [GitHub :: ChromeWorker - demo-transfer-arraybuffer](https://github.com/Noitidart/ChromeWorker/tree/aca57d9cadc4e68af16201bdecbfb6f9a6f9ca6b)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T121054Z" creationid="gitnacho" creationdate="20221007T121054Z">
        <seg>Para ver un ejemplo funcional completo más sofisticado de la transferencia `ArrayBuffer`, consulta este complemento de demostración de Firefox: [GitHub :: ChromeWorker - demo-transfer-arraybuffer](https://github.com/Noitidart/ChromeWorker/tree/aca57d9cadc4e68af16201bdecbfb6f9a6f9ca6b)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For a simple guide on how to do this, see our [Converting WebAssembly text format to wasm](/en-US/docs/WebAssembly/Text_format_to_wasm) article.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T090459Z">
        <seg>Para obtener una guía sencilla sobre cómo hacer esto, consulta nuestro artículo [Conversión de formato de texto WebAssembly a wasm](/es/docs/WebAssembly/Text_format_to_wasm).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For a start, Emscripten implements popular C/C++ libraries like [SDL](https://en.wikipedia.org/wiki/Simple_DirectMedia_Layer), [OpenGL](https://en.wikipedia.org/wiki/OpenGL), [OpenAL](https://en.wikipedia.org/wiki/OpenAL), and parts of [POSIX](https://en.wikipedia.org/wiki/POSIX).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T081521Z" creationid="gitnacho" creationdate="20221003T081521Z">
        <seg>Para empezar, Emscripten implementa bibliotecas C/C++ populares como [SDL](https://en.wikipedia.org/wiki/Simple_DirectMedia_Layer), [OpenGL](https://en.wikipedia.org/wiki/OpenGL), [OpenAL](https://en.wikipedia.org/wiki/OpenAL) y partes de [POSIX](https://en.wikipedia.org/wiki/POSIX).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For a useful write-up of progress so far and how this works, see [Multi-Value All The Wasm!](https://hacks.mozilla.org/2019/11/multi-value-all-the-wasm/) by Nick Fitzgerald.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080318Z" creationid="gitnacho" creationdate="20221007T080318Z">
        <seg>Para obtener una descripción útil del progreso hasta el momento y cómo funciona, consulta [¡Multi-Value All The Wasm!](https://hacks.mozilla.org/2019/11/multi-value-all-the-wasm/ ) de Nick Fitzgerald.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For additional how-to information on using these macros, see [Using macros](/en-US/docs/MDN/Writing_guidelines/Page_structures/Macros).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T110252Z" creationid="gitnacho" creationdate="20221005T102240Z">
        <seg>Para obtener información sobre cómo usar estas macros, consulta [Usar macros](/es/docs/MDN/Writing_guidelines/Page_structures/Macros).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For an example of a preflight request, see the above examples.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054109Z" creationid="gitnacho" creationdate="20221012T054109Z">
        <seg>Para ver un ejemplo de una solicitud de preverificación, consulta los ejemplos anteriores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201228T150152Z" creationid="nacho" creationdate="20201228T150152Z">
        <seg>Por ejemplo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example a glossary or reference link created using a macro does not need to be translated: in other locales it will automatically link to the correct version of the file.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T104645Z" creationid="gitnacho" creationdate="20221005T104645Z">
        <seg>Por ejemplo, no es necesario traducir un glosario o un vínculo de referencia creado con una macro: en otras configuraciones regionales, se vinculará automáticamente a la versión correcta del archivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180528T195636Z" creationid="nacho" creationdate="20180528T195636Z">
        <seg>Por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, [`Promise.resolve`](/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve) will not only resolve promises, but also trace thenables.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T090819Z" creationid="gitnacho" creationdate="20221002T090819Z">
        <seg>Por ejemplo, [`Promise.resolve`](/es/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve) no solo resolverá las promesas, sino que también rastreará las funciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, `XMLHttpRequest` and the [Fetch API](/en-US/docs/Web/API/Fetch_API) follow the [same-origin policy](/en-US/docs/Web/Security/Same-origin_policy).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T212941Z" creationid="gitnacho" creationdate="20221011T212941Z">
        <seg>Por ejemplo, `XMLHttpRequest` y la [API `Fetch`](/es/docs/Web/API/Fetch_API) siguen la [política del mismo origen](/es/docs/Web/Security/Same-origin_policy).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, `\{{WebkitBug(31277)}}` inserts {{WebkitBug(31277)}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113233Z" creationid="gitnacho" creationdate="20221005T113233Z">
        <seg>Por ejemplo, `\{{WebkitBug(31277)}}` inserta {{WebkitBug(31277)}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, `local.get` is defined to push the value of the local it read onto the stack, and `i32.add` pops two `i32` values (it implicitly grabs the previous two values pushed onto the stack), computes their sum (modulo 2^32) and pushes the resulting i32 value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055030Z" creationid="gitnacho" creationdate="20221007T055030Z">
        <seg>Por ejemplo, `local.get` se define para insertar el valor del local que leyó en la pila, e `i32.add` saca dos valores `i32` (implícitamente toma los dos valores anteriores colocados en la pila), calcula su suma (módulo 2^32) y empuja el valor i32 resultante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, a request message can use headers to indicate it's preferred media formats, while a response can use header to indicate the media format of the returned body.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T075838Z" creationid="gitnacho" creationdate="20221017T211446Z">
        <seg>Por ejemplo, un mensaje de solicitud puede usar cabeceras para indicar sus formatos de medios preferidos, mientras que una respuesta puede usar cabeceras para indicar el formato de medios del cuerpo devuelto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, consider this table:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T193239Z" creationid="gitnacho" creationdate="20221008T185054Z">
        <seg>Por ejemplo, considera esta tabla:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, do you want the text to be black or red?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T054450Z" creationid="gitnacho" creationdate="20220925T054450Z">
        <seg>Por ejemplo, ¿deseas que el texto sea negro o rojo?,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, even for a document delivered over TLS within an {{HTMLElement("iframe")}}, its context is **not** considered secure if it has an ancestor that was not also delivered over TLS.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T203937Z" creationid="gitnacho" creationdate="20221018T203937Z">
        <seg>Por ejemplo, incluso para un documento entregado a través de TLS dentro de un {{HTMLElement("iframe")}}, su contexto **no** se considera seguro si tiene un ancestro que no se entregó también a través de TLS.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, following `Accept-CH` in a response below, the client could append {{HTTPHeader("Width")}}, {{HTTPHeader("Downlink")}} and {{HTTPHeader("Sec-CH-UA")}} headers to all subsequent requests.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T091531Z" creationid="gitnacho" creationdate="20221012T091531Z">
        <seg>Por ejemplo, después de `Accept-CH` en una respuesta a continuación, el cliente podría agregar encabezados {{HTTPHeader("Width")}}, {{HTTPHeader("Downlink")}} y {{HTTPHeader("Sec-CH-UA")}} para todas las solicitudes posteriores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, here's the properties table for the {{domxref("PannerNode")}} interface:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221008T190858Z">
        <seg>Por ejemplo, aquí está la tabla de propiedades para la interfaz {{DOMxRef("PannerNode")}}:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, if we want to use "Warnung" for "Warning" in German, then in German pages we would write:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182103Z" creationid="gitnacho" creationdate="20221008T182103Z">
        <seg>Por ejemplo, si queremos usar "Warnung" para "Warning" en alemán, entonces en las páginas en alemán escribiríamos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, if you already know HTML, you can skip ahead to the CSS section.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223544Z" creationid="gitnacho" creationdate="20221018T223544Z">
        <seg>Por ejemplo, si ya conoces HTML, puedes pasar a la sección CSS.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, if you were in the parent directory:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T173727Z" creationid="Nachec" creationdate="20221020T173727Z">
        <seg>Por ejemplo, si estuvieras en el directorio padre:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, is my content a set of paragraphs or a list of bullet points?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T043644Z" creationid="gitnacho" creationdate="20220925T043644Z">
        <seg>Por ejemplo, ¿mi contenido es un conjunto de párrafos o una lista de viñetas?,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, suppose web content at `https://foo.example` wishes to invoke content on domain `https://bar.other`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T221234Z" creationid="gitnacho" creationdate="20221011T221234Z">
        <seg>Por ejemplo, supón que el contenido web en `https://foo.example` desea invocar contenido en el dominio `https://bar.other`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, take the following code:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211006T034917Z" creationid="gitnacho" creationdate="20211006T034917Z">
        <seg>Por ejemplo, toma el siguiente código:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, the following module contains two functions — one just returns the value 42, the other returns the result of calling the first plus one:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061137Z" creationid="gitnacho" creationdate="20221007T061137Z">
        <seg>Por ejemplo, el siguiente módulo contiene dos funciones: una solo devuelve el valor 42, la otra devuelve el resultado de llamar a la primera más uno:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, the following:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054003Z" creationid="gitnacho" creationdate="20221012T054003Z">
        <seg>Por ejemplo, lo siguiente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, the macro call \\{{EmbedInteractiveExample("pages/js/array-push.html")}} displays the following code example:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T210253Z" creationid="gitnacho" creationdate="20221005T210253Z">
        <seg>Por ejemplo, la llamada a la macro \\{{EmbedInteractiveExample("pages/js/array-push.html")}} muestra el siguiente código de ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, this interface can be used to determine how much time it takes to load or unload a document.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220913T210049Z" creationid="gitnacho" creationdate="20220913T210049Z">
        <seg>Por ejemplo, esta interfaz se puede utilizar para determinar cuánto tiempo lleva cargar o descargar un documento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, this is a `&lt;dl&gt;`:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183139Z" creationid="gitnacho" creationdate="20221008T183139Z">
        <seg>Por ejemplo, este es un `&lt;dl&gt;`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, to allow code from the origin `https://mozilla.org` to access the resource, you can specify:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053817Z" creationid="gitnacho" creationdate="20221012T053817Z">
        <seg>Por ejemplo, para permitir que el código del origen `https://mozilla.org` acceda al recurso, puedes especificar:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, to stop requesting any hints it would send `Accept-CH` with an empty list.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092047Z" creationid="gitnacho" creationdate="20221012T092047Z">
        <seg>Por ejemplo, para dejar de solicitar sugerencias, enviaría `Accept-CH` con una lista vacía.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, to write 42 directly into the first word of linear memory, you can do this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T210318Z" creationid="gitnacho" creationdate="20221006T210318Z">
        <seg>Por ejemplo, para escribir 42 directamente en la primera palabra de la memoria lineal, puedes hacer esto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, v0.6.1 is encoded as 0x000601 = 1537.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053858Z" creationid="gitnacho" creationdate="20221004T053858Z">
        <seg>Por ejemplo, v0.6.1 está codificado como 0x000601 = 1537.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, you can't have a list in a table cell.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184928Z" creationid="gitnacho" creationdate="20221008T184928Z">
        <seg>Por ejemplo, no puedes tener una lista en una celda de tabla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example, you might set the value to the ID of your most recently cached resource, so that the server won't return any resources unless they are actually needed.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210852Z" creationid="gitnacho" creationdate="20220922T210852Z">
        <seg>Por ejemplo, puedes establecer el valor en el ID de tu recurso almacenado en caché más reciente, de modo que el servidor no devuelva ningún recurso a menos que realmente se necesite.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200429T034245Z">
        <seg>Por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example: 0000008: 01 ; section code ](assembly-output.png)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T183144Z" creationid="gitnacho" creationdate="20221007T183144Z">
        <seg>Por ejemplo: 0000008: 01; section code ](assembly-output.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For example;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083023Z" creationid="gitnacho" creationdate="20221005T083016Z">
        <seg>Por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For information on using `module`, see our [JavaScript modules](/en-US/docs/Web/JavaScript/Guide/Modules) guide.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T132556Z" creationid="gitnacho" creationdate="20221003T132556Z">
        <seg>Para obtener información sobre el uso de `module`, consulta nuestra guía [Módulos JavaScript](/es/docs/Web/JavaScript/Guide/Modules).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For instance, an HTML page from Domain A (`http://domaina.example/`) makes a request for an image on Domain B (`http://domainb.foo/image.jpg`) via the `img` element.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T063446Z" creationid="gitnacho" creationdate="20221012T063446Z">
        <seg>Por ejemplo, una página HTML de un dominio A (`http://dominioa.ejemplo/`) hace una solicitud por una imagen en un dominio B (`http://dominiob.foo/imagen.jpg`) a través del elemento `img`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For instance, the "live sample" system will automatically concatenate all your code together into one piece before running the example, so you can actually break your JavaScript, HTML, and/or CSS into smaller pieces with descriptive text after each piece if you choose to do so.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205207Z" creationid="gitnacho" creationdate="20221005T205207Z">
        <seg>Por ejemplo, el sistema de "muestra en vivo" concatenará automáticamente todo tu código en una sola pieza antes de ejecutar el ejemplo, por lo que puedes dividir tu JavaScript, HTML y/o CSS en partes más pequeñas con texto descriptivo después de cada parte si así lo deseas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For instance:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200818T192416Z" creationid="nacho" creationdate="20200818T192416Z">
        <seg>Por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For more details about using Google Fonts, see [this page](https://developers.google.com/fonts/docs/getting_started)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T064155Z" creationid="gitnacho" creationdate="20221019T063618Z">
        <seg>Haz clic en el botón _"\*Familia seleccionada"_ en el panel en la parte inferior de la página ("\*" depende de cuántos tipos de letra hayas seleccionado). Ve [esta página](https://developers.google.com/fonts/docs/getting_started). En el cuadro emergente, puedes ver y copiar las líneas de código que Google te brinda en tu editor de texto para guardarlas y usarlas más adelante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For more information see [HTTP Caching &gt; Varying responses](/en-US/docs/Web/HTTP/Caching#varying_responses).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T091926Z" creationid="gitnacho" creationdate="20221012T091926Z">
        <seg>Para obtener más información, consulta [Almacenamiento en caché HTTP &gt; Variación de respuestas](/es/docs/Web/HTTP/Caching#respuestas_vary_).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For more information see [`NavigationPreloadManager` &gt; Custom responses](/en-US/docs/Web/API/NavigationPreloadManager#custom_responses).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T214334Z" creationid="gitnacho" creationdate="20220921T041652Z">
        <seg>Para obtener más información, consulta [NavigationPreloadManager &gt; Respuestas personalizadas](/es/docs/Web/API/NavigationPreloadManager#respuestas_personalizadas).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For more information, see [Event bubbling and capture](/en-US/docs/Learn/JavaScript/Building_blocks/Events#event_bubbling_and_capture).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T202412Z" creationid="gitnacho" creationdate="20221011T202412Z">
        <seg>Para obtener más información, consulta [Creación y captura de eventos](/es/docs/Learn/JavaScript/Building_blocks/Events#burbujeo_y_captura_de_eventos).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For more, consult the [Cargo](https://doc.rust-lang.org/cargo/guide/) and [Rust Linkage](https://doc.rust-lang.org/reference/linkage.html) documentation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063904Z" creationid="gitnacho" creationdate="20221004T063904Z">
        <seg>Para obtener más información, consulta la  documentación de [Cargo](https://doc.rust-lang.org/cargo/guide/) y [Rust Linkage](https://doc.rust-lang.org/reference/linkage.html).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For now, the Rust team is focusing on the latter case, and so that's what we cover here.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061108Z" creationid="gitnacho" creationdate="20221004T061108Z">
        <seg>Por ahora, el equipo de Rust se está enfocando en el último caso, y eso es lo que cubrimos aquí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For now, we'll install a couple of desktop web browsers to test our code in.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T154845Z" creationid="gitnacho" creationdate="20221012T154845Z">
        <seg>Por ahora, instalaremos un par de navegadores web de escritorio para probar nuestro código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For other technologies, you'll just have to wait.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205955Z" creationid="gitnacho" creationdate="20221005T205955Z">
        <seg>Para otras tecnologías, solo tendrás que esperar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For security reasons, browsers restrict cross-origin HTTP requests initiated from scripts.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T212916Z" creationid="gitnacho" creationdate="20221011T212916Z">
        <seg>Por razones de seguridad, los navegadores restringen las solicitudes HTTP de origen cruzado iniciadas desde scripts.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For serious web development, it's better to invest in a desktop or laptop computer running Windows, macOS or Linux.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T164524Z" creationid="gitnacho" creationdate="20221012T164524Z">
        <seg>Para el desarrollo web serio, es mejor invertir en un equipo de escritorio o portátil con Windows, Mac o Linux.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For simplicity, let's create it in JavaScript then import it into WebAssembly.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064449Z" creationid="gitnacho" creationdate="20221007T064449Z">
        <seg>Para simplificar, la vamos a crear en JavaScript y luego importarla a WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For that, you need to expose two additional functions — one that allocates memory for the image inside wasm and one that frees it up again:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054224Z" creationid="gitnacho" creationdate="20221004T054224Z">
        <seg>Para eso, debes exponer dos funciones adicionales: una que asigna memoria para la imagen dentro de `wasm` y otra que la libera nuevamente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For the above, we need an object (let's call it `importObject`) such that `importObject.console.log` is a JavaScript function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061549Z" creationid="gitnacho" creationdate="20221007T061549Z">
        <seg>Para lo anterior, necesitamos un objeto (llamémoslo `importObject`) tal que `importObject.console.log` sea una función de JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For the former case, check out projects like [`yew`](https://github.com/yewstack/yew).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061123Z" creationid="gitnacho" creationdate="20221004T061123Z">
        <seg>Para el primer caso, consulta proyectos como [`yew`](https://github.com/yewstack/yew).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For the most part, this works great to serve up content that doesn't change very often.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T074901Z" creationid="gitnacho" creationdate="20221005T074901Z">
        <seg>En su mayor parte, esto funciona muy bien para ofrecer contenido que no cambia muy a menudo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For the single-way templates, the only parameter needed is the wiki location of the previous or next article in the sequence.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113403Z" creationid="gitnacho" creationdate="20221005T113403Z">
        <seg>Para las plantillas unidireccionales, el único parámetro necesario es la ubicación wiki del artículo anterior o siguiente en la secuencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For top-level documents, two headers need to be set to cross-origin isolate your site:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T023658Z" creationid="gitnacho" creationdate="20220923T023658Z">
        <seg>Para los documentos de nivel superior, se deben configurar dos encabezados para aislar tu sitio de origen cruzado:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For web developers who want to try WebAssembly without needing to learn the details of C or Rust, staying in the comfort of a familiar language like TypeScript, AssemblyScript will be the best option.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T091023Z" creationid="gitnacho" creationdate="20221003T091023Z">
        <seg>Para los desarrolladores web que quieran probar WebAssembly sin necesidad de aprender los detalles de C o Rust, permaneciendo en la comodidad de un lenguaje familiar como TypeScript, AssemblyScript será la mejor opción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For web development, you can probably do better than Notepad or TextEdit.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T154814Z" creationid="gitnacho" creationdate="20221012T154814Z">
        <seg>Para el desarrollo web, probablemente puedas hacerlo mejor que el Bloc de notas o TextEdit.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>For your first simple webpage, there's not much to sketch out, but you should get in the habit of doing this now.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061317Z" creationid="gitnacho" creationdate="20221019T061317Z">
        <seg>Para tu primera página web simple, no hay mucho que esbozar, pero deberías adquirir el hábito de hacerlo ahora.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Forms require HTML, CSS, and JavaScript knowledge.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224944Z" creationid="gitnacho" creationdate="20221018T224944Z">
        <seg>Los formularios requieren conocimientos de HTML, CSS y JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Fortunately, service workers' promise-based structure makes it trivial to provide further options towards success.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040040Z" creationid="gitnacho" creationdate="20220921T040040Z">
        <seg>Afortunadamente, la estructura basada en promesas del *service worker* hace que sea trivial brindar más opciones hacia el éxito.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>From JavaScript's point of view, it's as though memory is all inside one big (resizable) {{jsxref("ArrayBuffer")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T063958Z" creationid="gitnacho" creationdate="20221007T063958Z">
        <seg>Desde el punto de vista de JavaScript, es como si la memoria estuviera dentro de un gran {{jsxref("ArrayBuffer")}} (redimensionable).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>From a JavaScript point of view, it's as if every wasm function _is_ a JavaScript function too — but they are encapsulated by the exported wasm function object instance and there are only limited ways to access them.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085237Z" creationid="gitnacho" creationdate="20221006T085237Z">
        <seg>Desde el punto de vista de JavaScript, es como si cada función `wasm` también _fuera_ una función JavaScript, pero están encapsuladas por el objeto `instance` de la función `wasm` exportada y solo hay formas limitadas de acceder a ellas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>From inside your latest directory (and while inside your Emscripten compiler environment terminal window), compile your C code with the following command.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111938Z" creationid="gitnacho" creationdate="20221003T111938Z">
        <seg>Desde dentro de tu directorio más reciente (y dentro de la ventana de terminal del entorno del compilador Emscripten), compila tu código C con el siguiente comando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>From the spec:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174522Z" creationid="gitnacho" creationdate="20221008T174522Z">
        <seg>De la especificación:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Function references are necessary to compile languages like C/C++ that have function pointers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T232924Z" creationid="gitnacho" creationdate="20221006T232924Z">
        <seg>Las referencias a funciones son necesarias para compilar lenguajes como C/C++ que tienen punteros a funciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Further, multiple lines without a space are also treated like normal markdown lines, and concatenated.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181433Z" creationid="gitnacho" creationdate="20221008T181433Z">
        <seg>Además, varias líneas sin espacios también se tratan como líneas markdown normales y se concatenan.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Further, when properly added, such handlers can also be disconnected if needed using [`removeEventListener()`](/en-US/docs/Web/API/EventTarget/removeEventListener).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T201855Z" creationid="gitnacho" creationdate="20221011T201855Z">
        <seg>Además, cuando se agregan correctamente, dichos controladores también se pueden desconectar si es necesario mediante [`removeEventListener()`](/es/docs/Web/API/EventTarget/removeEventListener).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Furthermore, if you use AppCache and SW on a page, browsers that don't support SW but do support AppCache will use that, and browsers that support both will ignore the AppCache and let SW take over.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T051909Z" creationid="gitnacho" creationdate="20220921T025523Z">
        <seg>Además, si usas _AppCache_ y &lt;abbr title="ServiceWorker"&gt;SW&lt;/abbr&gt; en una página, los navegadores que no admiten &lt;abbr title="ServiceWorker"&gt;SW&lt;/abbr&gt; pero sí _AppCache_ lo usarán, y los navegadores que admiten ambos ignorarán _AppCache_ y dejarán que &lt;abbr title="ServiceWorker"&gt;SW&lt;/abbr&gt; tome el control.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Future versions of WebAssembly may allow 0–N memory instances per module instance (see [Multiple Memories](https://webassembly.org/roadmap/)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T234131Z" creationid="gitnacho" creationdate="20221006T234131Z">
        <seg>Las versiones futuras de WebAssembly pueden permitir 0–N instancias de memoria por instancia de módulo (consulta [Múltiples memorias](https://webassembly.org/roadmap/)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Future versions of WebAssembly may allow 0–N table instances per module instance.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T234157Z" creationid="gitnacho" creationdate="20221006T234157Z">
        <seg>Las versiones futuras de WebAssembly pueden permitir 0–N instancias de tabla por instancia de módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>GFM in turn is a superset of CommonMark ([https://spec.commonmark.org/](https://spec.commonmark.org/)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T173839Z" creationid="gitnacho" creationdate="20221008T173839Z">
        <seg>GFM, a su vez, es un superconjunto de CommonMark ([https://spec.commonmark.org/](https://spec.commonmark.org/)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Get it?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062240Z" creationid="gitnacho" creationdate="20221004T062240Z">
        <seg>¿Lo tienes?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Get the Emscripten SDK, using these instructions: &lt;https://emscripten.org/docs/getting_started/downloads.html&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105232Z" creationid="gitnacho" creationdate="20221003T105232Z">
        <seg>Obtén el SDK de Emscripten siguiendo estas instrucciones: &lt;https://emscripten.org/docs/getting_started/downloads.html&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Getting the encoder's version number is great, but encoding an actual image would be more impressive.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053921Z" creationid="gitnacho" creationdate="20221004T053921Z">
        <seg>Obtener el número de versión del codificador es excelente, pero codificar una imagen real sería más impresionante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>GitHub is therefore a good place to host experiments, as it supports HTTPS.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T020701Z" creationid="gitnacho" creationdate="20220921T020701Z">
        <seg>Por lo tanto, GitHub es un buen lugar para alojar experimentos, ya que admite HTTPS.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>GitHub live samples are inserted into the page using the [`EmbedGHLiveSample`](https://github.com/mdn/yari/blob/main/kumascript/macros/EmbedGHLiveSample.ejs) macro.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211939Z" creationid="gitnacho" creationdate="20221005T211939Z">
        <seg>Las muestras en vivo de GitHub se insertan en la página mediante la macro [`EmbedGHLiveSample`](https://github.com/mdn/yari/blob/main/kumascript/macros/EmbedGHLiveSample.ejs).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Given a WebAssembly instance, JavaScript code can synchronously call its exports, which are exposed as normal JavaScript functions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T080042Z" creationid="gitnacho" creationdate="20221003T080042Z">
        <seg>Dada una instancia de WebAssembly, el código JavaScript puede hacer llamadas síncronas a sus `exports`, que son expuestos, como funciones de JavaScript normal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Given the complexity of working with forms, it is a dedicated topic.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224953Z" creationid="gitnacho" creationdate="20221018T224953Z">
        <seg>Dada la complejidad de trabajar con formularios, es un tema dedicado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Go back to your `memory.html` sample file, and fetch, compile, and instantiate your wasm module as before — add the following to the bottom of your script:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T225714Z" creationid="gitnacho" creationdate="20221006T225714Z">
        <seg>Vuelve a tu archivo de muestra `memory.html` y `fetch`, compila y crea una instancia y tu módulo `wasm` como antes: agrega lo siguiente al final de tu script:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Go to &lt;https://github.com/webassembly/wabt&gt; — follow the instructions on this page to set up the tool.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182832Z" creationid="gitnacho" creationdate="20221007T182832Z">
        <seg>Ve a &lt;https://github.com/webassembly/wabt&gt;: sige las instrucciones de esta página para configurar la herramienta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Go to [Google Fonts](https://fonts.google.com/) and find one you like.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T063036Z" creationid="gitnacho" creationdate="20221019T062957Z">
        <seg>Ve a [Google Fonts](https://fonts.google.com/) y desplázate hacia abajo en la lista hasta que encuentres una que te guste. También puedes utilizar los controles de la derecha para filtrar aún más los resultados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Good luck!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223926Z" creationid="gitnacho" creationdate="20221018T223926Z">
        <seg>¡Diviértete!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Got: ${got}&lt;br&gt;`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233939Z" creationid="gitnacho" creationdate="20221006T233939Z">
        <seg>Got: ${got}&lt;br&gt;`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Grab our [`simple.wasm`](https://raw.githubusercontent.com/mdn/webassembly-examples/master/js-api-examples/simple.wasm) file and save a copy in a new directory on your local machine.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T113019Z" creationid="gitnacho" creationdate="20221006T112837Z">
        <seg>Toma nuestro archivo [`simple.wasm`](https://raw.githubusercontent.com/mdn/webassembly-examples/master/js-api-examples/simple.wasm) y guarda una copia en un nuevo directorio en tu máquina.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Graphic designers put together the visuals of the website.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061902Z" creationid="gitnacho" creationdate="20221019T061902Z">
        <seg>Los diseñadores gráficos ensamblan las imágenes del sitio web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Great!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210910T092945Z" creationid="gitnacho" creationdate="20210910T092945Z">
        <seg>¡Excelente!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Grow the table by 1 using `WebAssembly.grow()`:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T110259Z" creationid="gitnacho" creationdate="20221006T110259Z">
        <seg>Hace crecer la tabla en 1 usando `WebAssembly.grow()`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>H</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220805T114624Z" creationid="nachec" creationdate="20220805T114624Z">
        <seg>H</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>HTTP follows a classical [client-server model](https://en.wikipedia.org/wiki/Client%E2%80%93server_model), with a client opening a connection to make a request, then waiting until it receives a response.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T070625Z" creationid="gitnacho" creationdate="20221012T062253Z">
        <seg>Sigue el clásico [modelo cliente-servidor](http://es.wikipedia.org/wiki/Cliente-servidor), en el que un cliente establece una conexión con el servidor, realiza una petición y espera hasta que recibe una respuesta del mismo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>HTTP is a [stateless protocol](https://en.wikipedia.org/wiki/Stateless_protocol), meaning that the server does not keep any data (state) between two requests.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T062422Z" creationid="gitnacho" creationdate="20221012T062422Z">
        <seg>Se trata de un [protocolo sin estado](http://es.wikipedia.org/wiki/Protocolo_sin_estado), lo cual significa que el servidor no guarda ningún dato (estado) entre dos peticiones. Aunque en la mayoría de casos se basa en una conexión del tipo TCP/IP, se puede usar sobre cualquier [capa de transporte](http://es.wikipedia.org/wiki/Capa_de_transporte) segura o de confianza, es decir, sobre cualquier protocolo que no pierda mensajes silenciosamente, tal como UDP.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>HTTP/1.1 200 OK
Date: Mon, 01 Dec 2008 01:15:40 GMT
Server: Apache/2
Access-Control-Allow-Origin: https://foo.example
Vary: Accept-Encoding, Origin
Content-Encoding: gzip
Content-Length: 235
Keep-Alive: timeout=2, max=99
Connection: Keep-Alive
Content-Type: text/plain</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T224421Z" creationid="gitnacho" creationdate="20221011T224421Z">
        <seg>HTTP/1.1 200 OK
Date: Mon, 01 Dec 2008 01:15:40 GMT
Server: Apache/2
Access-Control-Allow-Origin: https://foo.example
Vary: Accept-Encoding, Origin
Content-Encoding: gzip
Content-Length: 235
Keep-Alive: timeout=2, max=99
Connection: Keep-Alive
Content-Type: text/plain</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>HTTP/1.1 200 OK
Date: Mon, 01 Dec 2008 01:34:52 GMT
Server: Apache/2
Access-Control-Allow-Origin: https://foo.example
Access-Control-Allow-Credentials: true
Cache-Control: no-cache
Pragma: no-cache
Set-Cookie: pageAccess=3; expires=Wed, 31-Dec-2008 01:34:53 GMT
Vary: Accept-Encoding, Origin
Content-Encoding: gzip
Content-Length: 106
Keep-Alive: timeout=2, max=100
Connection: Keep-Alive
Content-Type: text/plain</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230610Z" creationid="gitnacho" creationdate="20221011T230610Z">
        <seg>HTTP/1.1 200 OK
Date: Mon, 01 Dec 2008 01:34:52 GMT
Server: Apache/2
Access-Control-Allow-Origin: https://foo.example
Access-Control-Allow-Credentials: true
Cache-Control: no-cache
Pragma: no-cache
Set-Cookie: pageAccess=3; expires=Wed, 31-Dec-2008 01:34:53 GMT
Vary: Accept-Encoding, Origin
Content-Encoding: gzip
Content-Length: 106
Keep-Alive: timeout=2, max=100
Connection: Keep-Alive
Content-Type: text/plain</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>HTTP/1.1 204 No Content
Date: Mon, 01 Dec 2008 01:15:39 GMT
Server: Apache/2
Access-Control-Allow-Origin: https://foo.example
Access-Control-Allow-Methods: POST, GET, OPTIONS
Access-Control-Allow-Headers: X-PINGOTHER, Content-Type
Access-Control-Max-Age: 86400
Vary: Accept-Encoding, Origin
Keep-Alive: timeout=2, max=100
Connection: Keep-Alive
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222728Z" creationid="gitnacho" creationdate="20221011T222728Z">
        <seg>HTTP/1.1 204 No Content
Date: Mon, 01 Dec 2008 01:15:39 GMT
Server: Apache/2
Access-Control-Allow-Origin: https://foo.example
Access-Control-Allow-Methods: POST, GET, OPTIONS
Access-Control-Allow-Headers: X-PINGOTHER, Content-Type
Access-Control-Max-Age: 86400
Vary: Accept-Encoding, Origin
Keep-Alive: timeout=2, max=100
Connection: Keep-Alive
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Header fields are kept in an [IANA registry](https://www.iana.org/assignments/message-headers/message-headers.xhtml#perm-headers).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T070441Z" creationid="gitnacho" creationdate="20221012T064343Z">
        <seg>Se pueden agregar cabeceras personalizadas usando el prefijo 'X-'; otras en un [registro IANA](https://www.iana.org/assignments/message-headers/message-headers.xhtml#perm-headers), cuyo contenido fue inicialmente definido en [RFC 4229](https://tools.ietf.org/html/rfc4229).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Headers are case-insensitive, begin at the start of a line and are immediately followed by a `':'` and a header-dependent value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T075904Z" creationid="gitnacho" creationdate="20221017T211508Z">
        <seg>Las cabeceras no distinguen entre mayúsculas y minúsculas, comienzan al principio de una línea y son seguidos inmediatamente por `':'` y un valor dependiente de la cabecera.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Headers include: {{HTTPHeader("Device-Memory")}}, {{HTTPHeader("DPR")}}, {{HTTPHeader("Width")}}, {{HTTPHeader("Viewport-Width")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092717Z" creationid="gitnacho" creationdate="20221012T092717Z">
        <seg>Los encabezados incluyen: {{HTTPHeader("Device-Memory")}}, {{HTTPHeader("DPR")}}, {{HTTPHeader("Width")}}, {{HTTPHeader("Viewport-Width")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Headers include: {{HTTPHeader("Save-Data")}}, {{HTTPHeader("Downlink")}}, {{HTTPHeader("ECT")}}, {{HTTPHeader("RTT")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092759Z" creationid="gitnacho" creationdate="20221012T092759Z">
        <seg>Los encabezados incluyen: {{HTTPHeader("Save-Data")}}, {{HTTPHeader("Downlink")}}, {{HTTPHeader("ECT")}}, {{HTTPHeader("RTT")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Headers include: {{HTTPHeader("Sec-CH-UA")}}, {{HTTPHeader("Sec-CH-UA-Arch")}}, {{HTTPHeader("Sec-CH-UA-Bitness")}}, {{HTTPHeader("Sec-CH-UA-Full-Version-List")}}, {{HTTPHeader("Sec-CH-UA-Full-Version")}}, {{HTTPHeader("Sec-CH-UA-Mobile")}}, {{HTTPHeader("Sec-CH-UA-Model")}}, {{HTTPHeader("Sec-CH-UA-Platform")}}, and {{HTTPHeader("Sec-CH-UA-Platform-Version")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T093158Z" creationid="gitnacho" creationdate="20221012T092429Z">
        <seg>Los encabezados incluyen: {{HTTPHeader("Sec-CH-UA")}}, {{HTTPHeader("Sec-CH-UA-Arch")}}, {{HTTPHeader("Sec-CH-UA-Bitness")}}, {{HTTPHeader("Sec-CH-UA-Full-Version-List")}}, {{HTTPHeader("Sec-CH-UA-Full-Version")}}, {{HTTPHeader("Sec-CH -UA-Mobile")}}, {{HTTPHeader("Sec-CH-UA-Model")}}, {{HTTPHeader("Sec-CH-UA-Platform")}} y {{HTTPHeader("Sec-CH-UA-Platform-Version")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Hello #&lt;%= i %&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070224Z" creationid="gitnacho" creationdate="20221005T070224Z">
        <seg>Hello #&lt;%= i %&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Hello #&lt;%= i %&gt;
&lt;% } %&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T082412Z" creationid="gitnacho" creationdate="20221005T065029Z">
        <seg>Hello #&lt;%= i %&gt;
&lt;% } %&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Helpful tools and resources for understanding and debugging HTTP.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064723Z" creationid="gitnacho" creationdate="20221012T064723Z">
        <seg>Herramientas útiles para usar y revisar conexiones HTTP.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Here is a sample exchange between client and server:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230607Z" creationid="gitnacho" creationdate="20221011T230607Z">
        <seg>Aquí hay un ejemplo de intercambio entre el cliente y el servidor:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Here is an example:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170325T110239Z" creationid="nacho" creationdate="20170325T110239Z">
        <seg>Aquí tienes un ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Here is the same WebAssembly module, simply replacing the import with an export.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T143152Z" creationid="gitnacho" creationdate="20221019T143152Z">
        <seg>Aquí está el mismo módulo WebAssembly, simplemente reemplazando la importación con una exportación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Here we add an `install` event listener to the service worker (hence `self`), and then chain a {{domxref("ExtendableEvent.waitUntil()") }} method onto the event — this ensures that the service worker will not install until the code inside `waitUntil()` has successfully occurred.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T034458Z">
        <seg>Aquí agregamos un detector de eventos `install` al *service worker* (por lo tanto, `self`), y luego encadenamos un método {{DOMxRef("ExtendableEvent.waitUntil()") }} al evento; esto garantiza que el *service worker* no se instale hasta que el código dentro de `waitUntil()` haya ocurrido con éxito.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Here we are just telling the browser what the content type of our synthetic response is:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035702Z" creationid="gitnacho" creationdate="20220921T035702Z">
        <seg>Aquí solo le estamos diciendo al navegador cuál es el tipo de contenido de nuestra respuesta sintética:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Here we are saying that the references need to be functions that return an `i32` as a result.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072723Z" creationid="gitnacho" creationdate="20221007T072723Z">
        <seg>Aquí estamos diciendo que las referencias deben ser funciones que devuelvan un `i32` como resultado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Here we create a table (`otherTable`) from JavaScript using the [`WebAssembly.Table`](/en-US/docs/WebAssembly/JavaScript_interface/Table) constructor, then we load `table.wasm` into our page using the [`WebAssembly.instantiateStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming) method.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085542Z" creationid="gitnacho" creationdate="20221006T085542Z">
        <seg>Aquí creamos una tabla (`otherTable`) desde JavaScript usando el constructor [`WebAssembly.Table`](/es/docs/WebAssembly/JavaScript_interface/Table), luego cargamos `table.wasm` en nuestra página usando el [`WebAssembly.instantiateStreaming()`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Here we provide you with a structured course that will teach you all you need to know to become a front-end web developer.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223404Z" creationid="gitnacho" creationdate="20221018T223404Z">
        <seg>Aquí se te proporciona un curso estructurado que te enseñará todo lo que necesitas saber para convertirte en un desarrollador de la interfaz de usuario web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Here we wait for an {{domxref("InstallEvent")}} to fire, then runs
{{domxref("ExtendableEvent.waitUntil","waitUntil()")}} to handle the install process for
the app.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T225313Z">
        <seg>Aquí esperamos a que se active un {{DOMxRef("InstallEvent")}}, luego se ejecuta
{{DOMxRef("ExtendableEvent.waitUntil","waitUntil()")}} para gestionar el proceso de instalación de
la aplicación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Here we will outline what happens when you view a webpage on your computer.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T060128Z" creationid="gitnacho" creationdate="20220925T060017Z">
        <seg>Aquí describimos lo que sucede cuando ves una página web en tu dispositivo favorito.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Here we'll outline a simple method that you can follow to plan out your site's content and design.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T043106Z" creationid="gitnacho" creationdate="20220925T043106Z">
        <seg>Aquí describimos un método simple que puedes seguir para planificar el contenido y modelado de tu sitio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Here we've specified 0, and a size of 2 (see above), so we can fill in two references at indexes 0 and 1.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072324Z" creationid="gitnacho" creationdate="20221007T072324Z">
        <seg>Aquí hemos especificado 0 y un tamaño de 2 (ve arriba), por lo que podemos completar dos referencias en los índices 0 y 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Here you'll find guides on how the site works, how we do our documentation, the guidelines and conventions we adhere to, and how you can help.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T200343Z" creationid="gitnacho" creationdate="20221008T200343Z">
        <seg>Aquí encontrarás guías sobre cómo funciona el sitio, cómo hacemos nuestra documentación, las pautas y convenciones a las que nos adherimos y cómo puedes ayudar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Here's an example:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200423T094913Z" creationid="pacho" creationdate="20190803T190524Z">
        <seg>Aquí tienes un ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Here's how our service worker handles the `install` event:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034242Z" creationid="gitnacho" creationdate="20220921T034242Z">
        <seg>Así es como nuestro *service worker* maneja el evento `install`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Here's where we tell Cargo what version of `wasm-bindgen` we want to depend on; in this case, that's any `0.2.z` version (but not `0.3.0` or above).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063937Z" creationid="gitnacho" creationdate="20221004T063937Z">
        <seg>Aquí es donde le decimos a Cargo de qué versión de `wasm-bindgen` queremos depender; en este caso, es cualquier versión `0.2.z` (pero no `0.3.0` o superior).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Here, `add` is the name the function will be identified by in JavaScript whereas `$add` picks out which WebAssembly function inside the Module is being exported.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T060806Z" creationid="gitnacho" creationdate="20221007T060806Z">
        <seg>Aquí, `add` es el nombre con el que se identificará la función en JavaScript, mientras que `$add` selecciona qué función de WebAssembly dentro del Módulo se está exportando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Historically, a `.wast` extension was also used, however that's now used for the scripting language used by the WebAssembly test suite.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182546Z" creationid="gitnacho" creationdate="20221007T182546Z">
        <seg>Históricamente, también se usaba una extensión `.wast`, sin embargo, ahora se usa para el lenguaje de scripts utilizado por el conjunto de pruebas de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Historically, the VM has been able to load only JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T005416Z" creationid="gitnacho" creationdate="20221003T005416Z">
        <seg>Históricamente, la máquina virtual ha sido capaz de cargar solamente JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Honors the value of `env.cache_control` to invalidate cache on `no-cache`, which can be sent by a logged-in user hitting shift-refresh.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T081747Z" creationid="gitnacho" creationdate="20221005T072637Z">
        <seg>Respeta el valor de `env.cache_control` para invalidar la caché en `no-cache`, que puede ser enviada por un usuario conectado presionando "Mayús+Recargar".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>How do we do that?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053932Z" creationid="gitnacho" creationdate="20221004T053932Z">
        <seg>¿Como lo hacemos?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>How long a `Cache` object lives is browser dependent, but a single origin's scripts can typically rely on the presence of a previously populated `Cache` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T202442Z" creationid="gitnacho" creationdate="20221003T202442Z">
        <seg>El tiempo de vida de un objeto `Cache` depende del navegador, pero los scripts de un solo origen generalmente pueden depender de la presencia de un objeto `Cache` poblado previamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>However you still need HTML, CSS and JavaScript to render such an example.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211713Z" creationid="gitnacho" creationdate="20221005T211713Z">
        <seg>Sin embargo, aún necesitas HTML, CSS y JavaScript para renderizar dicho ejemplo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>However,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T033209Z" creationid="gitnacho" creationdate="20211102T033209Z">
        <seg>Sin embargo,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>However, because we have a tag, we use [`Exception.prototype.is()`](/en-US/docs/WebAssembly/JavaScript_interface/Exception/is) to check that it's the right one, and because it is correct, we call [`Exception.prototype.getArg()`](/en-US/docs/WebAssembly/JavaScript_interface/Exception/getArg) to read the value of "42".</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023628Z" creationid="gitnacho" creationdate="20221008T023628Z">
        <seg>Sin embargo, como tenemos una etiqueta, usamos [`Exception.prototype.is()`](/es/docs/WebAssembly/JavaScript_interface/Exception/is) para comprobar que es la correcta, y como es correcta, llama a [`Exception.prototype.getArg()`](/es/docs/WebAssembly/JavaScript_interface/Exception/getArg) para leer el valor "42".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>However, if the request is one that triggers a preflight due to the presence of the `Authorization` header in the request, you won't be able to work around the limitation using the steps above.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T225913Z" creationid="gitnacho" creationdate="20221011T225913Z">
        <seg>Sin embargo, si la solicitud desencadena una verificación previa debido a la presencia del encabezado "Authorization" en la solicitud, no podrás evitar la limitación siguiendo los pasos anteriores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>However, in those cases where a worker has to boot before it can start fetching a remote resource, then the delay can be significant.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T053016Z" creationid="gitnacho" creationdate="20220922T205737Z">
        <seg>Sin embargo, en aquellos casos en los que un *worker* tiene que arrancar antes de que pueda comenzar a obtener un recurso remoto, la demora puede ser significativa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>However, it made many assumptions about what you were trying to do and then broke horribly when your app didn't follow those assumptions exactly.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T021615Z" creationid="gitnacho" creationdate="20220921T015648Z">
        <seg>Sin embargo, hizo muchas suposiciones sobre lo que estabas tratando de hacer y luego se rompió horriblemente cuando tu aplicación no siguió exactamente esas suposiciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>However, it's important to note that if a non-secure context causes a new window to be created (with or without specifying [noopener](/en-US/docs/Web/API/Window/open)), then the fact that the opener was insecure has no effect on whether the new window is considered secure.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T204023Z" creationid="gitnacho" creationdate="20221018T204023Z">
        <seg>Sin embargo, es importante tener en cuenta que si un contexto no seguro hace que se cree una nueva ventana (con o sin especificar [noopener](/es/docs/Web/API/Window/open)), entonces el hecho de que el abridor era inseguro no tiene ningún efecto sobre si la nueva ventana se considera segura.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>However, it's still useful to know about since this is what the browsers display in devtools.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T083643Z" creationid="gitnacho" creationdate="20221020T083643Z">
        <seg>Sin embargo, sigue siendo útil saberlo, ya que esto es lo que muestran los navegadores en las herramientas de desarrollo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>However, not all browsers have implemented the change, and thus still exhibit the originally required behavior.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T224848Z" creationid="gitnacho" creationdate="20221011T224848Z">
        <seg>Sin embargo, no todos los navegadores han implementado el cambio y, por lo tanto, aún exhiben el comportamiento requerido originalmente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>However, the Markdown syntax is required as a matter of style.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181408Z" creationid="gitnacho" creationdate="20221008T181408Z">
        <seg>Sin embargo, la sintaxis Markdown es necesaria por cuestión de estilo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>However, the engine may ignore or clamp</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T215842Z" creationid="gitnacho" creationdate="20221019T215356Z">
        <seg>Sin embargo, el motor puede ignorar o afianzar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>However, the preferred way to get an `Instance` is through the asynchronous
[`WebAssembly.instantiateStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming) function, for example like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T210425Z" creationid="gitnacho" creationdate="20221019T210425Z">
        <seg>Sin embargo, la forma preferida de obtener una `Instance` es a través del modo asíncrono
[`WebAssembly.instantiateStreaming()`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming), por ejemplo, así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>However, the primary way to get a
`Module` is through an asynchronous compilation function like
[`WebAssembly.compile()`](/en-US/docs/WebAssembly/JavaScript_interface/compile).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T231212Z" creationid="gitnacho" creationdate="20221019T231212Z">
        <seg>Sin embargo, la forma principal de obtener una `Module` es a través de una función de compilación asíncrona como [`WebAssembly.compile()`](/es/docs/WebAssembly/JavaScript_interface/compile).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>However, the server still must opt-in using {{HTTPHeader("Access-Control-Allow-Origin")}} to _share_ the response with the script.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220328Z" creationid="gitnacho" creationdate="20221011T220328Z">
        <seg>Sin embargo, el servidor aún debe optar por usar {{HTTPHeader("Access-Control-Allow-Origin")}} para _compartir_ la respuesta con el script.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>However, the shared data block referenced by the two `SharedArrayBuffer` objects is the same data block, and a side effect to the block in one agent will eventually become visible in the other agent.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T023355Z" creationid="gitnacho" creationdate="20220923T023355Z">
        <seg>Sin embargo, el bloque de datos compartido al que hacen referencia los dos objetos `SharedArrayBuffer` es el mismo bloque de datos, y un efecto secundario del bloque en un agente que eventualmente se hará visible en el otro agente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>However, they are more complex to set up than the other forms, with more limitations, and are intended for specific purposes.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204629Z" creationid="gitnacho" creationdate="20221005T204629Z">
        <seg>Sin embargo, es más complejo configurarlos que los otros formularios, tienen más limitaciones y están destinados a fines específicos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>However, you can view it using the wat2wasm tool's `-v` option.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T183010Z" creationid="gitnacho" creationdate="20221007T183010Z">
        <seg>Sin embargo, lo puedes ver usando la opción `-v` de la herramienta `wat2wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>IANA also maintains a [registry of proposed new HTTP message headers](https://www.iana.org/assignments/message-headers/message-headers.xhtml#prov-headers).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T065425Z" creationid="gitnacho" creationdate="20221012T064404Z">
        <seg> IANA también mantiene un [registro de nuevas cabeceras de mensaje HTTP propuestas](https://www.iana.org/assignments/message-headers/message-headers.xhtml#prov-headers).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Ideally, write a short description of the example explaining the scenario and what you are hoping to demonstrate.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211011Z" creationid="gitnacho" creationdate="20221005T211011Z">
        <seg>Idealmente, escribe una breve descripción del ejemplo que explique el escenario y lo que esperas demostrar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211103T080624Z" creationid="gitnacho" creationdate="20211103T080624Z">
        <seg>Si</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If WebAssembly code needs to provide a stack trace, it must call a JavaScript function to create the exception, passing `options.traceStack=true` parameter in the [constructor](/en-US/docs/WebAssembly/JavaScript_interface/Exception/Exception).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T203510Z" creationid="gitnacho" creationdate="20221019T203510Z">
        <seg>Si el código de WebAssembly necesita proporcionar un seguimiento de la pila, debes llamar a una función de JavaScript para crear la excepción, pasando el parámetro `options.traceStack=true` en el [constructor](/es/docs/WebAssembly/JavaScript_interface/Exception/Exception ).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If _index_ is greater than or equal
to [`Table.prototype.length`](/en-US/docs/WebAssembly/JavaScript_interface/Table/length), a
{{jsxref("RangeError")}} is thrown.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T091838Z" creationid="gitnacho" creationdate="20221006T091838Z">
        <seg>Si `index` es mayor o igual a [`Table.prototype.length`](/es/docs/WebAssembly/JavaScript_interface/Table/length), se lanza un {{jsxref("RangeError")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If `bufferSource` is not a [typed array](/en-US/docs/Web/JavaScript/Typed_arrays) or [ArrayBuffer](/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer),
a {{jsxref("TypeError")}} is thrown.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T200108Z" creationid="gitnacho" creationdate="20221007T200108Z">
        <seg>Si `bufferSource` no es un [arreglo tipado](/es/docs/Web/JavaScript/Typed_arrays) o [ArrayBuffer](/es/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer),
se lanza un {{jsxref("TypeError")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If `module` is not a [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) object instance, a
{{jsxref("TypeError")}} is thrown.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T222012Z" creationid="gitnacho" creationdate="20221019T222012Z">
        <seg>Si `module` no es una instancia del objeto [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module), se lanza un {{JSxRef("TypeError")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If `referrerpolicy` is not explicitly specified on the `&lt;script&gt;` element, it will adopt a higher-level referrer policy, i.e. one set on the whole document or domain.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T130341Z" creationid="gitnacho" creationdate="20221003T130341Z">
        <seg>Si `referrerpolicy` no se especifica explícitamente en el elemento `&lt;script&gt;`, adoptará una política de referencia de nivel superior, es decir, una establecida en todo el documento o dominio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T195412Z" creationid="gitnacho" creationdate="20211102T195412Z">
        <seg>Si un</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If a higher-level policy is not available, the empty string is treated as being equivalent to `strict-origin-when-cross-origin`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T130417Z" creationid="gitnacho" creationdate="20221003T130417Z">
        <seg>Si una política de nivel superior no está disponible, la cadena vacía se trata como si fuera equivalente a `strict-origin-when-cross-origin`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If a match wasn't found in the cache, and the network isn't available, you could just match the request with some kind of default fallback page as a response using {{domxref("CacheStorage.match","match()")}}, like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T035852Z">
        <seg>Si no se encontró una coincidencia en caché y la red no está disponible, puedes hacer coincidir la solicitud con algún tipo de página de respaldo predeterminada como respuesta usando {{DOMxRef("CacheStorage.match","match() ")}}, como esta:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If a match wasn't found in the cache, you could tell the browser to {{domxref("fetch()")}} the default network request for that resource, to get the new resource from the network if it is available:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T035828Z">
        <seg>Si no se encontró una coincidencia en caché, le puedes decir al navegador que {{DOMxRef("fetch()")}} la solicitud de red predeterminada para ese recurso, para obtener el nuevo recurso de la red si está disponible:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If a maximum value was supplied upon creation of the memory instance, attempts to grow past this maximum will throw a {{jsxref("RangeError")}} exception.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T210522Z" creationid="gitnacho" creationdate="20221006T210522Z">
        <seg>Si se proporcionó un valor máximo al crear la instancia de memoria, los intentos de crecer más allá de este máximo arrojarán una excepción {{jsxref("RangeError")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If a redirect occurs after such a request, some browsers currently will report an error message such as the following:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T224751Z" creationid="gitnacho" creationdate="20221011T224751Z">
        <seg>Si se produce una redirección después de dicha solicitud, algunos navegadores actualmente informarán un mensaje de error como el siguiente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If a request includes a credential (most commonly a `Cookie` header) and the response includes an `Access-Control-Allow-Origin: *` header (that is, with the wildcard), the browser will block access to the response, and report a CORS error in the devtools console.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053336Z" creationid="gitnacho" creationdate="20221012T053336Z">
        <seg>Si una solicitud incluye una credencial (por lo general, un encabezado `Cookie`) y la respuesta incluye un encabezado `Access-Control-Allow-Origin: *` (es decir, con el comodín), el navegador bloqueará el acceso a la respuesta e informará un error CORS en la consola de devtools.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If a shared worker has an AppCache associated with it, you can return a reference to the cache using</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T053227Z" creationid="gitnacho" creationdate="20220921T213213Z">
        <seg>Si un *worker* compartido tiene un _AppCache_ asociado, puedes devolver una referencia al caché usando</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If a string is missing for a locale, it will fall back to `en-US` for that string.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083125Z" creationid="gitnacho" creationdate="20221005T083125Z">
        <seg>Si falta una cadena para una configuración regional, se recurrirá a `en-US` para esa cadena.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If an author needs to use any of the unsupported features, they should write the table in HTML.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185002Z" creationid="gitnacho" creationdate="20221008T185002Z">
        <seg>Si un autor necesita usar alguna de las funciones no admitidas, debe escribir la tabla en HTML.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If any of those headers have "nonstandard" values, WebKit/Safari does not consider the request to be a "simple request".</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T221043Z" creationid="gitnacho" creationdate="20221011T221043Z">
        <seg>Si alguno de esos encabezados tiene valores "no estándar", WebKit/Safari no considera que la solicitud sea una "solicitud simple".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If at all possible, you should use the newer
&gt; [`WebAssembly.instantiateStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming) method instead, which fetches,
&gt; compiles, and instantiates a module all in one step, directly from the raw bytecode,
&gt; so doesn't require conversion to an {{jsxref("ArrayBuffer")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193421Z" creationid="gitnacho" creationdate="20221007T193421Z">
        <seg>De ser posible, debes usar el nuevo
&gt; [`WebAssembly.instantiateStreaming()`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming) en su lugar, que recupera,
&gt; compila e instancia un módulo en un solo paso, directamente desde el código de bytes sin procesar,
&gt; así que no requiere conversión a un {{jsxref("ArrayBuffer")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If enabled, the [navigation preload](/en-US/docs/Web/API/NavigationPreloadManager) feature starts downloading resources as soon as the fetch request is made, and in parallel with service worker bootup.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T222052Z" creationid="gitnacho" creationdate="20220921T040847Z">
        <seg>Si está habilitada, la función [precarga de navegación](/es/docs/Web/API/NavigationPreloadManager) comienza a descargar recursos tan pronto como se realiza la solicitud de recuperación y en paralelo con el inicio del *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If everything has worked as planned, you should see "Hello world" output in the Emscripten console appearing on the web page, and your browser's JavaScript console.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T110437Z" creationid="gitnacho" creationdate="20221003T110437Z">
        <seg>Si todo funcionó según lo planeado, deberías ver el resultado "Hola mundo" en la consola Emscripten que aparece en la página web y en la consola JavaScript de tu navegador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If module is not a [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) object instance, a
{{jsxref("TypeError")}} is thrown.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T224720Z" creationid="gitnacho" creationdate="20221019T224720Z">
        <seg>Si el módulo no es una instancia del objeto [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module),
se lanza un {{JSxRef("TypeError")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If neither of these are defined then we go to the network.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041407Z" creationid="gitnacho" creationdate="20220921T041407Z">
        <seg>Si ninguno de estos está definido, vamos a la red.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If no `Cache` entry is found, the promise resolves to `false`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T210946Z" creationid="gitnacho" creationdate="20221003T203424Z">
        <seg>Si no se encuentra ninguna entrada `Cache`, la promesa se resuelve en `false`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If no match is found in the cache, the code returns the resolved preloaded response ({{domxref("FetchEvent.preloadResponse")}}).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220922T210517Z">
        <seg>Si no se encuentra ninguna coincidencia en la caché, el código devuelve la respuesta precargada resuelta ({{DOMxRef("FetchEvent.preloadResponse")}}).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If no value is specified, a typed 0 value is used where the value of `descriptor.value` is one of `i32`, `i64`, `f32`, or `f64`, and `null` is used if `descriptor.value` is `externref` or `anyfunc` (as specified by the [`DefaultValue` algorithm](https://webassembly.github.io/spec/js-api/#defaultvalue)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110823Z" creationid="gitnacho" creationdate="20221007T110823Z">
        <seg>Si no se especifica ningún valor, se usa un valor de tipo 0 donde el valor de `descriptor.value` es uno de `i32`, `i64`, `f32` o `f64`, y se usa `null` si `descriptor.value` es `externref` o `anyfunc` (según lo especificado por el [algoritmo `DefaultValue`](https://webassembly.github.io/spec/js-api/#defaultvalue)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If not, we compile it from scratch and then store the compiled Module in the database with a key of URL, for next time we want to use it:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043840Z" creationid="gitnacho" creationdate="20221004T043840Z">
        <seg>Si no, lo compilamos desde cero y luego almacenamos el Módulo compilado en la base de datos con una clave de URL, para la próxima vez que queramos usarlo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If opening the database failed (for example due to permissions or quota), we fall back to fetching and compiling the module and don't try to store the results (since there is no database to store them into).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T051825Z" creationid="gitnacho" creationdate="20221004T051825Z">
        <seg>Si falla la apertura de la base de datos (por ejemplo, debido a permisos o cuotas), recurrimos a buscar y compilar el módulo y no intentamos almacenar los resultados (puesto que no hay una base de datos para almacenarlos).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If successful, the service worker is executed in a {{domxref("ServiceWorkerGlobalScope") }}; this is basically a special kind of worker context, running off the main script execution thread, with no DOM access.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T022706Z">
        <seg>Si tiene éxito, el *service worker* se ejecuta en {{DOMxRef("ServiceWorkerGlobalScope") }}; esto es básicamente un tipo especial de contexto de trabajo, que se ejecuta fuera del hilo principal de ejecución del script, sin acceso al DOM.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If successful, your service worker will be downloaded to the client and attempt installation/activation (see below) for URLs accessed by the user inside the whole origin, or inside a subset specified by you.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T140855Z" creationid="gitnacho" creationdate="20221002T135725Z">
        <seg>Si tiene éxito, tu *service worker* se descargará al cliente e intentará la instalación/activación (ve más abajo) para las URLs a las que accedió el usuario dentro del origen completo o dentro de un subconjunto especificado por el autor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If supported, an object of this type is returned by {{domxref("ServiceWorkerRegistration.navigationPreload")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220922T205049Z">
        <seg>Si es compatible, {{DOMxRef("ServiceWorkerRegistration.navigationPreload")}} devuelve un objeto de este tipo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If that doesn't work, try a Shift-Refresh.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082031Z" creationid="gitnacho" creationdate="20221005T075816Z">
        <seg>Si eso no funciona, intenta con "Mayús+Recargar".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If that's not possible, then another way is to:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T225213Z" creationid="gitnacho" creationdate="20221011T225213Z">
        <seg>Si eso no es posible, entonces otra forma es:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the `grow()` operation fails for whatever reason, a
{{jsxref("RangeError")}} is thrown.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T233403Z" creationid="gitnacho" creationdate="20221019T233403Z">
        <seg>Si la operación `grow()` falla por cualquier motivo, se lanza un {{JSxRef("RangeError")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the `message` parameter is _not_ provided, a {{jsxref("SyntaxError")}} will be thrown by the parser.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115600Z" creationid="gitnacho" creationdate="20221007T115600Z">
        <seg>Si el parámetro `message` _no_ se proporciona, el analizador arrojará un {{jsxref("SyntaxError")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the application uses OpenGL, the HTML also contains a {{htmlelement("canvas")}} element that is used as the rendering target.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T090131Z" creationid="gitnacho" creationdate="20221003T090131Z">
        <seg>Si la aplicación usa OpenGL, el HTML también contiene un elemento {{htmlelement("canvas")}} que se usa como destino de renderizado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the callee doesn't have a matching signature (say an `f32` is returned instead), a [`WebAssembly.RuntimeError`](/en-US/docs/WebAssembly/JavaScript_interface/RuntimeError) is thrown.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073113Z" creationid="gitnacho" creationdate="20221007T073113Z">
        <seg>Si el receptor de la llamada no tiene una firma coincidente (por ejemplo, se devuelve un `f32` en su lugar), se lanza un [`WebAssembly.RuntimeError`](/es/docs/WebAssembly/JavaScript_interface/RuntimeError).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the condition is false (0), another statement can be executed</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T084434Z" creationid="gitnacho" creationdate="20221020T084055Z">
        <seg>Si la condición es `false` (0), se puede ejecutar otra instrucción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the data to be passed to the worker is unimportant, `null` or `undefined` can be passed explicitly.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115625Z" creationid="gitnacho" creationdate="20221007T115625Z">
        <seg>Si los datos que se van a pasar al *worker* no son importantes, se puede pasar explícitamente `null` o `undefined`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the error persists, [report an issue](https://github.com/mdn/yari/issues), including the URL of the page and the text of the error.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T093144Z" creationid="gitnacho" creationdate="20221005T093144Z">
        <seg>Si el error persiste, [informa un problema](https://github.com/mdn/yari/issues), incluyendo la URL de la página y el texto del error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the event has already been dispatched, this method does nothing.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T205106Z" creationid="gitnacho" creationdate="20221011T205106Z">
        <seg>Si el evento ya se envió, este método no hace nada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the file isn't found, an empty string is returned.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082846Z" creationid="gitnacho" creationdate="20221005T082846Z">
        <seg>Si no se encuentra el archivo, se devuelve una cadena vacía.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the highlighting that you wish to use is not listed above you should markup the code block as `plain`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T180719Z" creationid="gitnacho" creationdate="20221008T180719Z">
        <seg>Si el resaltado que deseas utilizar no se encuentra en la lista anterior, debes marcar el bloque de código como `plain`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the number of data fields in the payload and their types don't match, a {{jsxref("TypeError")}} exception is thrown.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140403Z" creationid="gitnacho" creationdate="20221019T140403Z">
        <seg>Si la cantidad de campos de datos en la carga útil y sus tipos no coinciden, se genera una excepción {{jsxref("TypeError")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the ownership of an object is transferred, it becomes unusable in the context it was sent from and becomes available only to the worker it was sent to.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115711Z" creationid="gitnacho" creationdate="20221007T115711Z">
        <seg>Si se transfiere la propiedad de un objeto, se vuelve inutilizable en el contexto desde el que se envió y solo está disponible para el *worker* al que se envió.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the promise is rejected, the install fails, and the worker won't do anything.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T053202Z" creationid="gitnacho" creationdate="20220921T034605Z">
        <seg>Si se rechaza la promesa, la instalación falla y el *worker* no hará nada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the request URL is not available in the cache, we request the resource from the network request with `await fetch(request)`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040158Z" creationid="gitnacho" creationdate="20220921T040158Z">
        <seg>Si la URL de la solicitud no está disponible en la memoria caché, solicitamos el recurso de la solicitud de red con `await fetch(request)`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the resource owners at `https://bar.other` wished to restrict access to the resource to requests _only_ from `https://foo.example` (i.e., no domain other than `https://foo.example` can access the resource in a cross-origin manner), they would send:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222215Z" creationid="gitnacho" creationdate="20221011T222215Z">
        <seg>Si los propietarios del recurso en `https://bar.other` desearan restringir el acceso al recurso a las solicitudes _solo_ de `https://foo.example` (es decir, ningún dominio que no sea `https://foo.example` puede acceder al recurso de forma cruzada), enviarían:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the resources aren't in the cache, they are requested from the network.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040059Z" creationid="gitnacho" creationdate="20220921T040059Z">
        <seg>Si los recursos no están en la memoria caché, se solicitan desde la red.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the script is blocked, an {{domxref("Element/error_event", "error")}} is sent to the element, if not a {{domxref("Element/load_event", "load")}} event is sent.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T135813Z" creationid="gitnacho" creationdate="20221003T133932Z">
        <seg>Si el script está bloqueado, se envía un {{DOMxRef("Element/error_event", "error")}} al elemento; de lo contrario, se envía un evento {{DOMxRef("Element/load_event", "load")}} enviado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the server specifies a single origin (that may dynamically change based on the requesting origin as part of an allowlist) rather than the "`*`" wildcard, then the server should also include `Origin` in the {{HTTPHeader("Vary")}} response header to indicate to clients that server responses will differ based on the value of the {{HTTPHeader("Origin")}} request header.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053915Z" creationid="gitnacho" creationdate="20221012T053915Z">
        <seg>Si el servidor especifica un solo origen (que puede cambiar dinámicamente según el origen solicitante como parte de una lista de permitidos) en lugar del comodín "`*`", entonces el servidor también debe incluir `Origin` en el encabezado de respuesta {{HTTPHeader("Vary")}} para indicar a los clientes que las respuestas del servidor diferirán según el valor del encabezado de solicitud {{HTTPHeader("Origin")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the tag was used to throw an exception that propagated to JavaScript, we could use the tag to inspect its values.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015525Z" creationid="gitnacho" creationdate="20221008T015525Z">
        <seg>Si la etiqueta se usó para lanzar una excepción que se propagó a JavaScript, podríamos usar la etiqueta para inspeccionar sus valores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the value is a promise, that promise is returned; if the value is a [thenable](/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise#thenables), `Promise.resolve()` will call the `then()` method with two callbacks it prepared; otherwise the returned promise will be fulfilled with the value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T081815Z" creationid="gitnacho" creationdate="20221002T072910Z">
        <seg>Si el valor es una promesa, se devuelve esa promesa; si el valor es [*thenable*](/es/docs/Web/JavaScript/Reference/Global_Objects/Promise#thenables), `Promise.resolve()` llamará al método `then()` con dos devoluciones de llamada que preparó; de lo contrario, la promesa devuelta se completará con el valor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If the wasm module code is updated, or its URL changes, you will need to update `dbVersion`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T050958Z" creationid="gitnacho" creationdate="20221004T050958Z">
        <seg>Si el código del módulo `wasm` se actualiza o su URL cambia, deberás actualizar `dbVersion`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If there is a matching URL request in the {{domxref("Cache")}} object, then the code returns a resolved promise for fetching the response from the cache.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220922T210449Z">
        <seg>Si hay una solicitud de URL coincidente en el objeto {{DOMxRef("Cache")}}, el código devuelve una promesa resuelta para obtener la respuesta de la caché.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If there is an existing service worker available, the new version is installed in the background, but not yet activated — at this point it is called the _worker in waiting_.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T215219Z" creationid="gitnacho" creationdate="20221002T141704Z">
        <seg>Si hay disponible un *service worker* existente, la nueva versión se instala en segundo plano, pero aún no está activada; en este punto, se llama _worker en espera_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If there is no matching cache entry or preloaded response, the code starts a new fetch operation from the network and returns the (unresolved) promise for that fetch operation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210535Z" creationid="gitnacho" creationdate="20220922T210535Z">
        <seg>Si no hay una entrada de caché coincidente o una respuesta precargada, el código inicia una nueva operación de recuperación desde la red y devuelve la promesa (no resuelta) para esa operación de recuperación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If there is no result type, the stack must be empty.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055146Z" creationid="gitnacho" creationdate="20221007T055146Z">
        <seg>Si no hay ningún tipo de resultado, la pila debe estar vacía.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If there isn't a matching font, the code fetches the font from the network and uses {{domxref("Cache.put()")}} to cache the fetched resource.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T203621Z">
        <seg>Si no hay una fuente coincidente, el código obtiene la fuente de la red y usa {{DOMxRef("Cache.put()")}} para almacenar en caché el recurso obtenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If they are set, `postMessage()` on `Window` objects and dedicated workers will function and allow for memory sharing.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T030839Z" creationid="gitnacho" creationdate="20220923T030839Z">
        <seg>Si están configurados, `postMessage()` en los objetos `Window` y los *workers* dedicados funcionarán y permitirán compartir la memoria.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If this is the first time a service worker has been made available, installation is attempted, then after a successful installation, it is activated.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T141614Z" creationid="gitnacho" creationdate="20221002T141614Z">
        <seg>Si esta es la primera vez que un *service worker* está disponible, se intenta la instalación y, luego de una instalación exitosa, se activa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If we convert our module to binary now (see [Converting WebAssembly text format to wasm](/en-US/docs/WebAssembly/Text_format_to_wasm)), we'll see just the 8 byte module header described in the [binary format](https://webassembly.github.io/spec/core/binary/index.html#high-level-structure):</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053945Z" creationid="gitnacho" creationdate="20221007T053945Z">
        <seg>Si convertimos nuestro módulo a binario ahora (consulta [Convertir el formato de texto de WebAssembly a `wasm`](/es/docs/WebAssembly/Text_format_to_wasm)), veremos solo el encabezado del módulo de 8 bytes descrito en el [formato binario](https://webassembly.github.io/spec/core/binary/index.html#high-level-structure):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If we didn't provide any kind of failure handling, our promise would resolve with `undefined` and we wouldn't get anything returned.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040018Z" creationid="gitnacho" creationdate="20220921T040018Z">
        <seg>Si no proporcionamos ningún tipo de manejo de fallas, nuestra promesa se resolvería con `undefined` y no tendríamos nada devuelto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If we do, we instantiate it with the given import object:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T051641Z" creationid="gitnacho" creationdate="20221004T043746Z">
        <seg>Si lo tenemos, lo instanciamos con el objeto de importación dado:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If we used the older [`WebAssembly.instantiate()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiate) method, which doesn't work on the direct stream, we'd need an extra step of converting the fetched byte code to an {{jsxref("ArrayBuffer")}}, like so:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221005T055703Z">
        <seg>Si usáramos el método anterior [`WebAssembly.instantiate()`](/es/docs/WebAssembly/JavaScript_interface/instantiate), que no funciona en la transmisión directa, necesitaríamos un paso adicional para convertir el código de bytes obtenido en un {{jsxref("ArrayBuffer")}}, así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If we wanted to start writing our references at offset 1, we'd have to write `(i32.const 1)`, and the table size would have to be 3.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072340Z" creationid="gitnacho" creationdate="20221007T072340Z">
        <seg>Si quisiéramos comenzar a escribir nuestras referencias en el desplazamiento 1, tendríamos que escribir `( i32.const 1)`, y el tamaño de la tabla tendría que ser 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If we were being really clever, we would not only request the resource from the network; we would also save it into the cache so that later requests for that resource could be retrieved offline too!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040115Z" creationid="gitnacho" creationdate="20220921T040115Z">
        <seg>Si fuéramos realmente inteligentes, no solo solicitaríamos el recurso de la red; ¡también lo guardaríamos en caché para que las solicitudes posteriores de ese recurso también se puedan recuperar sin conexión!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you Refresh the page, the error may disappear.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T075731Z" creationid="gitnacho" creationdate="20221005T075731Z">
        <seg>Si actualizas la página, el error puede desaparecer.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you are a complete beginner, web development can be challenging — we will hold your hand and provide enough detail for you to feel comfortable and learn the topics properly.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T234201Z" creationid="gitnacho" creationdate="20221012T231752Z">
        <seg>Si eres del todo un principiante, el desarrollo web puede ser un reto —pero no te preocupes, te llevaremos de la mano y te proveeremos de suficientes detalles para hacerte sentir cómodo y que aprendas los temas apropiadamente—.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you are not familiar with Git, check out our [How do I use GitHub Pages?](/en-US/docs/Learn/Common_questions/Using_Github_pages) article, and [Preparing to add the data](/en-US/docs/MDN/Writing_guidelines/Page_structures/Compatibility_tables#preparing_to_add_the_data) for more advanced uses.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T103020Z" creationid="gitnacho" creationdate="20221005T212526Z">
        <seg>Si no estás familiarizado con Git, consulta nuestros artículos [¿Cómo usar las páginas de GitHub?](/es/docs/Learn/Common_questions/Using_Github_pages) y [Preparación para agregar datos](/es/docs/MDN/Writing_guidelines/Page_structures/Compatibility_tables#preparación_para_agregar_datos) para usos más avanzados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you are not sure if front-end web development is for you, and/or you want a gentle introduction before starting a longer and more complete course, work through our [Getting started with the web](/en-US/docs/Learn/Getting_started_with_the_web) module first.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223649Z" creationid="gitnacho" creationdate="20221018T223649Z">
        <seg>Si no estás seguro de si el desarrollo de la interfaz de usuario web es para ti, y/o deseas una breve introducción antes de comenzar un curso más largo y completo, consulta una [Introducción a la Web](/es/docs/Learn/Getting_started_with_the_web).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you are still stuck, feel free to post a question on our [Discourse forum](https://discourse.mozilla.org/c/mdn/learn/250).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223913Z" creationid="gitnacho" creationdate="20221018T223913Z">
        <seg>Si aún estás atascado, no dudes en publicar una pregunta en nuestro [Foro de discusión](https://discourse.mozilla.org/c/mdn/learn/250).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you can't or don't want to use the streaming methods as described above, you can use the non-streaming methods [`WebAssembly.compile()`](/en-US/docs/WebAssembly/JavaScript_interface/compile) / [`WebAssembly.instantiate()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiate) instead.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T181626Z" creationid="gitnacho" creationdate="20221006T181626Z">
        <seg>Si no puedes o no quieres usar los métodos de transmisión como se describió anteriormente, en su lugar, puedes usar los métodos que no son de transmisión [`WebAssembly.compile()`](/es/docs/WebAssembly/JavaScript_interface/compile) / [`WebAssembly.instantiate()`](/es/docs/WebAssembly/JavaScript_interface/instantiate).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you check out the generated WebAssembly code size, it may be a few hundred kilobytes.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064408Z" creationid="gitnacho" creationdate="20221004T064408Z">
        <seg>Si verificas el tamaño del código WebAssembly generado, puede ser de unos pocos cientos de kilobytes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you edit the page, you'll probably see a macro like this at the bottom of the page:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082237Z" creationid="gitnacho" creationdate="20221005T082237Z">
        <seg>Si editas la página, probablemente verás una macro como esta en la parte inferior de la página:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you find a page that doesn't have an associated interactive example, you are welcome to contribute one!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T210141Z" creationid="gitnacho" creationdate="20221005T210141Z">
        <seg>Si encuentras una página que no tiene un ejemplo interactivo asociado, puedes contribuir con uno.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you have a function defined in your C code that you want to call as needed from JavaScript, you can do this using the Emscripten `ccall()` function, and the `EMSCRIPTEN_KEEPALIVE` declaration (which adds your functions to the exported functions list (see [Why do functions in my C/C++ source code vanish when I compile to JavaScript, and/or I get No functions to process?](https://emscripten.org/docs/getting_started/FAQ.html#why-do-functions-in-my-c-c-source-code-vanish-when-i-compile-to-javascript-and-or-i-get-no-functions-to-process))).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T044637Z" creationid="gitnacho" creationdate="20221003T111559Z">
        <seg>Si tienes una función definida en tu código C que deseas llamar según sea necesario desde JavaScript, lo puedes hacer usando la función `ccall()` de Emscripten y la declaración `EMSCRIPTEN_KEEPALIVE` (que agrega tus funciones a la lista de funciones exportadas (consulta [¿Por qué las funciones en mi código fuente C/C++ desaparecen cuando compilo en JavaScript y/o no obtengo funciones para procesar?](https://emscripten.org/docs/getting_started/FAQ.html#why-do-functions-in-my-c-c-source-code-vanish-when-i-compilo-to-javascript-and-or-i-get-no-functions-to-process))).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you have already [compiled a module from another language using tools like Emscripten](/en-US/docs/WebAssembly/C_to_wasm), or [loaded and run the code yourself](/en-US/docs/WebAssembly/Loading_and_running), the next step is to learn more about using the other features of the WebAssembly JavaScript API.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T111406Z" creationid="gitnacho" creationdate="20221006T111217Z">
        <seg>Si ya [compilaste un módulo de otro lenguaje usando herramientas como Emscripten](/es/docs/WebAssembly/C_to_wasm), o [cargaste y ejecutaste el código tú mismo](/es/docs/WebAssembly/Loading_and_running) , el siguiente paso es obtener más información sobre el uso de otras características de la API de JavaScript de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you have built a simple web page (see [HTML basics](/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics) for an example), you will probably want to put it online, on a web server.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T095857Z">
        <seg>If you have built a simple web page (see [HTML basics](/es/docs/Learn/Getting_started_with_the_web/HTML_basics) for an example), you will probably want to put it online, on a web server.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you have some Rust code, you can compile it into [WebAssembly](/en-US/docs/WebAssembly) (wasm).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T060930Z" creationid="gitnacho" creationdate="20221004T060930Z">
        <seg>Si tienes código Rust, lo puedes compilar en [WebAssembly](/es/docs/WebAssembly) (wasm).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you leave it out, it will default to this value anyway, but we specified it here for illustration purposes.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T025023Z" creationid="gitnacho" creationdate="20220921T025023Z">
        <seg>Si lo omites, tendrá este valor predeterminado de todos modos, pero lo especificamos aquí con fines ilustrativos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you load the above example in a [WebAssembly-supporting browser](/en-US/docs/WebAssembly#browser_compatibility), and run the following lines in your console:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T111359Z" creationid="gitnacho" creationdate="20221006T085849Z">
        <seg>Si cargas el ejemplo anterior en un [navegador compatible con WebAssembly](/es/docs/WebAssembly#compatibilidad_con_navegadores), y ejecutas las siguientes líneas en tu consola:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you load the example in your browser again, you'll see the same thing as before!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T112147Z" creationid="gitnacho" creationdate="20221003T112147Z">
        <seg>Si vuelves a cargar el ejemplo en tu navegador, ¡verás lo mismo que antes!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you need help or want to contact us, you'll find the information here.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T200618Z" creationid="gitnacho" creationdate="20221008T200618Z">
        <seg>Si necesitas ayuda o nos quieres contactar, aquí encontrarás la información.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you need to call another template from within a block of code, do not use `&lt;%` … `%&gt;`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072430Z" creationid="gitnacho" creationdate="20221005T072430Z">
        <seg>Si necesitas llamar a otra plantilla desde dentro de un bloque de código, no uses `&lt;%` … `%&gt;`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you need to use table features that are not supported in GFM, use HTML for the table.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184304Z" creationid="gitnacho" creationdate="20221008T184208Z">
        <seg>Si necesitas usar funciones de tabla que no son compatibles con GFM, usa HTML para la tabla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you prefer to copy the repo in a more flexible way that allows for automatic updates, you can follow the more complex instructions:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T173422Z" creationid="Nachec" creationdate="20221020T173422Z">
        <seg>Si prefieres copiar el código de una forma más flexible que te permita actualizaciones automáticas, puedes seguir estas instrucciones más complejas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you save your example code now and load it a browser that supports WebAssembly, you'll see this in action!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T181438Z" creationid="gitnacho" creationdate="20221006T181438Z">
        <seg>Si guardas tu código de ejemplo ahora y lo cargas en un navegador compatible con WebAssembly, ¡lo verás en acción!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you still can't figure out what's going on, see [Troubleshooting KumaScript errors](/en-US/docs/MDN/Tools/KumaScript/Troubleshooting) for help.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T194035Z" creationid="gitnacho" creationdate="20221005T095130Z">
        <seg>Si aún no puedes averiguar qué está pasando, consulta [Solución de errores de KumaScript](/es/docs/MDN/Tools/KumaScript/Troubleshooting) para obtener ayuda.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you want to access the memory created in JS from Wasm or vice versa, you can pass a reference to the memory from one side to the other.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000220Z" creationid="gitnacho" creationdate="20221008T000220Z">
        <seg>Si deseas acceder a la memoria creada en JS desde `Wasm` o viceversa, puedes pasar una referencia a la memoria de un lado a otro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you want to copy them all to your computer, the easiest way is to [download a ZIP of the latest master code branch](https://codeload.github.com/mdn/learning-area/zip/main).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T173405Z" creationid="Nachec" creationdate="20221020T173405Z">
        <seg>Si quieres, los puedes copiar para tenerlos en tu ordenador, la manera más fácil es [descargar un ZIP de la última rama del código maestro](https://github.com/mdn/learning-area/archive/master.zip).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you want to follow along with the example, save the above our module into a file called `add.wat`, then convert it into a binary file called `add.wasm` using wabt (see [Converting WebAssembly text format to wasm](/en-US/docs/WebAssembly/Text_format_to_wasm) for details).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T082715Z" creationid="gitnacho" creationdate="20221007T060845Z">
        <seg>Si deseas continuar con el ejemplo, guarda nuestro módulo anterior en un archivo llamado `add.wat`, luego conviértelo en un archivo binario llamado a `add.wasm` usando `wabt` (consulta [Convertir el formato de texto de WebAssembly a `wasm`](/es/docs/WebAssembly/Text_format_to_wasm) para obtener más detalles).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you want to get in touch with us about anything, the best way is to drop us a message on our [Discourse forum](https://discourse.mozilla.org/c/mdn/236).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T174012Z" creationid="Nachec" creationdate="20221020T174012Z">
        <seg>Si tienes alguna pregunta o deseas saber hacia dónde ir, Mozilla es una comunidad mundial de entusiastas de la web, incluyendo mentores y profesores, encantados de ayudarte. Ponte en contacto con ellos mediante WebMaker: Conoce y dialoga con los mentores y profesores en el [Foro de Discusión en Español](https://discourse.mozilla.org/c/community-portal/mozilla-hispano/). Encuentra [Eventos](https://foro.mozilla-hispano.org/c/difusion-eventos) y aprende acerca de la Web con profesionales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you want to submit an example, you can find out how at the [interactive examples repo Contribution guide](https://github.com/mdn/interactive-examples/blob/main/CONTRIBUTING.md).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T210127Z" creationid="gitnacho" creationdate="20221005T210127Z">
        <seg>Si deseas enviar un ejemplo, puedes averiguar cómo hacerlo en la [guía de contribución del repositorio de ejemplos interactivos](https://github.com/mdn/interactive-examples/blob/main/CONTRIBUTING.md).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you want to talk to us and ask questions, join the discussion on the [MDN Web Docs chat room](https://chat.mozilla.org/#/room/#mdn:mozilla.org) on [Matrix](https://wiki.mozilla.org/Matrix).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T200520Z" creationid="gitnacho" creationdate="20221008T200520Z">
        <seg>Si deseas hablar con nosotros y hacer preguntas, únete a la discusión en la [sala de chat de MDN Web Docs](https://chat.mozilla.org/#/room/#mdn:mozilla.org) en [Matrix](https://wiki.mozilla.org/Matrix).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you want to use the WebAssembly module with npm, we'll need to make a few changes.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065137Z" creationid="gitnacho" creationdate="20221004T065137Z">
        <seg>Si deseas utilizar el módulo WebAssembly con npm, deberemos realizar algunos cambios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you write a live sample in the "Examples" section, provide a descriptive H3 heading (`###`) for this live sample example.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211038Z" creationid="gitnacho" creationdate="20221005T210955Z">
        <seg>Si escribes una muestra en vivo en la sección "Ejemplos", proporciona un encabezado H3 (`###`) descriptivo para este ejemplo de muestra en vivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you're interested in helping develop/improve the content, take a look at [how you can help](/en-US/docs/MDN/Contribute) and get in touch!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T174130Z" creationid="Nachec" creationdate="20221020T174130Z">
        <seg>Si estás interesado en ayudar a desarrollar/mejorar el contenido, consulta [cómo puedes ayudar](/es/docs/Learn/Como_Contribuir) y, ¡pónte en contacto!; estaremos más que felices de hablar contigo, bien seas un alumno, un maestro, un desarrollador web experimentado o alguien más, interesado en ayudar a mejorar la experiencia de aprendizaje.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you're just starting, you might be confused by the array of code editors, frameworks, and testing tools out there.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T042643Z" creationid="gitnacho" creationdate="20220925T042643Z">
        <seg>Si recién estás comenzando, es posible que te sientas confundido por la variedad de editores de código, marcos de desarrollo y herramientas de prueba que existen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you're not sure how to do that, refer to [Running a simple local HTTP server](/en-US/docs/Learn/Common_questions/set_up_a_local_testing_server#running_a_simple_local_http_server).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T112736Z" creationid="gitnacho" creationdate="20221004T064958Z">
        <seg>Si no estás seguro de cómo hacerlo, consulta [Ejecutar un servidor HTTP local simple](/es/docs/Learn/Common_questions/set_up_a_local_testing_server#ejecutar_un_servidor_http_local_simple).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you're not using a particular language type (for example, if you are not using JavaScript) or if you are hiding it, then you should omit the corresponding heading.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211247Z" creationid="gitnacho" creationdate="20221005T211247Z">
        <seg>Si no estás utilizando un tipo de lenguaje en particular (por ejemplo, si no estás utilizando JavaScript) o si lo estás ocultando, debes omitir el encabezado correspondiente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If you've used `Gemfile` from Bundler or `package.json` from npm, this is likely to be familiar; Cargo works in a similar manner to both of them.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061809Z" creationid="gitnacho" creationdate="20221004T061809Z">
        <seg>Si has utilizado `Gemfile` de Bundler o `package.json` de npm, es probable que te resulte familiar; Cargo funciona de manera similar a ambos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If your service worker has previously been installed, but then a new version of the worker is available on refresh or page load, the new version is installed in the background, but not yet activated.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T053205Z" creationid="gitnacho" creationdate="20220921T041715Z">
        <seg>Si tu *service worker* se instaló anteriormente, pero luego está disponible una nueva versión del *worker* al actualizar o cargar la página, la nueva versión se instala en segundo plano, pero aún no está activada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>If, after a few tries, the error persists - [file an IT bug](https://bugzilla.mozilla.org/enter_bug.cgi?product=mozilla.org&amp;format=itrequest) for Mozilla Developer Network to ask for an investigation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T090917Z" creationid="gitnacho" creationdate="20221005T082114Z">
        <seg>Si después de algunos intentos, el error persiste: [presenta un error en IT](https://bugzilla.mozilla.org/enter_bug.cgi?product=mozilla.org&amp;format=itrequest) para que Mozilla Developer Network solicite una investigación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Implements the document object model (DOM) representation of the font element.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220903T185336Z" creationid="gitnacho" creationdate="20220903T185336Z">
        <seg>Implementa la representación del modelo de objeto de documento (DOM) del elemento de fuente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Imported functions are just like normal functions: they have a signature that WebAssembly validation checks statically, and they are given an index and can be named and called.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061459Z" creationid="gitnacho" creationdate="20221007T061459Z">
        <seg>Las funciones importadas son como las funciones normales: tienen una firma que la validación de WebAssembly verifica estáticamente, se les proporciona un índice y se les puede nombrar y llamar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210113T061638Z" creationid="nacho" creationdate="20210113T061638Z">
        <seg>En</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In 2020, a new, secure approach has been standardized to re-enable shared memory.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T023633Z" creationid="gitnacho" creationdate="20220923T023633Z">
        <seg>En 2020, se estandarizó un enfoque nuevo y seguro para volver a habilitar la memoria compartida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In Firefox 3.6, calling `document.write()` has an unpredictable effect.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134751Z" creationid="gitnacho" creationdate="20221003T134751Z">
        <seg>En Firefox 3.6, llamar a `document.write()` tiene un efecto impredecible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In Firefox 4, calling `document.write()` from an async script has no effect (other than printing a warning to the error console).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134806Z" creationid="gitnacho" creationdate="20221003T134806Z">
        <seg>En Firefox 4, llamar a `document.write()` desde un script asíncrono no tiene ningún efecto (aparte de imprimir una advertencia en la consola de errores).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In Firefox 4, the `async` DOM property defaults to `true` for script-created scripts, so the default behavior matches the behavior of IE and WebKit.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134655Z" creationid="gitnacho" creationdate="20221003T134655Z">
        <seg>En Firefox 4, la propiedad DOM `async` tiene como valor predeterminado `true` para los scripts `script-created`, por lo que el comportamiento predeterminado coincide con el comportamiento de IE y WebKit.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In Firefox 54+, the Developer Tool Debugger Panel has functionality to expose the text representation of any wasm code included in a web page.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T181736Z" creationid="gitnacho" creationdate="20221006T181736Z">
        <seg>En Firefox 54+, el panel del depurador de herramientas para desarrolladores tiene la funcionalidad de exponer la representación de texto de cualquier código `wasm` incluido en una página web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In Firefox, service worker APIs are also hidden and cannot be used when the user is in [private browsing mode](https://support.mozilla.org/en-US/kb/private-browsing-use-firefox-without-history).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T235508Z" creationid="gitnacho" creationdate="20221002T135113Z">
        <seg>En Firefox, las APIs de *service worker* también están ocultas y no se pueden usar cuando el usuario está en [modo de navegación privada](https://support.mozilla.org/es/kb/navegacion-privada-Firefox-no-guardar-historial-navegacion).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In GFM (but not CommonMark) there is a syntax for tables: &lt;https://github.github.com/gfm/#tables-extension-&gt;.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183947Z" creationid="gitnacho" creationdate="20221008T183947Z">
        <seg>En GFM (pero no en CommonMark) hay una sintaxis para las tablas: &lt;https://github.github.com/gfm/#tables-extension-&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In GFM and CommonMark, authors can use "code fences" to demarcate `&lt;pre&gt;` blocks.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174354Z" creationid="gitnacho" creationdate="20221008T174354Z">
        <seg>En GFM y CommonMark, los autores pueden usar "cercas de código" para delimitar bloques `&lt;pre&gt;`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In GFM table syntax, authors can omit leading and trailing pipes for rows.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184524Z" creationid="gitnacho" creationdate="20221008T184524Z">
        <seg>En la sintaxis de la tabla GFM, los autores pueden omitir las barras iniciales y finales de las filas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In GFM this will look like:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185345Z" creationid="gitnacho" creationdate="20221008T185345Z">
        <seg>En GFM esto se verá así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In GFM/CommonMark, this would produce the following HTML:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183349Z" creationid="gitnacho" creationdate="20221008T183349Z">
        <seg>En GFM/CommonMark, esto produciría el siguiente HTML:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In JavaScript, a Memory instance can be thought of as a resizable [`ArrayBuffer`](/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer) (or [`SharedArrayBuffer`](/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer), in the case of shared memories) and, just as with `ArrayBuffers`, a single web app can create many independent Memory objects.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T120537Z" creationid="gitnacho" creationdate="20221006T182303Z">
        <seg>En JavaScript, una instancia de memoria se puede considerar como un [`ArrayBuffer`](/es/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer) de tamaño variable (o [`SharedArrayBuffer`](/es/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer), en el caso de memorias compartidas) y, al igual que con `ArrayBuffers`, una sola aplicación web puede crear muchos objetos de memoria independientes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In JavaScript, the equivalent calls to create such a table instance would look something like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072439Z" creationid="gitnacho" creationdate="20221007T072439Z">
        <seg>En JavaScript, las llamadas equivalentes para crear una instancia de tabla de este tipo se verían así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In KumaScript, the locale of the current document is exposed as an environment variable:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082425Z" creationid="gitnacho" creationdate="20221005T082425Z">
        <seg>En KumaScript, la configuración regional del documento actual se expone como una variable de entorno:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In MDN, writers will use code fences for example code blocks.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T102155Z" creationid="gitnacho" creationdate="20221008T102155Z">
        <seg>En MDN, los escritores usarán cercas de código como bloques de código de ejemplo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In WebAssembly text format, it looks something like this (see [global.wat](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/global.wat) in our GitHub repo; also see [global.html](https://mdn.github.io/webassembly-examples/js-api-examples/global.html) for a live JavaScript example):</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T063506Z" creationid="gitnacho" creationdate="20221007T063506Z">
        <seg>En formato de texto de WebAssembly, se parece a esto (ve [global.wat](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/global.wat) en nuestro repositorio de GitHub; también consulta [global.html](https://mdn.github.io/webassembly-examples/js-api-examples/global.html) para ver un ejemplo de JavaScript en vivo):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In _Installing basic software_, we show you what tools you need to do simple web development and how to install them properly.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T154605Z" creationid="gitnacho" creationdate="20221012T154605Z">
        <seg>La _Instalación de software básico_, te muestra las herramientas que necesitas para hacer el desarrollo web simple, y la forma de instalarlas correctamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In `shared1.wat`, we export a function called `doIt` — this function creates two constants containing the values `0` and `42`, then calls `i32.store` to store a provided value at a provided index of the imported memory.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074023Z" creationid="gitnacho" creationdate="20221007T074023Z">
        <seg>En `shared1.wat`, exportamos una función llamada `doIt`: esta función crea dos constantes que contienen los valores `0` y `42`, luego llama a `i32.store` para almacenar un valor proporcionado en un índice proporcionado de la `memory` importada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In `table2.html`, we create a `WebAssembly.Table`:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T005430Z" creationid="gitnacho" creationdate="20221020T005430Z">
        <seg>En `table2.html`, creamos una `WebAssembly.Table`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In a case like this it would be better to use HTML.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185634Z" creationid="gitnacho" creationdate="20221008T185634Z">
        <seg>En un caso como este, sería mejor usar HTML.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In a higher level, more expressive language like JavaScript, you could imagine doing the same thing with an array (or probably more likely, object) containing functions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072925Z" creationid="gitnacho" creationdate="20221007T072925Z">
        <seg>En un lenguaje de nivel superior y más expresivo como JavaScript, te podrías imaginar haciendo lo mismo con un arreglo (o quizá probablemente, un objeto) que contenga funciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In a native implementation of C/C++, a function pointer is represented by the raw address of the function's code in the process's virtual address space and so, for the safety reasons mentioned above, cannot be stored directly in linear memory.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T232947Z" creationid="gitnacho" creationdate="20221006T232947Z">
        <seg>En una implementación nativa de C/C++, un puntero de función está representado por la dirección sin procesar del código de la función en el espacio de direcciones virtuales del proceso y, por lo tanto, por las razones de seguridad mencionadas anteriormente, no se puede almacenar directamente en la memoria lineal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In a normal compiled C program, you'd call a function to allocate some memory for the string, but since we're just writing our own assembly here and we own the entire linear memory, we can just write the string contents into global memory using a `data` section.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T084134Z" creationid="gitnacho" creationdate="20221007T064617Z">
        <seg>En un programa C compilado normal, llamarías a una función para asignar algo de memoria para la cadena, pero dado que solo estamos escribiendo nuestro propio ensamblador aquí y poseemos toda la memoria lineal, podemos escribir el contenido de la cadena en la memoria global utilizando una sección `data`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In a nutshell, the process works as follows:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T085858Z" creationid="gitnacho" creationdate="20221003T081057Z">
        <seg>En resumen, el proceso es el siguiente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In addition to viewing WebAssembly as text, developers are able to debug (place breakpoints, inspect the callstack, single-step, etc.) WebAssembly using the text format.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T181828Z" creationid="gitnacho" creationdate="20221006T181828Z">
        <seg>Además de ver WebAssembly como texto, los desarrolladores pueden depurar (colocar puntos de interrupción, inspeccionar la pila de llamadas, un solo paso, etc.) WebAssembly usando el formato de texto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In addition, newer implementations can also create [shared memories](/en-US/docs/WebAssembly/Understanding_the_text_format#shared_memories), which can be transferred between Window and Worker contexts using [`postMessage()`](/en-US/docs/Web/API/Window/postMessage), and used in multiple places.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T112225Z" creationid="gitnacho" creationdate="20221006T182231Z">
        <seg>Además, las implementaciones más nuevas también pueden crear [memorias compartidas](/es/docs/WebAssembly/Understanding_the_text_format#memoria_compartida), que se pueden transferir entre los contextos de Windows y Worker usando [`postMessage()`](/es/docs/Web/API/Window/postMessage), y se utilizan en varios lugares.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In addition, the following methods require a secure context (even if the associated API does not):</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T233202Z" creationid="gitnacho" creationdate="20221018T233202Z">
        <seg>Además, los siguientes métodos requieren un contexto seguro (incluso si la API asociada no lo necesita):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In addition, work is underway to change this to be a {{domxref("DOMHighResTimeStamp")}} instead.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204628Z">
        <seg>Además, se está trabajando para cambiar esto a {{DOMxRef("DOMHighResTimeStamp")}} en su lugar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In addition, you'll find helpful articles about how the code works, how to build add-ons for Mozilla applications and the like.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T205751Z" creationid="gitnacho" creationdate="20221006T205751Z">
        <seg>Además, encontrarás artículos útiles sobre cómo funciona el código, cómo crear complementos para las aplicaciones de Mozilla y cosas por el estilo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In both cases, the `SharedArrayBuffer` object is transmitted to the receiver resulting in a new, private `SharedArrayBuffer` object in the receiving agent (just as for {{jsxref("ArrayBuffer")}}).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T023309Z" creationid="gitnacho" creationdate="20220923T023309Z">
        <seg>En ambos casos, el objeto `SharedArrayBuffer` se transmite al receptor, lo que da como resultado un nuevo objeto `SharedArrayBuffer` privado en el agente receptor (igual que para {{jsxref("ArrayBuffer")}}).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In both the binary and textual formats, the fundamental unit of code in WebAssembly is a module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053506Z" creationid="gitnacho" creationdate="20221007T053506Z">
        <seg>Tanto en formato binario como textual, la unidad fundamental de código en WebAssembly es un módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In earlier browsers, this identified the scripting language of the embedded or imported (via the `src` attribute) code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T130618Z" creationid="gitnacho" creationdate="20221003T130618Z">
        <seg>En navegadores anteriores, esto identificaba el lenguaje del script del código incrustado o importado (a través del atributo `src`).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In essence, it lets you obtain access to any hardware source of media data.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220913T034447Z" creationid="gitnacho" creationdate="20220913T034447Z">
        <seg>En esencia, te permite obtener acceso a cualquier fuente de hardware de datos multimedia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In fact, that's the next section.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062452Z" creationid="gitnacho" creationdate="20221004T062452Z">
        <seg>De hecho, esa es la siguiente sección.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In fact, the basic unit of WebAssembly code is called a module and WebAssembly modules are symmetric in many ways to ES modules.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T010717Z" creationid="gitnacho" creationdate="20221003T010717Z">
        <seg>De hecho la unidad básica de código en WebAssembly se llama módulo y los módulos en WebAssembly son simétricos de muchas maneras a los módulos de ES2015.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In future iterations, more element types will be added.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T232907Z" creationid="gitnacho" creationdate="20221006T232907Z">
        <seg>En iteraciones futuras, se agregarán más tipos de elementos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In older browsers that don't support the `async` attribute, parser-inserted scripts block the parser; script-inserted scripts execute asynchronously in IE and WebKit, but synchronously in Opera and pre-4 Firefox.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134550Z" creationid="gitnacho" creationdate="20221003T134550Z">
        <seg>En los navegadores antiguos que no admiten el atributo `async`, los scripts insertados en el analizador bloquean el analizador; Los `script-inserted` en scripts se ejecutan de forma asíncrona en IE y WebKit, pero de forma síncrona en Opera y Firefox anterior a 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In order to facilitate local development, `localhost` is considered a secure origin by browsers as well.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T020708Z" creationid="gitnacho" creationdate="20220921T020708Z">
        <seg>Para facilitar el desarrollo local, los navegadores también consideran `localhost` como un origen seguro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In order to get the values of an exception, the tag must be "known" to the calling code;
it may be either imported into or exported from the calling code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142707Z" creationid="gitnacho" creationdate="20221019T142707Z">
        <seg>Para obtener los valores de una excepción, la etiqueta debe ser "conocida" por el código que la llama; se puede importar o exportar desde el código de la llamada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In order to make exception-throwing faster, exceptions thrown from WebAssembly generally do not include a stack trace.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T022929Z" creationid="gitnacho" creationdate="20221008T022929Z">
        <seg>Para hacer que el lanzamiento de excepciones sea más rápido, las excepciones lanzadas desde WebAssembly generalmente no incluyen un seguimiento de la pila.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In order to return the response to the browser and put it in the cache we have to clone it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040341Z" creationid="gitnacho" creationdate="20220921T040341Z">
        <seg>Para devolver la respuesta al navegador y ponerla en caché la tenemos que clonar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In other words,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210929T104641Z" creationid="gitnacho" creationdate="20210929T104641Z">
        <seg>En otras palabras,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In other words, documents will have to be reloaded to actually be controlled, because a document starts life with or without a Service worker and maintains that for its lifetime.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T213847Z" creationid="gitnacho" creationdate="20220921T023148Z">
        <seg>En otras palabras, los documentos se deberán volver a cargar para controlarlos realmente, porque un documento comienza con o sin un *service worker* y lo mantiene durante toda su vida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In other words, the request for a specific set of hints does not expire until the browser is shut down.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092015Z" creationid="gitnacho" creationdate="20221012T092015Z">
        <seg>En otras palabras, la solicitud de un conjunto específico de sugerencias no caduca hasta que se cierra el navegador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In other words, you may specify either the URL of the file to read or as a file object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082605Z" creationid="gitnacho" creationdate="20221005T082605Z">
        <seg>En otras palabras, puedes especificar la URL del archivo para leer o como un objeto `file`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In our example, the worker is at `https://bncb2v.csb.app/sw.js`, and the app's root is `https://bncb2v.csb.app/`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T053150Z" creationid="gitnacho" creationdate="20220921T025653Z">
        <seg>En nuestro ejemplo, el *worker* está en `https://bncb2v.csb.app/sw.js` y la raíz de la aplicación es `https://bncb2v.csb.app/`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In our wasm-utils.js library script, you'll find `instantiateCachedURL()` — this function fetches the wasm module at `url` with a version of `dbVersion`, instantiates it with the given `importObject`, and returns a promise resolving to the finished wasm Instance.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T050832Z" creationid="gitnacho" creationdate="20221004T050832Z">
        <seg>En nuestro script de la biblioteca `wasm-utils.js`, encontrarás `instantiateCachedURL()`: esta función obtiene el módulo `wasm` en `url` con una versión de `dbVersion`, lo instancia con el `importObject` dado y devuelve una promesa terminada que resuelve la Instancia `wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In particular:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191326Z" creationid="gitnacho" creationdate="20221008T191326Z">
        <seg>En particular:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In practice this means that every locale supported by MDN must supply its own translation of these strings, and the platform must recognize them as indicating that the construct needs special treatment.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181527Z" creationid="gitnacho" creationdate="20221008T181527Z">
        <seg>En la práctica, esto significa que cada configuración regional admitida por MDN debe proporcionar su propia traducción de estas cadenas, y la plataforma debe reconocerlas como una indicación de que la construcción necesita un tratamiento especial.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In response, the server returns a {{HTTPHeader("Access-Control-Allow-Origin")}} header with `Access-Control-Allow-Origin: *`, which means that the resource can be accessed by **any** origin.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222133Z" creationid="gitnacho" creationdate="20221011T222133Z">
        <seg>En respuesta, el servidor devuelve un encabezado {{HTTPHeader("Access-Control-Allow-Origin")}} con `Access-Control-Allow-Origin: *`, lo cual significa que **cualquiera** puede acceder al recurso origen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In short, `wasm-pack build`:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064122Z" creationid="gitnacho" creationdate="20221004T064122Z">
        <seg>En resumen, `wasm-pack build`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In that preflight, the browser sends headers that indicate the HTTP method and headers that will be used in the actual request.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T212844Z" creationid="gitnacho" creationdate="20221011T212844Z">
        <seg>En esa verificación previa, el navegador envía encabezados que indican el método HTTP y los encabezados que se utilizarán en la solicitud real.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the **Result** subsection, add the call to the [`EmbedLiveSample` macro](/en-US/docs/MDN/Writing_guidelines/Page_structures/Live_samples#live_sample_macros).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T102634Z" creationid="gitnacho" creationdate="20221005T211154Z">
        <seg>En la subsección **Resultado**, agrega la llamada a la [macro `EmbedLiveSample`](/es/docs/MDN/Writing_guidelines/Page_structures/Live_samples#macros_de_muestra_en_vivo).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the articles listed below, we'll cover all the essential aspects of structuring, styling, and interacting with web forms.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131247Z" creationid="gitnacho" creationdate="20221020T131247Z">
        <seg>En los artículos enumerados a continuación, se cubrirán todos los aspectos esenciales de la estructuración, estilizado e interacción con los formularios web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the case of the `Uint8ClampedArray` type: `"Uint8ClampedArray"`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050515Z" creationid="gitnacho" creationdate="20221005T050515Z">
        <seg>En el caso del tipo `Uint8ClampedArray`: `"Uint8ClampedArray"`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the code example, `caches` is a property of the {{domxref("ServiceWorkerGlobalScope")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T203828Z">
        <seg>En el código de ejemplo, `caches` es una propiedad de {{DOMxRef("ServiceWorkerGlobalScope")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the current iteration of WebAssembly, there is only one type of reference needed by WebAssembly code — functions — and thus only one valid element type.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T232900Z" creationid="gitnacho" creationdate="20221006T232900Z">
        <seg>En la iteración actual de WebAssembly, solo se necesita un tipo de referencia para el código de WebAssembly (funciones) y, por lo tanto, solo un tipo de elemento válido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the example above, the page is loaded from `foo.example` but the cookie on line 19 is sent by `bar.other`, and would thus not be saved if the user's browser is configured to reject all third-party cookies.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053525Z" creationid="gitnacho" creationdate="20221012T053525Z">
        <seg>En el ejemplo anterior, la página se carga desde `foo.example` pero `bar.other` envía la *cookie* de la línea 19 y, por lo tanto, no se guardaría si el navegador del usuario está configurado para rechazar todas las *cookies* de terceros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the following code snippet, we make a request to open a database, and include handlers for the success and error cases.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220911T210952Z" creationid="gitnacho" creationdate="20220911T210952Z">
        <seg>En el siguiente fragmento de código, hacemos una solicitud para abrir una base de datos e incluimos controladores para los casos de éxito y error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the following example we define a global as a mutable `i32` type, with a value of 0.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233908Z" creationid="gitnacho" creationdate="20221006T233908Z">
        <seg>En el siguiente ejemplo, definimos un global como un tipo `i32` mutable, con un valor de 0.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the future they will have throttling/offline modes to simulate bad or non-existent connections, which will be a really good thing.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042312Z" creationid="gitnacho" creationdate="20220921T042312Z">
        <seg>En el futuro, tendrán modos de limitación/desconexión para simular conexiones defectuosas o inexistentes, lo que será algo realmente bueno.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the future, WebAssembly modules will be [loadable just like ES modules](https://github.com/WebAssembly/proposals/issues/12) (using `&lt;script type='module'&gt;`), meaning that JavaScript will be able to fetch, compile, and import a WebAssembly module as easily as an ES module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T080442Z" creationid="gitnacho" creationdate="20221003T080442Z">
        <seg>En el futuro, los módulos de WebAssembly se podrán cargar igual que los módulos de [ES2015](https://github.com/WebAssembly/proposals/issues/12) (usar `&lt;script type='module'&gt;`), implica que JavaScript será capaz de ir a buscar, compilar e importar un módulo de WebAssembly tan fácilmente como un módulo de ES2015.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the future, service workers will be able to do a number of other useful things for the web platform that will bring it closer towards native app viability.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T215627Z" creationid="gitnacho" creationdate="20221002T145547Z">
        <seg>En el futuro, los *service workers* podrán hacer otras cosas útiles para la plataforma web que los acercarán a la viabilidad de la aplicación nativa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the future, when multiple tables are allowed, we would also need to specify a table identifier of some kind, along the lines of</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073258Z" creationid="gitnacho" creationdate="20221007T073258Z">
        <seg>En el futuro, cuando se permitan múltiples tablas, también necesitaríamos especificar un identificador de tabla de algún tipo, en la línea de:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the last part of the function, we create a constant with value `0`, then call the function at this index 0 of the table, which is `shared0func`, stored there earlier by the `elem` block in `shared0.wat`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074116Z" creationid="gitnacho" creationdate="20221007T074116Z">
        <seg>En la última parte de la función, creamos una constante con valor `0`, luego llamamos a la función en este índice 0 de la tabla, que es `shared0func`, almacenada allí anteriormente por el bloque `elem` en `shared0.wat `.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the low-level memory model of WebAssembly, memory is represented as a contiguous range of untyped bytes called [Linear Memory](https://webassembly.github.io/spec/core/exec/index.html) that are read and written by [load and store instructions](https://webassembly.github.io/spec/core/exec/instructions.html#memory-instructions) inside the module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T182007Z" creationid="gitnacho" creationdate="20221006T182007Z">
        <seg>En el modelo de memoria de bajo nivel de WebAssembly, la memoria se representa como un rango contiguo de bytes sin tipo llamado [Memoria lineal](https://webassembly.github.io/spec/core/exec/index.html) que se leen y escriben con [instrucciones de carga y almacenamiento](https://webassembly.github.io/spec/core/exec/instructions.html#memory-instructions) dentro del módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the other examples we used the s-expression syntax which doesn't require the `end`, so you won't find it in the other examples here.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T083635Z" creationid="gitnacho" creationdate="20221020T083635Z">
        <seg>En los otros ejemplos, usamos la sintaxis de expresión-S que no requiere el `end`, por lo que no lo encontrarás en los otros ejemplos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the present case, the max age is 86400 seconds (= 24 hours).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T224352Z" creationid="gitnacho" creationdate="20221011T224352Z">
        <seg>En el presente caso, la antigüedad máxima es de 86400 segundos (= 24 horas).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the previous example, the return value of each [`Table.prototype.get()`](/en-US/docs/WebAssembly/JavaScript_interface/Table/get) call is an exported WebAssembly function — exactly what we have been talking about.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085758Z" creationid="gitnacho" creationdate="20221006T085758Z">
        <seg>En el ejemplo anterior, el valor de retorno de cada llamada a [`Table.prototype.get()`](/es/docs/WebAssembly/JavaScript_interface/Table/get) es una función WebAssembly exportada, exactamente sobre de lo que hemos estado hablando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the same fashion as physical assembly languages, the WebAssembly binary format has a text representation — the two have a 1:1 correspondence.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T090326Z" creationid="gitnacho" creationdate="20221003T090326Z">
        <seg>De la misma manera que los lenguajes ensambladores físicos, el formato binario WebAssembly tiene una representación de texto: los dos tienen una correspondencia 1:1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the second line, you will see that the import has a two-level namespace — the internal function `$i` is imported from `imports.imported_func`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T113213Z" creationid="gitnacho" creationdate="20221006T113213Z">
        <seg>En la segunda línea, verás que la importación tiene un espacio de nombres de dos niveles: la función interna `$i` se importa desde `imports.imported_func`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the text format, a module is represented as one big S-expression.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053522Z" creationid="gitnacho" creationdate="20221007T053522Z">
        <seg>En el formato de texto, un módulo se representa como una gran expresión-S.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In the worker (see
[`wasm_worker.js`](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/wasm_worker.js))
we define an import object for the module to use, then set up an event handler to
receive the module from the main thread.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T194523Z" creationid="gitnacho" creationdate="20221007T194523Z">
        <seg>En el *worker* (ve
[`wasm_worker.js`](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/wasm_worker.js)) definimos un objeto `import` para que lo use el módulo, luego configuramos un controlador de eventos para recibir el módulo del hilo principal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this article we show you how to use WebAssembly via the WebAssembly JavaScript API.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T095859Z" creationid="gitnacho" creationdate="20221003T095859Z">
        <seg>En este artículo te mostramos cómo usar WebAssembly mediante la API JavaScript de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this article, we will show you step-by-step how to install the software you need to begin some basic web development.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T042745Z" creationid="gitnacho" creationdate="20220925T042745Z">
        <seg>En este artículo, te mostramos paso a paso cómo instalar solo el software que necesitas para comenzar un desarrollo web básico.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this article, we'll give you an idea of what is possible with this exciting language, and how to get started.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T055606Z" creationid="gitnacho" creationdate="20220925T055606Z">
        <seg>Este artículo te da una idea de lo que es posible con este interesante lenguaje y cómo empezar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this article, we'll set you up with the bare minimum — a text editor and some modern web browsers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T154653Z" creationid="gitnacho" creationdate="20221012T154619Z">
        <seg>En este artículo, configuraremos lo mínimo: un editor de texto y algunos navegadores web modernos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this article, we'll take you through what you need to get started.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T054935Z" creationid="gitnacho" creationdate="20220925T054935Z">
        <seg>En este artículo, te guiaremos a través de lo que necesitas para comenzar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this case, it is just "1".</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T143120Z" creationid="gitnacho" creationdate="20221019T143120Z">
        <seg>En este caso, es solo "1".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this case, it's not modifying an `extern` block, but a `fn`; this means that we want this Rust function to be able to be called by JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063229Z" creationid="gitnacho" creationdate="20221004T063229Z">
        <seg>En este caso, no está modificando un bloque `extern`, sino una `fn`; esto significa que queremos que JavaScript pueda llamar a esta función Rust.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this case, that statement is an `extern`, which tells Rust that we want to call some externally defined functions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062548Z" creationid="gitnacho" creationdate="20221004T062548Z">
        <seg>En este caso, esa declaración es una `extern`, que le dice a Rust que queremos llamar a algunas funciones definidas externamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this case, we are just returning a simple text string:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035445Z" creationid="gitnacho" creationdate="20220921T035445Z">
        <seg>En este caso, solo estamos devolviendo una cadena de texto simple:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this case, we have no imports, but instead we get the exported tag and use that to get the argument.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T143222Z" creationid="gitnacho" creationdate="20221019T143222Z">
        <seg>En este caso, no tenemos importaciones, sino que obtenemos la etiqueta exportada y la usamos para obtener el argumento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this case, we have specified '`'/'`, which means all content under the app's origin.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T025011Z" creationid="gitnacho" creationdate="20220921T025011Z">
        <seg>En este caso, hemos especificado '`'/'`, lo cual significa todo el contenido bajo el origen de la aplicación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this case, we're importing everything in the `wasm_bindgen::prelude` module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062343Z" creationid="gitnacho" creationdate="20221004T062343Z">
        <seg>En este caso, estamos importando todo en el módulo `wasm_bindgen::prelude`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this case, you can escape the first brace with a backslash, like so: `\\{{`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T085305Z" creationid="gitnacho" creationdate="20221005T065714Z">
        <seg>En este caso, puedes escapar la primera llave con una barra invertida, así: `\\{{`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this case:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T044240Z" creationid="gitnacho" creationdate="20211102T044240Z">
        <seg>En este caso:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this example you'll notice an `(export "getAnswerPlus1")` section, declared just after the `func` statement in the second function — this is a shorthand way of declaring that we want to export this function, and defining the name we want to export it as.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061246Z" creationid="gitnacho" creationdate="20221007T061246Z">
        <seg>En este ejemplo, notarás una sección `(export "getAnswerPlus1")`, declarada justo después de la declaración `func` en la segunda función; esta es una forma abreviada de declarar que queremos exportar esta función y definir el nombre con el cual la queremos exportar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this example, content originally loaded from `https://foo.example` makes a simple GET request to a resource on `https://bar.other` which sets Cookies.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230416Z" creationid="gitnacho" creationdate="20221011T230416Z">
        <seg>En este ejemplo, el contenido cargado originalmente desde `https://foo.example` hace una simple Solicitud GET a un recurso en `https://bar.other` que establece *Cookies*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this example, we're using CSS to style paragraphs that have the `fancy` class set.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211338Z" creationid="gitnacho" creationdate="20221005T211338Z">
        <seg>En este ejemplo, estamos usando CSS para estilizar párrafos que tienen el conjunto de clases `fancy`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this form:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182454Z" creationid="gitnacho" creationdate="20221008T182454Z">
        <seg>En esta forma:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this memory model, any load or store can access any byte in the entire linear memory, which is necessary to faithfully represent C/C++ concepts like pointers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T182026Z" creationid="gitnacho" creationdate="20221006T182026Z">
        <seg>En este modelo de memoria, cualquier carga o almacenamiento puede acceder a cualquier byte en toda la memoria lineal, lo cual es necesario para representar fielmente conceptos de C/C++ como punteros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this talk from 2015, several contributors of the MDN project look at the past ten years of [developer.mozilla.org](/), and at the decade to come.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T182716Z" creationid="gitnacho" creationdate="20221019T181510Z">
        <seg>En esta charla de 2015, varios colaboradores del proyecto MDN analizan los últimos diez años de [developer.mozilla.org](/) y la próxima década.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In this tutorial, we build a package using `wasm-pack`, a tool for building JavaScript packages in Rust.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061139Z" creationid="gitnacho" creationdate="20221004T061139Z">
        <seg>En este tutorial, construimos un paquete usando `wasm-pack`, una herramienta para construir paquetes de JavaScript en Rust.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>In your command prompt/terminal, go inside the `learning-area` directory using `cd`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T173717Z" creationid="Nachec" creationdate="20221020T173717Z">
        <seg>En tu intérprete de comandos/terminal, ve dentro del directorio `learning-area` usando `cd`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Inherited from {{jsxref("Error")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T025439Z" creationid="gitnacho" creationdate="20221008T025439Z">
        <seg>Heredado de {{jsxref("Error")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Inside `addResourcesToCache` we use the [`caches.open()`](/en-US/docs/Web/API/CacheStorage/open) method to create a new cache called `v1`, which will be version 1 of our site resources cache.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T230957Z" creationid="gitnacho" creationdate="20220921T034525Z">
        <seg>Dentro de `addResourcesToCache` usamos el método [`caches.open()`](/es/docs/Web/API/CacheStorage/open) para crear un nuevo caché llamado `v1`, que será la versión 1 de nuestro caché de recursos del sitio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Install
3.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T141025Z" creationid="gitnacho" creationdate="20221002T141025Z">
        <seg>Instalación
3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Install Rust by going to the [Install Rust](https://www.rust-lang.org/tools/install) page and following the instructions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061330Z" creationid="gitnacho" creationdate="20221004T061330Z">
        <seg>Instala Rust yendo a la página [Instalar Rust](https://www.rust-lang.org/tools/install) y sigue las instrucciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Installation is attempted when the downloaded file is found to be new — either different to an existing service worker (byte-wise compared), or the first service worker encountered for this page/site.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T141555Z" creationid="gitnacho" creationdate="20221002T141555Z">
        <seg>Se intenta la instalación cuando se descubre que el archivo descargado es nuevo, ya sea diferente a un *service worker* existente (comparado por bytes) o es el primer *service worker* encontrado para esta página/sitio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Installation of the worker is attempted when service worker-controlled pages are accessed subsequently.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T053050Z" creationid="gitnacho" creationdate="20220921T022851Z">
        <seg>Se intenta la instalación del *worker* cuando se accede posteriormente a las páginas controladas por el *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Instead of:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211101T215958Z" creationid="gitnacho" creationdate="20211101T215958Z">
        <seg>En lugar de:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Instead, function references are stored in a table and their indexes, which are integers and can be stored in linear memory, are passed around instead.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233003Z" creationid="gitnacho" creationdate="20221006T233003Z">
        <seg>En su lugar, las referencias a funciones se almacenan en una tabla y sus índices, que son números enteros y se pueden almacenar en la memoria lineal, se transmiten en su lugar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Instead, it is designed to complement and work alongside JavaScript, allowing web developers to take advantage of both languages' strong points:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T005754Z" creationid="gitnacho" creationdate="20221003T005754Z">
        <seg>En lugar de ello, está diseñado para complementar y trabajar en conjunto con JavaScript, permitiendo a los desarrolladores web tener una ventaja sobre las fortalezas de ambos lenguajes:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Instead, service workers give you much more granular control.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T135346Z" creationid="gitnacho" creationdate="20221002T135346Z">
        <seg>En cambio, los *service workers* te brindan un control mucho más granular.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Instead, use the [`Promise.resolve()`](/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve) or [`Promise.reject()`](/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject) [static methods](&lt;https://en.wikipedia.org/wiki/Method_(computer_programming)#Static_methods&gt;).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T120525Z" creationid="gitnacho" creationdate="20221002T090750Z">
        <seg>En su lugar, utiliza [`Promise.resolve()`](/es/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve) o [`Promise.reject()`](/es/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject) [métodos estáticos](&lt;https://en.wikipedia.org/wiki/Method_(computer_programming)#Static_methods&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Interactive examples are intended to be used at the top of MDN reference pages — we are aiming to provide these to improve their value to beginners and other readers who want to just grab and play with an example quickly before seeing all the details of whatever they are looking up.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205834Z" creationid="gitnacho" creationdate="20221005T205834Z">
        <seg>Los ejemplos interactivos están destinados a utilizarse en la parte superior de las páginas de referencia de MDN; nuestro objetivo es proporcionarlos para mejorar su valor para los principiantes y otros lectores que solo desean tomar y jugar con un ejemplo rápidamente antes de ver todos los detalles de lo que sea que estén buscando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Interestingly, other specifications can and will start to make use of the service worker context, for example:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T145630Z" creationid="gitnacho" creationdate="20221002T145630Z">
        <seg>Curiosamente, otras especificaciones pueden y comenzarán a hacer uso del contexto del *service worker*, por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Invoking a template is done with a _macro_, which can be used anywhere in any page content.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065046Z" creationid="gitnacho" creationdate="20221005T065046Z">
        <seg>La invocación de una plantilla se realiza con una _macro_, que se puede utilizar en cualquier parte del contenido de cualquier página.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Invoking the above template would look like this (provided it was saved in the macros directory with a filename of `hello.ejs`):</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065107Z" creationid="gitnacho" creationdate="20221005T065107Z">
        <seg>Invocar la plantilla anterior se vería así (siempre que se haya guardado en el directorio de macros con un nombre de archivo de `hello.ejs`):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It allows JavaScript to call a Rust API with a string, or a Rust function to catch a JavaScript exception.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062432Z" creationid="gitnacho" creationdate="20221004T062432Z">
        <seg>Permite que JavaScript llame a una API de Rust con una cadena o una función de Rust para detectar una excepción de JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It allows access to a cryptographically strong random number generator and to cryptographic primitives.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T020646Z" creationid="gitnacho" creationdate="20220901T020646Z">
        <seg>Permite el acceso a un generador de números aleatorios criptográficamente fuerte y a primitivos criptográficos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It allows scripts to query it and to register themselves to carry on some activities.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220913T040707Z" creationid="gitnacho" creationdate="20220913T040707Z">
        <seg>Permite que los scripts lo consulten y se registren para realizar algunas actividades.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It allows, for example, the addition, modification, or deletion of stored data items.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220916T070547Z" creationid="gitnacho" creationdate="20220916T070547Z">
        <seg>Permite, por ejemplo, la adición, modificación o eliminación de elementos de datos almacenados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It also allocates an output buffer for us that we need to free using `WebPFree()` once we are done with the WebP image.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054711Z" creationid="gitnacho" creationdate="20221004T054711Z">
        <seg>También nos asigna un búfer de salida que necesitamos liberar usando `WebPFree()` una vez que hayamos terminado con la imagen de WebP.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It also registers, installs, and activates a service worker, and when more of the spec is supported by browsers it will cache all the files required so it will work offline!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T023831Z" creationid="gitnacho" creationdate="20220921T023831Z">
        <seg>También registra, instala y activa un *service worker*, y cuando los navegadores admiten más especificaciones, almacenará en caché todos los archivos necesarios para que funcione sin conexión.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It also responds with `Access-Control-Allow-Methods`, which says that `POST` and `GET` are valid methods to query the resource in question (this header is similar to the {{HTTPHeader("Allow")}} response header, but used strictly within the context of access control).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T223103Z" creationid="gitnacho" creationdate="20221011T223103Z">
        <seg>También responde con `Access-Control-Allow-Methods`, que dice que `POST` y `GET` son métodos válidos para consultar el recurso en cuestión (este encabezado es similar al encabezado de respuesta {{HTTPHeader("Allow")}}, pero se usa estrictamente dentro del contexto del control de acceso).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It appears when request is qualified as ["to be preflighted"](/en-US/docs/Web/HTTP/CORS#preflighted_requests) and omitted for [simple requests](/en-US/docs/Web/HTTP/CORS#simple_requests).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T225628Z" creationid="gitnacho" creationdate="20221011T225024Z">
        <seg>Aparece cuando la solicitud se califica como ["para preverificar"](/es/docs/Web/HTTP/CORS#preflighted_requests) y se omite para [solicitudes simples](/es/docs/Web/HTTP/CORS #solicitudes_simples).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It bears repeating: To force templates used on a page to be reloaded after editing, hit Shift-Reload.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T094721Z" creationid="gitnacho" creationdate="20221005T075311Z">
        <seg>Vale la pena repetirlo: para obligar a que las plantillas utilizadas en una página se vuelvan a cargar después de editarlas, presiona "Mayús+Recargar".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It can also be triggered programmatically, such as by calling the [`HTMLElement.click()`](/en-US/docs/Web/API/HTMLElement/click) method of an element, or by defining the event, then sending it to a specified target using [`EventTarget.dispatchEvent()`](/en-US/docs/Web/API/EventTarget/dispatchEvent).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T201654Z" creationid="gitnacho" creationdate="20221011T201654Z">
        <seg>También se puede activar mediante programación, como llamando al método [`HTMLElement.click()`](/es/docs/Web/API/HTMLElement/click) de un elemento, o definiendo el evento y luego enviando a un objetivo específico usando [`EventTarget.dispatchEvent()`](/es/docs/Web/API/EventTarget/dispatchEvent).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It can be one of the following values: `parsed`, `installing`,
`installed,` `activating`, `activated`, or
`redundant`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223308Z" creationid="gitnacho" creationdate="20221003T223308Z">
        <seg>Puede ser uno de los siguientes valores: `parsed`, `installing`,
`installed`, `activating`, `activated` o
`redundant`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It can be used on tags created in JavaScript or created in WebAssembly code and exported to JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T145228Z" creationid="gitnacho" creationdate="20221019T145228Z">
        <seg>Se puede usar en etiquetas creadas en JavaScript o creadas en código WebAssembly y exportadas a JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It can have multiple paragraphs, and code blocks too:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183320Z" creationid="gitnacho" creationdate="20221008T183320Z">
        <seg>Puede tener varios párrafos y también bloques de código:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It contains `{}`s, where variables will be interpolated.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063422Z" creationid="gitnacho" creationdate="20221004T063422Z">
        <seg>Contiene `{}`s, donde se interpolarán las variables.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It contains information about the request and resulting response, and provides the {{DOMxRef("FetchEvent.respondWith", "FetchEvent.respondWith()")}} method, which allows us to provide an arbitrary response back to the controlled page.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151351Z" creationid="gitnacho" creationdate="20221002T151351Z">
        <seg>Contiene información sobre la petición y la respuesta resultante, y proporciona el método {{DOMxRef("FetchEvent.respondWith", "FetchEvent.respondWith()")}}, que nos permite proporcionar una respuesta arbitraria a la página controlada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It does not include any path information, only the server name.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060559Z" creationid="gitnacho" creationdate="20221012T060559Z">
        <seg>No incluye ninguna información de ruta, solo el nombre del servidor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It doesn't implement specific properties or methods.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220908T205841Z" creationid="gitnacho" creationdate="20220908T205841Z">
        <seg>No implementa propiedades o métodos específicos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It exports the method `run` that can be called by external code to call `$throwExnWithStack` (and hence the JavaScript function).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T203943Z" creationid="gitnacho" creationdate="20221019T203943Z">
        <seg>Exporta el método `run` que un código externo puede llamar para invocar a `$throwExnWithStack` (y por lo tanto la función de JavaScript).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It gives Web content access to the location of the device.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220902T062606Z" creationid="gitnacho" creationdate="20220902T062606Z">
        <seg>Da acceso al contenido Web a la ubicación del dispositivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It has approximately this format (see [stack trace conventions](https://webassembly.github.io/spec/web-api/index.html#conventions) in the specification for more information):</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T203732Z" creationid="gitnacho" creationdate="20221019T203732Z">
        <seg>Tiene aproximadamente este formato (consulta [convenciones de seguimiento de pila](https://webassembly.github.io/spec/web-api/index.html#conventions) en la especificación para obtener más información):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It has many advantages — it is dynamically typed, requires no compile step, and has a huge ecosystem that provides powerful frameworks, libraries, and other tools.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T005906Z" creationid="gitnacho" creationdate="20221003T005906Z">
        <seg>Tiene muchas ventajas — es tipado dinámicamente, no necesita el paso de compilación, y tiene un gran ecosistema que lo provee de potentes marcos, librerías y otras herramientas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It has three main parts; let's talk about each of them in turn.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062015Z" creationid="gitnacho" creationdate="20221004T062015Z">
        <seg>Tiene tres partes principales; hablaremos de cada uno de ellos a su vez.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It holds the `CacheStorage` object, by which it can access the {{domxref("CacheStorage")}} interface.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T203840Z">
        <seg>Contiene el objeto `CacheStorage`, mediante el cual puede acceder a la interfaz {{DOMxRef("CacheStorage")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210113T192306Z" creationid="nacho" creationdate="20210113T192306Z">
        <seg>Es</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is a shorthand for
\{{cssxref("margin-top")}}, \{{cssxref("margin-right")}}, \{{cssxref("margin-bottom")}},
and \{{cssxref("margin-left")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191850Z" creationid="gitnacho" creationdate="20221008T191850Z">
        <seg>Es una abreviatura de
\{{cssxref("margin-top")}}, \{{cssxref("margin.right")}}, \{{cssxref("margin-bottom")}},
y \{{cssxref("margin-left")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is also designed to run alongside JavaScript, allowing both to work together.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T094145Z" creationid="gitnacho" creationdate="20221003T094145Z">
        <seg>También está diseñado para correr a la par de JavaScript, permitiendo que ambos trabajen juntos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is also has been [removed](https://bugs.chromium.org/p/chromium/issues/detail?id=582750) from Chromium 95, and is deprecated in Safari.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T015842Z" creationid="gitnacho" creationdate="20220921T015842Z">
        <seg>También se ha [eliminado](https://bugs.chromium.org/p/chromium/issues/detail?id=582750) de Chromium 95 y está obsoleto en Safari.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is also not allowed to point to a service worker of a different origin than that of your app.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T031307Z" creationid="gitnacho" creationdate="20220921T031307Z">
        <seg>Tampoco está permitido apuntar a un *service worker* de un origen diferente al de tu aplicación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is also possible to write Rust code and compile over to WebAssembly, thanks to the tireless work of the Rust WebAssembly Working Group.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T090741Z" creationid="gitnacho" creationdate="20221003T090741Z">
        <seg>También es posible escribir código Rust y compilarlo en WebAssembly, gracias al incansable trabajo del grupo de trabajo de Rust WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is also relatively "privacy-preserving", in that it is up to the client to decide what information it can safely share.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T091602Z" creationid="gitnacho" creationdate="20221012T091602Z">
        <seg>También es relativamente "preservador de la privacidad", ya que depende del cliente decidir qué información puede compartir de manera segura.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is being defined as a mutable `i32` type, with a value of 0.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T104746Z" creationid="gitnacho" creationdate="20221007T104746Z">
        <seg>Se define como un tipo `i32` mutable, con un valor de 0.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is critical to provide a nonce that cannot be guessed as bypassing a resource's policy is otherwise trivial.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T125244Z" creationid="gitnacho" creationdate="20221003T125244Z">
        <seg>Es fundamental proporcionar un *nonce* que no se pueda adivinar, ya que eludir la política de un recurso es trivial.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is designed to be fully async; as a consequence, APIs such as synchronous [XHR](/en-US/docs/Web/API/XMLHttpRequest) and [Web Storage](/en-US/docs/Web/API/Web_Storage_API) can't be used inside a service worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T214422Z" creationid="gitnacho" creationdate="20221002T134704Z">
        <seg>Está diseñado para ser completamente asíncrono, por lo que APIs como [XHR](/es/docs/Web/API/XMLHttpRequest) asíncrono y [Almacenamiento web](/es/docs/Web/API/Web_Storage_API) no se pueden usar dentro de un *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is enabled by default from Firefox 52, Chrome 57, Edge 57, Opera 44.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105925Z" creationid="gitnacho" creationdate="20221003T105925Z">
        <seg>Está habilitado de manera predeterminada desde Firefox 52, Chrome 57, Edge 57, Opera 44.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is good to know HTML, CSS, and JavaScript before working through this section, as the tools discussed work alongside many of these technologies.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T225306Z" creationid="gitnacho" creationdate="20221018T225306Z">
        <seg>Es una buena idea conocer HTML, CSS y JavaScript antes de trabajar en esta sección, ya que las herramientas analizadas funcionan junto con muchas de estas tecnologías.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is good to know HTML, CSS, and JavaScript before working through this section.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T225145Z" creationid="gitnacho" creationdate="20221018T225145Z">
        <seg>Es muy buena idea conocer HTML, CSS y JavaScript antes de trabajar en esta sección.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is ideal for persisting assets locally for the saved state of an application, including text, blobs, and any other type of cloneable object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T050311Z" creationid="gitnacho" creationdate="20221004T050311Z">
        <seg>Es ideal para conservar activos localmente para el estado guardado de una aplicación, incluidos texto, blobs y cualquier otro tipo de objeto clonable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is important to get you set up and ready to do work for exercises later on in the course.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224044Z" creationid="gitnacho" creationdate="20221018T224044Z">
        <seg>Es importante prepararte para trabajar en la resolución de los ejercicios más adelante en el curso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is not primarily intended to be written by hand, rather it is designed to be an effective compilation target for source languages like C, C++, Rust, etc.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T082328Z" creationid="gitnacho" creationdate="20221003T003937Z">
        <seg>No está pensado para escribirse a mano, si no que está diseñado para ser un objeto de compilación final para lenguajes de bajo nivel como C, C++, Rust, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is one of the following numbers: `NONE`, `CAPTURING_PHASE`, `AT_TARGET`, `BUBBLING_PHASE`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T204451Z" creationid="gitnacho" creationdate="20221011T204451Z">
        <seg>Es uno de los siguientes números: `NONE`, `CAPTURING_PHASE`, `AT_TARGET`, `BUBBLING_PHASE`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is only activated when there are no longer any pages loaded that are still using the old service worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041733Z" creationid="gitnacho" creationdate="20220921T041733Z">
        <seg>Solo se activa cuando ya no hay páginas cargadas que todavía estén usando el antiguo *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is recommended that you have basic HTML knowledge before starting to learn CSS.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224517Z" creationid="gitnacho" creationdate="20221018T224345Z">
        <seg>Es recomendable que tengas conocimientos básicos de HTML antes de comenzar a aprender CSS.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is recommended that you have basic HTML knowledge before starting to learn JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224759Z" creationid="gitnacho" creationdate="20221018T224759Z">
        <seg>Es recomendable que tengas conocimientos básicos de HTML antes de comenzar a aprender JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is time to call the WebP encoder to do its job.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054625Z" creationid="gitnacho" creationdate="20221004T054625Z">
        <seg>Es hora de llamar al codificador WebP para que haga su trabajo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is used for drawing shapes, text, images, and other objects.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T015647Z" creationid="gitnacho" creationdate="20220901T015647Z">
        <seg>Se utiliza para dibujar formas, texto, imágenes y otros objetos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is worth noting here that:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054310Z" creationid="gitnacho" creationdate="20221007T054310Z">
        <seg>Aquí vale la pena señalar que:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It is worth noting that these are real JavaScript functions, in addition to being wrappers for WebAssembly functions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085809Z" creationid="gitnacho" creationdate="20221006T085809Z">
        <seg>Vale la pena señalar que estas son funciones de JavaScript reales, además de ser contenedores para funciones de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It lets the parameters of the filter response be specified, so that it can be tuned as needed.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220913T033358Z" creationid="gitnacho" creationdate="20220913T033358Z">
        <seg>Permite especificar los parámetros de la respuesta del filtro, para que se pueda ajustar según sea necesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It literally does nothing.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T090142Z" creationid="gitnacho" creationdate="20221020T090142Z">
        <seg>Literalmente no hace nada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It maps a shorthand identifier for a cache to a specific, versioned cache name.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T203752Z" creationid="gitnacho" creationdate="20221003T203752Z">
        <seg>Asigna un identificador abreviado para una caché a un nombre de caché específico y versionado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It may be either fulfilled or rejected — for example, resolving a rejected promise will still result in a rejected promise.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073633Z" creationid="gitnacho" creationdate="20221002T073633Z">
        <seg>Se puede cumplir o rechazar; por ejemplo, resolver una promesa rechazada aún dará como resultado una promesa rechazada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It may hold one or more data items, each of one or more data types.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T021525Z" creationid="gitnacho" creationdate="20220901T021525Z">
        <seg>Puede contener uno o más elementos de datos, cada uno de uno o más tipos de datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It only has methods and properties common to all kinds of elements.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220902T055056Z" creationid="gitnacho" creationdate="20220902T055056Z">
        <seg>Sólo tiene métodos y propiedades comunes a todo tipo de elementos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It passes a call to the `format!` macro, which lets us concatenate strings.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063332Z" creationid="gitnacho" creationdate="20221004T063332Z">
        <seg>Pasa una llamada a la macro `format!`, que nos permite concatenar cadenas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It persists until you tell it not to — again, you have full control.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034217Z" creationid="gitnacho" creationdate="20220921T034217Z">
        <seg>Persiste hasta que le dices que no lo haga — nuevamente, tienes el control total.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It provides a master directory of all the named caches that a {{DOMxRef("ServiceWorker")}} can access, and maintains a mapping of string names to corresponding {{DOMxRef("Cache")}} objects.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T215632Z" creationid="gitnacho" creationdate="20221002T150513Z">
        <seg>Proporciona un directorio maestro de todas las cachés con nombre a las que puede acceder un {{DOMxRef("ServiceWorker")}} y mantiene una asignación de nombres de cadena a los objetos {{DOMxRef("Cache")}} correspondientes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It provides methods to connect to a remote peer, maintain and monitor the connection, and close the connection once it's no longer needed.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220913T210919Z" creationid="gitnacho" creationdate="20220913T210919Z">
        <seg>Proporciona métodos para conectarse a un par remoto, mantener y monitorear la conexión y cerrar la conexión una vez que ya no se necesita.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It really helps — you don't have to be Van Gogh!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061328Z" creationid="gitnacho" creationdate="20221019T061328Z">
        <seg>Realmente ayuda, ¡no tienes que ser Van Gogh!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It resolves with the stored compiled module, or rejects with an error.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T051328Z" creationid="gitnacho" creationdate="20221004T051328Z">
        <seg>Se resuelve con el módulo compilado almacenado, o se rechaza con un error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It returns one of the following values: `parsed`, `installing`, `installed,` `activating`, `activated`, or `redundant`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T212443Z" creationid="gitnacho" creationdate="20221003T212443Z">
        <seg>Devuelve uno de los siguientes valores: `parsed`, `installing`, `installed`, `activating`, `activated` o `redundant`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It says "the `alert` function takes one argument, a string named `s`."</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062617Z" creationid="gitnacho" creationdate="20221004T062617Z">
        <seg>Dice que "la función `alert` toma un argumento, una cadena llamada `s`".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It seems to work brilliantly for this library:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053626Z" creationid="gitnacho" creationdate="20221004T053626Z">
        <seg>Parece funcionar de manera brillante para esta biblioteca:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It takes the form of a JavaScript file that can control the web-page/site that it is associated with, intercepting and modifying navigation and resource requests, and caching resources in a very granular fashion to give you complete control over how your app behaves in certain situations (the most obvious one being when the network is not available).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T134131Z" creationid="gitnacho" creationdate="20221002T134131Z">
        <seg>Consiste en un archivo JavaScript que controla la página web (o el sitio) con el que está asociado, interceptando y modificando la navegación y las peticiones de recursos, y cacheando los recursos de manera muy granular para ofrecer un control completo sobre cómo la aplicación se debe comportar en ciertas situaciones (la mas obvia es cuando la red no está disponible).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It then calls the `alert` function we asked for in the `extern` block above.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063321Z" creationid="gitnacho" creationdate="20221004T063321Z">
        <seg>Luego llama a la función `alert` que solicitamos en el bloque `extern` anterior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It then retrieves the
references stored in the exported table.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T092040Z" creationid="gitnacho" creationdate="20221006T092040Z">
        <seg>Luego recupera las referencias almacenadas en la tabla exportada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It then stores some values in that memory, exports a function, and uses the exported function to sum those values.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000824Z" creationid="gitnacho" creationdate="20221008T000824Z">
        <seg>Luego almacena algunos valores en esa memoria, exporta una función y usa la función exportada para sumar esos valores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It uses a promise-powered function to read image data from a JSON object and load the images using Ajax, before displaying the images in a line down the page.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T023801Z" creationid="gitnacho" creationdate="20220921T023801Z">
        <seg>Utiliza una función impulsada por promesas para leer datos de imagen de un objeto JSON y cargar las imágenes usando Ajax, antes de mostrar las imágenes en una línea hacia abajo en la página.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It uses {{Glossary("SSL")}} or {{Glossary("TLS")}} to encrypt all communication between a client and a server.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T202117Z" creationid="gitnacho" creationdate="20221018T202117Z">
        <seg>Utiliza {{Glossary("SSL")}} o {{Glossary("TLS")}} para cifrar todas las comunicaciones entre un cliente y un servidor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It was designed for communication between web browsers and web servers, but it can also be used for other purposes.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T062043Z" creationid="gitnacho" creationdate="20221012T062043Z">
        <seg>Fue diseñado para la comunicación entre los navegadores y servidores web, aunque se puede utilizar para otros propósitos también.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It will probably produce `DocumentParsingError` messages.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065641Z" creationid="gitnacho" creationdate="20221005T065641Z">
        <seg>Probablemente producirá mensajes `DocumentParsingError`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It will return a normal response object that has the appropriate error code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T203702Z" creationid="gitnacho" creationdate="20221003T203702Z">
        <seg>Devolverá un objeto `response` normal que tiene el código de error apropiado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It's a lot of work to create a professional website, so if you're new to web development, we encourage you to start small.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T042311Z" creationid="gitnacho" creationdate="20220925T042311Z">
        <seg>Es mucho trabajo crear un sitio web profesional, así que si eres nuevo en el desarrollo web, te animamos a que empieces poco a poco.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It's only a bit complex, and shows a realistic use-case.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065524Z" creationid="gitnacho" creationdate="20221004T065524Z">
        <seg>Es solo un poco complejo y muestra un caso de uso realista.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It's permissible for the info string to contain multiple words, like:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174627Z" creationid="gitnacho" creationdate="20221008T174627Z">
        <seg>Está permitido que la cadena de información contenga varias palabras, como:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It's possible this has been changed along the way through _retargeting_.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T201224Z" creationid="gitnacho" creationdate="20221011T201224Z">
        <seg>Es posible que esto haya cambiado en el camino a través de la _reorientación_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It's ready for use from JavaScript, and doesn't require the user to have Rust installed; the code included was the WebAssembly code, not the Rust source.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065427Z" creationid="gitnacho" creationdate="20221004T065427Z">
        <seg>Está listo para usarlo desde JavaScript y no requiere que el usuario tenga Rust instalado; el código incluido era el código WebAssembly, no la fuente de Rust.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It's the opposite of `extern`: these aren't the functions we need, but rather the functions we're giving out to the world.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063244Z" creationid="gitnacho" creationdate="20221004T063244Z">
        <seg>Es lo contrario de `extern`: estas no son las funciones que necesitamos, sino las funciones que le estamos dando al mundo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It's unnecessary to specify the `charset` attribute, because documents must use UTF-8, and the `script` element inherits its character encoding from the document.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T132857Z" creationid="gitnacho" creationdate="20221003T132857Z">
        <seg>No es necesario especificar el atributo `charset`, porque los documentos deben usar UTF-8, y el elemento `script` hereda del documento su codificación de caracteres.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It's up to you (however, if you have a version number with multiple decimals in it, it needs to be in quotes).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T095059Z" creationid="gitnacho" creationdate="20221005T095059Z">
        <seg>De ti depende (sin embargo, si tienes un número de versión con varios decimales, debe estar entre comillas).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It's very easy to modify the Emscripten output and turn it into whatever web app you require.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T090140Z" creationid="gitnacho" creationdate="20221003T090140Z">
        <seg>Es muy fácil modificar la salida de Emscripten y convertirla en cualquier aplicación web que necesites.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>It's widely used for cross-browser testing of Web apps.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T104235Z" creationid="gitnacho" creationdate="20221002T095319Z">
        <seg>Se utiliza ampliamente para pruebas de aplicaciones web en navegadores cruzados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Items in a `Cache` do not get updated unless explicitly requested; they don't expire unless deleted.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T202600Z" creationid="gitnacho" creationdate="20221003T202600Z">
        <seg>Los elementos en una `Cache` no se actualizan a menos que se solicite explícitamente; no caducan a menos que se eliminen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Its [`buffer`](/en-US/docs/WebAssembly/JavaScript_interface/Memory/buffer) property will return an {{jsxref("ArrayBuffer")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000548Z" creationid="gitnacho" creationdate="20221008T000548Z">
        <seg>Su propiedad [`buffer`](/es/docs/WebAssembly/JavaScript_interface/Memory/buffer) devolverá un {{jsxref("ArrayBuffer")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>JavaScript</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220915T130240Z" creationid="gitnacho" creationdate="20220915T130240Z">
        <seg>JavaScript</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>JavaScript MIME types are [listed in the specification](/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#javascript_types).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T110002Z" creationid="gitnacho" creationdate="20221003T132421Z">
        <seg>Los tipos MIME de JavaScript están [enumerados en la especificación](/es/docs/Web/HTTP/Basics_of_HTTP/MIME_types#tipos_javascript).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>JavaScript and other client code can only access WebAssembly exception values, and visa versa, when the associated tag is shared (you can't just use another tag that happens to define the same data types).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T022855Z" creationid="gitnacho" creationdate="20221008T022855Z">
        <seg>JavaScript y otro código cliente solo pueden acceder a los valores de excepción de WebAssembly, y viceversa, cuando se comparte la etiqueta asociada (no puedes simplemente usar otra etiqueta que defina los mismos tipos de datos).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>JavaScript frameworks could make use of WebAssembly to confer massive performance advantages and new features while still making functionality easily available to web developers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T082459Z" creationid="gitnacho" creationdate="20221003T004204Z">
        <seg>Los entornos de JavaScript pueden usar WebAssembly para obtener grandes mejoras de rendimiento y nuevas funcionalidades y estar fácilmente disponibles para los desarrolladores Web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>JavaScript functions have no notion of signature, so any JavaScript function can be passed, regardless of the import's declared signature.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061518Z" creationid="gitnacho" creationdate="20221007T061518Z">
        <seg>Las funciones de JavaScript no tienen noción de firma, por lo que se puede pasar cualquier función de JavaScript, independientemente de la firma declarada de la importación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201119T001011Z" creationid="nacho" creationdate="20201119T001011Z">
        <seg>JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Just like `data` sections can be used to initialize regions of linear memory with bytes, `elem` sections can be used to initialize regions of tables with functions:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072031Z" creationid="gitnacho" creationdate="20221007T072031Z">
        <seg>Al igual que las secciones `data` se pueden usar para inicializar regiones de memoria lineal con bytes, las secciones `elem` se pueden usar para inicializar regiones de tablas con funciones:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Just like functions, linear memories can be defined inside a module or imported.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T210807Z" creationid="gitnacho" creationdate="20221006T210807Z">
        <seg>Al igual que las funciones, las memorias lineales se pueden definir dentro de un módulo o importarse.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Just using Reload by itself will cause the page contents to be regenerated, but using cached templates and included content.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T075406Z" creationid="gitnacho" creationdate="20221005T075406Z">
        <seg>Al usar Recargar por sí solo hará que el contenido de la página se regenere, pero usando plantillas en caché y contenido incluido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Keep these close by.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062258Z" creationid="gitnacho" creationdate="20221019T062258Z">
        <seg>Mantenlos cerca.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>KumaScript does not</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083544Z" creationid="gitnacho" creationdate="20221005T064633Z">
        <seg>KumaScript:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>KumaScript is used on MDN via [embedded JavaScript templates](https://github.com/mde/ejs).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T064922Z" creationid="gitnacho" creationdate="20221005T064922Z">
        <seg>KumaScript se usa en MDN a través de [plantillas de JavaScript integradas](https://github.com/mde/ejs).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>KumaScript offers some built-in methods and APIs for KumaScript macros.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071956Z" creationid="gitnacho" creationdate="20221005T071956Z">
        <seg>KumaScript ofrece algunos métodos integrados y APIs para macros de KumaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>KumaScript templates are heavily cached to improve performance.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T074851Z" creationid="gitnacho" creationdate="20221005T074851Z">
        <seg>Las plantillas de KumaScript se almacenan en caché para mejorar el rendimiento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>KumaScript templates are processed by an [embedded JavaScript template engine](https://ejs.co) with a few simple rules:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065831Z" creationid="gitnacho" creationdate="20221005T065831Z">
        <seg>Las plantillas de KumaScript son procesadas por un [motor de plantillas JavaScript incorporado](https://ejs.co) con algunas reglas simples:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Learn how to use HTTP with guides and tutorials.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T062439Z" creationid="gitnacho" creationdate="20221012T062439Z">
        <seg>Aprende cómo utilizar HTTP con guías y tutoriales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's assume that we've written a suitable string of bytes to memory; how do we pass that string out to JavaScript?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064049Z" creationid="gitnacho" creationdate="20221007T064049Z">
        <seg>Supongamos que hemos escrito una cadena adecuada de bytes en la memoria; ¿Cómo pasamos esa cadena a JavaScript?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's begin our journey!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T042401Z" creationid="gitnacho" creationdate="20220925T042401Z">
        <seg>¡Comencemos nuestro viaje!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's build a website that uses our new npm package.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065450Z" creationid="gitnacho" creationdate="20221004T065450Z">
        <seg>Construyamos un sitio web que usa nuestro nuevo paquete npm.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's get started.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223920Z" creationid="gitnacho" creationdate="20221018T223920Z">
        <seg>Empecemos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's give this a shot:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T070050Z" creationid="gitnacho" creationdate="20221004T070050Z">
        <seg>Vamos a darle una oportunidad a esto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's go through all the required steps to get our environment set up.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061254Z" creationid="gitnacho" creationdate="20221004T061254Z">
        <seg>Repasemos todos los pasos necesarios para configurar nuestro entorno.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's have a closer look at lines 15-18:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T223010Z" creationid="gitnacho" creationdate="20221011T223010Z">
        <seg>Echemos un vistazo más de cerca a las líneas 15-18:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's have a go at converting the above `.wat` text representation example into `.wasm` assembly format.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182713Z" creationid="gitnacho" creationdate="20221007T182713Z">
        <seg>Probemos a convertir el ejemplo de representación de texto `.wat` anterior al formato ensamblador `.wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's look at a few examples.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210921T015528Z" creationid="gitnacho" creationdate="20210921T015528Z">
        <seg>Veamos algunos ejemplos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's look at a few other options we have when defining our magic (see our [Fetch API documentation](/en-US/docs/Web/API/Fetch_API) for more information about {{domxref("Request")}} and {{domxref("Response")}} objects.)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T035431Z">
        <seg>Veamos algunas otras opciones que tenemos al definir nuestra magia (consulta nuestra [documentación de la API Fetch](/es/docs/Web/API/Fetch_API) para obtener más información sobre los objetos {{DOMxRef("Request")}} y {{DOMxRef("Response")}}.)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's look at a simple example of this — the following program imports a function called `imported_func` from a module called `imports`, and exports a function called `exported_func`:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182616Z" creationid="gitnacho" creationdate="20221007T182616Z">
        <seg>Veamos un ejemplo simple de esto: el siguiente programa importa una función llamada `imported_func` desde un módulo llamado `imports` y exporta una función llamada `exported_func`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's look at a simple table example — a WebAssembly module that creates and exports a table with two elements: element 0 returns 13 and element 1 returns 42.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233242Z" creationid="gitnacho" creationdate="20221006T233242Z">
        <seg>Veamos un ejemplo de tabla simple: un módulo WebAssembly que crea y exporta una tabla con dos elementos: el elemento 0 devuelve 13 y el elemento 1 devuelve 42.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's look at an example to clear things up (you can find this on GitHub as [table-set.html](https://github.com/mdn/webassembly-examples/blob/master/other-examples/table-set.html); see it [running live also](https://mdn.github.io/webassembly-examples/other-examples/table-set.html), and check out the wasm [text representation](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table.wat)):</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T090823Z" creationid="gitnacho" creationdate="20221006T085452Z">
        <seg>Veamos un ejemplo para aclarar las cosas (lo puedes encontrar en GitHub como [table-set.html](https://github.com/mdn/webassembly-examples/blob/master/other-examples/table-set.html); también lo puedes ver [ejecutándose en vivo](https://mdn.github.io/webassembly-examples/other-examples/table-set.html), y revisa la [representación de texto](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table.wat) `wasm`):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's look at an example.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T212236Z" creationid="gitnacho" creationdate="20221005T212236Z">
        <seg>Veamos un ejemplo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's look at an example:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200730T220247Z" creationid="nacho" creationdate="20200730T220247Z">
        <seg>Veamos un ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's look at how it works.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T094905Z" creationid="gitnacho" creationdate="20221003T094905Z">
        <seg>Veamos cómo funciona.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's look at how this works.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111606Z" creationid="gitnacho" creationdate="20221003T111606Z">
        <seg>Veamos cómo funciona esto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's look at how we can do this.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T110612Z" creationid="gitnacho" creationdate="20221003T110612Z">
        <seg>Veamos cómo lo podemos hacer.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's look at the full exchange between client and server.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222717Z" creationid="gitnacho" creationdate="20221011T222717Z">
        <seg>Veamos el intercambio completo entre el cliente y el servidor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's look at what the browser will send to the server in this case:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222038Z" creationid="gitnacho" creationdate="20221011T222038Z">
        <seg>Veamos qué enviará el navegador al servidor en este caso:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's make the above assertions clearer by looking at a more involved memory example — a WebAssembly module that imports the memory instance we defined earlier, populates it with an array of integers, then sums them.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T225456Z" creationid="gitnacho" creationdate="20221006T225456Z">
        <seg>Aclaremos las afirmaciones anteriores mirando un ejemplo de memoria más complicado: un módulo WebAssembly que importa la instancia de `Memory` que definimos anteriormente, la llena con un arreglo de enteros y luego los suma.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's move back out of the `pkg` directory, and make a new directory, `site`, to try this out in:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065629Z" creationid="gitnacho" creationdate="20221004T065528Z">
        <seg>Salgamos del directorio `pkg` y hagamos un nuevo directorio, `site`, para probar esto en:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's provide a default fallback so that whatever happens, the user will at least get something:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040448Z" creationid="gitnacho" creationdate="20220921T040448Z">
        <seg>Proporcionemos un respaldo predeterminado para que, pase lo que pase, el usuario al menos obtenga algo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's put this code into `src/lib.rs` instead:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061930Z" creationid="gitnacho" creationdate="20221004T061930Z">
        <seg>Pongamos este código en `src/lib.rs` en su lugar:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's run through some examples that explain how to use the WebAssembly JavaScript API, and how to use it to load a wasm module in a web page.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T111532Z" creationid="gitnacho" creationdate="20221006T111532Z">
        <seg>Veamos algunos ejemplos que explican cómo usar la API JavaScript de WebAssembly y cómo usarla para cargar un módulo `wasm` en una página web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's start by creating a file named `index.html` in the root of the project, and give it the following contents:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064556Z" creationid="gitnacho" creationdate="20221004T064556Z">
        <seg>Comencemos por crear un archivo llamado `index.html` en la raíz del proyecto y le daremos el siguiente contenido:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's start by doing this — first, we'll add a name preceded by a dollar sign, just after the `func` keyword:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T060732Z" creationid="gitnacho" creationdate="20221007T060732Z">
        <seg>Comencemos haciendo eso: primero, agregaremos un nombre precedido por un signo de dólar, justo después de la palabra clave `func`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's start by recompiling our Rust with the target bundler option:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T112809Z" creationid="gitnacho" creationdate="20221008T112809Z">
        <seg>Comencemos recompilando nuestro Rust con la opción de paquete destino:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's start exploring this by looking at a quick example.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T182354Z" creationid="gitnacho" creationdate="20221006T182354Z">
        <seg>Comencemos a explorar esto mirando un ejemplo rápido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's start with the simplest, shortest possible wasm module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053827Z" creationid="gitnacho" creationdate="20221007T053827Z">
        <seg>Comencemos con el módulo `wasm` más simple y corto posible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's talk about these options:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T080823Z" creationid="gitnacho" creationdate="20221003T080823Z">
        <seg>Detallemos más cada una de estas opciones:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Let's use this section of code to do so:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072635Z" creationid="gitnacho" creationdate="20221007T072635Z">
        <seg>Usemos esta sección de código para hacerlo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Libraries are called "crates" in Rust.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062153Z" creationid="gitnacho" creationdate="20221004T062153Z">
        <seg>Las bibliotecas se llaman "cajas" —`crates`— en Rust.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Like `Access-Control-Allow-Methods`, `Access-Control-Allow-Headers` is a comma-separated list of acceptable headers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T224256Z" creationid="gitnacho" creationdate="20221011T224256Z">
        <seg>Al igual que `Access-Control-Allow-Methods`, `Access-Control-Allow-Headers` es una lista separada por comas de encabezados aceptables.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Like in an ES module, wasm functions must be explicitly exported by an `export` statement inside the module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T060658Z" creationid="gitnacho" creationdate="20221007T060658Z">
        <seg>Al igual que en un módulo ES, las funciones de `wasm` se deben exportar explícitamente mediante una declaración  `export` dentro del módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Like locals, functions are identified by an index by default, but for convenience, they can be named.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T060716Z" creationid="gitnacho" creationdate="20221007T060716Z">
        <seg>Al igual que los locales, las funciones se identifican mediante un índice de forma predeterminada, pero por conveniencia, se les puede nombrar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Like other web code, it will enforce the browser's same-origin and permissions policies.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T004842Z" creationid="gitnacho" creationdate="20221003T004842Z">
        <seg>Como otro código web, reforzará el propio origen del navegador así como sus políticas de seguridad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Like this: `&lt;%- template("warning", [$1, $2, "baz"]) %&gt;`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072417Z" creationid="gitnacho" creationdate="20221005T072417Z">
        <seg>Debe ser así: `&lt;%- template("warning", [$1, $2, "baz"]) %&gt;`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Line 7 shows the flag on {{domxref("XMLHttpRequest")}} that has to be set in order to make the invocation with Cookies, namely the `withCredentials` boolean value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T230452Z">
        <seg>La línea 7 muestra el indicador en {{DOMxRef("XMLHttpRequest")}} que se debe configurar para realizar la invocación con *cookies*, es decir, el valor booleano `withCredentials`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Linear memory exposes the raw contents of stored values as bytes and this would allow wasm content to arbitrarily observe and corrupt raw function addresses, which is something that cannot be allowed on the web.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T065302Z" creationid="gitnacho" creationdate="20221007T065302Z">
        <seg>La memoria lineal expone el contenido sin procesar de los valores almacenados como bytes y esto permitiría que el contenido de `wasm` observara y corrompiera arbitrariamente las direcciones de función sin procesar, algo que no se puede permitir en la web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Lines 1 - 10 above represent the preflight request with the {{HTTPMethod("OPTIONS")}} method.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222748Z" creationid="gitnacho" creationdate="20221011T222748Z">
        <seg>Las líneas 1 a 10 anteriores representan la solicitud de preverificación con el método {{HTTPMethod("OPTIONS")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Lines 12 - 21 above are the response that the server returns, which indicate that the request method (`POST`) and request headers (`X-PINGOTHER`) are acceptable.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T223002Z" creationid="gitnacho" creationdate="20221011T223002Z">
        <seg>Las líneas 12 a 21 anteriores son la respuesta que devuelve el servidor, que indican que el método de solicitud (`POST`) y los encabezados de solicitud (`X-PINGOTHER`) son aceptables.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Link macros are recommended over normal HTML links because they are succinct and translation-friendly.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T104627Z" creationid="gitnacho" creationdate="20221005T104627Z">
        <seg>Las macros de enlaces se recomiendan sobre los enlaces HTML normales porque son breves y fáciles de traducir.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Linux distros vary; the Ubuntu 22.04 LTS release comes with [GNOME Text Editor](https://en.wikipedia.org/wiki/GNOME_Text_Editor) by default.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T054409Z" creationid="gitnacho" creationdate="20221019T001231Z">
        <seg>Las distribuciones de Linux varían; la versión Ubuntu 22.04 LTS viene con el [Editor de texto GNOME](https://en.wikipedia.org/wiki/GNOME_Text_Editor) de forma predeterminada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Load `http://localhost:8080` and an alert box appears on the screen, with `Hello, WebAssembly with npm!` in it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T070122Z" creationid="gitnacho" creationdate="20221004T070122Z">
        <seg>Carga `http://localhost:8080` y aparecerá un cuadro de alerta en la pantalla, con `Hola, WebAssembly with npm!`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Load `index.html` from the web server (if you used the Python3 example: `http://localhost:8000`).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065045Z" creationid="gitnacho" creationdate="20221004T065045Z">
        <seg>Carga `index.html` desde el servidor web (si usaste el ejemplo de Python3: `http://localhost:8000`).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Locally-delivered resources such as those with `http://127.0.0.1` URLs, `http://localhost` and `http://*.localhost` URLs (e.g. `http://dev.whatever.localhost/`), and `file://` URLs are also considered to have been delivered securely.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T204132Z" creationid="gitnacho" creationdate="20221018T204132Z">
        <seg>Recursos entregados localmente, como aquellos con URL `http://127.0.0.1`, URL `http://localhost` y `http://*.localhost` (por ejemplo, `http://dev.whatever.localhost/ `), y las URLs `file://` también se consideran entregadas de forma segura.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Locals/parameters can be read and written by the body of the function with the `local.get` and `local.set` instructions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054602Z" creationid="gitnacho" creationdate="20221007T054602Z">
        <seg>Los locales/parámetros se pueden leer y escribir en el cuerpo de la función con las instrucciones `local.get` y `local.set`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Looking at the [WebP documentation](https://developers.google.com/speed/webp/docs/api#simple_encoding_api), you'll find that `WebPEncodeRGBA` seems like a perfect fit.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054646Z" creationid="gitnacho" creationdate="20221004T054646Z">
        <seg>Mirando la [documentación de WebP](https://developers.google.com/speed/webp/docs/api#simple_encoding_api), encontrarás que `WebPEncodeRGBA` parece encajar perfectamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Looking at the [encoding API of libwebp](https://developers.google.com/speed/webp/docs/api#simple_encoding_api), you'll find that it expects an array of bytes in RGB, RGBA, BGR or BGRA.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T055518Z" creationid="gitnacho" creationdate="20221004T054029Z">
        <seg>Mirando la [API de codificación de `libwebp`](https://developers.google.com/speed/webp/docs/api#simple_encoding_api), encontrarás que espera un arreglo de bytes en RGB, RGBA, BGR o BGRA.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Luckily, the Canvas API has {{domxref("CanvasRenderingContext2D.getImageData")}} — that gives you an {{jsxref("Uint8ClampedArray")}} containing the image data in RGBA:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221004T054056Z">
        <seg>Afortunadamente, la API de Canvas tiene {{DOMxRef("CanvasRenderingContext2D.getImageData")}}, que te brinda un {{jsxref("Uint8ClampedArray")}} que contiene los datos de la imagen en RGBA:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Luckily, the solution to this problem is in the error message.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T055031Z" creationid="gitnacho" creationdate="20221004T055031Z">
        <seg>Afortunadamente, la solución a este problema está en el mensaje de error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>MDN Web Docs is an open-source project and accepts contributions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T200421Z" creationid="gitnacho" creationdate="20221008T200421Z">
        <seg>MDN Web Docs es un proyecto de código abierto y acepta contribuciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>MDN authors must include these pipes, for the sake of readability.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184541Z" creationid="gitnacho" creationdate="20221008T184541Z">
        <seg>Los autores de MDN deben incluir estas barras, en aras de la legibilidad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>MDN offers a number of features that make it easier to track progress, manage content, and keep up with the latest changes to the site.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T063234Z" creationid="gitnacho" creationdate="20221005T063234Z">
        <seg>MDN ofrece una serie de funciones que facilitan el seguimiento del progreso, la administración del contenido y el mantenimiento de los últimos cambios en el sitio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>MDN provides a number of link macros for easing the creation of links to reference pages, glossary entries, and other topics.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T104612Z" creationid="gitnacho" creationdate="20221005T102534Z">
        <seg>MDN proporciona una serie de macros de enlaces para facilitar la creación de enlaces a páginas de referencia, entradas de glosario y otros temas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Macro syntax follows these rules:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065155Z" creationid="gitnacho" creationdate="20221005T065155Z">
        <seg>La sintaxis de las macros sigue estas **reglas**:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Macro syntax takes the following general form:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065131Z" creationid="gitnacho" creationdate="20221005T065131Z">
        <seg>La sintaxis de las macros toma la siguiente forma general:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Macros are heavily cached; for any set of input values (both parameters and environmental values such as the URL for which the macro was run), the results are stored and reused.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T095209Z" creationid="gitnacho" creationdate="20221005T095209Z">
        <seg>Las macros están almacenadas en caché; para cualquier conjunto de valores de entrada (tanto parámetros como valores de entorno, como la URL para la que se ejecutó la macro), los resultados se almacenan y reutilizan.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Macros can also use `module.exports` to export new API methods.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072007Z" creationid="gitnacho" creationdate="20221005T072007Z">
        <seg>Las macros también pueden usar `module.exports` para exportar nuevos métodos API.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Macros can be as simple as just inserting a larger block of text or swapping in contents from another part of MDN, or as complex as building an entire index of content by searching through parts of the site, styling the output, and adding links.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T095241Z" creationid="gitnacho" creationdate="20221005T095241Z">
        <seg>Las macros pueden ser tan simples como simplemente insertar un bloque de texto más grande o intercambiar contenido de otra parte de MDN, o tan complejas como crear un índice completo de contenido buscando en partes del sitio, diseñando el resultado y agregando enlaces.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Macros on MDN are implemented using server-executed [JavaScript](/en-US/docs/Web/JavaScript) code, interpreted using [Node.js](https://nodejs.org/en/).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T193744Z" creationid="gitnacho" creationdate="20221005T094812Z">
        <seg>Las macros en MDN se implementan usando código [JavaScript](/es/docs/Web/JavaScript) ejecutado por el servidor, interpretado usando [Node.js](https://nodejs.org/es/).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Make a [simple request](#simple_requests) (using {{domxref("Response.url")}} for the Fetch API, or {{domxref("XMLHttpRequest.responseURL")}}) to determine what URL the real preflighted request would end up at.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T225251Z">
        <seg>Haz una [solicitud simple](#solicitudes_simples) (usando {{DOMxRef("Response.url")}} para la API `Fetch`, o {{DOMxRef("XMLHttpRequest.responseURL")}}) para determinar en qué URL terminará la solicitud preverificada real.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Make a local copy of `table.wasm` in a new directory.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233312Z" creationid="gitnacho" creationdate="20221006T233312Z">
        <seg>Haz una copia local de `table.wasm` en un nuevo directorio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Make another request (the _real_ request) using the URL you obtained from `Response.url` or `XMLHttpRequest.responseURL` in the first step.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T225815Z" creationid="gitnacho" creationdate="20221011T225815Z">
        <seg>Realiza otra solicitud (la solicitud _real_) usando la URL que obtuviste de `Response.url` o `XMLHttpRequest.responseURL` en el primer paso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Make sure to version caches by name and use the caches only from the version of the script that they can safely operate on.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T202829Z" creationid="gitnacho" creationdate="20221003T202829Z">
        <seg>Asegúrate de versionar las cachés por nombre y usa las cachés solo de la versión del script en el que pueden operar de manera segura.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Many DOM elements can be set up to accept (or "listen" for) these events, and execute code in response to process (or "handle") them.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T201749Z" creationid="gitnacho" creationdate="20221011T201749Z">
        <seg>Muchos elementos DOM se pueden configurar para aceptar (o "escuchar") estos eventos y ejecutar código en respuesta al proceso (o "manejo") de ellos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Many Web APIs and features are accessible only in a secure context.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T203326Z" creationid="gitnacho" creationdate="20221018T203326Z">
        <seg>Muchas funciones y APIs web solo son accesibles en un contexto seguro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Many of the techniques and best practices touch on multiple technologies.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T225156Z" creationid="gitnacho" creationdate="20221018T225156Z">
        <seg>Muchas de las técnicas y mejores prácticas se refieren a múltiples tecnologías.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Many people use npm packages through various bundler tools, and we'll be using one of them, `webpack`, in this tutorial.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065513Z" creationid="gitnacho" creationdate="20221004T065513Z">
        <seg>Mucha gente usa paquetes npm a través de varias herramientas de agrupación, y usaremos una de ellas, `webpack`, en este tutorial.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Many projects rely on autoconf/automake to generate system-specific code before compilation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053658Z" creationid="gitnacho" creationdate="20221004T053658Z">
        <seg>Muchos proyectos se basan en autoconf/automake para generar código específico del sistema antes de la compilación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Maybe that sounds obvious to some people, but some of you are reading this article on your phone or a library computer.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T164514Z" creationid="gitnacho" creationdate="20221012T164514Z">
        <seg>Tal vez esto suena obvio para algunas personas, pero habrá quien esté leyendo este artículo desde el móvil o una computadora de biblioteca.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Maybe you are just showing an intermediate step, or the source code is enough.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204429Z" creationid="gitnacho" creationdate="20221005T204429Z">
        <seg>Tal vez solo estés mostrando un paso intermedio, o el código fuente es suficiente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Memory imports are useful for two reasons:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T230024Z" creationid="gitnacho" creationdate="20221006T230024Z">
        <seg>Las importaciones de memoria son útiles por dos razones:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Memory imports work just like function imports, only Memory objects are passed as values instead of JavaScript functions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T230016Z" creationid="gitnacho" creationdate="20221006T230016Z">
        <seg>Las importaciones de memoria funcionan igual que las importaciones de funciones, solo los objetos de memoria se pasan como valores en lugar de funciones JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Memory instances can also grow, for example via the [`Memory.grow()`](/en-US/docs/WebAssembly/JavaScript_interface/Memory/grow) method in JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064210Z" creationid="gitnacho" creationdate="20221007T064210Z">
        <seg>Las instancias de `memory` también pueden crecer, por ejemplo, a través del método [`Memory.grow()`](/es/docs/WebAssembly/JavaScript_interface/Memory/grow) en JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Memory instances have a [`buffer`](/en-US/docs/WebAssembly/JavaScript_interface/Memory/buffer) getter, which returns an `ArrayBuffer` that points at the whole linear memory.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064151Z" creationid="gitnacho" creationdate="20221007T064151Z">
        <seg>Las instancias de `memory` tienen un [`buffer`](/es/docs/WebAssembly/JavaScript_interface/Memory/buffer) captador, que devuelve un `ArrayBuffer` que apunta a toda la memoria lineal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Methods are provided to test whether an exception matches a particular tag, and also to get a particular value by index (if the exception matches specified tag).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T022832Z" creationid="gitnacho" creationdate="20221008T022832Z">
        <seg>Se proporcionan métodos para probar si una excepción coincide con una etiqueta en particular y también para obtener un valor particular por índice (si la excepción coincide con la etiqueta especificada).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Minimally all you need to do is specify the name of the item to link to in the first argument.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T104958Z" creationid="gitnacho" creationdate="20221005T104958Z">
        <seg>Como mínimo, todo lo que necesitas hacer es especificar el nombre del elemento al que vincular en el primer argumento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Mobile and other resource-constrained platforms can further amplify these performance bottlenecks.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T005659Z" creationid="gitnacho" creationdate="20221003T005659Z">
        <seg>Plataformas en móviles (celulares y otros) y otras de recursos limitados (tabletas, etc.) pueden amplificar más estos cuellos de botella de rendimiento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Modern browsers use CORS in APIs such as `XMLHttpRequest` or [Fetch](/en-US/docs/Web/API/Fetch_API) to mitigate the risks of cross-origin HTTP requests.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T213051Z" creationid="gitnacho" creationdate="20221011T213051Z">
        <seg>Los navegadores modernos usan CORS en APIs como `XMLHttpRequest` o [Fetch](/es/docs/Web/API/Fetch_API) para mitigar los riesgos de las solicitudes HTTP de origen cruzado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Module.HEAP8.buffer,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054902Z" creationid="gitnacho" creationdate="20221004T054902Z">
        <seg>Module.HEAP8.buffer,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Module.onRuntimeInitialized = async () =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053746Z" creationid="gitnacho" creationdate="20221004T053746Z">
        <seg>Module.onRuntimeInitialized = async () =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Most macros will also take a second argument allowing you to change the display text (documentation can be found at the links in the left-most column below).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T105047Z" creationid="gitnacho" creationdate="20221005T105047Z">
        <seg>La mayoría de las macros también tendrán un segundo argumento que te permite cambiar el texto a mostrar (la documentación se puede encontrar en los enlaces en la columna más a la izquierda a continuación).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Most of the macro sources have documentation built into them, as comments at the top.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T095325Z" creationid="gitnacho" creationdate="20221005T095325Z">
        <seg>La mayoría de las fuentes de macros tienen documentación incorporada, como comentarios en la parte superior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Most of these
sections are fully specified and validated by the wasm spec, but modules can also
contain **custom sections** that are ignored and skipped over during
validation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T222139Z" creationid="gitnacho" creationdate="20221019T222031Z">
        <seg>La mayoría de estas secciones están completamente especificadas y validadas por la especificación de `wasm`, pero los módulos también pueden contener **secciones personalizadas** que se ignoran y se omiten durante la validación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Most significantly, HTTP connections are susceptible to malicious code injection by {{Glossary("MitM", "man in the middle")}} attacks, and such attacks could be worse if allowed access to these powerful APIs.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T232742Z" creationid="gitnacho" creationdate="20221002T134857Z">
        <seg>Aún más importante, las conexiones HTTP son susceptibles a la inyección de código malicioso por medio de {{Glossary("MitM", "ataques man in the middle")}}, y dichos ataques podrían ser peores si se permite el acceso a estas potentes APIs.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Moving on, now we've defined the table we need to use it somehow.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072628Z" creationid="gitnacho" creationdate="20221007T072628Z">
        <seg>Continuando, ahora que hemos definido la tabla, necesitamos usarla de alguna manera.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Multiple browsing contexts (e.g. pages, workers, etc.) can be associated with the same `ServiceWorker` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T151706Z" creationid="gitnacho" creationdate="20221002T151706Z">
        <seg>Se pueden asociar múltiples contextos de navegación (por ejemplo, páginas, *workers*, etc.) con el mismo objeto `ServiceWorker`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Multiple lines are produced by an empty block quote line in the same way as normal paragraphs.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181418Z" creationid="gitnacho" creationdate="20221008T181418Z">
        <seg>Las líneas múltiples son producidas por una línea de bloque de cita vacío de la misma manera que los párrafos normales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Multiple {{glossary("browsing context", "browsing contexts")}} (e.g. pages, workers, etc.) can be associated with the same service worker, each through a unique `ServiceWorker` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T212140Z" creationid="gitnacho" creationdate="20221003T212140Z">
        <seg>Múltiples {{glossary("browsing context", "browsing contexts")}} (por ejemplo, páginas, *workers*, etc.) se pueden asociar con el mismo *service worker*, cada uno a través de un objeto `ServiceWorker` único.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Navigate to wherever you keep your personal projects, and type this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061707Z" creationid="gitnacho" creationdate="20221004T061707Z">
        <seg>Navega hasta donde guardes tus proyectos personales y escribe esto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Navigation preload is triggered if [navigation preload is enabled](/en-US/docs/Web/API/NavigationPreloadManager/enable), the request is a `GET` request, and the request is a navigation request (generated by the browser when loading pages and iframes).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T213903Z" creationid="gitnacho" creationdate="20220922T213903Z">
        <seg>La precarga de navegación se activa si [la precarga de navegación está habilitada](/es/docs/Web/API/NavigationPreloadManager/enable), la petición es una solicitud `GET` y la petición es una solicitud de navegación (generada por el navegador sobre cuándo cargar páginas e *iframes*).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Navigations on the same origin will still include the path.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T125745Z" creationid="gitnacho" creationdate="20221003T125644Z">
        <seg>Las navegaciones en el mismo origen seguirán incluyendo la ruta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Nested documents and dedicated workers need to set the [`Cross-Origin-Embedder-Policy`](/en-US/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy) header as well, with the same value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20220923T023917Z">
        <seg>Los documentos anidados y los *workers* dedicados también deben establecer el encabezado [`Cross-Origin-Embedder-Policy`](/es/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy), con el mismo valor .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Nested thenables will be "deeply flattened" to a single promise.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080650Z" creationid="gitnacho" creationdate="20221002T080650Z">
        <seg>Los thenables anidados se "aplanarán profundamente" en una sola promesa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Network client hints allow a server to vary responses based on the user's choice, network bandwidth, and latency.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092741Z" creationid="gitnacho" creationdate="20221012T092741Z">
        <seg>Las sugerencias del cliente de red permiten que un servidor varíe las respuestas según la elección del usuario, el ancho de banda de la red y la latencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>New in Firefox 58 is the ability to compile and instantiate WebAssembly modules directly from underlying sources.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T113347Z" creationid="gitnacho" creationdate="20221006T113347Z">
        <seg>Lo nuevo en Firefox 58 es la capacidad de compilar y crear instancias de módulos WebAssembly directamente desde fuentes subyacentes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Next is activation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T023007Z" creationid="gitnacho" creationdate="20220921T023007Z">
        <seg>Lo siguiente es la activación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Next, Cargo has generated some Rust code for us in `src/lib.rs`:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061821Z" creationid="gitnacho" creationdate="20221004T061821Z">
        <seg>A continuación, Cargo ha generado código Rust para nosotros en `src/lib.rs`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Next, create a file named `index.js`, and give it these contents:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065750Z" creationid="gitnacho" creationdate="20221004T065750Z">
        <seg>Luego, crea un archivo llamado `index.js` y dale este contenido:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Next, execute the wat2wasm program, passing it the path to the input file, followed by an `-o` parameter, followed by the path to the output file:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182859Z" creationid="gitnacho" creationdate="20221007T182859Z">
        <seg>A continuación, ejecuta el programa `wat2wasm`, pasándole la ruta al archivo de entrada, seguido de un parámetro `-o`, seguido de la ruta al archivo de salida:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Next, grab pen and paper and sketch out roughly how you want your site to look.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061302Z" creationid="gitnacho" creationdate="20221019T061302Z">
        <seg>A continuación, toma papel y lápiz y dibuja aproximadamente cómo deseas que se vea tu sitio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Next, let's create a simple HTML file called `index.html` in the same directory as your wasm file (can use our [simple template](https://github.com/mdn/webassembly-examples/blob/master/template/template.html) if you haven't got one easily available).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T113104Z" creationid="gitnacho" creationdate="20221006T113104Z">
        <seg>A continuación, creemos un archivo HTML simple llamado `index.html` en el mismo directorio que tu archivo `wasm` (puedes usar nuestra [plantilla simple](https://github.com/mdn/webassembly-examples/blob/master/template/template.html) si no tienes una fácilmente disponible).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Next, let's use \`npm link\` to make this package available to other JavaScript packages installed</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065301Z" creationid="gitnacho" creationdate="20221004T065301Z">
        <seg>A continuación, usemos \`npm link\` para que este paquete esté disponible para otros paquetes de JavaScript instalados</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Next, send the request using {{domxref("XMLHttpRequest.send()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221005T060933Z">
        <seg>A continuación, envía la solicitud mediante {{DOMxRef("XMLHttpRequest.send()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Next, we create an import object that contains the `WebAssembly.Table`:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000305Z" creationid="gitnacho" creationdate="20221020T000305Z">
        <seg>A continuación, creamos un objeto `import` que contiene `WebAssembly.Table`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Next, we define a function `storeInDatabase()` that fires off an async operation to store a given wasm module in a given database.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T051429Z" creationid="gitnacho" creationdate="20221004T051429Z">
        <seg>A continuación, definimos una función `storeInDatabase()` que activa una operación asíncrona para almacenar un determinado módulo `wasm` en una determinada base de datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Next, we load and instantiate a WebAssembly module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T005450Z" creationid="gitnacho" creationdate="20221020T005450Z">
        <seg>A continuación, cargamos e instanciamos un módulo WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Next, we need to configure Webpack.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065715Z" creationid="gitnacho" creationdate="20221004T065715Z">
        <seg>A continuación, debemos configurar Webpack.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Next, we use `set()` to make the `otherTable` table contain references to the same functions as the `tbl` table.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085638Z" creationid="gitnacho" creationdate="20221006T085638Z">
        <seg>A continuación, usamos `set()` para hacer que la tabla `otherTable` contenga referencias a las mismas funciones que la tabla `tbl`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Next, we use the {{domxref("ServiceWorkerContainer.register()") }} function to register the service worker for this site, which is just a JavaScript file residing inside our app (note this is the file's URL relative to the origin, not the JS file that references it.)
3.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T024920Z">
        <seg>A continuación, usamos la función {{DOMxRef("ServiceWorkerContainer.register()") }} para registrar el *service worker* para este sitio, que solo es un archivo JavaScript que reside dentro de nuestra aplicación (ten en cuenta que esta es la URL del archivo relativa al origen , no el archivo JS que hace referencia a él).
3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Next, we'll load our binary into a typed array called `addCode` (as described in [Fetching WebAssembly Bytecode](/en-US/docs/WebAssembly/Loading_and_running)), compile and instantiate it, and execute our `add` function in JavaScript (we can now find `add()` in the [`exports`](/en-US/docs/WebAssembly/JavaScript_interface/Instance/exports) property of the instance):</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T060920Z" creationid="gitnacho" creationdate="20221007T060920Z">
        <seg>A continuación, cargaremos nuestro binario en un arreglo con tipo llamado `addCode` (como se describe en [Obtener el código de bytes de WebAssembly](/es/docs/WebAssembly/Loading_and_running)), compilaremos e instanciaremos, y ejecutaremos nuestra `add` en JavaScript (ahora podemos encontrar `add()` en la propiedad [`exports`](/es/docs/WebAssembly/JavaScript_interface/Instance/exports) de la instancia):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>No functional events are dispatched until the state becomes activated.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223800Z" creationid="gitnacho" creationdate="20221003T223800Z">
        <seg>No se envían eventos funcionales hasta que el estado se activa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>No further changes are needed for same-origin nested documents and subresources.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T024018Z" creationid="gitnacho" creationdate="20220923T024018Z">
        <seg>No se necesitan más cambios para los subrecursos y los documentos anidados del mismo origen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>No.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210105T215433Z" creationid="nacho" creationdate="20210105T215433Z">
        <seg>No.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>None</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T071419Z" creationid="gitnacho" creationdate="20221020T071419Z">
        <seg>Ninguno</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>None ({{jsxref("undefined")}}).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115754Z" creationid="gitnacho" creationdate="20221007T115754Z">
        <seg>Ninguno ({{jsxref("undefined")}}).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Not all browsers currently support following redirects after a preflighted request.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T224739Z" creationid="gitnacho" creationdate="20221011T224739Z">
        <seg>Actualmente, no todos los navegadores admiten los siguientes redireccionamientos después de una solicitud preverificada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Not everything is supported yet, but we're working on it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062929Z" creationid="gitnacho" creationdate="20221004T062929Z">
        <seg>Todavía no todo es compatible, pero estamos trabajando en ello.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211003T074619Z" creationid="gitnacho" creationdate="20211003T074619Z">
        <seg>Nota</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note how the JavaScript code is contained in `&lt;% … %&gt;`, and output happens in the space between `%&gt; … &lt;%`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070324Z" creationid="gitnacho" creationdate="20221005T070324Z">
        <seg>Observa cómo el código JavaScript está contenido en `&lt;% … %&gt;`, y la salida ocurre en el espacio entre `%&gt; … &lt;%`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note how there's nothing special here, yet we're calling into Rust code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065959Z" creationid="gitnacho" creationdate="20221004T065959Z">
        <seg>Ten en cuenta que no hay nada especial aquí, pero estamos llamando al código Rust.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note how we create the {{jsxref("Uint32Array")}} view on the Memory object's buffer ([`Memory.prototype.buffer`](/en-US/docs/WebAssembly/JavaScript_interface/Memory/buffer)), not on the Memory itself.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T225953Z" creationid="gitnacho" creationdate="20221006T225953Z">
        <seg>Observa cómo creamos la vista {{jsxref("Uint32Array")}} en el búfer del objeto `Memory` ([`Memory.prototype.buffer`](/es/docs/WebAssembly/JavaScript_interface/Memory/buffer)), no en `Memory` mismo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note how you've got to include a second function invocation operator at the end of the
accessor to actually invoke the referenced function and log the value stored inside it
(e.g. `get(0)()` rather than `get(0)`) .</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T234730Z" creationid="gitnacho" creationdate="20221019T234730Z">
        <seg>Ten en cuenta que debes incluir un segundo operador de invocación de función al final del
accesor para invocar realmente la función a la que se hace referencia y registrar el valor almacenado en su interior, (por ejemplo, `get(0)()` en lugar de `get(0)`).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note how you've got to include a second function invocation operator at the end of the
accessor to actually retrieve the value stored inside the reference (e.g.
`get(0)()` rather than `get(0)`) — it is a function rather than a
simple value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T092140Z" creationid="gitnacho" creationdate="20221006T092140Z">
        <seg>Ten en cuenta que debes incluir un segundo operador de invocación de función al final del accesor para recuperar realmente el valor almacenado dentro de la referencia (por ejemplo, `get(0)()` en lugar de `get(0)`) — es una función en lugar de un valor simple.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note how you've got to include a second function invocation operator at the end of the accessor to actually invoke the referenced function and log the value stored inside it (e.g. `get(0)()` rather than `get(0)`) .</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095857Z" creationid="gitnacho" creationdate="20221006T095857Z">
        <seg>Ten en cuenta que debes incluir un segundo operador de invocación de función al final del elemento accesor para invocar realmente la función a la que se hace referencia y registrar el valor almacenado en su interior (por ejemplo, `get(0)()` en lugar de `get(0)` ) .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that all event interfaces have names which end in "Event".</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T202538Z" creationid="gitnacho" creationdate="20221011T202538Z">
        <seg>Ten en cuenta que todas las interfaces de eventos tienen nombres que terminan en "`Event`".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that along with the OPTIONS request, two other request headers are sent (lines 9 and 10 respectively):</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222853Z" creationid="gitnacho" creationdate="20221011T222853Z">
        <seg>Ten en cuenta que junto con la solicitud de OPCIONES, se envían otros dos encabezados de solicitud (líneas 9 y 10 respectivamente):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that an HTTP error response (e.g., 404) will not trigger an exception.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T203645Z" creationid="gitnacho" creationdate="20221003T203645Z">
        <seg>Ten en cuenta que una respuesta de error HTTP (por ejemplo, 404) no activará una excepción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that cookies set in CORS responses are subject to normal third-party cookie policies.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053456Z" creationid="gitnacho" creationdate="20221012T053456Z">
        <seg>Ten en cuenta que las *cookies* configuradas en las respuestas CORS están sujetas a las políticas normales de *cookies* de terceros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that each browser has a [maximum internal value](/en-US/docs/Web/HTTP/Headers/Access-Control-Max-Age) that takes precedence when the `Access-Control-Max-Age` exceeds it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T224404Z" creationid="gitnacho" creationdate="20221011T224404Z">
        <seg>Ten en cuenta que cada navegador tiene un [valor interno máximo](/es/docs/Web/HTTP/Headers/Access-Control-Max-Age) que tiene prioridad cuando `Access-Control-Max-Age` lo supera.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that in any access control request, the {{HTTPHeader("Origin")}} header is **always** sent.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060624Z" creationid="gitnacho" creationdate="20221012T060624Z">
        <seg>Ten en cuenta que en cualquier solicitud de control de acceso, el encabezado {{HTTPHeader("Origin")}} se envía **siempre**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that in this example we download and cache the same data for the resource whether it is downloaded "normally" or preloaded.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041535Z" creationid="gitnacho" creationdate="20220921T041535Z">
        <seg>Ten en cuenta que en este ejemplo descargamos y almacenamos en caché los mismos datos para el recurso, ya sea que se descargue "normalmente" o se precargue.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that in this example, only font resources are cached.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204253Z" creationid="gitnacho" creationdate="20221003T204253Z">
        <seg>Ten en cuenta que en este ejemplo, solo se almacenan en caché los recursos de fuentes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that most images on the web, including in Google Images, are copyrighted.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062707Z" creationid="gitnacho" creationdate="20221019T062707Z">
        <seg>Ten en cuenta que la mayoría de las imágenes en la web, incluidas las de Imágenes Google, están protegidas por derechos de autor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that setting the [`Cross-Origin-Resource-Policy`](/en-US/docs/Web/HTTP/Headers/Cross-Origin-Resource-Policy) header to any other value than `same-origin` opens up the resource to potential attacks, such as [Spectre](&lt;https://en.wikipedia.org/wiki/Spectre_(security_vulnerability)&gt;).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20220923T030433Z">
        <seg>Ten en cuenta que configurar el encabezado [`Cross-Origin-Resource-Policy`](/es/docs/Web/HTTP/Headers/Cross-Origin-Resource-Policy) en cualquier otro valor que no sea `same-origin` abre el recurso a posibles ataques, como [Spectre](&lt;https://en.wikipedia.org/wiki/Spectre_(security_vulnerability)&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that simple `GET` requests are not preflighted, and so if a request is made for a resource with credentials, if this header is not returned with the resource, the response is ignored by the browser and not returned to web content.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054230Z" creationid="gitnacho" creationdate="20221012T054230Z">
        <seg>Ten en cuenta que las solicitudes `GET` simples no tienen verificación previa, por lo que si se realiza una solicitud para un recurso con credenciales, si este encabezado no se devuelve con el recurso, el navegador ignora la respuesta y no se devuelve al contenido web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that the WebAssembly text format currently doesn't have a syntax specified for
adding new custom sections; you can however add a name section to your wasm during
conversion from text format over to .wasm.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T222454Z" creationid="gitnacho" creationdate="20221019T222454Z">
        <seg>Ten en cuenta que el formato de texto de WebAssembly actualmente no tiene una sintaxis especificada para agregar nuevas secciones personalizadas; sin embargo, puedes agregar una sección `name` a tu `wasm` durante la conversión de formato de texto a `.wam`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that the [`Cross-Origin-Opener-Policy`](/en-US/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy) header limits your ability to retain a reference to popups.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20220923T030501Z">
        <seg>Ten en cuenta que el encabezado [`Cross-Origin-Opener-Policy`](/es/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy) limita tu capacidad para retener una referencia a las ventanas emergentes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that the `Cache` interface is exposed to windowed scopes as well as workers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T210424Z" creationid="gitnacho" creationdate="20221003T202505Z">
        <seg>Ten en cuenta que la interfaz `Cache` está expuesta tanto a los ámbitos *window* como a *workers*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that the order the sections are declared in doesn't matter here — you can declare your functions anywhere and still refer to them in your `elem` section.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072156Z" creationid="gitnacho" creationdate="20221007T072156Z">
        <seg>Ten en cuenta que el orden en que se declaran las secciones no importa aquí: puedes declarar tus funciones en cualquier lugar y aún así hacer referencia a ellas en tu sección `elem`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that these headers are set for you when making invocations to servers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060426Z" creationid="gitnacho" creationdate="20221012T060426Z">
        <seg>Ten en cuenta que estos encabezados se configuran automáticamente cuando realizas invocaciones a los servidores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that this parameter style is very picky — it must adhere to [JSON syntax](https://json.org/) exactly, which has some requirements about escaping characters that are easy to miss (e.g., all forward slashes are escaped).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065521Z" creationid="gitnacho" creationdate="20221005T065521Z">
        <seg>Ten en cuenta que este estilo de parámetro es muy exigente: se debe adherir exactamente a la [sintaxis JSON](https://json.org/), que tiene algunos requisitos sobre caracteres de escape que son fáciles de perder (por ejemplo, todas las barras diagonales se escapan).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that we don't recommend the general use of `&lt;caption&gt;` elements on tables, since that would also rule out the GFM syntax.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185019Z" creationid="gitnacho" creationdate="20221008T185019Z">
        <seg>Ten en cuenta que no recomendamos el uso general de elementos `&lt;caption&gt;` en las tablas, ya que eso también descartaría la sintaxis GFM.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that when `statechange` fires, the service worker's references may have
changed.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T225023Z" creationid="gitnacho" creationdate="20221003T225023Z">
        <seg>Ten en cuenta que cuando se dispara `statechange`, las referencias del *service worker* pueden haber cambiado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note that you need to be really sure to remove these when you're done debugging, as they're visible to all users!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T074616Z" creationid="gitnacho" creationdate="20221005T074616Z">
        <seg>Ten en cuenta que te debes asegurar de eliminarlos cuando termines de depurar, ya que son visibles para todos los usuarios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note the return value of `grow()` here is the previous number of WebAssembly pages.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T214055Z" creationid="gitnacho" creationdate="20221019T214055Z">
        <seg>Ten en cuenta que aquí el valor de retorno de `grow()` es el número anterior de páginas de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Note: Since an {{jsxref("ArrayBuffer")}}'s byteLength is immutable, after a successful [`Memory.prototype.grow()`](/en-US/docs/WebAssembly/JavaScript_interface/Memory/grow) operation the buffer getter will return a new ArrayBuffer object (with the new byteLength) and any previous ArrayBuffer objects become "detached", or disconnected from the underlying memory they previously pointed to.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T210724Z" creationid="gitnacho" creationdate="20221006T210724Z">
        <seg>**Nota:** Dado que el `byteLength` de {{jsxref("ArrayBuffer")}} es inmutable, después de una exitosa operación de [`Memory.prototype.grow()`](/es/docs/WebAssembly/JavaScript_interface/Memory/grow), el captador de búfer devolverá un nuevo objeto ArrayBuffer (con el nuevo `byteLength`) y cualquier objeto ArrayBuffer anterior se "separará" o se desconectará de la memoria subyacente a la que apuntaba anteriormente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Notes and warnings will render the **Note:** or **Warning:** text in the output, while callouts will not.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181309Z" creationid="gitnacho" creationdate="20221008T181309Z">
        <seg>Las notas y advertencias renderizarán el texto **Nota:** o **Advertencia:** en la salida, mientras que las **Llamada*s no lo harán.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Notes:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210113T185324Z" creationid="nacho" creationdate="20210113T185324Z">
        <seg>Notas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Nothing except basic computer literacy, and a basic web development environment.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224154Z" creationid="gitnacho" creationdate="20221018T224154Z">
        <seg>#### Prerrequisitos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Nothing except basic computer literacy.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224014Z" creationid="gitnacho" creationdate="20221018T224014Z">
        <seg>Nada excepto conocimientos básicos de informática.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now add `html_template/shell_minimal.html` with `\{\{{ SCRIPT }}}` as content into this new directory too, just for convenience (you'd obviously put this in a central place in your real dev environment).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111901Z" creationid="gitnacho" creationdate="20221003T111901Z">
        <seg>Ahora agrega `html_template/shell_minimal.html` con `\{\{{ SCRIPT }}}` como contenido en este nuevo directorio también, solo por conveniencia (obviamente, colocarías esto en un lugar central en tu entorno de desarrollo real).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now add the following code at the end of the first {{HTMLElement("script")}} element:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T112313Z" creationid="gitnacho" creationdate="20221003T112313Z">
        <seg>Ahora, agrega el siguiente código al final del primer elemento {{HTMLElement("script")}}:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now add the following line to the top of your script, to create a memory instance:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T210116Z" creationid="gitnacho" creationdate="20221006T210116Z">
        <seg>Ahora, agrega la siguiente línea en la parte superior de tu script para crear una instancia de `memory`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now all that remains is for you to load the resulting `hello.html` in a browser that supports WebAssembly.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105904Z" creationid="gitnacho" creationdate="20221003T105904Z">
        <seg>Ahora todo lo que queda es que cargues el `hello.html` resultante en un navegador que admita WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now from JavaScript we can create a Memory with 1 page and pass it in.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064840Z" creationid="gitnacho" creationdate="20221007T064840Z">
        <seg>Ahora desde JavaScript podemos crear una Memoria con 1 página y pasarla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now it's "only" a matter of copying the data from JavaScript into wasm.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T224812Z" creationid="gitnacho" creationdate="20221004T054205Z">
        <seg>Ahora "solo" es cuestión de copiar los datos de JavaScript en `wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now let's access the data in the tables — add the following lines to your code in the indicated place:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233445Z" creationid="gitnacho" creationdate="20221006T233445Z">
        <seg>Ahora accedamos a los datos en las tablas: agrega las siguientes líneas a tu código en el lugar indicado:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now let's run the compilation step again.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111910Z" creationid="gitnacho" creationdate="20221003T111910Z">
        <seg>Ahora ejecutemos el paso de compilación nuevamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now let's run this example.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111036Z" creationid="gitnacho" creationdate="20221003T111036Z">
        <seg>Ahora ejecutemos este ejemplo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now let's see how the server responds:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222057Z" creationid="gitnacho" creationdate="20221011T222057Z">
        <seg>Ahora veamos cómo responde el servidor:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now let's talk about how we can use these primitives in practice.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T080606Z" creationid="gitnacho" creationdate="20221003T080606Z">
        <seg>Ahora explicaremos cómo usar estas primitivas en la práctica.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now navigate into your new directory (again, in your Emscripten compiler environment terminal window), and run the following command:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T110749Z" creationid="gitnacho" creationdate="20221003T110749Z">
        <seg>Ahora navega a tu nuevo directorio (una vez más, en la ventana de terminal del entorno del compilador de Emscripten) y ejecuta el siguiente comando:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now that our library is written, let's build it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063541Z" creationid="gitnacho" creationdate="20221004T063541Z">
        <seg>Ahora que nuestra biblioteca está escrita, vamos a construirla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now that we've got a compiled wasm module, let's run it in the browser.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064525Z" creationid="gitnacho" creationdate="20221004T064525Z">
        <seg>Ahora que tenemos un módulo `wasm` compilado, ejecútalo en el navegador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now that we've got everything set up, let's build the package.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064001Z" creationid="gitnacho" creationdate="20221004T064001Z">
        <seg>Ahora que tenemos todo configurado, construyamos el paquete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now the server has an opportunity to determine whether it can accept a request under these conditions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222945Z" creationid="gitnacho" creationdate="20221011T222945Z">
        <seg>Ahora el servidor tiene la oportunidad de determinar si puede aceptar una solicitud en estas condiciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now we need to add an export declaration — this looks like so:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T060749Z" creationid="gitnacho" creationdate="20221007T060749Z">
        <seg>Ahora necesitamos agregar una declaración `export`; eso se ve así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now we need to run our new `myFunction()` function from JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T112200Z" creationid="gitnacho" creationdate="20221003T112200Z">
        <seg>Ahora necesitamos ejecutar nuestra nueva función `myFunction()` desde JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now we've covered the real basics, let's move on to look at some more advanced features.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061102Z" creationid="gitnacho" creationdate="20221007T061102Z">
        <seg>Ahora que hemos cubierto los conceptos básicos reales, pasemos a ver algunas características más avanzadas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now we've demonstrated usage of the main key WebAssembly building blocks, this is a good place to mention the concept of multiplicity.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T234032Z" creationid="gitnacho" creationdate="20221006T234032Z">
        <seg>Ahora que hemos demostrado el uso de los principales bloques de construcción clave de WebAssembly, este es un buen lugar para mencionar el concepto de multiplicidad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now with all of that in place, you can call the encoding function, grab the pointer and image size, put it in a JavaScript buffer of your own, and release all the wasm buffers allocated in the process:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054859Z" creationid="gitnacho" creationdate="20221004T054859Z">
        <seg>Ahora, con todo eso en su lugar, puedes llamar a la función de codificación, tomar el puntero y el tamaño de la imagen, colocarlo en un búfer de JavaScript propio y liberar todos los búferes `wasm` asignados en el proceso:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now you only need some HTML and JavaScript to load your new module:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053741Z" creationid="gitnacho" creationdate="20221004T053741Z">
        <seg>Ahora solo necesitas algo de HTML y JavaScript para cargar tu nuevo módulo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now you've got your site assets cached, you need to tell service workers to do something with the cached content.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035043Z" creationid="gitnacho" creationdate="20220921T035043Z">
        <seg>Ahora que tienes los activos de tu sitio almacenados en caché, debes decir al *service worker* que haga algo con el contenido almacenado en caché.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now, to help us understand what is going on here, let's look at the text representation of our wasm module (which we also meet in [Converting WebAssembly format to wasm](/en-US/docs/WebAssembly/Text_format_to_wasm#a_first_look_at_the_text_format)):</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T113623Z" creationid="gitnacho" creationdate="20221006T113141Z">
        <seg>Ahora, para ayudarnos a entender lo que está pasando aquí, veamos la representación de texto de nuestro módulo `wasm` (que también encontramos en [Conversión de formato WebAssembly a `wasm`](/es/docs/WebAssembly/Text_format_to_wasm#un_primer_vistazo_al_formato_de_texto)):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Now, using the terminal window you used to enter the Emscripten compiler environment, navigate to the same directory as your `hello.c` file, and run the following command:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105608Z" creationid="gitnacho" creationdate="20221003T105608Z">
        <seg>Ahora, usando la ventana de terminal que usaste para ingresar al entorno del compilador Emscripten, navega hasta el mismo directorio que tu archivo `hello.c` y ejecuta el siguiente comando:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Numbers can be left unquoted.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065320Z" creationid="gitnacho" creationdate="20221005T065320Z">
        <seg>Los números se pueden dejar sin comillas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>OPTIONS is an HTTP/1.1 method that is used to determine further information from servers, and is a {{Glossary("Safe/HTTP", "safe")}} method, meaning that it can't be used to change the resource.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222836Z" creationid="gitnacho" creationdate="20221011T222836Z">
        <seg>OPTIONS es un método HTTP/1.1 que se usa para determinar más información de los servidores y es un método {{Glossary("Safe/HTTP", "safe")}}, lo cual significa que no se puede usar para cambiar el recurso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Object.defineProperty(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210920T081124Z" creationid="gitnacho" creationdate="20210920T081124Z">
        <seg>Object.defineProperty(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Office document editors are not suitable for this use, as they rely on hidden elements that interfere with the rendering engines used by web browsers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T164641Z" creationid="gitnacho" creationdate="20221012T164641Z">
        <seg>Los editores de documentos de Office no son adecuados para este uso, ya que se basan en elementos ocultos que interfieren con los motores de representación que utilizan los navegadores web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Ok, that's not very interesting, let's add some executable code to this module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T081855Z" creationid="gitnacho" creationdate="20221007T054040Z">
        <seg>¡Bien!, eso no es muy interesante, agreguemos un código ejecutable a este módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Older web servers might not support it yet.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065028Z" creationid="gitnacho" creationdate="20221004T065028Z">
        <seg>Es posible que los servidores web más antiguos aún no lo admitan.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>On MDN we allow only inline links.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T173930Z" creationid="gitnacho" creationdate="20221008T173930Z">
        <seg>En MDN solo permitimos enlaces en línea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>On MDN, this would produce the following HTML:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183538Z" creationid="gitnacho" creationdate="20221008T183538Z">
        <seg>En MDN, esto produciría el siguiente HTML:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>On MDN, you'll see numerous code examples inserted throughout the pages to demonstrate usage of web platform features.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T202349Z" creationid="gitnacho" creationdate="20221005T202304Z">
        <seg>En MDN, verás numerosos ejemplos de código insertados en las páginas para demostrar el uso de las funciones de la plataforma web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>On receiving an event, the worker returns the resource from a cache if it is present, or otherwise fetches the resource from the remote server (storing a copy for returning in future requests).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T053007Z" creationid="gitnacho" creationdate="20220922T205533Z">
        <seg>Al recibir un evento, el *worker* devuelve el recurso desde una caché si está presente o, de lo contrario, obtiene el recurso del servidor remoto (y almacena una copia para devolverla en futuras solicitudes).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>On some pages, you'll see a scripting error like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082146Z" creationid="gitnacho" creationdate="20221005T082146Z">
        <seg>En algunas páginas, verás un error de script como este:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>On the JavaScript side, we can use the [TextDecoder API](/en-US/docs/Web/API/TextDecoder) to easily decode our bytes into a JavaScript string.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064342Z" creationid="gitnacho" creationdate="20221007T064342Z">
        <seg>En el lado de JavaScript, podemos usar la [API TextDecoder](/es/docs/Web/API/TextDecoder) para decodificar fácilmente nuestros bytes en una cadena de JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>On the Web, `{{ domxref("window.requestAnimationFrame()") }}` will be the foundation of most well-programmed per-frame main loops.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T140239Z" creationid="gitnacho" creationdate="20221003T135726Z">
        <seg>En la Web, `{{DOMxRef("window.requestAnimationFrame()") }}` será la base de la mayoría de los bucles principales por cuadro bien programados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>On the [Yari](/en-US/docs/MDN/Yari) platform that powers MDN, we still have a legacy template/macro system available called [KumaScript](https://github.com/mdn/yari/tree/main/kumascript) for automating certain aspects of content.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T200646Z" creationid="gitnacho" creationdate="20221005T064508Z">
        <seg>En la plataforma [Yari](/es/docs/MDN/Yari) que impulsa MDN, todavía tenemos disponible un sistema de plantilla/macro heredado llamado [KumaScript](https://github.com/mdn/yari/tree/main/kumascript) para automatizar ciertos aspectos del contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>On top of that we have a number of libraries we've implemented that provide services and features to let macros interact with the platform and its contents.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T094827Z" creationid="gitnacho" creationdate="20221005T094827Z">
        <seg>Además de eso, tenemos una serie de bibliotecas que hemos implementado que brindan servicios y características para permitir que las macros interactúen con la plataforma y su contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Once a module declares an import, the caller of [`WebAssembly.instantiate()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiate) must pass in an import object that has the corresponding properties.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061535Z" creationid="gitnacho" creationdate="20221007T061535Z">
        <seg>Una vez que un módulo declara una importación, el llamador a [`WebAssembly.instantiate()`](/es/docs/WebAssembly/JavaScript_interface/instantiate) debe pasar un objeto `import` que tenga las propiedades correspondientes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Once again, we see the `#[wasm_bindgen]` attribute.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063147Z" creationid="gitnacho" creationdate="20221004T063147Z">
        <seg>Una vez más, vemos el atributo `#[wasm_bindgen]`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050404Z" creationid="gitnacho" creationdate="20221005T050404Z">
        <seg>Una vez establecido, puedes hacer referencia a los elementos del arreglo usando los métodos del objeto o usando la sintaxis de índice de arreglo estándar (es decir, usando la notación de corchetes).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Once it is called on `install` or `activate` events with a promise, functional events such as `fetch` and `push` will wait until the promise is successfully resolved.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T145039Z" creationid="gitnacho" creationdate="20221002T145039Z">
        <seg>Una vez que se invoca en los eventos `install` o `activate` con una promesa, los eventos funcionales como `fetch` y `push` esperarán hasta que la promesa se resuelva con éxito.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Once it's loaded, it calls the `greet` function from that module, passing `"WebAssembly"` as a string.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065944Z" creationid="gitnacho" creationdate="20221004T065944Z">
        <seg>Una vez cargado, llama a la función `greet` desde ese módulo, pasando `"WebAssembly"` como una cadena.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Once the file is instantiated, the code calls the exported WebAssembly `run()` method, which will immediately throw an exception.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023453Z" creationid="gitnacho" creationdate="20221008T023453Z">
        <seg>Una vez que se crea una instancia del archivo, el código llama al método `run()` exportado de WebAssembly, que generará inmediatamente una excepción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Once the preflight request is complete, the real request is sent:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T224417Z" creationid="gitnacho" creationdate="20221011T224417Z">
        <seg>Una vez que se completa la solicitud de preverificación, se envía la solicitud real:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Once you've got the tool built, add the `/wabt/out/clang/Debug` directory to your system `PATH`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182843Z" creationid="gitnacho" creationdate="20221007T182843Z">
        <seg>Una vez que hayas creado la herramienta, agrega el directorio `/wabt/out/clang/Debug` a la variable `PATH` de tu sistema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Once you've got your WebAssembly instance available in your JavaScript, you can then start using features of it that have been exported via the [`WebAssembly.Instance.exports`](/en-US/docs/WebAssembly/JavaScript_interface/Instance/exports) property.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221005T060502Z">
        <seg>Una vez que tengas tu instancia de WebAssembly disponible en tu JavaScript, puedes comenzar a usar funciones que se han exportado a través de la propiedad [`WebAssembly.Instance.exports`](/es/docs/WebAssembly/JavaScript_interface/Instance/exports).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>One</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T190635Z" creationid="gitnacho" creationdate="20211102T190635Z">
        <seg>Una</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>One overriding problem that web users have suffered with for years is loss of connectivity.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T021321Z" creationid="gitnacho" creationdate="20220921T015501Z">
        <seg>Un problema primordial del que los usuarios de la web han adolecido durante años es la pérdida de conectividad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Only the `&lt;p&gt;` element with `class="fancy"` will get styled `red`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211606Z" creationid="gitnacho" creationdate="20221005T211606Z">
        <seg>Solo el elemento `&lt;p&gt;` con `class="fancy"` tendrá el estilo `red`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Open it in your browser and you'll see much the same output as the last example.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111317Z" creationid="gitnacho" creationdate="20221003T111317Z">
        <seg>Ábrelo en tu navegador y verás casi el mismo resultado que el último ejemplo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Open this file, and change its contents to look like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063636Z" creationid="gitnacho" creationdate="20221004T063636Z">
        <seg>Abre este archivo y cambie su contenido para que se vea así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Open your computer's [command prompt](https://www.lifewire.com/how-to-open-command-prompt-2618089) (Windows) or terminal ([Linux](https://help.ubuntu.com/community/UsingTheTerminal), [macOS](https://blog.teamtreehouse.com/introduction-to-the-mac-os-x-command-line)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T173616Z" creationid="Nachec" creationdate="20221020T173616Z">
        <seg>Abre tu [consola de comandos](https://www.lifewire.com/how-to-open-command-prompt-2618089) (Windows) o terminal ([Linux](https://help.ubuntu.com/community/UsingTheTerminal), [MacOS X](http://blog.teamtreehouse.com/introduction-to-the-mac-os-x-command-line)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Optional: The text to display in the article instead of the term name: `\{{Glossary("CSS", "Cascading Style Sheets")}}` yields {{Glossary("CSS", "Cascading Style Sheets")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T104902Z" creationid="gitnacho" creationdate="20221005T104902Z">
        <seg>Opcional: el texto que se mostrará en el artículo en lugar del nombre del término: `\{{Glossary("CSS", "Hojas de estilo en cascada")}}` produce {{Glossary("CSS", "Hojas de estilo en cascada" )}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Optionally, you might want to show a static image of the code's resulting output.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205615Z" creationid="gitnacho" creationdate="20221005T205615Z">
        <seg>Opcionalmente, es posible que desees mostrar una imagen estática de la salida resultante del código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Or</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170315T195657Z" creationid="nacho" creationdate="20170315T195657Z">
        <seg>O</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Or, replace the curly braces on either side with HTML comments `&lt;!-- --&gt;` to preserve the information, like so:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082303Z" creationid="gitnacho" creationdate="20221005T082303Z">
        <seg>O bien, reemplaza las llaves a cada lado con comentarios HTML `&lt;!-- --&gt;` para conservar la información, así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Other available APIs include:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073215Z" creationid="gitnacho" creationdate="20221005T073215Z">
        <seg>Otras APIs disponibles incluyen:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Other variants of `br` are `br_if` for branching on condition, and `br_table` for branching to different blocks based on an argument.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T081559Z" creationid="gitnacho" creationdate="20221020T081559Z">
        <seg>Otras variantes de `br` son `br_if` para bifurcar con una condición y `br_table` para bifurcar a diferentes bloques en función de un argumento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Otherwise</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210113T060940Z" creationid="nacho" creationdate="20210113T060940Z">
        <seg>De otra manera</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Our `.wat` examples look like so:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073827Z" creationid="gitnacho" creationdate="20221007T073827Z">
        <seg>Nuestros ejemplos `.wat` se ven así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Our `import` statement is written as follows:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064456Z" creationid="gitnacho" creationdate="20221007T064456Z">
        <seg>Nuestra declaración `import` está escrita de la siguiente manera:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Our final wasm module looks like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064641Z" creationid="gitnacho" creationdate="20221007T064641Z">
        <seg>Nuestro módulo `wasm` final se ve así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Our function won't do very much on its own — now we need to call it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T060634Z" creationid="gitnacho" creationdate="20221007T060634Z">
        <seg>Nuestra función no hará mucho por sí sola, ahora tenemos que llamarla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Our mission is to provide _developers_ with the _information_ they need to _easily_ build projects on the _web platform_.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T200308Z" creationid="gitnacho" creationdate="20221008T200308Z">
        <seg>Nuestra misión es proporcionar a los _desarrolladores_ la _información_ que necesitan para construir _fácilmente_ proyectos en la _plataforma web_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Our next function — `lookupInDatabase()` — provides a simple promise-based operation for looking up the given `url` in the object store we created above.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T051320Z" creationid="gitnacho" creationdate="20221004T051320Z">
        <seg>Nuestra siguiente función, `lookupInDatabase()`, proporciona una operación simple basada en promesas para buscar la `url` dada en el almacén de objetos que creamos anteriormente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Output:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T224307Z" creationid="nachec" creationdate="20220804T224307Z">
        <seg>Output:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Over in the text format, you can create a shared memory using the `shared` keyword, like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080851Z" creationid="gitnacho" creationdate="20221007T080851Z">
        <seg>En el formato de texto, puedes crear una memoria compartida usando la palabra clave `shared`, como esta:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Over on the JavaScript API side, the [`WebAssembly.Memory()`](/en-US/docs/WebAssembly/JavaScript_interface/Memory/Memory) constructor's initialization object now has a `shared` property, which when set to `true` will create a shared memory:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080721Z" creationid="gitnacho" creationdate="20221007T080721Z">
        <seg>En el lado de la API de JavaScript, la inicialización del objeto constructor [`WebAssembly.Memory()`](/es/docs/WebAssembly/JavaScript_interface/Memory/Memory) ahora tiene una propiedad `shared`, que cuando se establece en `true ` creará una memoria compartida:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Pages can use feature detection to check whether they are in a secure context or not by using the {{domxref("isSecureContext")}} boolean, which is exposed on the global scope.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T204350Z" creationid="gitnacho" creationdate="20221018T204350Z">
        <seg>Las páginas pueden usar la detección de características para verificar si están en un contexto seguro o no mediante el uso del booleano {{DOMxRef("isSecureContext")}}, que se expone en el alcance global.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Parameters are basically just locals that are initialized with the value of the corresponding argument passed by the caller.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054540Z" creationid="gitnacho" creationdate="20221007T054540Z">
        <seg>Los parámetros básicamente son locales que se inicializan con el valor del argumento correspondiente pasado por el llamador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Passing in `{traceStack: true}` tells the WebAssembly virtual machine that it should attach a stack trace to the returned `WebAssembly.Exception`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204504Z" creationid="gitnacho" creationdate="20221019T204504Z">
        <seg>Pasar `{traceStack: true}` le dice a la máquina virtual WebAssembly que debe adjuntar un seguimiento de pila a la `WebAssembly.Exception` devuelta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Performance entries are also created in indirect ways such as loading a resource (such as an image).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220913T205835Z" creationid="gitnacho" creationdate="20220913T205835Z">
        <seg>Las entradas de rendimiento también se crean de forma indirecta, como cargar un recurso (como una imagen).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Please [file bugs](https://github.com/rustwasm/wasm-bindgen/issues/new) if something is missing.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063034Z" creationid="gitnacho" creationdate="20221004T063034Z">
        <seg>Por favor, ve el [archivo bugs](https://github.com/rustwasm/wasm-bindgen/issues/new) si falta algo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Possible values are:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211003T053639Z" creationid="gitnacho" creationdate="20211003T053639Z">
        <seg>Los valores posibles son:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Preferably, include some more prose in this subsection to describe the result.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211216Z" creationid="gitnacho" creationdate="20221005T211159Z">
        <seg>Preferiblemente, incluye algo más de prosa en esta subsección para describir el resultado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Processing of the markup works on the AST it produces, not on the exact characters provided.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181348Z" creationid="gitnacho" creationdate="20221008T181348Z">
        <seg>El procesado del marcado funciona en el AST que produce, no en los caracteres exactos proporcionados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Promise.all(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T201905Z" creationid="gitnacho" creationdate="20221003T201905Z">
        <seg>Promise.all(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Promise.all([</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074330Z" creationid="gitnacho" creationdate="20221007T074330Z">
        <seg>Promise.all([</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Promise.resolve()
)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T072143Z" creationid="gitnacho" creationdate="20221002T072143Z">
        <seg>Promise.resolve()
)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Promise.resolve(input),</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T072358Z" creationid="gitnacho" creationdate="20221002T072358Z">
        <seg>Promise.resolve(input),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Promise.resolve(thenable)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080704Z" creationid="gitnacho" creationdate="20221002T080704Z">
        <seg>Promise.resolve(thenable)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Promise.resolve(thenable)  // Will lead to infinite recursion.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080753Z" creationid="gitnacho" creationdate="20221002T080753Z">
        <seg>Promise.resolve(thenable)  // Dará lugar a una recursividad infinita.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Promises passed into `waitUntil()` will block other events until completion, so you can rest assured that your clean-up operation will have completed by the time you get your first `fetch` event on the new service worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042130Z" creationid="gitnacho" creationdate="20220921T042130Z">
        <seg>Las promesas pasadas a `waitUntil()` bloquearán otros eventos hasta que se completen, por lo que puedes estar seguro de que tu operación de limpieza se habrá completado cuando obtengas tu primer evento `fetch` en el nuevo *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Properties tables are a specific type of table used for displaying structured property-value content across a set of pages of a particular type.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T190832Z" creationid="gitnacho" creationdate="20221008T185712Z">
        <seg>Las tablas de propiedades son un tipo específico de tabla que se utiliza para mostrar contenido estructurado de valores de propiedad en un conjunto de páginas de un tipo particular.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Putting `EMSCRIPTEN_KEEPALIVE` before a function name stops this from happening.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111723Z" creationid="gitnacho" creationdate="20221003T111723Z">
        <seg>Poner `EMSCRIPTEN_KEEPALIVE` antes del nombre de una función evita que esto suceda.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Putting this together with what we have already learned, we can finally define a module containing our own simple function:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055306Z" creationid="gitnacho" creationdate="20221007T055306Z">
        <seg>Juntando esto con lo que ya hemos aprendido, finalmente podemos definir un módulo que contenga nuestra propia función simple:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>R</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210919T153408Z" creationid="gitnacho" creationdate="20210919T153408Z">
        <seg>R</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Read Jake Archibald's (unfortunately-titled but well-written) [Application Cache is a Douchebag](https://alistapart.com/article/application-cache-is-a-douchebag/) for more details.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T021709Z" creationid="gitnacho" creationdate="20220921T015802Z">
        <seg>Lee el documento de Jake Archibald (desafortunadamente mal titulado pero bien escrito) [Application Cache is a Douchebag](https://alistapart.com/article/application-cache-is-a-douchebag/) para obtener más detalles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Read-only.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T223535Z" creationid="gitnacho" creationdate="20221005T223502Z">
        <seg>Solo lectura.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Reads your `Cargo.toml` and produces an equivalent `package.json`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064235Z" creationid="gitnacho" creationdate="20221004T064235Z">
        <seg>Lee tu `Cargo.toml` y produce un `package.json` equivalente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Redirects have mandatory headers ({{HTTPHeader("Location")}}):</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T080120Z" creationid="gitnacho" creationdate="20221017T211812Z">
        <seg>Las redirecciones tienen cabeceras ({{HTTPHeader("Location")}}) obligatorias:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Resources that are not local, to be considered secure, must meet the following criteria:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T204242Z" creationid="gitnacho" creationdate="20221018T204242Z">
        <seg>Los recursos que no son locales, para ser considerados seguros, deben cumplir con los siguientes criterios:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Responses are grouped in five classes: informational responses, successful responses, redirections, client errors, and servers errors.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064616Z" creationid="gitnacho" creationdate="20221012T064616Z">
        <seg>Las respuestas se clasifican en cinco clases: respuestas informativas, respuestas de petición correcta, redirecciones, error del cliente y error del servidor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Right now, [Git](https://git-scm.com/) is the most popular version control system along with the [GitHub](https://github.com/) or [GitLab](https://about.gitlab.com/) hosting service.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T165131Z" creationid="gitnacho" creationdate="20221012T165131Z">
        <seg>En este momento, [Git](https://git-scm.com/) es el sistema de control de versiones más popular junto con el servicio de alojamiento [GitHub](https://github.com/) o [GitLab](https://about.gitlab.com/).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Right now, there are four main entry points:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T080707Z" creationid="gitnacho" creationdate="20221003T080707Z">
        <seg>Ahora mismo hay cuatro puntos principales donde comenzar:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Right-click the image (Ctrl + click on a Mac), choose _Save Image As…_, and choose a safe place to save your image.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062604Z" creationid="gitnacho" creationdate="20221019T062604Z">
        <seg>Haz clic con el botón derecho en la imagen (Ctrl+clic en una Mac), elige _Guardar imagen como..._ y elige un lugar seguro para guardar tu imagen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Runs `wasm-bindgen` on that WebAssembly, generating a JavaScript file that wraps up that WebAssembly file into a module the browser can understand.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064202Z" creationid="gitnacho" creationdate="20221004T064202Z">
        <seg>Ejecuta `wasm-bindgen` en ese WebAssembly, generando un archivo JavaScript que envuelve ese archivo WebAssembly en un módulo que el navegador puede entender.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Rustup installs `rustc`, the Rust compiler, as well as `cargo`, Rust's package manager, `rust-std`, Rust's standard libraries, and some helpful docs — `rust-docs`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061427Z" creationid="gitnacho" creationdate="20221004T061427Z">
        <seg>Rustup instala `rustc`, el compilador de Rust, así como `cargo`, el administrador de paquetes de Rust, `rust-std`, las bibliotecas estándar de Rust y algunos documentos útiles: `rust-docs`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>S</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220728T143332Z" creationid="gitnacho" creationdate="20220728T143332Z">
        <seg>S</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>S-expressions are a very old and very simple textual format for representing trees, and thus we can think of a module as a tree of nodes that describe the module's structure and its code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053540Z" creationid="gitnacho" creationdate="20221007T053540Z">
        <seg>Las expresiones-S son un formato textual muy antiguo y muy simple para representar árboles y, por lo tanto, podemos pensar en un módulo como un árbol de nodos que describen la estructura del módulo y su código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Safari is still yet to implement.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T044344Z" creationid="gitnacho" creationdate="20221004T044344Z">
        <seg>Safari aún está por implementarlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Same-site (but cross-origin) nested documents and subresources need to set the [`Cross-Origin-Resource-Policy`](/en-US/docs/Web/HTTP/Headers/Cross-Origin-Resource-Policy) header with `same-site` as value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20220923T024058Z">
        <seg>Los subrecursos y los documentos anidados del mismo sitio (pero de origen cruzado) deben establecer la [`Cross-Origin-Resource-Policy`](/es/docs/Web/HTTP/Headers/Cross-Origin-Resource-Policy) encabezado con `same-site` como valor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Say we wanted to embed the code at &lt;https://mdn.github.io/learning-area/css/styling-boxes/backgrounds/&gt;.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T212258Z" creationid="gitnacho" creationdate="20221005T212258Z">
        <seg>Digamos que queríamos incrustar el código en &lt;https://mdn.github.io/learning-area/css/styling-boxes/backgrounds/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Scripts with the `defer` attribute will execute in the order in which they appear in the document.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T124405Z" creationid="gitnacho" creationdate="20221003T124405Z">
        <seg>Los scripts con el atributo `defer` se ejecutarán en el orden en que aparecen en el documento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Scripts with the `defer` attribute will prevent the `DOMContentLoaded` event from firing until the script has loaded and finished evaluating.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T123652Z" creationid="gitnacho" creationdate="20221003T123652Z">
        <seg>Los scripts con el atributo `defer` evitarán que se active el evento `DOMContentLoaded` hasta que el script se haya cargado y terminado de evaluar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Scripts without {{HTMLAttrxRef("async", "script")}}, {{HTMLAttrxRef("defer", "script")}} or `type="module"` attributes, as well as inline scripts without the `type="module"` attribute, are fetched and executed immediately, before the browser continues to parse the page.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T133807Z" creationid="gitnacho" creationdate="20221003T133807Z">
        <seg>Scripts sin los atributos {{HTMLAttrxRef("async", "script")}}, {{HTMLAttrxRef("defer", "script")}} o `type="module"`, así como scripts en línea sin el atributo `type ="module"`, se recuperan y ejecutan inmediatamente, antes de que el navegador continúe analizando la página.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Search for the file `shell_minimal.html` in your emsdk repo.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T110658Z" creationid="gitnacho" creationdate="20221003T110658Z">
        <seg>Busca el archivo `shell_minimal.html` en tu repositorio emsdk.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See "When to use HTML tables" below.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184443Z" creationid="gitnacho" creationdate="20221008T184443Z">
        <seg>Consulta "Cuándo usar tablas HTML" más adelante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See [Browser compatibility](#browser_compatibility) for notes on browser support.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T123257Z" creationid="gitnacho" creationdate="20221003T123257Z">
        <seg>Consulta [Compatibilidad con navegadores](#compatibilidad_con_navegadores) para obtener notas sobre la compatibilidad con navegadores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See [CORS settings attributes](/en-US/docs/Web/HTML/Attributes/crossorigin) for a more descriptive explanation of its valid arguments.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T123556Z" creationid="gitnacho" creationdate="20221003T123556Z">
        <seg>Consulte [Atributos de configuración CORS](/es/docs/Web/HTML/Attributes/crossorigin) para obtener una explicación más descriptiva de sus argumentos válidos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See [Deleting old caches](/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#deleting_old_caches) for more information.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T103944Z" creationid="gitnacho" creationdate="20221003T203048Z">
        <seg>Consulta [Eliminar cachés antiguas](/es/docs/Web/API/Service_Worker_API/Using_Service_Workers#eliminar_cachés_antiguas) para obtener más información.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See [Other macros](/en-US/docs/MDN/Writing_guidelines/Page_structures/Macros/Other) for information on macros that are infrequently used, are used only in special contexts, or are deprecated.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T102505Z" creationid="gitnacho" creationdate="20221005T102505Z">
        <seg>Consulta [Otras macros](/es/docs/MDN/Writing_guidelines/Page_structures/Macros/Other) para obtener información sobre las macros que se utilizan con poca frecuencia, que se utilizan solo en contextos especiales o, están en desuso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See [Security considerations](https://www.w3.org/TR/service-workers/#security-considerations)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042621Z" creationid="gitnacho" creationdate="20220921T042621Z">
        <seg>Ve [Consideraciones de seguridad](https://www.w3.org/TR/service-workers/#security-considerations)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See [Subresource Integrity](/en-US/docs/Web/Security/Subresource_Integrity).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T124800Z">
        <seg>Consulta [Integridad de los subrecursos](/es/docs/Web/Security/Subresource_Integrity).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See [WebAssembly debugging with Firefox DevTools](https://www.youtube.com/watch?v=R1WtBkMeGds) for a video preview.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T181912Z" creationid="gitnacho" creationdate="20221006T181912Z">
        <seg>Ve [Depurar WebAssembly con Firefox DevTools](https://www.youtube.com/watch?v=R1WtBkMeGds) para obtener una vista previa de video.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See [bug 1733981](https://bugzilla.mozilla.org/show_bug.cgi?id=1733981).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220828Z" creationid="gitnacho" creationdate="20221011T220727Z">
        <seg>Consulta [error 1733981](https://bugzilla.mozilla.org/show_bug.cgi?id=1733981).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also [Async scripts for asm.js](/en-US/docs/Games/Techniques/Async_scripts).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T123408Z">
        <seg>Consulta también [Scripts asíncronos para `asm.js`](/es/docs/Games/Techniques/Async_scripts).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.from()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053434Z" creationid="gitnacho" creationdate="20221005T050543Z">
        <seg>Consulta también {{jsxref("Array.from()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.of()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053434Z" creationid="gitnacho" creationdate="20221005T050612Z">
        <seg>Consulta también {{jsxref("Array.of()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.copyWithin()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053434Z" creationid="gitnacho" creationdate="20221005T051047Z">
        <seg>Consulta también {{jsxref("Array.prototype.copyWithin()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.entries()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053434Z" creationid="gitnacho" creationdate="20221005T051121Z">
        <seg>Consulta también {{jsxref("Array.prototype.entries()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.every()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053434Z" creationid="gitnacho" creationdate="20221005T051215Z">
        <seg>Consulta también {{jsxref("Array.prototype.every()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.fill()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053434Z" creationid="gitnacho" creationdate="20221005T051317Z">
        <seg>Consulta también {{jsxref("Array.prototype.fill()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.filter()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053434Z" creationid="gitnacho" creationdate="20221005T051357Z">
        <seg>Consulta también {{jsxref("Array.prototype.filter()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.find()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053434Z" creationid="gitnacho" creationdate="20221005T051437Z">
        <seg>Consulta también {{jsxref("Array.prototype.find()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.findIndex()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051525Z" creationid="gitnacho" creationdate="20221005T051525Z">
        <seg>Consulta también {{jsxref("Array.prototype.findIndex()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.forEach()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051604Z" creationid="gitnacho" creationdate="20221005T051604Z">
        <seg>Consulta también {{jsxref("Array.prototype.forEach()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.includes()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051649Z" creationid="gitnacho" creationdate="20221005T051649Z">
        <seg>Consulta también {{jsxref("Array.prototype.includes()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.indexOf()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051720Z" creationid="gitnacho" creationdate="20221005T051720Z">
        <seg>Ver también {{jsxref("Array.prototype.indexOf()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.join()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T051813Z" creationid="gitnacho" creationdate="20221005T051813Z">
        <seg>Consulta también {{jsxref("Array.prototype.join()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.keys()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053434Z" creationid="gitnacho" creationdate="20221005T051859Z">
        <seg>Consulta también {{jsxref("Array.prototype.keys()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.lastIndexOf()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053434Z" creationid="gitnacho" creationdate="20221005T051927Z">
        <seg>Consulta también {{jsxref("Array.prototype.lastIndexOf()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.map()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053515Z" creationid="gitnacho" creationdate="20221005T052003Z">
        <seg>Consulta también {{jsxref("Array.prototype.map()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.reduce()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053515Z" creationid="gitnacho" creationdate="20221005T052033Z">
        <seg>Consulta también {{jsxref("Array.prototype.reduce()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.reduceRight()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053515Z" creationid="gitnacho" creationdate="20221005T052055Z">
        <seg>Consulta también {{jsxref("Array.prototype.reduceRight()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.reverse()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053515Z" creationid="gitnacho" creationdate="20221005T052114Z">
        <seg>Consulta también {{jsxref("Array.prototype.reverse()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.slice()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053515Z" creationid="gitnacho" creationdate="20221005T052212Z">
        <seg>Consulta también {{jsxref("Array.prototype.slice()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.some()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053515Z" creationid="gitnacho" creationdate="20221005T052233Z">
        <seg>Consulta también {{jsxref("Array.prototype.some()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.sort()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053515Z" creationid="gitnacho" creationdate="20221005T052307Z">
        <seg>Consulta también {{jsxref("Array.prototype.sort()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.toLocaleString()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053515Z" creationid="gitnacho" creationdate="20221005T052441Z">
        <seg>Consulta también {{jsxref("Array.prototype.toLocaleString()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.toString()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053515Z" creationid="gitnacho" creationdate="20221005T052502Z">
        <seg>Consulta también {{jsxref("Array.prototype.toString()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also {{jsxref("Array.prototype.values()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T053515Z" creationid="gitnacho" creationdate="20221005T052349Z">
        <seg>Consulta también {{jsxref("Array.prototype.values()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See also: [node.js `util.inspect()`](https://nodejs.org/api/util.html#util_util_inspect_object_options).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073259Z" creationid="gitnacho" creationdate="20221005T073259Z">
        <seg>Consulta también: [node.js `util.inspect()`](https://nodejs.org/api/util.html#util_util_inspect_object_options).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See custom-section.html [source code](https://github.com/mdn/webassembly-examples/blob/master/other-examples/custom-section.html)
and [live example](https://mdn.github.io/webassembly-examples/other-examples/custom-section.html).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T222831Z" creationid="gitnacho" creationdate="20221019T222831Z">
        <seg>Ve el [código fuente](https://github.com/mdn/webassembly-examples/blob/master/other-examples/custom-section.html) de`custom-section.html`  y el [ejemplo en vivo](https://mdn.github.io/webassembly-examples/other-examples/custom-section.html).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See how `then` works [here](/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then#return_value).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T074425Z" creationid="gitnacho" creationdate="20221002T074425Z">
        <seg>Ve cómo funciona `then` [aquí](/es/docs/Web/JavaScript/Reference/Global_Objects/Promise/then#valor_de_retorno).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See imports.html [source code](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/imports.html) and
[live version](https://mdn.github.io/webassembly-examples/js-api-examples/imports.html).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T230505Z" creationid="gitnacho" creationdate="20221019T230505Z">
        <seg>Consulta el [código fuente](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/imports.html) de `imports.html` y
la [versión en vivo](https://mdn.github.io/webassembly-examples/js-api-examples/imports.html).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See our [Live samples guide](/en-US/docs/MDN/Writing_guidelines/Page_structures/Live_samples) for more information.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T210923Z" creationid="gitnacho" creationdate="20221005T210923Z">
        <seg>Consulta nuestra [guía de muestras en vivo](/es/docs/MDN/Writing_guidelines/Page_structures/Live_samples) para obtener más información.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See the [Building up a basic demo with Babylon.js](/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js) subpage for the basics of using Babylon.js, including setting up a development environment, structuring the necessary HTML, and writing the JavaScript code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T082918Z">
        <seg>Consulta la subpágina [Crear una demo básica con Babylon.js](/es/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js) para obtener información básica sobre el uso de Babylon.js, incluida la configuración de un entorno de desarrollo, la estructuración del HTML necesario y escribir el código JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See the [Second overload example](/en-US/docs/WebAssembly/JavaScript_interface/instantiate#second_overload_example).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T112456Z" creationid="gitnacho" creationdate="20221005T060350Z">
        <seg>Consulta el [Ejemplo de segunda sobrecarga](/es/docs/WebAssembly/JavaScript_interface/instantiate#segundo_ejemplo_de_sobrecarga ).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See the [WebAssembly semantics](https://webassembly.github.io/spec/core/exec/index.html) for a treatment of each instruction.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T081139Z" creationid="gitnacho" creationdate="20221007T081139Z">
        <seg>Consulta la [Semántica de WebAssembly](https://webassembly.github.io/spec/core/exec/index.html) para ver el tratamiento de cada instrucción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>See the `index-compile.html` [source code](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html) or [view it live](https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T112046Z" creationid="gitnacho" creationdate="20221007T112046Z">
        <seg>Consulta el [código fuente](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html) de `index-compile.html` o lo puedes [ver en vivo](https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Serve the root directory of the project with a local web server, (e.g. `python3 -m http.server`).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064801Z" creationid="gitnacho" creationdate="20221004T064801Z">
        <seg>Sirve el directorio raíz del proyecto con un servidor web local (por ejemplo, `python3 -m http.server`).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Servers can also inform clients whether "credentials" (such as [Cookies](/en-US/docs/Web/HTTP/Cookies) and [HTTP Authentication](/en-US/docs/Web/HTTP/Authentication)) should be sent with requests.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T213945Z" creationid="gitnacho" creationdate="20221011T213945Z">
        <seg>Los servidores también pueden informar a los clientes si las "credenciales" (como [*Cookies*](/es/docs/Web/HTTP/Cookies) y [Autenticación HTTP](/es/docs/Web/HTTP/Authentication)) deben ser enviado con solicitudes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Service worker syntax is more complex than that of AppCache, but the trade-off is that you can use JavaScript to control your AppCache-implied behaviors with a fine degree of granularity, allowing you to handle this problem and many more.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T051909Z" creationid="gitnacho" creationdate="20220921T020016Z">
        <seg>La sintaxis del *service worker* es más compleja que la de _AppCache_ pero la compensación es que puedes usar JavaScript para controlar su comportamiento implícito en _AppCache_ con un buen grado de fina granularidad, lo que te permite manejar este problema y muchos más.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Service workers are also intended to be used for such things as:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T145246Z" creationid="gitnacho" creationdate="20221002T145246Z">
        <seg>Los *service workers* también están destinados a ser utilizados para cosas como:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Service workers are often already started (they remain active for some time after processing other requests).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T053501Z" creationid="gitnacho" creationdate="20220922T205638Z">
        <seg>Los *service workers* a menudo ya están iniciados (permanecen activos durante algún tiempo después de procesar otras solicitudes).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Service workers essentially act as proxy servers that sit between web applications, the browser, and the network (when available).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T133637Z" creationid="gitnacho" creationdate="20221002T133637Z">
        <seg>Los *service workers* esencialmente actúan como servidores proxy que se ubican entre las aplicaciones web, el navegador y la red (cuando está disponible).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Service workers handle {{domxref("fetch()")}} events on behalf of a site, for pages within a given scope.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220922T205417Z">
        <seg>Los *service worker*s manejan eventos {{DOMxRef("fetch()")}} en nombre de un sitio, para páginas dentro de un determinado ámbito.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Service workers only run over HTTPS, for security reasons.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T134734Z" creationid="gitnacho" creationdate="20221002T134734Z">
        <seg>Los *service workers* solo funcionan sobre HTTPS, por razones de seguridad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Service workers should finally fix these issues.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T021741Z" creationid="gitnacho" creationdate="20220921T015854Z">
        <seg>El *service worker* finalmente deberían solucionar estos problemas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Setting its value to `true` before returning from an event handler prevents propagation of the event.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T204732Z" creationid="gitnacho" creationdate="20221011T204732Z">
        <seg>Establecer su valor en `true` antes de regresar de un controlador de eventos evita la propagación del evento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Shared memory and high-resolution timers were effectively [disabled at the start of 2018](https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/) in light of [Spectre](&lt;https://en.wikipedia.org/wiki/Spectre_(security_vulnerability)&gt;).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T023623Z" creationid="gitnacho" creationdate="20220923T023623Z">
        <seg>La memoria compartida y los temporizadores de alta resolución se [inhabilitaron a principios de 2018](https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/) en luz de [Spectre](&lt;https://en.wikipedia.org/wiki/Spectre_(security_vulnerability)&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Shared memory can be created and updated simultaneously in workers or the main thread.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T052631Z" creationid="gitnacho" creationdate="20220923T023412Z">
        <seg>La memoria compartida se puede crear y actualizar simultáneamente en los *workers* o en el subproceso principal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Should be used on main pages like interface pages, API overview pages, and API entry points (e.g. `navigator.xyz`) but usually not on sub-pages like method and property pages.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T115621Z" creationid="gitnacho" creationdate="20221005T115621Z">
        <seg>Se debe utilizar en las páginas principales, como las páginas de la interfaz, las páginas de descripción general de la API y los puntos de entrada de la API (por ejemplo, `navigator.xyz`), pero normalmente no en las subpáginas, como las páginas de métodos y propiedades.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Should the user leave the site and return later, we will save the message using the [Web Storage API](/en-US/docs/Web/API/Web_Storage_API).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T230408Z" creationid="gitnacho" creationdate="20221002T230408Z">
        <seg>Si el usuario abandona el sitio y regresa más tarde, guardaremos el mensaje usando la [API de almacenamiento web](/es/docs/Web/API/Web_Storage_API).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Similarly, a module may also optionally export its memory.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T225311Z" creationid="gitnacho" creationdate="20221006T210811Z">
        <seg>De manera similar, un módulo también puede exportar opcionalmente su memoria.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Similarly, you could configure the returned information based on authentication status instead of using cookies.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210914Z" creationid="gitnacho" creationdate="20220922T210914Z">
        <seg>De manera similar, puedes configurar la información devuelta según el estado de autenticación en lugar de usar *cookies*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Since JavaScript has complete control over how WebAssembly code is downloaded, compiled and run, JavaScript developers could even think of WebAssembly as just a JavaScript feature for efficiently generating high-performance functions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T080331Z" creationid="gitnacho" creationdate="20221003T080331Z">
        <seg>Dado que JavaScript tiene un control completo sobre como se descarga, compila y ejecuta el código de WebAssembly, los desarrolladores de JavaScript pueden pensar sobre WebAssembly como simplemente una funcionalidad de JavaScript para generar funciones de alto rendimiento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Since WebAssembly is type checked, and the `funcref` can be potentially any function signature, we have to supply the presumed signature of the callee at the callsite, hence we include the `$return_i32` type, to tell the program a function returning an `i32` is expected.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073057Z" creationid="gitnacho" creationdate="20221007T073057Z">
        <seg>Dado que WebAssembly tiene verificación de tipo, y `funcref` potencialmente puede ser cualquier firma de función, tenemos que proporcionar la supuesta firma del llamador en el sitio de la llamada, por lo tanto, incluimos el tipo `$return_i32`, para darle al programa una función que devuelve un `i32` esperado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Since the character sequence "`\{{`" is used to indicate the start of a macro, this can be troublesome if you actually just want to use "`\{{`" and "`\}\}`" in a page.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T084942Z" creationid="gitnacho" creationdate="20221005T065631Z">
        <seg>Debido a que la secuencia de caracteres "`\{{`" se usa para indicar el inicio de una macro, esto puede ser problemático si en realidad solo deseas usar "`\{{`" y "`\}\}`" en una página.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Since the request uses a `Content-Type` of `text/xml`, and since a custom header is set, this request is preflighted.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222654Z" creationid="gitnacho" creationdate="20221011T222654Z">
        <seg>Dado que la solicitud utiliza un `Content-Type` de `text/xml`, y dado que se establece un encabezado personalizado, esta solicitud tiene una preverificación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Since this is a simple `GET` request, it is not preflighted but the browser will **reject** any response that does not have the {{HTTPHeader("Access-Control-Allow-Credentials")}}`: true` header, and **not** make the response available to the invoking web content.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230557Z" creationid="gitnacho" creationdate="20221011T230557Z">
        <seg>Dado que se trata de una simple solicitud `GET`, no tiene verificación previa, pero el navegador **rechazará** cualquier respuesta que no tenga un encabezado {{HTTPHeader("Access-Control-Allow-Credentials")}}`: true`, y **no** hará que la respuesta esté disponible para el contenido web que invoca.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Since this module exports its memory, given an Instance of this module called instance we can use an exported function `accumulate()` to create and populate an input array directly in the module instance's linear memory (`mem`).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T225820Z" creationid="gitnacho" creationdate="20221006T225820Z">
        <seg>Dado que este módulo exporta su memoria, dada una Instancia de este módulo llamada `instance`, podemos usar una función exportada `accumulate()` para crear y completar un arreglo de entrada directamente en la memoria lineal de la instancia del módulo (`mem`).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So `caches.match(event.request)` is great when there is a match in the service worker cache, but what about cases when there isn't a match?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035950Z" creationid="gitnacho" creationdate="20220921T035950Z">
        <seg>Entonces `caches.match(event.request)` es excelente cuando hay una coincidencia en caché del *service worker*, pero ¿qué pasa con los casos en los que no hay una coincidencia?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So `shared0func` loads and returns the value stored at memory index `0`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073951Z" creationid="gitnacho" creationdate="20221007T073951Z">
        <seg>Entonces se carga  `shared0func`y devuelve el valor almacenado en el índice de memoria `0`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So a `Response` stored in a `Cache` won't contain `Set-Cookie` headers, and therefore won't cause any cookies to be stored.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T205259Z" creationid="gitnacho" creationdate="20221003T205259Z">
        <seg>Por lo tanto, una `Response` almacenada en una `Cache` no contendrá encabezados `Set-Cookie` y, por lo tanto, no hará que se almacenen *cookies*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So a string is just a sequence of bytes somewhere inside this linear memory.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064033Z" creationid="gitnacho" creationdate="20221007T064033Z">
        <seg>Entonces, una cadena es solo una secuencia de bytes en algún lugar dentro de esta memoria lineal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So after instantiation, the table still has length 2, but the elements now contain callable [Exported WebAssembly Functions](/en-US/docs/WebAssembly/Exported_functions) which we can call from JS.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T103748Z" creationid="gitnacho" creationdate="20221006T095802Z">
        <seg>Entonces, después de la creación de instancias, la tabla aún tiene una longitud de 2, pero los elementos ahora contienen [Funciones WebAssembly exportadas](/es/docs/WebAssembly/Exported_functions) a las que podemos llamar desde JS.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So for example, after executing the following function:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055049Z" creationid="gitnacho" creationdate="20221007T055049Z">
        <seg>Entonces, por ejemplo, después de ejecutar la siguiente función:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So given the following function:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054630Z" creationid="gitnacho" creationdate="20221007T054630Z">
        <seg>Entonces dada la siguiente función:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So how do we get those bytes into an array buffer and compiled?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T054740Z" creationid="gitnacho" creationdate="20221004T071722Z">
        <seg>Entonces, ¿cómo metemos esos bytes en un búfer de arreglo y los compilamos?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So how do we place wasm functions in our table?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072012Z" creationid="gitnacho" creationdate="20221007T072012Z">
        <seg>Entonces, ¿cómo colocamos las funciones `wasm` en nuestra tabla?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So how do we use this?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233859Z" creationid="gitnacho" creationdate="20221006T233859Z">
        <seg>Entonces, ¿cómo usamos esto?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So let's see a complete module that prints the string "Hi".</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064555Z" creationid="gitnacho" creationdate="20221007T064555Z">
        <seg>Así que veamos un módulo completo que imprime la cadena "Hola".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So matching a new key requires looking at both key and value for entries in the `Cache` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T203134Z" creationid="gitnacho" creationdate="20221003T203134Z">
        <seg>Por lo tanto, hacer coincidir una nueva clave requiere mirar tanto la clave como el valor de las entradas en el objeto `Cache`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So our final module (for now) looks like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T060816Z" creationid="gitnacho" creationdate="20221007T060816Z">
        <seg>Así que nuestro módulo final (por ahora) se ve así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So part of the glue code is implementing the functionality of each respective library used by the C/C++ code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T081611Z" creationid="gitnacho" creationdate="20221003T081611Z">
        <seg>Por lo tanto, parte del código "pegamento" implementa la funcionalidad de cada biblioteca respectiva utilizada por el código C/C++.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So that means the WebAssembly S-expression:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053714Z" creationid="gitnacho" creationdate="20221007T053714Z">
        <seg>Entonces eso significa la expresión-S de WebAssembly:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So the general principle here is: authors should use the GFM Markdown syntax when they can, and fall back to raw HTML when they have to or when HTML is more readable.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184425Z" creationid="gitnacho" creationdate="20221008T184425Z">
        <seg>Entonces, el principio general aquí es que: los autores deben usar la sintaxis Markdown de GFM cuando puedan, y recurrir al HTML puro cuando sea necesario o cuando el HTML sea más legible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So the original gets returned to the browser and the clone gets sent to the cache.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040351Z" creationid="gitnacho" creationdate="20220921T040351Z">
        <seg>Entonces, el original se devuelve al navegador y el clon se envía a caché.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So this is similar to functions in other languages, even if it looks different because it is an S-expression.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054242Z" creationid="gitnacho" creationdate="20221007T054242Z">
        <seg>Así que esto es similar a las funciones en otros lenguajes, incluso si se ve diferente porque es una expresión-S.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So this parameter needs to contain the part of the URL after that, e.g. `my-subdirectory/example.html`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T212144Z" creationid="gitnacho" creationdate="20221005T212119Z">
        <seg>Así que este parámetro debe contener la parte de la URL después de eso, p.ej. `mi-subdirectorio/ejemplo.html`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So what links the `call_indirect` to the table we are calling?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073127Z" creationid="gitnacho" creationdate="20221007T073127Z">
        <seg>Entonces, ¿qué vincula a `call_indirect` con la tabla que estamos llamando?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211101T221006Z" creationid="gitnacho" creationdate="20211101T221006Z">
        <seg>Entonces,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So, back to the typechecking.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072944Z" creationid="gitnacho" creationdate="20221007T072944Z">
        <seg>Entonces, volvamos a la verificación de tipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So, for example, to embed the contents of the first file attached to the article, you can do this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082645Z" creationid="gitnacho" creationdate="20221005T082645Z">
        <seg>Entonces, por ejemplo, para incrustar el contenido del primer archivo adjunto al artículo, puedes hacer esto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>So, if one of the parameters is an arg variable like `$2`, do not put it in quotes.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072318Z" creationid="gitnacho" creationdate="20221005T072318Z">
        <seg>Entonces, si uno de los parámetros es una variable `arg` como `$2`, no lo pongas entre comillas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Some APIs on the web are very powerful, giving an attacker the ability to do the following and more:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T203723Z" creationid="gitnacho" creationdate="20221018T203723Z">
        <seg>Algunas APIs en la web son muy poderosas y le dan al atacante la capacidad de hacer lo siguiente y más:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Some elements directly implement this interface, while others implement it via an interface that inherits it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220903T144826Z" creationid="gitnacho" creationdate="20220903T144826Z">
        <seg>Algunos elementos implementan directamente esta interfaz, mientras que otros la implementan a través de una interfaz que hereda.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Some examples could be games, things that happen when buttons are pressed or data is entered in forms, dynamic styling effects, animation, and much more.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T055540Z" creationid="gitnacho" creationdate="20220925T055540Z">
        <seg>Algunos ejemplos podrían ser juegos, cosas que suceden cuando se presionan botones o se ingresan datos en formularios, efectos de estilo dinámico, animación y mucho más.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Some examples include:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210920T082627Z" creationid="gitnacho" creationdate="20210920T082627Z">
        <seg>Algunos ejemplos incluyen:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Some examples will need to be run by a web server to work successfully.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T164333Z" creationid="gitnacho" creationdate="20221012T164333Z">
        <seg>Algunos ejemplos se deberán ejecutar en un servidor web para que funcionen correctamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Some examples:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="OmegaT Aligner" changedate="20200819T162706Z" creationid="OmegaT Aligner" creationdate="20200819T162706Z">
        <seg>Algunos ejemplos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Some operations are restricted to same-origin content, and this restriction can be lifted using {{Glossary("CORS")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T151430Z" creationid="gitnacho" creationdate="20221017T151430Z">
        <seg>Algunas operaciones están restringidas al contenido del mismo origen y esta restricción se puede eliminar mediante {{Glossary("CORS")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Some other particulars to be aware of with exported WebAssembly functions:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T103748Z" creationid="gitnacho" creationdate="20221006T090127Z">
        <seg>Algunos otros detalles a tener en cuenta con las Funciones WebAssembly exportadas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Some people just want something to copy and paste.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204418Z" creationid="gitnacho" creationdate="20221005T204418Z">
        <seg>Algunas personas solo quieren algo para copiar y pegar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Some requests don't trigger a {{Glossary("Preflight_request","CORS preflight")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220029Z" creationid="gitnacho" creationdate="20221011T220029Z">
        <seg>Algunas solicitudes no activan un {{Glossary("Preflight_request","CORS preflight")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Something much longer that really goes into a lot of detail about</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185215Z" creationid="gitnacho" creationdate="20221008T185215Z">
        <seg>Algo mucho más largo que realmente entra en muchos detalles sobre</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Sometimes writers want to call special attention to some piece of content.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181116Z" creationid="gitnacho" creationdate="20221008T181116Z">
        <seg>A veces, los escritores quieren llamar especialmente la atención sobre algún contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Sometimes you just want to display the static code block that is pertinent to the example rendered within a page.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211657Z" creationid="gitnacho" creationdate="20221005T211657Z">
        <seg>A veces, solo deseas mostrar el bloque de código estático que es pertinente para el ejemplo representado dentro de una página.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Sometimes you will want to use a custom HTML template.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T110546Z" creationid="gitnacho" creationdate="20221003T110546Z">
        <seg>A veces querrás utilizar una plantilla HTML personalizada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Sometimes, you'll see a scripting message like this when you load a page:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T075647Z" creationid="gitnacho" creationdate="20221005T075647Z">
        <seg>A veces, verás un mensaje de script como este cuando cargues una página:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Specifically:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211002T055534Z" creationid="gitnacho" creationdate="20211002T055534Z">
        <seg>Específicamente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Subsequent sections discuss scenarios, as well as provide a breakdown of the HTTP headers used.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T214035Z" creationid="gitnacho" creationdate="20221011T214035Z">
        <seg>Las secciones posteriores analizan los escenarios y proporcionan un desglose de los encabezados HTTP utilizados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Such cross-origin requests are preflighted since they may have implications for user data.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222547Z" creationid="gitnacho" creationdate="20221011T222547Z">
        <seg>Dichas solicitudes de origen cruzado se verifican previamente, ya que pueden tener implicaciones para los datos del usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Such headers are not part of HTTP/1.1, but are generally useful to web applications.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222630Z" creationid="gitnacho" creationdate="20221011T222630Z">
        <seg>Dichos encabezados no forman parte de HTTP/1.1, pero generalmente son útiles para las aplicaciones web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>T</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210922T042513Z" creationid="gitnacho" creationdate="20210922T042513Z">
        <seg>T</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>TBD</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210917T070928Z" creationid="gitnacho" creationdate="20210917T070928Z">
        <seg>TBD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Tables are basically resizable arrays of references that can be accessed by index from WebAssembly code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T065029Z" creationid="gitnacho" creationdate="20221007T065029Z">
        <seg>Las tablas básicamente son arreglos de referencias de tamaño variable a las que se puede acceder mediante el índice del código WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Tables can be mutated via [`Table.prototype.set()`](/en-US/docs/WebAssembly/JavaScript_interface/Table/set), which updates one of the values in a table, and [`Table.prototype.grow()`](/en-US/docs/WebAssembly/JavaScript_interface/Table/grow), which increases the number of values that can be stored in a table.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233105Z" creationid="gitnacho" creationdate="20221006T233105Z">
        <seg>Las tablas se pueden mutar mediante [`Table.prototype.set()`](/es/docs/WebAssembly/JavaScript_interface/Table/set), que actualiza uno de los valores de una tabla, y [`Table.prototype.grow()`](/es/docs/WebAssembly/JavaScript_interface/Table/grow), que aumenta la cantidad de valores que se pueden almacenar en una tabla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Tables have an element type, which limits the types of reference that can be stored in the table.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T232831Z" creationid="gitnacho" creationdate="20221006T232831Z">
        <seg>Las tablas tienen un tipo de elemento, que limita los tipos de referencia que se pueden almacenar en la tabla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Tags that are neither imported into or exported from the WebAssembly code are internal, and their associated [`WebAssembly.Exception`](/en-US/docs/WebAssembly/JavaScript_interface/Exception) cannot be queried using this method!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142306Z" creationid="gitnacho" creationdate="20221019T142306Z">
        <seg>Las etiquetas que no se importan ni se exportan desde el código WebAssembly son internas y su [`WebAssembly.Exception`](/es/docs/WebAssembly/JavaScript_interface/Exception) asociada no se puede consultar con este método.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Take a copy of the following simple C example, and save it in a file called `hello.c` in a new directory on your local drive:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105510Z" creationid="gitnacho" creationdate="20221003T105510Z">
        <seg>Toma una copia del siguiente ejemplo simple en C y guárdalo en un archivo llamado `hello.c` en un nuevo directorio en tu disco local:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Take the following example:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210921T064338Z" creationid="gitnacho" creationdate="20210921T064338Z">
        <seg>Toma el siguiente ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Templates are not translated like wiki pages, rather any single template might be used for any number of locales.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082930Z" creationid="gitnacho" creationdate="20221005T082930Z">
        <seg>Las plantillas no se traducen como las páginas wiki, sino que se puede usar una sola plantilla para cualquier número de lugares.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Templates can be localized using the `mdn.localString()` method, which takes an object containing a mapping of locales to strings.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082945Z" creationid="gitnacho" creationdate="20221005T082945Z">
        <seg>Las plantillas se pueden localizar usando el método `mdn.localString()`, que toma un objeto que contiene un mapeo de locales a cadenas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>That</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210113T191352Z" creationid="nacho" creationdate="20210113T191352Z">
        <seg>Ese</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>That delay happens relatively rarely, but is unavoidable when it does happen, and may be significant.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041135Z" creationid="gitnacho" creationdate="20220921T041135Z">
        <seg>Ese retraso ocurre en muy raras ocasiones, pero es inevitable cuando ocurre y puede ser significativo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>That enables you to use module scripts while also providing `nomodule`-marked fallback scripts for non-supporting browsers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134205Z" creationid="gitnacho" creationdate="20221003T134205Z">
        <seg>Eso te permite usar scripts de módulo al mismo tiempo que proporciona scripts de respaldo marcados como `nomodule` para navegadores no compatibles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>That is, MDN authors must use this style:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184639Z" creationid="gitnacho" creationdate="20221008T184639Z">
        <seg>Es decir, los autores de MDN deben usar este estilo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>That leads to infinite recursion, because it attempts to flatten an infinitely-nested promise.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080734Z" creationid="gitnacho" creationdate="20221002T080734Z">
        <seg>Eso conduce a una recursividad infinita, porque intenta aplanar una promesa infinitamente anidada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>That's a pretty good starting point.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053344Z" creationid="gitnacho" creationdate="20221004T053344Z">
        <seg>Ese es un muy buen punto de partida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>That's because the determination of whether or not a particular document is in a secure context is based only on considering it within the top-level browsing context with which it is associated — and not whether a non-secure context happened to be used to create it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T204045Z" creationid="gitnacho" creationdate="20221018T204045Z">
        <seg>Esto se debe a que la determinación de si un documento en particular está o no en un contexto seguro se basa únicamente en considerarlo dentro del contexto de navegación de nivel superior con el que está asociado, y no si se usó un contexto no seguro para crearlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>That's called a _hex code_ (short for hexadecimal), and represents your color.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062400Z" creationid="gitnacho" creationdate="20221019T062400Z">
        <seg>Eso se llama _código hex_ (abreviatura de hexadecimal) y representa tu color.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>That's literally all that asm.js has to play with (except that it isn't resizable; see the asm.js [Programming model](http://asmjs.org/spec/latest/#programming-model)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064021Z" creationid="gitnacho" creationdate="20221007T064021Z">
        <seg>Eso literalmente es todo con lo que `asm.js` tiene que jugar (excepto que no es redimensionable; consulta el [modelo de programación](http://asmjs.org/spec/latest/#programming-model) de `asm.js`).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210626T133133Z">
        <seg>El</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`&lt;script&gt;`** [HTML](/en-US/docs/Web/HTML) element is used to embed executable code or data; this is typically used to embed or refer to JavaScript code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T120421Z" creationid="gitnacho" creationdate="20221003T120421Z">
        <seg>El elemento **`&lt;script&gt;`** [HTML](/es/docs/Web/HTML) se utiliza para incrustar código ejecutable o datos; este generalmente se usa para incrustar o hacer referencia a código JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`Cache`** interface provides a persistent storage mechanism for {{domxref("Request")}} / {{domxref("Response")}} object pairs that are cached in long lived memory.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T092315Z" creationid="gitnacho" creationdate="20221003T201004Z">
        <seg>La interfaz **`Cache`** proporciona un mecanismo de almacenamiento persistente para pares de objetos {{DOMxRef("Request")}} / {{DOMxRef("Response")}} que se almacenan en memoria caché de larga duración.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`Event`** interface represents an event which takes place in the DOM.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T201556Z" creationid="gitnacho" creationdate="20221011T201556Z">
        <seg>La interfaz **`Event`** representa un evento que tiene lugar en el DOM.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`NavigationPreloadManager`** interface of the [Service Worker API](/en-US/docs/Web/API/Service_Worker_API) provides methods for managing the preloading of resources in parallel with service worker bootup.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T214817Z" creationid="gitnacho" creationdate="20220922T205037Z">
        <seg>La interfaz **`NavigationPreloadManager`** de la [API de *Service Worker*](/es/docs/Web/API/Service_Worker_API) proporciona métodos para administrar la precarga de recursos en paralelo con el arranque del *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`Promise.resolve()`** method "resolves" a given value to a {{jsxref("Promise")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T072544Z" creationid="gitnacho" creationdate="20221002T072544Z">
        <seg>El método **`Promise.resolve()`** "resuelve" un valor dado en {{jsxref("Promise")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`ServiceWorker`** interface of the [Service Worker API](/en-US/docs/Web/API/Service_Worker_API) provides a reference to a service worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T212058Z" creationid="gitnacho" creationdate="20221003T212058Z">
        <seg>La interfaz **`ServiceWorker`** de la [API *Service Worker*](/es/docs/Web/API/Service_Worker_API) proporciona una referencia a un *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`SharedArrayBuffer`** object is used to represent a generic, fixed-length raw binary data buffer, similar to the {{jsxref("ArrayBuffer")}} object, but in a way that they can be used to create views on shared memory.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T231538Z" creationid="gitnacho" creationdate="20220922T231538Z">
        <seg>El objeto **`SharedArrayBuffer`** se utiliza para representar un búfer de datos binarios sin formato de longitud fija genérico, similar al objeto {{jsxref("ArrayBuffer")}}, pero de una manera que se puede utilizar para crear vistas en la memoria compartida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`Uint8ClampedArray`** typed array represents an array of 8-bit unsigned integers clamped to 0-255; if you specified a value that is out of the range of \[0,255], 0 or 255 will be set instead; if you specify a non-integer, the nearest integer will be set.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050304Z" creationid="gitnacho" creationdate="20221005T050304Z">
        <seg>El arreglo con tipo **`Uint8ClampedArray`** representa un arreglo de enteros sin signo de 8 bits sujetos a 0-255; si especificaste un valor que está fuera del rango de \[0,255], se establecerá 0 o 255 en su lugar; si especificas un valor no entero, se establecerá el entero más cercano.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.CompileError()`** constructor creates a new
WebAssembly `CompileError` object, which indicates an error during
WebAssembly decoding or validation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T134915Z" creationid="gitnacho" creationdate="20221019T134833Z">
        <seg>El constructor **`WebAssembly.CompileError()`** crea un nuevo
objeto `CompileError` de WebAssembly, que indica un error durante la
decodificación o validación de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.CompileError`** object indicates an error during WebAssembly decoding or validation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T025319Z" creationid="gitnacho" creationdate="20221008T025319Z">
        <seg>El objeto **`WebAssembly.CompileError`** indica un error durante la decodificación o validación de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.Exception()`** constructor is used to create a new [`WebAssembly.Exception`](/en-US/docs/WebAssembly/JavaScript_interface/Exception).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T135838Z" creationid="gitnacho" creationdate="20221019T135838Z">
        <seg>El constructor **`WebAssembly.Exception()`** se utiliza para crear una nueva [`WebAssembly.Exception`](/es/docs/WebAssembly/JavaScript_interface/Exception).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.Exception`** object represents a runtime exception thrown from WebAssembly to JavaScript, or thrown from JavaScript to a WebAssembly exception handler.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T022730Z" creationid="gitnacho" creationdate="20221008T022705Z">
        <seg>El objeto **`WebAssembly.Exception`** representa una excepción en el entorno de ejecución lanzada desde WebAssembly a JavaScript, o lanzada desde JavaScript a un controlador de excepciones de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.Instance()`** constructor creates a new
`Instance` object which is a stateful, executable instance of a
[`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T205759Z" creationid="gitnacho" creationdate="20221019T205759Z">
        <seg>El constructor **`WebAssembly.Instance()`** crea un nuevo
Objeto `Instance` que es una instancia ejecutable con estado de un
[`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.LinkError()`** constructor creates a new
WebAssembly `LinkError` object, which indicates an error during module
instantiation (besides [traps](https://webassembly.github.io/simd/core/intro/overview.html#trap)
from the start function).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T211623Z" creationid="gitnacho" creationdate="20221019T211623Z">
        <seg>El constructor **`WebAssembly.LinkError()`** crea un nuevo
Objeto `LinkError` de WebAssembly, que indica un error en el módulo durante
la creación de instancias (además de trampas —[traps](https://webassembly.github.io/simd/core/intro/overview.html#trap)—
desde la función de inicio).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.LinkError`** object indicates an error during module instantiation (besides [traps](https://webassembly.github.io/simd/core/intro/overview.html#trap) from the start function).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T075125Z" creationid="gitnacho" creationdate="20221008T075125Z">
        <seg>El objeto **`WebAssembly.LinkError`** indica un error durante la instanciación del módulo (además de [traps](https://webassembly.github.io/simd/core/intro/overview.html#trap) desde la función de inicio) .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.Memory()`** constructor creates a new `Memory` object whose [`buffer`](/en-US/docs/WebAssembly/JavaScript_interface/Memory/buffer) property is a resizable {{jsxref("ArrayBuffer")}} or {{jsxref("SharedArrayBuffer")}} that holds the raw bytes of memory accessed by a [`WebAssembly.Instance`](/en-US/docs/WebAssembly/JavaScript_interface/Instance).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T220901Z" creationid="gitnacho" creationdate="20221019T215041Z">
        <seg>El constructor **`WebAssembly.Memory()`** crea un nuevo objeto `Memory` cuya propiedad [`buffer`](/es/docs/WebAssembly/JavaScript_interface/Memory/buffer) es un {{JSxRef( "ArrayBuffer")}} o {{JSxRef("SharedArrayBuffer")}} que contiene los bytes sin procesar de la memoria a la que accede una [`WebAssembly.Instance`](/es/docs/WebAssembly/JavaScript_interface/Instance).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.Memory`** object is a resizable {{jsxref("ArrayBuffer")}} or {{jsxref("SharedArrayBuffer")}} that holds the raw bytes of memory accessed by a [`WebAssembly.Instance`](/en-US/docs/WebAssembly/JavaScript_interface/Instance).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T235309Z" creationid="gitnacho" creationdate="20221007T234635Z">
        <seg>El objeto **`WebAssembly.Memory`** es un {{jsxref("ArrayBuffer")}} o {{jsxref("SharedArrayBuffer")}} de tamaño variable que contiene los bytes sin formato de la memoria a la que accede un [`WebAssembly.Instance`](/es/docs/WebAssembly/JavaScript_interface/Instance).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.Module.exports()`** function returns an
array containing descriptions of all the declared exports of the given
`Module`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T224608Z" creationid="gitnacho" creationdate="20221019T224608Z">
        <seg>La función **`WebAssembly.Module.exports()`** devuelve un arreglo que contiene descripciones de todas las exportaciones declaradas del `Module` dado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.RuntimeError()`** constructor creates a new
WebAssembly `RuntimeError` object — the type that is thrown whenever
WebAssembly specifies a [trap](https://webassembly.github.io/simd/core/intro/overview.html#trap).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T232249Z" creationid="gitnacho" creationdate="20221019T232249Z">
        <seg>El constructor **`WebAssembly.RuntimeError()`** crea un nuevo Objeto `RuntimeError` de WebAssembly: el tipo que se lanza cada vez que WebAssembly especifica una trampa —[trap](https://webassembly.github.io/simd/core/intro/overview.html#trap).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.RuntimeError`** object is the error type that is thrown whenever WebAssembly specifies a [trap](https://webassembly.github.io/spec/core/intro/overview.html#trap).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T082446Z" creationid="gitnacho" creationdate="20221008T080712Z">
        <seg>El objeto **`WebAssembly.RuntimeError`** es el tipo de error que se genera cada vez que WebAssembly especifica una trampa — [`trap`](https://webassembly.github.io/spec/core/intro/overview.html#trap).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.Table()`** constructor creates a new
`Table` object of the given size and element type.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T235944Z" creationid="gitnacho" creationdate="20221019T235944Z">
        <seg>El constructor **`WebAssembly.Table()`** crea un nuevo Objeto `Table` del tamaño y tipo de elemento dados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.Table()`** object is a JavaScript wrapper object — an array-like structure representing a WebAssembly Table, which stores function references.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095005Z" creationid="gitnacho" creationdate="20221006T095005Z">
        <seg>El objeto **`WebAssembly.Table()`** es un objeto contenedor de JavaScript, una estructura similar a un arreglo que representa una tabla WebAssembly, que almacena referencias de funciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.Tag()`** constructor creates a new [`WebAssembly.Tag`](/en-US/docs/WebAssembly/JavaScript_interface/Tag) object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T070804Z" creationid="gitnacho" creationdate="20221020T070804Z">
        <seg>El constructor **`WebAssembly.Tag()`** crea un nuevo objeto [`WebAssembly.Tag`](/es/docs/WebAssembly/JavaScript_interface/Tag).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.Tag`** object defines a _type_ of a WebAssembly exception that can be thrown to/from WebAssembly code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015016Z" creationid="gitnacho" creationdate="20221008T015016Z">
        <seg>El objeto **`WebAssembly.Tag`** define un _tipo_ de excepción de WebAssembly que se puede lanzar hacia/desde el código de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.compile()`** function compiles WebAssembly binary code into a [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T180252Z" creationid="gitnacho" creationdate="20221007T122114Z">
        <seg>La función **`WebAssembly.compile()`** compila el código binario de WebAssembly en un objeto [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.compileStreaming()`** function compiles a [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) directly from a streamed underlying source.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T185254Z" creationid="gitnacho" creationdate="20221007T185254Z">
        <seg>La función **`WebAssembly.compileStreaming()`** compila un [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module) directamente desde una fuente subyacente transmitida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.customSections()`** function returns a copy
of the contents of all custom sections in the given module with the given string name.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T221710Z" creationid="gitnacho" creationdate="20221019T221710Z">
        <seg>La función **`WebAssembly.customSections()`** devuelve una copia
del contenido de todas las secciones personalizadas en el módulo dado con el nombre de cadena dado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.imports()`** function returns an array
containing descriptions of all the declared imports of the given `Module`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T230221Z" creationid="gitnacho" creationdate="20221019T230221Z">
        <seg>La función **`WebAssembly.imports()`** devuelve un arreglo que contiene descripciones de todas las importaciones —`import`s— declaradas del `Module` dado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.instantiate()`** function allows you to
compile and instantiate WebAssembly code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193051Z" creationid="gitnacho" creationdate="20221007T193051Z">
        <seg>La función **`WebAssembly.instantiate()`** te permite compilar e instanciar código WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.instantiateStreaming()`** function compiles
and instantiates a WebAssembly module directly from a streamed underlying source.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T101441Z" creationid="gitnacho" creationdate="20221006T100938Z">
        <seg>La función **`WebAssembly.instantiateStreaming()`** compila y crea una instancia de un módulo WebAssembly directamente desde una fuente subyacente transmitida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly.validate()`** function validates a given [typed array](/en-US/docs/Web/JavaScript/Typed_arrays) of WebAssembly binary
code, returning whether the bytes form a valid wasm module (`true`) or not
(`false`).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T195625Z" creationid="gitnacho" creationdate="20221007T195625Z">
        <seg>La función **`WebAssembly.validate()`** valida un [arreglo tipado](/es/docs/Web/JavaScript/Typed_arrays) dado de un binario de código WebAssembly, devolviendo si los bytes forman un módulo `wasm` válido (`true`) o no
(`false`).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`WebAssembly`** JavaScript object acts as the namespace for all [WebAssembly](/en-US/docs/WebAssembly)-related functionality.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221009T003213Z" creationid="gitnacho" creationdate="20221009T003213Z">
        <seg>El objeto JavaScript **`WebAssembly`** actúa como el espacio de nombres para todas las funciones relacionadas con [WebAssembly](/es/docs/WebAssembly).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`block`** statement creates a label that can later be branched out of with a `br`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T075147Z" creationid="gitnacho" creationdate="20221020T075147Z">
        <seg>La instrucción **`block`** crea una etiqueta que luego se puede ramificar con un `br`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`br`** statement branches to a loop, block, or if.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T081115Z" creationid="gitnacho" creationdate="20221020T081115Z">
        <seg>La instrucción **`br`** se bifurca a un bucle, `block` o `if`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`controllerchange`** event of the
{{domxref("ServiceWorkerContainer")}} interface fires when the document's associated
{{domxref("ServiceWorkerRegistration")}} acquires a new
{{domxref("ServiceWorkerRegistration.active","active")}} worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T230524Z">
        <seg>El evento **`controllerchange`** de la
interfaz {{DOMxRef("ServiceWorkerContainer")}} se activa cuando el documento asociado
{{DOMxRef("ServiceWorkerRegistration")}} adquiere un nuevo *worker*
{{DOMxRef("ServiceWorkerRegistration.active","active")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`drop`** instruction, pops a value from the stack, and discards it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T083115Z" creationid="gitnacho" creationdate="20221020T083115Z">
        <seg>La instrucción **`drop`** extrae un valor de la pila y lo descarta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`exports`** readonly property of the
[`WebAssembly.Instance`](/en-US/docs/WebAssembly/JavaScript_interface/Instance) object prototype returns an object containing as its
members all the functions exported from the WebAssembly module instance, to allow them
to be accessed and used by JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T093856Z" creationid="gitnacho" creationdate="20221006T093856Z">
        <seg>La propiedad de solo lectura **`exports`** del [`WebAssembly.Instance`](/es/docs/WebAssembly/JavaScript_interface/Instance) el objeto `prototype` devuelve un objeto que contiene como sus miembros todas las funciones exportadas desde la instancia del módulo WebAssembly, para permitirles ser accedidas y utilizadas por JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`get()`** prototype method of
the [`WebAssembly.Table()`](/en-US/docs/WebAssembly/JavaScript_interface/Table) object retrieves a function reference stored at a
given index.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T091635Z" creationid="gitnacho" creationdate="20221006T091635Z">
        <seg>El método prototipo **`get()`** del objeto [`WebAssembly.Table()`](/es/docs/WebAssembly/JavaScript_interface/Table) recupera una referencia de función almacenada en un índice dado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`getArg()`** prototype method of the [`Exception`](/en-US/docs/WebAssembly/JavaScript_interface/Exception) object can be used to get the value of a specified item in the exception's data arguments.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142202Z" creationid="gitnacho" creationdate="20221019T141625Z">
        <seg>El método prototipo **`getArg()`** del objeto [`Exception`](/es/docs/WebAssembly/JavaScript_interface/Exception) se puede usar para obtener el valor de un elemento específico en los argumentos de datos de la excepción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`grow()`** prototype method of
the [`WebAssembly.Table`](/en-US/docs/WebAssembly/JavaScript_interface/Table) object increases the size of the Table instance by a
specified number of elements.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T233314Z" creationid="gitnacho" creationdate="20221019T233314Z">
        <seg>El método prototipo **`grow()`** de el objeto [`WebAssembly.Table`](/es/docs/WebAssembly/JavaScript_interface/Table) aumenta el tamaño de la instancia de `Table` en un número especificado de elementos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`grow()`** prototype method of the [`WebAssembly.Memory`](/en-US/docs/WebAssembly/JavaScript_interface/Memory) object increases the size of the memory instance by a specified number of WebAssembly pages.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T214431Z" creationid="gitnacho" creationdate="20221019T214431Z">
        <seg>El método prototipo **`grow()`** del objeto [`WebAssembly.Memory`](/es/docs/WebAssembly/JavaScript_interface/Memory) aumenta el tamaño de la instancia de memoria en un número específico de páginas de WebAssembly .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`if`** statement executes a statement if the last item on the stack is true (1).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T084107Z" creationid="gitnacho" creationdate="20221020T084026Z">
        <seg>La instrucción **`if`** ejecuta una expresión si el último elemento de la pila es `true` (1).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`is()`** prototype method of the [`Exception`](/en-US/docs/WebAssembly/JavaScript_interface/Exception) object can be used to test if the `Exception` matches a given tag.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T145155Z" creationid="gitnacho" creationdate="20221019T145155Z">
        <seg>El método prototipo **`is()`** del objeto [`Exception`](/es/docs/WebAssembly/JavaScript_interface/Exception) se puede usar para probar si la `Exception` coincide con una determinada etiqueta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`loop`** statement creates a label that can later be branched to with a `br`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T084727Z" creationid="gitnacho" creationdate="20221020T084727Z">
        <seg>La instrucción **`loop`** crea una etiqueta que luego se puede bifurcar con un `br`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`loop`** statement is the opposite of the `block` statement, in the sense that while branching to a `loop` jumps to the beginning of the loop, branching to a `block` jumps to the end of the block, that is, out of the block.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T084936Z" creationid="gitnacho" creationdate="20221020T084936Z">
        <seg>La instrucción **`loop`** es lo opuesto a la instrucción `block`, en el sentido de que mientras la bifurcación a un `loop` salta al principio del bucle, la bifurcación a un `block` salta al final del `block`, es decir, fuera del bloque.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`loop`** statement is the opposite of the `block` statement, in the sense that while branching to a `loop` jumps to the beginning of the loop, branching to a `block` jumps to the end of the block; that is, out of the block.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T075259Z" creationid="gitnacho" creationdate="20221020T075259Z">
        <seg>La instrucción **`loop`** es lo opuesto a la instrucción `block`, en el sentido de que mientras la bifurcación a un `bucle` salta al principio del bucle, la bifurcación a un `block` salta al final del `block`; es decir, fuera del `block`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`mul`** instructions, short for _multiplication_, are used for multiplying one number by another number, similar to the **`*`** operator in other languages.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T091822Z" creationid="gitnacho" creationdate="20221007T091822Z">
        <seg>Las instrucciones **`mul`**, abreviatura de _multiplicación_, se utilizan para multiplicar un número por otro número, similar al operador **`*`** en otros lenguajes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`open()`** method of the
{{domxref("CacheStorage")}} interface returns a {{jsxref("Promise")}} that resolves to
the {{domxref("Cache")}} object matching the `cacheName`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T224651Z">
        <seg>El método **`open()`** de la interfaz {{DOMxRef("CacheStorage")}} devuelve una {{jsxref("Promise")}} que se resuelve en el objeto {{DOMxRef("Cache")}} que coincide con `cacheName`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`postMessage()`** method of the {{domxref("Worker")}} interface sends a message to the worker's inner scope.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221007T115203Z">
        <seg>El método **`postMessage()`** de la interfaz {{DOMxRef("Worker")}} envía un mensaje al alcance interno del *worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`set()`** prototype method of
the [`WebAssembly.Table`](/en-US/docs/WebAssembly/JavaScript_interface/Table) object mutates a reference stored at a given index
to a different value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T233936Z" creationid="gitnacho" creationdate="20221019T233936Z">
        <seg>El método prototipo **`set()`** de el objeto [`WebAssembly.Table`](/es/docs/WebAssembly/JavaScript_interface/Table) muta una referencia almacenada en un índice dado a un valor diferente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`state`** read-only property of the
{{domxref("ServiceWorker")}} interface returns a string representing the current state
of the service worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T223106Z">
        <seg>La propiedad de solo lectura **`state`** de la interfaz {{DOMxRef("ServiceWorker")}} devuelve una cadena que representa el estado actual del *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The **`type()`** prototype method of the [`Tag`](/en-US/docs/WebAssembly/JavaScript_interface/Tag) object can be used to get the sequence of data types associated with the tag.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T071406Z" creationid="gitnacho" creationdate="20221020T071406Z">
        <seg>El método prototipo **`type()`** del objeto [`Tag`](/es/docs/WebAssembly/JavaScript_interface/Tag) se puede usar para obtener la secuencia de tipos de datos asociados con la etiqueta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The CORS mechanism supports secure cross-origin requests and data transfers between browsers and servers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T213026Z" creationid="gitnacho" creationdate="20221011T213026Z">
        <seg>El mecanismo CORS admite solicitudes seguras de origen cruzado y transferencias de datos entre navegadores y servidores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The CORS protocol originally required that behavior but [was subsequently changed to no longer require it](https://github.com/whatwg/fetch/commit/0d9a4db8bc02251cc9e391543bb3c1322fb882f2).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T224839Z" creationid="gitnacho" creationdate="20221011T224839Z">
        <seg>El protocolo CORS originalmente requería ese comportamiento, pero [se cambió posteriormente para que ya no lo requiera](https://github.com/whatwg/fetch/commit/0d9a4db8bc02251cc9e391543bb3c1322fb882f2).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Cross-Origin Resource Sharing standard works by adding new [HTTP headers](/en-US/docs/Web/HTTP/Headers) that let servers describe which origins are permitted to read that information from a web browser.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T213759Z" creationid="gitnacho" creationdate="20221011T213759Z">
        <seg>El estándar *Cross-Origin Resource Sharing* —Intercambio de recursos de origen cruzado— funciona agregando nuevos [encabezados HTTP](/es/docs/Web/HTTP/Headers) que permiten a los servidores describir qué orígenes pueden leer esa información desde un navegador web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Emscripten tool is able to take just about any C/C++ source code and compile it into a .wasm module, plus the necessary JavaScript "glue" code for loading and running the module, and an HTML document to display the results of the code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T081034Z" creationid="gitnacho" creationdate="20221003T081034Z">
        <seg>La herramienta Emscripten está disponible para casi cualquier tipo de código C/C++ y compila en un módulo `.wasm`, además del código "pegamento" necesario en JavaScript, para cargar y ejecutar el módulo, y un documento HTML donde se muestre el resultado del código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The GFM specification defines two basic types of links:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T173854Z" creationid="gitnacho" creationdate="20221008T173854Z">
        <seg>La especificación GFM define dos tipos básicos de enlaces:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The HTML specification urges authors to omit the attribute rather than provide a redundant MIME type.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T130549Z" creationid="gitnacho" creationdate="20221003T130549Z">
        <seg>La especificación HTML insta a los autores para omitir el atributo en lugar de proporcionar un tipo MIME redundante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The HTTP and Fetch specifications refer to a number of header categories, including:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T075926Z" creationid="gitnacho" creationdate="20221017T211535Z">
        <seg>Las especificaciones de HTTP y Fetch se refieren a una serie de categorías de cabeceras, que incluyen:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The JavaScript API provides developers with the ability to create modules, memories, tables, and instances.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T080016Z" creationid="gitnacho" creationdate="20221003T080016Z">
        <seg>La API de JavaScript provee a los desarrolladores con la habilidad de crear módulos, memorias, tablas e instancias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The JavaScript code below defines a new tag `tag` and the function `throwExceptionWithStack`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204131Z" creationid="gitnacho" creationdate="20221019T204131Z">
        <seg>El siguiente código JavaScript define una nueva etiqueta `tag` y la función `throwExceptionWithStack`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The JavaScript code to call our above module looks like so:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061320Z" creationid="gitnacho" creationdate="20221007T061320Z">
        <seg>El código JavaScript para llamar a nuestro módulo anterior se ve así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The JavaScript glue code is not as simple as you might imagine.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T081457Z" creationid="gitnacho" creationdate="20221003T081457Z">
        <seg>El código "pegamento" de JavaScript no es tan simple como podrías imaginar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The JavaScript is similar too.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T143209Z" creationid="gitnacho" creationdate="20221019T143209Z">
        <seg>El JavaScript también es similar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The Service worker will now control pages, but only those opened after the `register()` is successful.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T213847Z" creationid="gitnacho" creationdate="20220921T023118Z">
        <seg>El *service worker* ahora controlará las páginas, pero solo aquellas que se abran después de que `register()` tenga éxito.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The URL must be on the same origin as the document that registers the `ServiceWorker`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T212407Z" creationid="gitnacho" creationdate="20221003T212407Z">
        <seg>La URL debe estar en el mismo origen que el documento que registra el `ServiceWorker`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The URL of the document to embed — this is relative to the MDN organization, the top level directory of which is at `https://mdn.github.io/`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T212102Z" creationid="gitnacho" creationdate="20221005T212102Z">
        <seg>La URL del documento para incrustar: esto es relativo a la organización MDN, cuyo directorio de nivel superior se encuentra en `https://mdn.github.io/`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The WebAssembly ecosystem is at a nascent stage; more tools will undoubtedly emerge going forward.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T080656Z" creationid="gitnacho" creationdate="20221003T080656Z">
        <seg>El ecosistema de WebAssembly está en sus comienzos; sin duda más herramientas aparecerán en un futuro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The WebAssembly function `exported_func` is exported for use in our environment (e.g. the web app in which we are using our WebAssembly module).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182639Z" creationid="gitnacho" creationdate="20221007T182639Z">
        <seg>La función de WebAssembly `exported_func` se exporta para su uso en nuestro entorno (por ejemplo, la aplicación web en la que estamos usando nuestro módulo WebAssembly).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The WebAssembly module might then import the tag as shown below:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015514Z" creationid="gitnacho" creationdate="20221008T015514Z">
        <seg>El módulo WebAssembly podría importar la etiqueta como se muestra a continuación:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The WebAssembly validation rules ensure the stack matches exactly: if you declare a `(result f32)`, then the stack must contain exactly one `f32` at the end.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055137Z" creationid="gitnacho" creationdate="20221007T055137Z">
        <seg>Las reglas de validación de WebAssembly aseguran que la pila coincida exactamente: si declaras un `(result f32)`, entonces la pila debe contener exactamente un `f32` al final.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The [Fetch API](/en-US/docs/Web/API/Fetch_API) requires {{httpheader("Set-Cookie")}} headers to be stripped before returning a {{domxref("Response")}} object from {{domxref("fetch()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T205231Z">
        <seg>La [API Fetch](/es/docs/Web/API/Fetch_API) requiere que se eliminen los encabezados {{httpheader("Set-Cookie")}} antes de devolver un objeto {{DOMxRef("Response")}} de {{DOMxRef("fetch()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The [KumaScript guide](/en-US/docs/MDN/Tools/KumaScript) provides an in-depth look at how to use macros on MDN, so this section is more of a brief overview.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T185703Z" creationid="gitnacho" creationdate="20221005T094745Z">
        <seg>La [guía de KumaScript](/es/docs/MDN/Tools/KumaScript) brinda una descripción detallada de cómo usar macros en MDN, por lo que esta sección es más una breve descripción general.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The [Learning and getting help](/en-US/docs/Learn/Learning_and_getting_help) article provides you with a series of tips for looking up information and helping yourself.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223747Z" creationid="gitnacho" creationdate="20221018T223747Z">
        <seg>El artículo [Aprender y obtener ayuda](/es/docs/Learn/Learning_and_getting_help) te brinda una serie de consejos para buscar información y ayudarte a ti mismo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The [Web Storage API](/en-US/docs/Web/API/Web_Storage_API) is very easy to use — you store simple name/value pairs of data (limited to strings, numbers, etc.) and retrieve these values when needed.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T230544Z" creationid="gitnacho" creationdate="20221002T230544Z">
        <seg>La [API de almacenamiento web](/es/docs/Web/API/Web_Storage_API) es muy fácil de usar: almacenas simples pares de datos como nombre/valor (limitado a cadenas, números, etc.) y recuperas estos valores cuando sea necesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The [Yari](/en-US/docs/MDN/Yari) platform on which MDN runs provides a macro system, [KumaScript](/en-US/docs/MDN/Tools/KumaScript), which makes it possible to automate certain tasks.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T185654Z" creationid="gitnacho" creationdate="20221005T094613Z">
        <seg>La plataforma [Yari](/es/docs/MDN/Yari) en la que se ejecuta MDN proporciona un sistema de macros, [KumaScript](/es/docs/MDN/Tools/KumaScript), que permite automatizar ciertas tareas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The [`AvailableInWorkers`](https://github.com/mdn/yari/blob/main/kumascript/macros/AvailableInWorkers.ejs) macro inserts a localized note box indicating that a feature is available in a [Web worker](/en-US/docs/Web/API/Web_Workers_API) context.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T200607Z" creationid="gitnacho" creationdate="20221005T115743Z">
        <seg>La macro [`AvailableInWorkers`](https://github.com/mdn/yari/blob/main/kumascript/macros/AvailableInWorkers.ejs) inserta un cuadro de nota localizado que indica que una característica está disponible en un contexto [*web worker*](/es/docs/Web/API/Web_Workers_API).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The [`EmbedInteractiveExample`](https://github.com/mdn/yari/blob/main/kumascript/macros/EmbedInteractiveExample.ejs) macro is used to embed finished examples into MDN pages.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T210230Z" creationid="gitnacho" creationdate="20221005T210230Z">
        <seg>La macro [`EmbedInteractiveExample`](https://github.com/mdn/yari/blob/main/kumascript/macros/EmbedInteractiveExample.ejs) se usa para incrustar ejemplos terminados en páginas de MDN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The [`Glossary`](https://github.com/mdn/yari/blob/main/kumascript/macros/Glossary.ejs) macro creates a link to a specified term's entry in the MDN [glossary](/en-US/docs/Glossary).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T105827Z" creationid="gitnacho" creationdate="20221005T104728Z">
        <seg>La macro [`Glossary`](https://github.com/mdn/yari/blob/main/kumascript/macros/Glossary.ejs) crea un enlace a la entrada de un término específico en el [glosario](/es/docs/Glossary) MDN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The [`WebAssembly.instantiate()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiate) function has two overload forms — the one shown above takes the byte code to compile as an argument and returns a Promise that resolves to an object containing both the compiled module object and an instantiated instance of it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221005T055847Z">
        <seg>La función [`WebAssembly.instantiate()`](/es/docs/WebAssembly/JavaScript_interface/instantiate) tiene dos formas de sobrecarga: la que se muestra arriba toma el código de bytes para compilar como argumento y devuelve una Promesa que se resuelve en un objeto que contiene tanto el objeto del módulo compilado como una instancia del mismo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The [`stack` example](/en-US/docs/WebAssembly/JavaScript_interface/Exception/stack#examples) shows the creation of an exception that uses the `options` parameter.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140904Z" creationid="gitnacho" creationdate="20221019T140904Z">
        <seg>El [ejemplo de `stack`](/es/docs/WebAssembly/JavaScript_interface/Exception/stack#ejemplos) muestra la creación de una excepción que usa el parámetro `options`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The [constructor](/en-US/docs/WebAssembly/JavaScript_interface/Exception/Exception) accepts a [`WebAssembly.Tag`](/en-US/docs/WebAssembly/JavaScript_interface/Tag), an array of values, and an `options` object as arguments.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T022750Z" creationid="gitnacho" creationdate="20221008T022750Z">
        <seg>El [constructor](/es/docs/WebAssembly/JavaScript_interface/Exception/Exception) acepta como argumentos una [`WebAssembly.Tag`](/es/docs/WebAssembly/JavaScript_interface/Tag), un arreglo de valores y un objeto `options`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The [reference types proposal](https://github.com/WebAssembly/reference-types/blob/master/proposals/reference-types/Overview.md) (supported in [Firefox 79](/en-US/docs/Mozilla/Firefox/Releases/79)) provides two main features:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074842Z" creationid="gitnacho" creationdate="20221007T074842Z">
        <seg>La [propuesta de tipos `Reference`](https://github.com/WebAssembly/reference-types/blob/master/proposals/reference-types/Overview.md) (compatible con [Firefox 79](/es/docs/Mozilla/Firefox/Releases/79)) proporciona dos funciones principales:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The [same-origin security policy](/en-US/docs/Web/Security/Same-origin_policy) forbids cross-origin access to resources.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T210534Z" creationid="gitnacho" creationdate="20221017T210437Z">
        <seg>La [política de seguridad del mismo origen](/es/docs/Web/Security/Same-origin_policy) prohíbe el acceso a los recursos de orígenes cruzados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The _page summary_ is the first "content" paragraph in a page—the first text that appears after the page front matter and any [sidebar or page banner macros](#kumascript).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191621Z" creationid="gitnacho" creationdate="20221008T191621Z">
        <seg>La _página de resumen_ es el primer párrafo de "contenido" en una página: el primer texto que aparece después de la portada de la página y cualquier [barra lateral o macro de banner de página](#kumascript).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The _response_ to a preflight request must specify `Access-Control-Allow-Credentials: true` to indicate that the actual request can be made with credentials.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230733Z" creationid="gitnacho" creationdate="20221011T230733Z">
        <seg>La _respuesta_ a una solicitud de preverificación debe especificar `Access-Control-Allow-Credentials: true` para indicar que la solicitud real se puede realizar con credenciales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `1` indicates that the imported memory must have at least 1 page of memory (WebAssembly defines a page to be 64KB.)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064514Z" creationid="gitnacho" creationdate="20221007T064514Z">
        <seg>El `1` indica que la memoria importada debe tener al menos 1 página de memoria (WebAssembly define una página como 64KB).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `&lt;script&gt;` element can also be used with other languages, such as [WebGL](/en-US/docs/Web/API/WebGL_API)'s GLSL shader programming language and [JSON](/en-US/docs/Glossary/JSON).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T120801Z" creationid="gitnacho" creationdate="20221003T120801Z">
        <seg>El elemento `&lt;script&gt;` también se puede usar con otros lenguajes, tal como los lenguajes de programación [WebGL](/es/docs/Web/API/WebGL_API) GLSL shader y [JSON](/es/docs/Glossary/JSON).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `Link` macro [is now deprecated](https://github.com/mdn/yari/pull/6865) and
should no longer be used.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T215958Z" creationid="gitnacho" creationdate="20221005T215958Z">
        <seg>La macro `Link` [ahora está obsoleta](https://github.com/mdn/yari/pull/6865) y
ya no se debe usar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `Memory` object's [`buffer`](/en-US/docs/WebAssembly/JavaScript_interface/Memory/buffer) property will return an {{jsxref("ArrayBuffer")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T220354Z" creationid="gitnacho" creationdate="20221019T220354Z">
        <seg>La propiedad [`buffer`](/es/docs/WebAssembly/JavaScript_interface/Memory/buffer) del objeto `Memory` devolverá un {{JSxRef("ArrayBuffer")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `ResultObject`'s `.instance` property is then accessed, and the contained exported function invoked.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T115006Z" creationid="gitnacho" creationdate="20221019T115006Z">
        <seg>Luego se accede a la propiedad `.instance` de `ResultObject` y se invoca la función exportada contenida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `ResultObject`'s instance member is then accessed, and the contained
exported function invoked.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T105108Z" creationid="gitnacho" creationdate="20221006T105108Z">
        <seg>A continuación, se accede al miembro de la instancia de `ResultObject` y se invoca a la
función exportada contenida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `ServiceWorker` interface is dispatched a set of lifecycle events — `install` and `activate` — and functional events including `fetch`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T212302Z" creationid="gitnacho" creationdate="20221003T212253Z">
        <seg>La interfaz `ServiceWorker` recibe un conjunto de eventos del ciclo de vida, `install` y `activate` — y eventos funcionales que incluyen `fetch`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `WebAssembly.Instance()` constructor function can be called to
synchronously instantiate a given [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) object, for example:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T210337Z" creationid="gitnacho" creationdate="20221019T210337Z">
        <seg>Se puede llamar a la función constructora `WebAssembly.Instance()` para
instanciar sincrónicamente un objeto [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module) dado, por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `WebAssembly.Instance()` constructor function can be called to synchronously instantiate a given [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) object, for example:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T223559Z" creationid="gitnacho" creationdate="20221005T223559Z">
        <seg>Se puede llamar a la función constructor `WebAssembly.Instance()` para instanciar sincrónicamente un objeto [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module), por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `WebAssembly.Module()` constructor function can be called to
synchronously compile given WebAssembly binary code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T231144Z" creationid="gitnacho" creationdate="20221019T231144Z">
        <seg>Se puede llamar a la función constructora `WebAssembly.Module()` para compilar sincrónicamente el código binario de WebAssembly dado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `WebAssembly.Table` contents are populated using a WebAssembly module and are accessible from JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T005213Z" creationid="gitnacho" creationdate="20221020T005213Z">
        <seg>El contenido de `WebAssembly.Table` se rellena mediante un módulo WebAssembly y es accesible desde JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `Worker` can send back information to the thread that spawned it using the {{domxref("DedicatedWorkerGlobalScope.postMessage")}} method.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221007T115448Z">
        <seg>El `Worker` puede enviar información al subproceso que lo generó utilizando el método {{DOMxRef("DedicatedWorkerGlobalScope.postMessage")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `[lib]` part tells Rust to build a `cdylib` version of our package; we won't get into what that means in this tutorial.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063736Z" creationid="gitnacho" creationdate="20221004T063736Z">
        <seg>La parte `[lib]` le dice a Rust que construya una versión `cdylib` de nuestro paquete; no entraremos en lo que eso significa en este tutorial.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `call` instruction calls a single function, given its index or name.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061122Z" creationid="gitnacho" creationdate="20221007T061122Z">
        <seg>La instrucción `call` llama a una sola función, dado su índice o nombre.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `charset` and `defer` attributes have no effect.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T132508Z" creationid="gitnacho" creationdate="20221003T132508Z">
        <seg>Los atributos `charset` y `defer` no tienen efecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `create_buffer()` function allocates a buffer for the RGBA image — hence 4 bytes per pixel.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054302Z" creationid="gitnacho" creationdate="20221004T054302Z">
        <seg>La función `create_buffer()` asigna un búfer para la imagen RGBA, por lo tanto, 4 bytes por píxel.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `delta-seconds` parameter indicates the number of seconds the results can be cached.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054120Z" creationid="gitnacho" creationdate="20221012T054120Z">
        <seg>El parámetro `delta-seconds` indica el número de segundos que se pueden almacenar en caché los resultados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `env.locale` variable should be reliable and defined for every document.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082438Z" creationid="gitnacho" creationdate="20221005T082438Z">
        <seg>La variable `env.locale` debe ser confiable y estar definida para cada documento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `env.tags` and `env.review_tags` variables return arrays of tags.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071408Z" creationid="gitnacho" creationdate="20221005T071408Z">
        <seg>Las variables `env.tags` y `env.review_tags` devuelven arreglos de etiquetas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `exports[0]` output looks like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T225054Z" creationid="gitnacho" creationdate="20221019T225054Z">
        <seg>La salida `exports[0]` se ve así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `fetch` event handler calls {{domxref("FetchEvent.respondWith", "FetchEvent.respondWith()")}} to pass a promise back to the controlled page.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220922T210402Z">
        <seg>El controlador de eventos `fetch` llama a {{DOMxRef("FetchEvent.respondWith", "FetchEvent.respondWith()")}} para devolver una promesa a la página controlada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `for` loop in JS can begin with one `&lt;% %&gt;` block, transition to output mode, and finish up in a second `&lt;% %&gt;` JS block.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070413Z" creationid="gitnacho" creationdate="20221005T070413Z">
        <seg>El bucle `for` en JS puede comenzar con un bloque `&lt;% %&gt;`, pasar al modo de salida y terminar en un segundo bloque JS `&lt;% %&gt;`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `format!` macro takes two arguments in this case, a format string, and a variable to put in it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063357Z" creationid="gitnacho" creationdate="20221004T063357Z">
        <seg>La macro `format!` toma dos argumentos en este caso, una cadena de formato y una variable para ponerla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `local.get`/`local.set` commands refer to the item to be got/set by its numeric index: parameters are referred to first, in order of their declaration, followed by locals in order of their declaration.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054624Z" creationid="gitnacho" creationdate="20221007T054624Z">
        <seg>Los comandos `local.get`/`local.set` se refieren al elemento que se va a obtener/establecer por su índice numérico: primero se hace referencia a los parámetros, en el orden de su declaración, seguidos por los locales en el orden de su declaración.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `mdn.localString()` function will automatically load strings for the appropriate locale.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083115Z" creationid="gitnacho" creationdate="20221005T083115Z">
        <seg>La función `mdn.localString()` cargará automáticamente cadenas para la configuración regional apropiada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `options.traceStack` property can be set `true` (by default it is `false`) to indicate that a WASM stack trace may be attached to the exception's [`stack`](/en-US/docs/WebAssembly/JavaScript_interface/Exception/stack) property.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140222Z" creationid="gitnacho" creationdate="20221019T140222Z">
        <seg>La propiedad `options.traceStack` se puede configurar como `true` (de manera predeterminada, `false`) para indicar que se puede adjuntar un seguimiento de la pila WASM a la excepción de la Propiedad [`stack`](/es/docs/WebAssembly/JavaScript_interface/Exception/stack).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `putInCache` function uses `caches.open('v1')` and `cache.put()` to add the resource to the cache.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040247Z" creationid="gitnacho" creationdate="20220921T040247Z">
        <seg>La función `putInCache` usa `caches.open('v1')` y `cache.put()` para agregar el recurso a la caché.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `scope` parameter is optional, and can be used to specify the subset of your content that you want the service worker to control.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T213847Z" creationid="gitnacho" creationdate="20220921T024956Z">
        <seg>El parámetro `scope` es opcional y se puede usar para especificar el subconjunto de tu contenido que deseas controle el *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `shared` attribute is only documented in [the Threading proposal for WebAssembly](https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md#javascript-api-changes) and not part of the official specs.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T220727Z" creationid="gitnacho" creationdate="20221019T220727Z">
        <seg>El atributo `shared` solo está documentado en [la propuesta de creación de subprocesos para WebAssembly](https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md#javascript-api-changes) y no forma parte de la especificación oficial.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `src` attribute will be ignored.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T132708Z" creationid="gitnacho" creationdate="20221003T132708Z">
        <seg>El atributo `src` será ignorado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `statechange` event fires anytime the {{domxref("ServiceWorker.state")}} changes.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T224819Z">
        <seg>El evento `statechange` se activa cada vez que {{DOMxRef("ServiceWorker.state")}} cambia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `table2.wasm` module defines a table containing two functions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T005457Z" creationid="gitnacho" creationdate="20221020T005457Z">
        <seg>El módulo `table2.wasm` define una tabla que contiene dos funciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `timeline` readonly property of the {{domxref("Document")}} interface represents the default timeline of the current document.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221006T092401Z">
        <seg>La propiedad de solo lectura `timeline` de la interfaz {{DOMxRef("Document")}} representa la línea de tiempo predeterminada del documento actual.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `type` attribute should be used instead.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T133733Z" creationid="gitnacho" creationdate="20221003T132943Z">
        <seg>En su lugar, se debe usar el atributo `type`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `validate()` method is then used to check whether the module is valid.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T200232Z" creationid="gitnacho" creationdate="20221007T200232Z">
        <seg>A continuación, se utiliza el método `validate()` para comprobar si el módulo es válido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The `wast2wasm` command available as part of
the [wabt tool](https://github.com/webassembly/wabt) has a
`--debug-names` option — specify this during conversion to get a .wasm with a
names custom section, for example:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T222559Z" creationid="gitnacho" creationdate="20221019T222559Z">
        <seg>El comando `wast2wasm` disponible como parte de la [herramienta `wabt`](https://github.com/webassembly/wabt) tiene una opción `--debug-names`: especifica esta durante la conversión para obtener un `.wasm` con una sección `name` personalizada, por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The above command will have generated `hello2.html`, which will have much the same content as the template with some glue code added into load the generated wasm, run it, etc.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111100Z" creationid="gitnacho" creationdate="20221003T111100Z">
        <seg>El comando anterior habrá generado `hello2.html`, que tendrá casi el mismo contenido que la plantilla con un poco de código agregado para cargar el `wasm` generado, ejecutarlo, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The above example is a pretty terrible logging function: it only prints a single integer!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T063713Z" creationid="gitnacho" creationdate="20221007T063713Z">
        <seg>El ejemplo anterior es una función de registro bastante terrible: ¡solo imprime un entero!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The aim of this area of MDN is not to take you from "beginner" to "expert" but to take you from "beginner" to "comfortable." From there, you should be able to start making your way, learning from [the rest of MDN](/en-US/), and other intermediate to advanced resources that assume a lot of previous knowledge.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T234137Z" creationid="gitnacho" creationdate="20221012T231727Z">
        <seg>El objetivo de esta área de MDN no es llevarte de "principiante" a "experto", sino de "principiante" a "cómodo". A partir de ese punto, deberías poder comenzar a abrirte camino, aprendiendo del [resto de MDN](/es/) y de otras fuentes de niveles intermedio hasta avanzado, las cuales asumen que tienes un vasto conocimiento previamente adquirido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The algorithm used by `atob()` and `btoa()` is specified in [RFC 4648](https://datatracker.ietf.org/doc/html/rfc4648), section 4.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T065930Z" creationid="gitnacho" creationdate="20221012T065930Z">
        <seg>El algoritmo utilizado por `atob()` y `btoa()` se especifica en [RFC 4648](https://datatracker.ietf.org/doc/html/rfc4648), sección 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The answer is that there is only one table allowed right now per module instance, and that is what `call_indirect` is implicitly calling.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073224Z" creationid="gitnacho" creationdate="20221007T073224Z">
        <seg>La respuesta es que, en este momento, solo se permite una tabla por instancia de módulo, y eso es lo que `call_indirect` está llamando implícitamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The articles below include content about downloading and building Mozilla code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T205733Z" creationid="gitnacho" creationdate="20221006T205733Z">
        <seg>Los artículos a continuación incluyen contenido sobre la descarga y creación de código de Mozilla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The assessments in each module are designed to test your knowledge of the subject matter.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224212Z" creationid="gitnacho" creationdate="20221018T224212Z">
        <seg>Las evaluaciones de cada módulo están diseñadas para comprobar tu conocimiento del tema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The attribute says "wasm-bindgen knows how to find these functions".</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062558Z" creationid="gitnacho" creationdate="20221004T062558Z">
        <seg>El atributo dice "wasm-bindgen sabe cómo encontrar estas funciones".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The baseline for MDN Markdown is GitHub-Flavored Markdown (GFM): &lt;https://github.github.com/gfm/&gt;.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T173805Z" creationid="gitnacho" creationdate="20221008T173805Z">
        <seg>La línea base para MDN Markdown es GitHub con sabor a Markdown (GFM): &lt;https://github.github.com/gfm/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The below graphic shows a summary of the available service worker events:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T023438Z" creationid="gitnacho" creationdate="20220921T023438Z">
        <seg>El siguiente gráfico muestra un resumen de los eventos de *service worker* disponibles:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The best web app in the world will provide a terrible user experience if you can't download it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T015707Z" creationid="gitnacho" creationdate="20220921T015520Z">
        <seg>La mejor aplicación web del mundo proporcionará una experiencia de usuario terrible si no la puedes descargar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The big part to add is the `[package]`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063716Z" creationid="gitnacho" creationdate="20221004T063716Z">
        <seg>La gran parte a agregar es el `[package]`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The bit inside the `#[ ]` is called an "attribute", and it modifies the next statement somehow.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062533Z" creationid="gitnacho" creationdate="20221004T062533Z">
        <seg>El bit dentro de `#[ ]` se llama "atributo", y modifica la siguiente declaración de alguna manera.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The blockquote can contain code blocks or other block elements.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181444Z" creationid="gitnacho" creationdate="20221008T181444Z">
        <seg>El bloque de cita puede contener bloques de código u otros elementos de bloque.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The browser determines that it needs to send this based on the request parameters that the JavaScript code snippet above was using, so that the server can respond whether it is acceptable to send the request with the actual request parameters.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222811Z" creationid="gitnacho" creationdate="20221011T222811Z">
        <seg>El navegador determina que necesita enviar esto en función de los parámetros de solicitud que estaba usando el fragmento de código JavaScript anterior, de modo que el servidor puede responder si es aceptable enviar la solicitud con los parámetros de solicitud reales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The browser does its best to manage disk space, but it may delete the Cache storage for an origin.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042032Z" creationid="gitnacho" creationdate="20220921T042032Z">
        <seg>El navegador hace todo lo posible para administrar el espacio en disco, pero puede eliminar el almacenamiento en caché de un origen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The browser does its best to manage disk space, but it may delete the `Cache` storage for an origin.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T202738Z" creationid="gitnacho" creationdate="20221003T202738Z">
        <seg>El navegador hace lo mejor que puede para administrar el espacio en disco, pero puede eliminar el almacenamiento en `Cache` para un origen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The browser sends the HTTP header {{HTTPHeader("Service-Worker-Navigation-Preload")}} with preload requests, with a default directive value of `true`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210723Z" creationid="gitnacho" creationdate="20220922T210723Z">
        <seg>El navegador envía el encabezado HTTP {{HTTPHeader("Service-Worker-Navigation-Preload")}} con solicitudes de precarga, con un valor de directiva predeterminado en `true`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The browser will generally delete all of the data for an origin or none of the data for an origin.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042054Z" creationid="gitnacho" creationdate="20220921T042054Z">
        <seg>El navegador, generalmente, eliminará todos los datos de un origen o ninguno de los datos de un origen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The case study tutorials at the end of the second and third modules prepare you for grasping the essentials of modern tooling.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T225333Z" creationid="gitnacho" creationdate="20221018T225333Z">
        <seg>Los tutoriales de casos de estudio al final del segundo y tercer módulo te preparan para comprender los conceptos básicos de las herramientas modernas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The client then returns the cookie's value with every request to the same server in the form of a `Cookie` request header.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T062858Z" creationid="gitnacho" creationdate="20221012T062858Z">
        <seg>Posteriormente el cliente devuelve el valor de la *cookie* en cada petición al mismo servidor en forma de cabecera de solicitud `Cookie`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The code also deletes all caches that aren't named in `CURRENT_CACHES`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T203804Z" creationid="gitnacho" creationdate="20221003T203804Z">
        <seg>El código también elimina todas las cachés que no se nombran en `CURRENT_CACHES`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The code below calls [`WebAssembly.instantiateStreaming`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming) to import the "example.wasm" file, passing in an "import object" (`importObject`) that includes a new [`WebAssembly.Tag`](/en-US/docs/WebAssembly/JavaScript_interface/Tag) named `tagToImport`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142911Z" creationid="gitnacho" creationdate="20221019T142911Z">
        <seg>El siguiente código llama a [`WebAssembly.instantiateStreaming`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming) para importar el archivo "`example.wasm`", pasando un "objeto de importación" (`importObject`) que incluye una nueva [`WebAssembly.Tag`](/es/docs/WebAssembly/JavaScript_interface/Tag) denominada `tagToImport`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The code below calls [`WebAssembly.instantiateStreaming`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming) to import the **example.wasm** file, passing in an "import object" (`importObject`) that includes a new [`WebAssembly.Tag`](/en-US/docs/WebAssembly/JavaScript_interface/Tag) named `tagToImport`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023419Z" creationid="gitnacho" creationdate="20221008T023419Z">
        <seg>El siguiente código llama a [`WebAssembly.instantiateStreaming`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming) para importar el archivo **`example.wasm`**, pasando un "objeto `import`" (`importObject`) que incluye una nueva [`WebAssembly.Tag`](/es/docs/WebAssembly/JavaScript_interface/Tag) llamada `tagToImport`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The code below shows how to get the promise that resolves to a `state` object and log the result.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T211213Z" creationid="gitnacho" creationdate="20220922T211213Z">
        <seg>El siguiente código muestra cómo obtener la promesa que se resuelve en un objeto `state` y registrar el resultado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The code below shows how to set the value of the header directive to some variable `newValue`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210949Z" creationid="gitnacho" creationdate="20220922T210949Z">
        <seg>El siguiente código muestra cómo establecer el valor de la directiva `header` en alguna variable `newValue`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The code below shows how to use `is()` to verify that a tag matches an [`Exception`](/en-US/docs/WebAssembly/JavaScript_interface/Exception).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T144721Z" creationid="gitnacho" creationdate="20221019T144721Z">
        <seg>El siguiente código muestra cómo usar `is()` para verificar que una etiqueta coincida con una [`Exception`](/es/docs/WebAssembly/JavaScript_interface/Exception).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The code catches the exception and uses `getArg()` to print the value at the first index.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T143107Z" creationid="gitnacho" creationdate="20221019T143107Z">
        <seg>El código captura la excepción y usa `getArg()` para imprimir el valor en el primer índice.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The code examples you'll encounter in the Learning Area are all [available on GitHub](https://github.com/mdn/learning-area/).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T173343Z" creationid="gitnacho" creationdate="20221020T131858Z">
        <seg>Todo el código de los ejemplos propuestos en el área de aprendizaje se encuentra disponible en [GitHub](https://github.com/mdn/learning-area).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The code handles exceptions thrown from the {{domxref("fetch()")}} operation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T203634Z">
        <seg>El código maneja las excepciones generadas por la operación {{DOMxRef("fetch()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The code listens for any change in the {{domxref("ServiceWorker.state")}}
and returns its value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T223930Z">
        <seg>El código detecta cualquier cambio en {{DOMxRef("ServiceWorker.state")}}
y devuelve su valor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The code listens for any change in the {{domxref("ServiceWorker.state")}} and returns its value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T213302Z">
        <seg>El código detecta cualquier cambio en {{DOMxRef("ServiceWorker.state")}} y devuelve su valor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The code snippet also shows a best practice for versioning caches used by the service worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T203721Z" creationid="gitnacho" creationdate="20221003T203721Z">
        <seg>El fragmento de código también muestra una práctica recomendada para el control de versiones de las memorias caché utilizadas por el *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The code then uses {{domxref("Cache.match()")}} to see if there's already a matching font in the cache, and if so, returns it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T203611Z">
        <seg>Luego, el código usa {{DOMxRef("Cache.match()")}} para ver si ya hay una fuente coincidente en la caché y, de ser así, la devuelve.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The conditions under which a request is preflighted are discussed above.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054436Z" creationid="gitnacho" creationdate="20221012T054436Z">
        <seg>Las condiciones bajo las cuales se realiza una preverificación de una solicitud se analizan arriba.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The console log displays the following description for the imported module:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T230515Z" creationid="gitnacho" creationdate="20221019T230515Z">
        <seg>El registro de la consola muestra la siguiente descripción del módulo importado:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The constructor accepts a [`Tag`](/en-US/docs/WebAssembly/JavaScript_interface/Exception) argument and a `payload` array of data fields.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T135910Z" creationid="gitnacho" creationdate="20221019T135910Z">
        <seg>El constructor acepta un argumento [`Tag`](/es/docs/WebAssembly/JavaScript_interface/Exception) y un arreglo `payload` de campos de datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The constructor may also take an `options` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140025Z" creationid="gitnacho" creationdate="20221019T140025Z">
        <seg>El constructor también puede tomar un objeto `options`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The constructor may then return an exception with a stack trace attached to the [`stack`](/en-US/docs/WebAssembly/JavaScript_interface/Exception/stack) property.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023002Z" creationid="gitnacho" creationdate="20221008T023002Z">
        <seg>Luego, el constructor puede devolver una excepción con un seguimiento de pila adjunto a la propiedad [`stack`](/es/docs/WebAssembly/JavaScript_interface/Exception/stack).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The contact point is commonly a finger or stylus and the device may be a touchscreen or trackpad.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220916T072901Z" creationid="gitnacho" creationdate="20220916T072901Z">
        <seg>El punto de contacto suele ser un dedo o un lápiz y el dispositivo puede ser una pantalla táctil o un trackpad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The contents are initialized to `0`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050324Z" creationid="gitnacho" creationdate="20221005T050324Z">
        <seg>El contenido se inicializa a `0`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The cookie can also be set to expire on a certain date, or restricted to a specific domain and path.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T063003Z" creationid="gitnacho" creationdate="20221012T063003Z">
        <seg>La *cookie* también puede determinar una fecha de caducidad, o puede estar restringida a un dominio y ruta específica.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The data from this macro is available in template code as an object in the `$0` argument (e.g., `$0.Alpha`, `$0.Beta`, `$0.Foo`).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065423Z" creationid="gitnacho" creationdate="20221005T065423Z">
        <seg>Los datos de esta macro están disponibles en el código de la plantilla como un objeto en el argumento `$0` (por ejemplo, `$0.Alpha`, `$0.Beta`, `$0.Foo`).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The data may be any value or JavaScript object handled by the [structured clone](/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm) algorithm, which includes cyclical references.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115334Z" creationid="gitnacho" creationdate="20221007T115334Z">
        <seg>Los datos pueden ser cualquier valor u objeto JavaScript manejado por el algoritmo [clon estructurado](/es/docs/Web/API/Web_Workers_API/Structured_clone_algorithm), que incluye referencias cíclicas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The data types of each of the payload elements must match the corresponding data type specified in the `Tag`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140011Z" creationid="gitnacho" creationdate="20221019T140011Z">
        <seg>Los tipos de datos de cada uno de los elementos de la carga útil —`payload`— deben coincidir con el tipo de datos correspondiente especificado en la etiqueta — `Tag`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The decision might be based on user preferences, a permission request, or the permission policy.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092254Z" creationid="gitnacho" creationdate="20221012T092254Z">
        <seg>La decisión se puede basar en las preferencias del usuario, una solicitud de permiso o la política de permisos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The default is `false`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T215948Z" creationid="gitnacho" creationdate="20221019T215948Z">
        <seg>El valor predeterminado es `false`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The default value is 5 seconds.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T224344Z" creationid="gitnacho" creationdate="20221011T224344Z">
        <seg>El valor predeterminado es de 5 segundos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The different code types can call each other as required — the [WebAssembly JavaScript API](/en-US/docs/WebAssembly/JavaScript_interface) wraps exported WebAssembly code with JavaScript functions that can be called normally, and WebAssembly code can import and synchronously call normal JavaScript functions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T091818Z" creationid="gitnacho" creationdate="20221003T010651Z">
        <seg>Los distintos tipos de código se pueden llamar uno al otro según necesiten — la [API JavaScript de WebAssembly](/es/docs/WebAssembly/JavaScript_interface) envuelve código WebAssembly exportado con funciones JavaScript, que pueden ser llamadas normalmente, y WebAssembly puede importar y llamar sincrónicamente funciones JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The elements must match the data types of the corresponding elements in the `tag`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140352Z" creationid="gitnacho" creationdate="20221019T140352Z">
        <seg>Los elementos deben coincidir con los tipos de datos de los elementos correspondientes en la etiqueta — `tag`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The end result?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064335Z" creationid="gitnacho" creationdate="20221004T064335Z">
        <seg>¿El resultado final?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The enforced cookie policy may therefore nullify the capability described in this chapter, effectively preventing you from making credentialed requests whatsoever.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053601Z" creationid="gitnacho" creationdate="20221012T053601Z">
        <seg>La política de *cookies* aplicada puede, por lo tanto, anular la capacidad descrita en este capítulo, impidiendo efectivamente que realices solicitudes con credenciales de ningún tipo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The engine takes advantage of this supplied upper-bounds to reserve memory ahead of time, which can make resizing more efficient.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T210536Z" creationid="gitnacho" creationdate="20221006T210536Z">
        <seg>El motor aprovecha estos límites superiores proporcionados para reservar memoria con anticipación, lo que puede hacer que el cambio de tamaño sea más eficiente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The entire list of parameters is also available in a template as the variable `arguments`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065917Z" creationid="gitnacho" creationdate="20221005T065917Z">
        <seg>La lista completa de parámetros también está disponible en una plantilla como la variable `arguments`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The equivalent code would look like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T181648Z" creationid="gitnacho" creationdate="20221006T181648Z">
        <seg>El código equivalente se vería así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The event can describe one or more points of contact with the screen and includes support for detecting movement, addition and removal of contact points, and so forth.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220916T072927Z" creationid="gitnacho" creationdate="20220916T072927Z">
        <seg>El evento puede describir uno o más puntos de contacto con la pantalla e incluye soporte para detectar movimiento, agregar y quitar puntos de contacto, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The example above creates an XML body to send with the `POST` request.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222609Z" creationid="gitnacho" creationdate="20221011T222609Z">
        <seg>El ejemplo anterior crea un cuerpo XML para enviar con la solicitud `POST`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The example fetches and instantiates the loaded memory.wasm bytecode using the [`WebAssembly.instantiateStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming) function, while importing the memory created in the line above.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T220334Z" creationid="gitnacho" creationdate="20221019T220334Z">
        <seg>El ejemplo obtiene e instancia el bytecode `memory.wasm` cargado mediante la función [`WebAssembly.instantiateStreaming()`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming), mientras importa la memoria creada en la línea anterior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The examples here are from [Speed up Service Worker with Navigation Preloads](https://developer.chrome.com/blog/navigation-preload/) (developer.chrome.com).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T212922Z" creationid="gitnacho" creationdate="20220922T210031Z">
        <seg>Los ejemplos aquí son de [Acelera el *Service Worker*&amp;nbsp;con precargas de navegación](https://developer.chrome.com/blog/navigation-preload/) (developer.chrome.com).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The exception is caught in JavaScript using the `catch` block.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023558Z" creationid="gitnacho" creationdate="20221008T023558Z">
        <seg>La excepción se captura en JavaScript usando el bloque `catch`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The file objects for a page can be accessed through the array `env.files`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082623Z" creationid="gitnacho" creationdate="20221005T082623Z">
        <seg>Se puede acceder a los objetos `file` de una página a través del arreglo `env.files`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The final code looks like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T061053Z" creationid="gitnacho" creationdate="20221005T061053Z">
        <seg>El código final se ve así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The final part is this one:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063102Z" creationid="gitnacho" creationdate="20221004T063102Z">
        <seg>La parte final es esta:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The first block of code in our app's JavaScript file — `app.js` — is as follows.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T024141Z" creationid="gitnacho" creationdate="20220921T024141Z">
        <seg>El primer bloque de código en el archivo JavaScript de nuestra aplicación, `app.js`, es el siguiente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The first exchange is the _preflight request/response_:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222725Z" creationid="gitnacho" creationdate="20221011T222725Z">
        <seg>El primer intercambio es la _solicitud/respuesta previa al vuelo_:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The first function returns 42, and the second returns 83:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T005505Z" creationid="gitnacho" creationdate="20221020T005505Z">
        <seg>La primera función devuelve 42 y la segunda devuelve 83:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The first helper function contained inside `instantiateCachedURL()` — `openDatabase()` — creates an object store for storing wasm modules, and also handles clearing out the database if the `dbVersion` is updated; it returns a promise resolving to the new database.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T051233Z" creationid="gitnacho" creationdate="20221004T051233Z">
        <seg>La primera función auxiliar contenida dentro de `instantiateCachedURL()` — `openDatabase()` — crea un almacén de objetos para preservar módulos `wasm` y también maneja la limpieza de la base de datos si se actualiza `dbVersion`; devuelve una promesa que se resuelve en la nueva base de datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The first label inside the parenthesis tells you what type of node it is, and after that there is a space-separated list of either attributes or child nodes.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053640Z" creationid="gitnacho" creationdate="20221007T053640Z">
        <seg>La primera etiqueta dentro del paréntesis te dice qué tipo de nodo es, y después de eso hay una lista separada por espacios de atributos o nodos secundarios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The first line contains a `use` command, which imports code from a library into your code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062320Z" creationid="gitnacho" creationdate="20221004T062320Z">
        <seg>La primera línea contiene un comando `use`, que importa código de una biblioteca a tu código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The first paragraph should therefore be both succinct and informative.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191705Z" creationid="gitnacho" creationdate="20221008T191641Z">
        <seg>Por lo tanto, el primer párrafo debe ser sucinto e informativo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The first parameter is for the previous article and the second is for the next article.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113502Z" creationid="gitnacho" creationdate="20221005T113502Z">
        <seg>El primer parámetro es para el artículo anterior y el segundo es para el artículo siguiente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The first part looks like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062116Z" creationid="gitnacho" creationdate="20221004T062116Z">
        <seg>La primera parte se ve así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The first question you need to answer is: how do I get the image into wasm?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053948Z" creationid="gitnacho" creationdate="20221004T053948Z">
        <seg>La primera pregunta que debes responder es: ¿cómo ingreso la imagen en `wasm`?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The first way is to construct it from JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000458Z" creationid="gitnacho" creationdate="20221008T000458Z">
        <seg>La primera forma es construirlo desde JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following code shows a service worker fetch event handler that uses a preloaded response ({{domxref("FetchEvent.preloadResponse")}}).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220922T210348Z">
        <seg>El siguiente código muestra un controlador de eventos de recuperación del *service worker* que usa una respuesta ({{DOMxRef("FetchEvent.preloadResponse")}}) precargada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following code snippet shows the creation of a {{domxref("Worker")}} object using the {{domxref("Worker.Worker", "Worker()")}} constructor.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221007T115808Z">
        <seg>El siguiente fragmento de código muestra la creación de un objeto {{DOMxRef("Worker")}} mediante el constructor {{DOMxRef("Worker.Worker", "Worker()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example (see [memory.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/memory.html) on GitHub, and [view it live also](https://mdn.github.io/webassembly-examples/js-api-examples/memory.html)) creates a new WebAssembly Memory instance with an initial size of 10 pages (640KiB), and a maximum size of 100 pages (6.4MiB).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T220257Z" creationid="gitnacho" creationdate="20221019T220257Z">
        <seg>El siguiente ejemplo (consulta [memory.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/memory.html) en GitHub, y también lo puedes [ver en vivo](https://mdn.github.io/webassembly-examples/js-api-examples/memory.html)) crea una nueva instancia de `Memory` WebAssembly con un tamaño inicial de 10 páginas (640KiB) y un tamaño máximo de 100 páginas ( 6.4MiB).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example (see [memory.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/memory.html) on GitHub, and [view it live also](https://mdn.github.io/webassembly-examples/js-api-examples/memory.html)) fetches and instantiates the loaded memory.wasm bytecode using the [`WebAssembly.instantiateStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming) function, while importing the memory created in the line above.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T213235Z" creationid="gitnacho" creationdate="20221008T000806Z">
        <seg>El siguiente ejemplo (consulta [memory.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/memory.html) en GitHub, y también lo puedes [ver en vivo](https://mdn.github.io/webassembly-examples/js-api-examples/memory.html)) obtiene y crea una instancia del código de bytes `memory.wasm` cargado mediante [`WebAssembly.instantiateStreaming()`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming), mientras importa la memoria creada en la línea anterior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example (see [table.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table.html)
on GitHub, and [view it live](https://mdn.github.io/webassembly-examples/js-api-examples/table.html) also)
compiles and instantiates the loaded table.wasm byte code using the
[`WebAssembly.instantiateStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming) method.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T092031Z" creationid="gitnacho" creationdate="20221006T092031Z">
        <seg>El siguiente ejemplo (ve [table.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table.html) en GitHub, y si lo quieres [ver en vivo](https://mdn.github.io/webassembly-examples/js-api-examples/table.html) también) compila e instancia el código de bytes `table.wasm` cargado usando el
[`WebAssembly.instantiateStreaming()`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example (see our [compile-streaming.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/compile-streaming.html)
demo on GitHub, and [view it live](https://mdn.github.io/webassembly-examples/js-api-examples/compile-streaming.html) also) directly streams a .wasm module from an underlying source then
compiles it to a [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T185642Z" creationid="gitnacho" creationdate="20221007T185642Z">
        <seg>El siguiente ejemplo (consulta nuestra demostración [compile-streaming.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/compile-streaming.html) en GitHub, y puedes [verla en vivo](https://mdn.github.io/webassembly-examples/js-api-examples/compile-streaming.html) también) transmite directamente un módulo `.wasm` desde una fuente subyacente y luego
la compila en un objeto [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example (see our [index-compile.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html)
demo on GitHub, and [view it live](https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html) also)
compiles the loaded simple.wasm byte code using the
[`WebAssembly.compileStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/compileStreaming) method and then sends it to a [worker](/en-US/docs/Web/API/Web_Workers_API) using
{{domxref("Worker.postMessage", "postMessage()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221007T194447Z">
        <seg>El siguiente ejemplo (consulta nuestra demostración [index-compile.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html)
en GitHub, y también la puedes [ver en vivo](https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html))
compila el código de bytes `simple.wasm` cargado usando el método
[`WebAssembly.compileStreaming()`](/es/docs/WebAssembly/JavaScript_interface/compileStreaming) y luego envíala a un [*worker*](/es/docs/Web/API/Web_Workers_API) usando
{{DOMxRef("Worker.message post", "Message post()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example (see our [index-compile.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html)
demo on GitHub, and [view it live](https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html) also)
compiles the loaded simple.wasm byte code using the
[`WebAssembly.compileStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/compileStreaming) method and then sends it to a [worker](/en-US/docs/Web/API/Web_Workers_API) using [postMessage()](/en-US/docs/Web/API/Worker/postMessage).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T224922Z" creationid="gitnacho" creationdate="20221019T224922Z">
        <seg>El siguiente ejemplo (consulta nuestra demostración [index-compile.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html) en GitHub, y también la puedes [ver en vivo](https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html)) compila el código de bytes `simple.wasm` cargado usando el [`WebAssembly.compileStreaming()`](/es/docs/WebAssembly/JavaScript_interface/compileStreaming) y luego lo envía a un [*worker*](/es/docs/Web/API/Web_Workers_API) usando [postMessage()](/es/docs/Web/API/Worker/postMessage).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example (see our [instantiate-streaming.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/instantiate-streaming.html)
demo on GitHub, and [view it live](https://mdn.github.io/webassembly-examples/js-api-examples/instantiate-streaming.html) also)
directly streams a .wasm module from an underlying source then
compiles and instantiates it, the promise fulfilling with a `ResultObject`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T105605Z" creationid="gitnacho" creationdate="20221006T104817Z">
        <seg>El siguiente ejemplo (consulta nuestra demostración [instantiate-streaming.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/instantiate-streaming.html) en GitHub, y también la puedes [ver en vivo](https://mdn.github.io/webassembly-examples/js-api-examples/instantiate-streaming.html))
transmite directamente un módulo `.wasm` desde una fuente subyacente y luego
lo compila y crea la instancia, cumpliendo la promesa con un `ResultObject`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example (see our [instantiate-streaming.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/instantiate-streaming.html) demo on GitHub, and [view it live](https://mdn.github.io/webassembly-examples/js-api-examples/instantiate-streaming.html) also) directly streams a .wasm module from an underlying source then compiles and instantiates it, the promise fulfilling with a `ResultObject`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T114921Z" creationid="gitnacho" creationdate="20221019T114921Z">
        <seg>El siguiente ejemplo (consulta nuestra demostración [instantiate-streaming.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/instantiate-streaming.html) en GitHub, y también lo puedes [ver en vivo](https://mdn.github.io/webassembly-examples/js-api-examples/instantiate-streaming.html)) transmite directamente un módulo `.wasm` desde una fuente subyacente, luego lo compila y lo instancia, cumple la promesa con un `ResultObject`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example (see table2.html [source code](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.html)
and [live version](https://mdn.github.io/webassembly-examples/js-api-examples/table2.html))
creates a new WebAssembly Table instance with an initial size of 2
references.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T234331Z" creationid="gitnacho" creationdate="20221019T234331Z">
        <seg>El siguiente ejemplo (ve el [código fuente](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.html) de `table2.html` y la [versión en vivo](https://mdn.github.io/webassembly-examples/js-api-examples/table2.html)) crea una nueva instancia de `Table` de WebAssembly con un tamaño inicial de 2 referencias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example (see table2.html [source code](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.html) and [live version](https://mdn.github.io/webassembly-examples/js-api-examples/table2.html)) creates a new WebAssembly Table instance with an initial size of 2 elements.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095442Z" creationid="gitnacho" creationdate="20221006T095442Z">
        <seg>El siguiente ejemplo (ve el [código fuente](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.html) de table2.html y la [versión en vivo](https://mdn.github.io/webassembly-examples/js-api-examples/table2.html)) crea una nueva instancia de WebAssembly Table con un tamaño inicial de 2 elementos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example (see the validate.html [source code](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/validate.html),
and [see it live too](https://mdn.github.io/webassembly-examples/js-api-examples/validate.html))
fetches a .wasm module and converts it into a typed array.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T200225Z" creationid="gitnacho" creationdate="20221007T200225Z">
        <seg>El siguiente ejemplo (consulta el [código fuente](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/validate.html)  `validate.html`, y lo puedes [ver en vivo también](https://mdn.github.io/webassembly-examples/js-api-examples/validate.html))
obtiene un módulo `.wasm` y lo convierte en un arreglo tipado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example compiles a loaded wasm module and queries the module's imports.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T230327Z" creationid="gitnacho" creationdate="20221019T230327Z">
        <seg>El siguiente ejemplo compila un módulo `wasm` cargado y consulta las `import`aciones del módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example compiles the loaded `simple.wasm` byte code using the [`WebAssembly.compileStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/compileStreaming) method and sends the resulting `Module` instance to a [worker](/en-US/docs/Web/API/Web_Workers_API) using {{domxref("Worker/postMessage", "postMessage()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221007T111932Z">
        <seg>El siguiente ejemplo compila el código de bytes `simple.wasm` cargado usando el método [`WebAssembly.compileStreaming()`](/es/docs/WebAssembly/JavaScript_interface/compileStreaming) y envía la instancia `Module` resultante a un [*worker*](/es/docs/Web/API/Web_Workers_API) usando {{DOMxRef("Worker/postMessage", "postMessage()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example compiles the loaded simple.wasm byte code using the
`compile()` function and then sends it to a [worker](/en-US/docs/Web/API/Web_Workers_API) using [postMessage()](/en-US/docs/Web/API/Worker/postMessage).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T180637Z" creationid="gitnacho" creationdate="20221007T180637Z">
        <seg>El siguiente ejemplo compila el código de bytes `simple.wasm` cargado usando `compile()` y luego lo envía a un [*worker*](/es/docs/Web/API/Web_Workers_API) usando [postMessage()](/es/docs/Web/API/Worker/postMessage ).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example creates a `WebAssembly.Table` instance with an initial size of 2
elements.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T005150Z" creationid="gitnacho" creationdate="20221020T005150Z">
        <seg>El siguiente ejemplo crea una instancia `WebAssembly.Table` con un tamaño inicial de 2
elementos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example creates a new WebAssembly Memory instance with an initial size of 1 page (64KiB), and a maximum size of 10 pages (640KiB).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T214614Z" creationid="gitnacho" creationdate="20221019T214614Z">
        <seg>El siguiente ejemplo crea una nueva instancia de memoria WebAssembly con un tamaño inicial de 1 página (64KiB) y un tamaño máximo de 10 páginas (640KiB).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example creates a new WebAssembly Table instance with an initial size of
2 and a maximum size of 10:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T110227Z" creationid="gitnacho" creationdate="20221006T110227Z">
        <seg>El siguiente ejemplo crea una nueva instancia de WebAssembly `Table` con un tamaño inicial de
2 y un tamaño máximo de 10:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example imports a memory exported from WebAssembly with the name `memory`, and then prints out the first element of the memory, interpreted as an {{jsxref("Uint32Array")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000928Z" creationid="gitnacho" creationdate="20221008T000928Z">
        <seg>El siguiente ejemplo importa una memoria exportada desde WebAssembly con el nombre `memory` y luego imprime el primer elemento de la memoria, interpretado como {{jsxref("Uint32Array")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example shows a new global instance being created using the `WebAssembly.Global()` constructor.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T104731Z" creationid="gitnacho" creationdate="20221007T104731Z">
        <seg>El siguiente ejemplo muestra una nueva instancia global que se crea utilizando el constructor `WebAssembly.Global()`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following example uses `WebAssembly.Module.customSections` to check
if a loaded module instance contains a "name" custom section.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T222708Z" creationid="gitnacho" creationdate="20221019T222708Z">
        <seg>El siguiente ejemplo usa `WebAssembly.Module.customSections` para verificar si una instancia de módulo cargada contiene una sección `name` personalizada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following is a list of [KumaScript macros](https://github.com/mdn/yari/tree/main/kumascript/macros) that has been deprecated and should no longer be used.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T215920Z" creationid="gitnacho" creationdate="20221005T215841Z">
        <seg>La siguiente es una lista de [macros de KumaScript](https://github.com/mdn/yari/tree/main/kumascript/macros) que han quedado en desuso y ya no se deben usar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following is a list of all the topics we cover in the MDN learning area.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T130758Z" creationid="gitnacho" creationdate="20221020T124230Z">
        <seg>La siguiente es una lista de todos los temas tratados en el área de aprendizaje de MDN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following is an example of a request that will be preflighted:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222555Z" creationid="gitnacho" creationdate="20221011T222555Z">
        <seg>El siguiente es un ejemplo de una solicitud que se verificará previamente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following looks like a scary list, but fortunately, you can get started in web development without knowing anything about most of these.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T164453Z" creationid="gitnacho" creationdate="20221012T164422Z">
        <seg>La siguiente parece una lista aterradora, pero afortunadamente, puedes comenzar en el desarrollo web sin saber nada sobre la mayoría de estos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following sections explain.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T055033Z" creationid="gitnacho" creationdate="20221005T055033Z">
        <seg>Las siguientes secciones lo explican.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following snippet creates a new WebAssembly Memory instance with an initial size of 10 pages (640KiB), and a maximum size of 100 pages (6.4MiB).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000531Z" creationid="gitnacho" creationdate="20221008T000531Z">
        <seg>El siguiente fragmento crea una nueva instancia de `Memory` WebAssembly con un tamaño inicial de 10 páginas (640KiB) y un tamaño máximo de 100 páginas (6.4MiB).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following snippet creates a new `CompileError` instance, and logs its
details to the console:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T135106Z" creationid="gitnacho" creationdate="20221019T135106Z">
        <seg>El siguiente fragmento crea una nueva instancia de `CompileError` y registra su
detalles en la consola:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following snippet creates a new `CompileError` instance, and logs its details to the console:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T064721Z" creationid="gitnacho" creationdate="20221008T025651Z">
        <seg>El siguiente fragmento crea una nueva instancia de `CompileError` y registra sus detalles en la consola:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following snippet creates a new `LinkError` instance, and logs its
details to the console:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T211648Z" creationid="gitnacho" creationdate="20221019T211648Z">
        <seg>El siguiente fragmento crea una nueva instancia `LinkError` y registra sus
detalles en la consola:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following snippet creates a new `LinkError` instance, and logs its details to the console:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T075308Z" creationid="gitnacho" creationdate="20221008T075308Z">
        <seg>El siguiente fragmento crea una nueva instancia de `LinkError` y registra sus detalles en la consola:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following snippet creates a new `RuntimeError` instance, and logs its
details to the console:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T232307Z" creationid="gitnacho" creationdate="20221019T232307Z">
        <seg>El siguiente fragmento crea una nueva instancia de `RuntimeError` y registra su
detalles en la consola:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following snippet creates a new `RuntimeError` instance, and logs its details to the console:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T080849Z" creationid="gitnacho" creationdate="20221008T080849Z">
        <seg>El siguiente fragmento crea una nueva instancia `RuntimeError` y registra sus detalles en la consola:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following words are supported:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174731Z" creationid="gitnacho" creationdate="20221008T174731Z">
        <seg>Se admiten las siguientes palabras:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The following would do the trick:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040132Z" creationid="gitnacho" creationdate="20220921T040132Z">
        <seg>Lo siguiente haría el truco:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The format string is the `"Hello, {}!"` bit.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063412Z" creationid="gitnacho" creationdate="20221004T063412Z">
        <seg>La cadena de formato es el bit `"¡Hola, {}!"`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The full module all together looks like this, and can be found in our [wasm-table.wat](https://github.com/mdn/webassembly-examples/blob/master/understanding-text-format/wasm-table.wat) example file:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073332Z" creationid="gitnacho" creationdate="20221007T073332Z">
        <seg>El módulo completo en conjunto tiene este aspecto y se puede encontrar en nuestro archivo de ejemplo [wasm-table.wat](https://github.com/mdn/webassembly-examples/blob/master/understanding-text-format/wasm-table.wat):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The function `shared0func` is defined in `shared0.wat`, and stored in our imported table.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073859Z" creationid="gitnacho" creationdate="20221007T073859Z">
        <seg>La función `shared0func` se define en `shared0.wat` y se almacena en nuestra tabla importada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The function starts off by defining some necessary constants:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T051028Z" creationid="gitnacho" creationdate="20221004T051028Z">
        <seg>La función empieza definiendo algunas constantes necesarias:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The function takes a pointer to the input image and its dimensions, as well as a quality option between 0 and 100.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054656Z" creationid="gitnacho" creationdate="20221004T054656Z">
        <seg>La función lleva un puntero a la imagen de entrada y sus dimensiones, así como una opción de calidad entre 0 y 100.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The function then sets up an event handler to receive the module from the main thread.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T112207Z" creationid="gitnacho" creationdate="20221007T112207Z">
        <seg>Luego, la función configura un controlador de eventos para recibir el módulo del hilo principal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The generated HTML document loads the JavaScript glue file and writes stdout to a {{htmlelement("textarea")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T081740Z" creationid="gitnacho" creationdate="20221003T081740Z">
        <seg>El documento HTML generado carga el archivo de enlace JavaScript y escribe `stdout` en un elemento {{htmlelement("textarea")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The glue code also contains the logic for calling the above-mentioned WebAssembly JavaScript APIs to fetch, load and run the .wasm file.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T081657Z" creationid="gitnacho" creationdate="20221003T081657Z">
        <seg>El código de conexión también contiene la lógica para llamar a las APIs JavaScript de WebAssembly mencionadas anteriormente para obtener, cargar y ejecutar el archivo `.wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The header value can be changed to any other string value using {{domxref("NavigationPreloadManager.setHeaderValue()")}} in order to provide additional context for the prefetch operation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220922T210836Z">
        <seg>El valor del encabezado se puede cambiar a cualquier otro valor de cadena usando {{DOMxRef("NavigationPreloadManager.setHeaderValue()")}} para proporcionar contexto adicional para la operación de precarga.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The height of the `&lt;iframe&gt;`, which can be expressed as a percentage or in pixels.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T212231Z" creationid="gitnacho" creationdate="20221005T212231Z">
        <seg>La altura del `&lt;iframe&gt;`, que se puede expresar como un porcentaje o en píxeles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The high entropy hints are those that have the potential to give away more information that can be used for user fingerprinting, and therefore are gated in such a way that the user agent can make a decision as to whether to provide them.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092239Z" creationid="gitnacho" creationdate="20221012T092239Z">
        <seg>Las sugerencias de alta entropía son aquellas que tienen el potencial de revelar más información que se puede usar para la toma de huellas dactilares del usuario y, por lo tanto, están cerradas de tal manera que el agente de usuario puede tomar la decisión de proporcionarlas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The if-block performs a feature detection test to make sure service workers are supported before trying to register one.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T024820Z" creationid="gitnacho" creationdate="20220921T024820Z">
        <seg>El bloque if realiza una prueba de detección de características para asegurarse de que el *service worker* sea compatible antes de intentar registrar uno.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The image is now available in wasm.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054613Z" creationid="gitnacho" creationdate="20221004T054613Z">
        <seg>La imagen ya está disponible en `wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The import object defines an object with properties that match the `import` statement in the WebAssembly code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023439Z" creationid="gitnacho" creationdate="20221008T023439Z">
        <seg>El objeto `import` define un objeto con propiedades que coinciden con la declaración "`import`" en el código WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The index provided is `0` — again, it implicitly pops the previous value off the stack.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073928Z" creationid="gitnacho" creationdate="20221007T073928Z">
        <seg>El índice provisto es `0`; de nuevo, saca implícitamente el valor anterior de la pila.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The install event is fired when an install is successfully completed.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034044Z" creationid="gitnacho" creationdate="20220921T034044Z">
        <seg>El evento `install` se activa cuando una instalación se completa con éxito.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The install event is generally used to populate your browser's offline caching capabilities with the assets you need to run your app offline.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034110Z" creationid="gitnacho" creationdate="20220921T034110Z">
        <seg>El evento `install` generalmente se usa para llenar las capacidades de almacenamiento en caché sin conexión de tu navegador con los activos que necesita para ejecutar tu aplicación sin conexión.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The instruction `local.get 0` would get the i32 parameter, `local.get 1` would get the f32 parameter, and `local.get 2` would get the f64 local.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054653Z" creationid="gitnacho" creationdate="20221007T054653Z">
        <seg>La instrucción `local.get 0` obtendría el parámetro i32, `local.get 1` obtendría el parámetro f32 y `local.get 2` obtendría el local f64.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The interface provides the only way to get and manage versions of the database.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220911T210836Z" creationid="gitnacho" creationdate="20220911T210836Z">
        <seg>La interfaz proporciona la única forma de obtener y administrar versiones de la base de datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The inverted order of the logs is due to the fact that the `then` handlers
are called asynchronously.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T074038Z" creationid="gitnacho" creationdate="20221002T074038Z">
        <seg>El orden invertido de los registros se debe al hecho de que los controladores `then`
se llaman asíncronamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The items at indexes 0 and 1 of the table are now callable [Exported WebAssembly Functions](/en-US/docs/WebAssembly/Exported_functions).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T005649Z" creationid="gitnacho" creationdate="20221020T005649Z">
        <seg>Los elementos en los índices 0 y 1 de la tabla ahora se pueden llamar [Funciones WebAssembly exportadas](/es/docs/WebAssembly/Exported_functions).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The key is that JavaScript can create WebAssembly linear memory instances via the [`WebAssembly.Memory()`](/en-US/docs/WebAssembly/JavaScript_interface/Memory) interface, and access an existing memory instance (currently you can only have one per module instance) using the associated instance methods.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064116Z" creationid="gitnacho" creationdate="20221007T064116Z">
        <seg>La clave es que JavaScript puede crear instancias de memoria lineal de WebAssembly a través de la interfaz [`WebAssembly.Memory()`](/es/docs/WebAssembly/JavaScript_interface/Memory) y acceder a una instancia de memoria existente (actualmente solo puede tener uno por instancia de módulo) utilizando los métodos de instancia asociados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The key part of this is to set the response type to `'arraybuffer'` using the {{domxref("XMLHttpRequest.responseType","responseType")}} property.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221005T060924Z">
        <seg>La parte clave de esto es establecer el tipo de respuesta en `'arraybuffer'` usando la propiedad {{DOMxRef("XMLHttpRequest.responseType","responseType")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The last missing piece of the puzzle is where `consoleLogString` gets access to the WebAssembly `memory`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064418Z" creationid="gitnacho" creationdate="20221007T064418Z">
        <seg>La última pieza que falta del rompecabezas es donde `consoleLogString` obtiene acceso a la `memory` de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The last section is the `[dependencies]` section.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063916Z" creationid="gitnacho" creationdate="20221004T063916Z">
        <seg>La última sección es la sección `[dependencies]`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The loop instruction doesn't loop by itself; you need to branch to it to actually create a loop.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T084824Z" creationid="gitnacho" creationdate="20221020T084824Z">
        <seg>La instrucción `loop` no se repite sola; necesita bifurcarse para, realmente, crear un bucle.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The low entropy hints are those that don't give away much information that might be used to "fingerprint" (identify) a particular user.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092127Z" creationid="gitnacho" creationdate="20221012T092127Z">
        <seg>Las sugerencias de baja entropía son aquellas que no brindan mucha información que se podría usar para "huellas digitales" (identificar) a un usuario en particular.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The lowercase value of this name should match the lowercase value of one of the filenames under the macros directory.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065253Z" creationid="gitnacho" creationdate="20221005T065253Z">
        <seg>El valor en minúsculas de este nombre debe coincidir con el valor en minúsculas de uno de los nombres de archivo en el directorio de macros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The macro only has three parameters:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T212040Z" creationid="gitnacho" creationdate="20221005T212040Z">
        <seg>La macro solo tiene tres parámetros:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The macros are easy to use.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T104939Z" creationid="gitnacho" creationdate="20221005T104939Z">
        <seg>Las macros son fáciles de usar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The main limitations of GFM table syntax are:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184840Z" creationid="gitnacho" creationdate="20221008T184840Z">
        <seg>Las principales limitaciones de la sintaxis de la tabla GFM son:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The matching is done via URL and various headers, just like with normal HTTP requests.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035341Z" creationid="gitnacho" creationdate="20220921T035341Z">
        <seg>La coincidencia se realiza a través de URL y varios encabezados, al igual que con las solicitudes HTTP normales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The method might be used to test that a tag is correct before passing it to [`Exception.prototype.getArg()`](/en-US/docs/WebAssembly/JavaScript_interface/Exception/getArg) to get the passed values.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T145219Z" creationid="gitnacho" creationdate="20221019T145219Z">
        <seg>El método se podría usar para probar que una etiqueta es correcta antes de pasarla a [`Exception.prototype.getArg()`](/es/docs/WebAssembly/JavaScript_interface/Exception/getArg) para obtener los valores pasados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The method passes a [`WebAssembly.Tag`](/en-US/docs/WebAssembly/JavaScript_interface/Tag) and will only succeed if the thrown `Exception` was created using the same tag, otherwise it will throw a `TypeError`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142226Z" creationid="gitnacho" creationdate="20221019T142226Z">
        <seg>El método pasa una [`WebAssembly.Tag`](/es/docs/WebAssembly/JavaScript_interface/Tag) y solo tendrá éxito si la `Exception` lanzada se creó usando la misma etiqueta; de lo contrario, lanzará un `TypeError` .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The most "relevant" part of this code is the line where the exception is created:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204444Z" creationid="gitnacho" creationdate="20221019T204444Z">
        <seg>La parte más "relevante" de este código es la línea donde se crea la excepción:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The most common cause is a syntax error in a [macro](/en-US/docs/MDN/Writing_guidelines/Page_structures/Macros).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T194419Z" creationid="gitnacho" creationdate="20221005T092141Z">
        <seg>La causa más común es un error de sintaxis en una [macro](/es/docs/MDN/Writing_guidelines/Page_structures/Macros).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The most interesting capability exposed by both {{domxref("XMLHttpRequest")}} or [Fetch](/en-US/docs/Web/API/Fetch_API) and CORS is the ability to make "credentialed" requests that are aware of [HTTP cookies](/en-US/docs/Web/HTTP/Cookies) and HTTP Authentication information.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T230313Z">
        <seg>La capacidad más interesante expuesta por {{DOMxRef("XMLHttpRequest")}} o [Fetch](/es/docs/Web/API/Fetch_API) y CORS es la capacidad de realizar solicitudes "con credenciales" que son conscientes de [*cookies* HTTP](/es/docs/Web/HTTP/Cookies) e información de autenticación HTTP.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The motivation is that the {{HTMLElement("form")}} element from HTML 4.0 (which predates cross-site {{domxref("XMLHttpRequest")}} and {{domxref("fetch")}}) can submit simple requests to any origin, so anyone writing a server must already be protecting against {{Glossary("CSRF", "cross-site request forgery")}} (CSRF).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T220139Z">
        <seg>La motivación es que el elemento {{HTMLElement("form")}} de HTML 4.0 (que es anterior a {{DOMxRef("XMLHttpRequest")}} y {{DOMxRef("fetch")}} entre sitios puede enviar solicitudes a cualquier origen, por lo que cualquier persona que escriba un servidor ya debe estar protegido contra {{Glossary("CSRF", "falsificación de solicitud entre sitios")}} (CSRF).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The mutations are immediately accessible via [`Table.prototype.get()`](/en-US/docs/WebAssembly/JavaScript_interface/Table/get) in JavaScript, and to wasm modules.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233155Z" creationid="gitnacho" creationdate="20221006T233155Z">
        <seg>Se puede acceder inmediatamente a las mutaciones a través de [`Table.prototype.get()`](/es/docs/WebAssembly/JavaScript_interface/Table/get) en JavaScript y en los módulos `wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The net result of this is that the `callByIndex` function invokes the `$i`'th function in the table.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072840Z" creationid="gitnacho" creationdate="20221007T072840Z">
        <seg>El resultado neto de esto es que la función `callByIndex` invoca a la función `$i`'ésima en la tabla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The net result of this is that we call our exported WebAssembly function `exported_func`, which in turn calls our imported JavaScript function `imported_func`, which logs the value provided inside the WebAssembly instance (42) to the console.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T181418Z" creationid="gitnacho" creationdate="20221006T181418Z">
        <seg>El resultado neto de esto es que llamamos a nuestra función WebAssembly exportada `exported_func`, que a su vez llama a nuestra función JavaScript importada `imported_func`, que registra el valor proporcionado dentro de la instancia de WebAssembly (42) en la consola.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The new operations are:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074647Z" creationid="gitnacho" creationdate="20221007T074647Z">
        <seg>Las nuevas operaciones son:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The new process is:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041328Z" creationid="gitnacho" creationdate="20220921T041328Z">
        <seg>El nuevo proceso es:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The new version is installing in the background.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041846Z" creationid="gitnacho" creationdate="20220921T041846Z">
        <seg>La nueva versión se está instalando en segundo plano.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The newer [`WebAssembly.compileStreaming`](/en-US/docs/WebAssembly/JavaScript_interface/compileStreaming)/[`WebAssembly.instantiateStreaming`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming) methods are a lot more efficient — they perform their actions directly on the raw stream of bytes coming from the network, cutting out the need for the {{jsxref("ArrayBuffer")}} step.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221004T071642Z">
        <seg>Los nuevos métodos [`WebAssembly.compileStreaming`](/es/docs/WebAssembly/JavaScript_interface/compileStreaming)/[`WebAssembly.instantiateStreaming`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming) son mucho más eficiente: realizan sus acciones directamente en el flujo sin procesar de bytes que provienen de la red, eliminando la necesidad del paso {{jsxref("ArrayBuffer")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The next part looks like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062507Z" creationid="gitnacho" creationdate="20221004T062507Z">
        <seg>La siguiente parte se ve así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The number types are:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054428Z" creationid="gitnacho" creationdate="20221007T054428Z">
        <seg>Los tipos de números son:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The object looks like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T055854Z" creationid="gitnacho" creationdate="20221005T055854Z">
        <seg>El objeto se ve así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The older [`WebAssembly.compile`](/en-US/docs/WebAssembly/JavaScript_interface/compile)/[`WebAssembly.instantiate`](/en-US/docs/WebAssembly/JavaScript_interface/instantiate) methods require you to create an {{jsxref("ArrayBuffer")}} containing your WebAssembly module binary after fetching the raw bytes, and then compile/instantiate it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221004T071351Z">
        <seg>Los métodos más antiguos [`WebAssembly.compile`](/es/docs/WebAssembly/JavaScript_interface/compile)/[`WebAssembly.instantiate`](/es/docs/WebAssembly/JavaScript_interface/instantiate) requieren que crees un {{jsxref("ArrayBuffer")}} que contiene el binario de tu módulo WebAssembly después de obtener los bytes sin procesar y luego compilarlo/crearlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The only trouble we have now is that if the request doesn't match anything in the cache, and the network is not available, our request will still fail.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040436Z" creationid="gitnacho" creationdate="20220921T040436Z">
        <seg>El único problema que tenemos ahora es que si la solicitud no coincide con nada en caché y la red no está disponible, nuestra solicitud seguirá fallando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The only way to determine what specifically went wrong is to look at the browser's console for details.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T214023Z" creationid="gitnacho" creationdate="20221011T214023Z">
        <seg>La única forma de determinar qué salió mal específicamente es mirar la consola del navegador para obtener más detalles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The open Web presents incredible opportunities for developers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T092814Z" creationid="gitnacho" creationdate="20221002T092814Z">
        <seg>La Web abierta presenta increíbles oportunidades para los desarrolladores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The opening code fence may be followed by some text that is called the "info string".</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174511Z" creationid="gitnacho" creationdate="20221008T174511Z">
        <seg>La cerca de apertura de código puede ir seguida de un texto que se denomina "cadena de información".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The options we've passed are slightly different this time:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T110807Z" creationid="gitnacho" creationdate="20221003T110807Z">
        <seg>Las opciones que hemos pasado son ligeramente diferentes esta vez:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The options we've passed in with the command are as follows:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105616Z" creationid="gitnacho" creationdate="20221003T105616Z">
        <seg>Las opciones que hemos pasado con el comando son las siguientes:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The origin is a URL indicating the server from which the request is initiated.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060551Z" creationid="gitnacho" creationdate="20221012T060551Z">
        <seg>El origen es una URL que indica el servidor desde el que se inicia la solicitud.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The original response is returned to the browser to be given to the page that called it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040258Z" creationid="gitnacho" creationdate="20220921T040258Z">
        <seg>La respuesta original se devuelve al navegador para que se proporcione a la página que la llamó.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The output of the macro would look like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065115Z" creationid="gitnacho" creationdate="20221005T065115Z">
        <seg>La salida de la macro se vería así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The path to your service worker file is not written correctly — it needs to be written relative to the origin, not your app's root directory.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T025641Z" creationid="gitnacho" creationdate="20220921T025641Z">
        <seg>La ruta a tu archivo del *service worker* no está escrita correctamente — se debe escribir en relación con el origen, no con el directorio raíz de tu aplicación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The point where this event fires is generally a good time to clean up old caches and other things associated with the previous version of your service worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T001316Z" creationid="gitnacho" creationdate="20221002T144857Z">
        <seg>El punto en el que se activa este evento suele ser un buen momento para limpiar cachés antiguas y otras cosas asociadas con la versión anterior de tu *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The pointer returned by `malloc()` is the address of the first memory cell of that buffer.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054315Z" creationid="gitnacho" creationdate="20221004T054315Z">
        <seg>El puntero devuelto por `malloc()` es la dirección de la primera celda de memoria de ese búfer.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The policy is always enforced regardless of any setup on the server and the client as described in this chapter.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230005Z" creationid="gitnacho" creationdate="20221011T230005Z">
        <seg>La política siempre se aplica independientemente de cualquier configuración en el servidor y el cliente como se describe en este capítulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The preferred way to get an `Instance` is asynchronously, for example using the [`WebAssembly.instantiateStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming) function like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T223636Z" creationid="gitnacho" creationdate="20221005T223636Z">
        <seg>La forma preferida de obtener una `Instance` es de forma asincrónica, por ejemplo, usando la función [`WebAssembly.instantiateStreaming()`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming) como esta:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The preload manager sends the {{HTTPHeader("Service-Worker-Navigation-Preload")}} HTTP header with preload requests, allowing responses to be customized for preload requests.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T205945Z" creationid="gitnacho" creationdate="20220922T205945Z">
        <seg>El administrador de precarga envía el encabezado HTTP {{HTTPHeader("Service-Worker-Navigation-Preload")}} con las solicitudes de precarga, lo que permite personalizar las respuestas para las solicitudes de precarga.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The previous attempt, _AppCache_, seemed to be a good idea because it allowed you to specify assets to cache really easily.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T051909Z" creationid="gitnacho" creationdate="20220921T015617Z">
        <seg>El intento anterior, _AppCache_ parecía ser una buena idea porque te permitía especificar activos para almacenar en caché con mucha facilidad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The previous length of the table.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T233338Z" creationid="gitnacho" creationdate="20221019T233338Z">
        <seg>La longitud anterior de la tabla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The previous section gives an overview of these in action.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053720Z" creationid="gitnacho" creationdate="20221012T053720Z">
        <seg>La sección anterior ofrece una descripción general de estos en acción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The previous size of the memory, in units of WebAssembly pages.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T214507Z" creationid="gitnacho" creationdate="20221019T214507Z">
        <seg>El tamaño anterior de la memoria, en unidades de páginas WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The primary goal of secure contexts is to prevent [MITM attackers](https://en.wikipedia.org/wiki/Man-in-the-middle_attack) from accessing powerful APIs that could further compromise the victim of an attack.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T203701Z" creationid="gitnacho" creationdate="20221018T203701Z">
        <seg>El objetivo principal de los contextos seguros es evitar que [los atacantes MITM](https://es.wikipedia.org/wiki/Man-in-the-middle_attack) accedan a potentes APIs que podrían comprometer aún más a la víctima de un ataque.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The primary use of `onactivate` is for cleanup of resources used in previous versions of a Service worker script.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T213847Z" creationid="gitnacho" creationdate="20220921T023043Z">
        <seg>El uso principal de `onactivate` es para la limpieza de los recursos utilizados en versiones anteriores de un script del *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The primary uses for the `WebAssembly` object are:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221009T003510Z" creationid="gitnacho" creationdate="20221009T003510Z">
        <seg>Los principales usos del objeto `WebAssembly` son:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The problem is that the only types we have to give operands in WebAssembly are (currently) `i32`/`i64`/`f32`/`f64`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T065213Z" creationid="gitnacho" creationdate="20221007T065213Z">
        <seg>El problema es que los únicos tipos que tenemos para dar operandos en WebAssembly (actualmente) son `i32`/`i64`/`f32`/`f64`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The process for using an exported tag is very similar to that shown in the previous section.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T143138Z" creationid="gitnacho" creationdate="20221019T143138Z">
        <seg>El proceso para usar una etiqueta exportada es muy similar al que se muestra en la sección anterior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The processing of the script contents is deferred.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T132500Z" creationid="gitnacho" creationdate="20221003T132500Z">
        <seg>Se difiere el procesamiento del contenido del script.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The promises architecture is ideal for this.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T135438Z" creationid="gitnacho" creationdate="20221002T135438Z">
        <seg>La arquitectura de las promesas es ideal para esto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The pseudocode would look something like `tbl[i]()`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072934Z" creationid="gitnacho" creationdate="20221007T072934Z">
        <seg>El pseudocódigo se parecería a `tbl[i]()`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The quickest, most efficient way to fetch a wasm module is using the newer [`WebAssembly.instantiateStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming) method, which can take a `fetch()` call as its first argument, and will handle fetching, compiling, and instantiating the module in one step, accessing the raw byte code as it streams from the server:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221005T055510Z">
        <seg>La forma más rápida y eficiente de obtener un módulo `wasm` es usar el método más nuevo [`WebAssembly.instantiateStreaming()`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming), que puede tomar una llamada `fetch()` como su primer argumento, y se encargará de obtener, compilar e instanciar el módulo en un solo paso, accediendo al código de bytes sin formato a medida que se transmite desde el servidor:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The rationale for the syntax described here is that it works well enough with tools that expect CommonMark (for example, Prettier or GitHub previews) while being reasonably easy to write and to parse.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183913Z" creationid="gitnacho" creationdate="20221008T183913Z">
        <seg>La justificación de la sintaxis descrita aquí es que funciona lo suficientemente bien con herramientas que esperan CommonMark (por ejemplo, vistas previas de Prettier o GitHub) mientras que es razonablemente fácil de escribir y analizar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The read-only **`buffer`** prototype property of the [`WebAssembly.Memory`](/en-US/docs/WebAssembly/JavaScript_interface/Memory) object returns the buffer contained in the memory.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T213115Z" creationid="gitnacho" creationdate="20221019T213115Z">
        <seg>La propiedad prototipo **`buffer`** de solo lectura del objeto [`WebAssembly.Memory`](/es/docs/WebAssembly/JavaScript_interface/Memory) devuelve el búfer contenido en la memoria.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The read-only **`length`** prototype property of the
[`WebAssembly.Table`](/en-US/docs/WebAssembly/JavaScript_interface/Table) object returns the length of the table, i.e. the number
of elements in the table.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T110148Z" creationid="gitnacho" creationdate="20221006T105927Z">
        <seg>La propiedad de solo lectura **`length`** del
objeto `prototype` [`WebAssembly.Table`](/es/docs/WebAssembly/JavaScript_interface/Table) devuelve la longitud de la tabla, es decir, el número
de elementos en la tabla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The read-only **`stack`** property of an object instance of type [`WebAssembly.Exception`](/en-US/docs/WebAssembly/JavaScript_interface/Exception) _may_ contain a stack trace.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T203421Z" creationid="gitnacho" creationdate="20221019T203421Z">
        <seg>La propiedad **`stack`** de solo lectura de una instancia del objeto de tipo [`WebAssembly.Exception`](/es/WebAssembly/JavaScript_interface/Exception) _puede_ contener un seguimiento de la pila — `stack`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The registered service worker file needs to</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T105834Z" creationid="gitnacho" creationdate="20221008T105834Z">
        <seg>El archivo del *service worker* registrado debe</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The request header of note is {{HTTPHeader("Origin")}}, which shows that the invocation is coming from `https://foo.example`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222051Z" creationid="gitnacho" creationdate="20221011T222051Z">
        <seg>El encabezado de solicitud de la nota es {{HTTPHeader("Origin")}}, lo que muestra que la invocación proviene de `https://foo.example`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The result is printed to the console:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T071537Z" creationid="gitnacho" creationdate="20221020T071537Z">
        <seg>El resultado se imprime en la consola:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The result of a preload fetch request is waited on using the promise returned by {{domxref("FetchEvent.preloadResponse")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220922T205108Z">
        <seg>Se espera el resultado de una solicitud de recuperación de precarga usando la promesa devuelta por {{DOMxRef("FetchEvent.preloadResponse")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The result of the encoding operation is an output buffer and its length.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054721Z" creationid="gitnacho" creationdate="20221004T054721Z">
        <seg>El resultado de la operación de codificación es un búfer de salida y su longitud.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The resulting module instance is then instantiated using
[`WebAssembly.instantiate()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiate), and the exported function invoked.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T185810Z" creationid="gitnacho" creationdate="20221007T185810Z">
        <seg>A continuación, se crea una instancia del módulo resultante utilizando
[`WebAssembly.instantiate()`](/es/docs/WebAssembly/JavaScript_interface/instantiate), y la función exportada invocada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The return value of a function is just the final value left on the stack.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055116Z" creationid="gitnacho" creationdate="20221007T055116Z">
        <seg>El valor de retorno de una función es solo el valor final que queda en la pila.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The returned `Promise` resolves to both a compiled</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193152Z" creationid="gitnacho" creationdate="20221007T193152Z">
        <seg>La `Promise` devuelta se resuelve tanto en un</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The same tag that was used to create the `Exception` is required to access the arguments of a thrown exception.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T022816Z" creationid="gitnacho" creationdate="20221008T022816Z">
        <seg>Se requiere la misma etiqueta que se usó para crear la "`Exception`" para acceder a los argumentos de una excepción lanzada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The same unique tag instance must be used to access the values of the exception (for example, when using [`Exception.prototype.getArg()`](/en-US/docs/WebAssembly/JavaScript_interface/Exception/getArg)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015051Z" creationid="gitnacho" creationdate="20221008T015051Z">
        <seg>Se debe usar la misma instancia de etiqueta única para acceder a los valores de la excepción (por ejemplo, cuando se usa [`Exception.prototype.getArg()`](/es/docs/WebAssembly/JavaScript_interface/Exception/getArg)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The script in this file will import the js glue code, initialize the wasm module, and call the `greet` function we wrote in rust.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064749Z" creationid="gitnacho" creationdate="20221004T064749Z">
        <seg>El script en este archivo importará el código "pegamento" js, inicializará el módulo `wasm` y llamará a la función `greet` que escribimos en Rust.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The script should be served with the `text/javascript` MIME type, but browsers are lenient and only block them if the script is served with an image type (`image/*`); a video type (`video/*`); an audio (`audio/*`) type; or `text/csv`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T133837Z" creationid="gitnacho" creationdate="20221003T133837Z">
        <seg>El script se debe servir con el tipo MIME `text/javascript`, pero los navegadores son indulgentes y solo los bloquean si el script se sirve con un tipo de imagen (`image/*`); un tipo de video (`video/*`); un tipo de audio (`audio/*`); o `texto/csv`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The second way to get a WebAssembly.Memory object is to have it exported by a WebAssembly module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000848Z" creationid="gitnacho" creationdate="20221008T000848Z">
        <seg>La segunda forma de obtener un objeto `WebAssembly.Memory` es exportarlo mediante un módulo WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The server also sends `Access-Control-Allow-Headers` with a value of "`X-PINGOTHER, Content-Type`", confirming that these are permitted headers to be used with the actual request.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T223124Z" creationid="gitnacho" creationdate="20221011T223124Z">
        <seg>El servidor también envía `Access-Control-Allow-Headers` con un valor de "`X-PINGOTHER, Content-Type`", lo cual confirma que estos son encabezados permitidos para usarse con la solicitud real.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The server can determine which resources to send, based on the information that the client chooses to provide.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T084835Z" creationid="gitnacho" creationdate="20221012T084835Z">
        <seg>El servidor puede determinar qué recursos enviar, en función de la información que el cliente elija proporcionar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The server can then determine which resources to send, based on the information that the client chooses to provide.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T063746Z" creationid="gitnacho" creationdate="20221012T063746Z">
        <seg>Luego, el servidor puede determinar qué recursos enviar, según la información que el cliente elija proporcionar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The server must generate a unique nonce value each time it transmits a policy.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T125315Z" creationid="gitnacho" creationdate="20221003T125152Z">
        <seg>El servidor debe generar un valor *nonce* único cada vez que transmite una política.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The server responds with `Access-Control-Allow-Origin: https://foo.example`, restricting access to the requesting origin domain only.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T223024Z" creationid="gitnacho" creationdate="20221011T223024Z">
        <seg>El servidor responde con `Access-Control-Allow-Origin: https://foo.example`, restringiendo el acceso solo al dominio de origen solicitante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The service worker URL is fetched and registered via {{domxref("serviceWorkerContainer.register()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T022624Z">
        <seg>La URL del *service worker* se obtiene y registra a través de {{DOMxRef("serviceWorkerContainer.register()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The service worker is immediately downloaded when a user first accesses a service worker–controlled site/page.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T141303Z" creationid="gitnacho" creationdate="20221002T141303Z">
        <seg>El *service worker* se descarga inmediatamente cuando un usuario accede por primera vez a un sitio/página controlada por el *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The service worker is now ready to process events.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T213847Z" creationid="gitnacho" creationdate="20220921T022729Z">
        <seg>El *service worker* ahora está listo para procesar eventos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The service-worker.js file</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213341Z" creationid="gitnacho" creationdate="20221003T213341Z">
        <seg>El archivo service-worker.js</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The set of "hint" headers are listed in the topic [HTTP Headers](/en-US/docs/Web/HTTP/Headers#client_hints) and [summarized below](#hint_types).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T085223Z" creationid="gitnacho" creationdate="20221012T085223Z">
        <seg>El conjunto de encabezados de "sugerencia" se enumeran en el tema [Encabezados HTTP](/es/docs/Web/HTTP/Headers#sugerencias_del_cliente) y [resumidos a continuación](#hint_types).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The signature is a sequence of parameter type declarations followed by a list of return type declarations.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054304Z" creationid="gitnacho" creationdate="20221007T054304Z">
        <seg>La firma es una secuencia de declaraciones de tipo de parámetro seguidas de una lista de declaraciones de tipo de devolución.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The snippet below shows how we might pass it to a module **example.wasm** during instantiation, using an "import object".</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015456Z" creationid="gitnacho" creationdate="20221008T015456Z">
        <seg>El fragmento a continuación muestra cómo podríamos pasarlo a un módulo **`example.wasm`** durante la creación de instancias, usando un "objeto `import`".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The solution was to store function references in a table and pass around table indices instead, which are just i32 values.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T065319Z" creationid="gitnacho" creationdate="20221007T065319Z">
        <seg>La solución fue almacenar referencias de funciones en una tabla y pasar los índices de la tabla, que son solo valores `i32`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The source for the WebP codec is written in C and [available on GitHub](https://github.com/webmproject/libwebp) as well as some extensive [API documentation](https://developers.google.com/speed/webp/docs/api).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053336Z" creationid="gitnacho" creationdate="20221004T053336Z">
        <seg>El código fuente del códec WebP está escrito en C y [disponible en GitHub](https://github.com/webmproject/libwebp), así como una amplia [documentación de la API](https://developers.google.com/speed/webp/docs/api).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The stack contains exactly one `i32` value — the result of the expression (`$p + $p`), which is handled by `i32.add`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055108Z" creationid="gitnacho" creationdate="20221007T055108Z">
        <seg>La pila contiene exactamente un valor `i32`: el resultado de la expresión (`$p + $p`), que maneja `i32.add`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The stack is then logged from the `catch` statement.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204227Z" creationid="gitnacho" creationdate="20221019T204227Z">
        <seg>Luego, la pila se registra desde la instrucción `catch`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The stack trace string lists the locations of each operation on the stack in WebAssembly format.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T203647Z" creationid="gitnacho" creationdate="20221019T203647Z">
        <seg>La cadena de seguimiento de la pila enumera las ubicaciones de cada operación en la pila en formato WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The static `Promise.resolve` function returns a `Promise` that is
resolved.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073652Z" creationid="gitnacho" creationdate="20221002T073652Z">
        <seg>La función estática `Promise.resolve` devuelve una `Promise` que es
resuelta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The structured clone algorithm accepts `SharedArrayBuffer` objects and typed arrays mapped onto `SharedArrayBuffer` objects.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T023244Z" creationid="gitnacho" creationdate="20220922T233051Z">
        <seg>El algoritmo de clonación estructurada acepta objetos `SharedArrayBuffer` y arreglos tipificados asignados a objetos `SharedArrayBuffer`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The subjects covered are:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223458Z" creationid="gitnacho" creationdate="20221018T223458Z">
        <seg>Los temas tratados son:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The table2.wasm module contains two functions (one that returns 42 and another that returns 83) and stores both into elements 0 and 1 of the imported table (see [text representation](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.wat)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T100451Z" creationid="gitnacho" creationdate="20221006T095650Z">
        <seg>El módulo `table2.wasm` contiene dos funciones (una que devuelve 42 y otra que devuelve 83) y almacena ambas en los elementos 0 y 1 de la tabla importada (ve la [representación de texto](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.wat)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The tag expects the tag to be passed using module `extmod` and tag `exttag`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023249Z" creationid="gitnacho" creationdate="20221008T023249Z">
        <seg>La etiqueta espera que se pase usando el módulo `extmod` y la etiqueta `exttag`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The tag uniquely defines the _type_ of an exception, including the order of its arguments and their data types.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T022802Z" creationid="gitnacho" creationdate="20221008T022802Z">
        <seg>La etiqueta define de forma única el _tipo_ de una excepción, incluido el orden de sus argumentos y sus tipos de datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The templates should be placed directly underneath the main page title (or breadcrumb navigation if available) in the reference page.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T115303Z" creationid="gitnacho" creationdate="20221005T115303Z">
        <seg>Las plantillas se deben colocar directamente debajo del título de la página principal (o navegación de migas de pan, si está disponible) en la página de referencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The term's name (such as "HTML"): `\{{Glossary("HTML")}}` yields {{Glossary("HTML")}}
2.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T104813Z" creationid="gitnacho" creationdate="20221005T104813Z">
        <seg>El nombre del término (como "HTML"): `\{{Glossary("HTML")}}` produce {{Glossary("HTML")}}
2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The third line is a function signature, written in Rust.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062607Z" creationid="gitnacho" creationdate="20221004T062607Z">
        <seg>La tercera línea es una firma de función, escrita en Rust.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The threads proposal has two parts, shared memories and atomic memory accesses.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080459Z" creationid="gitnacho" creationdate="20221007T080459Z">
        <seg>La propuesta de subprocesos tiene dos partes, memorias compartidas y acceso atómico a memoria.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The time values for this timeline are calculated as a fixed offset from the global clock such that the **zero time** corresponds to the {{domxref("PerformanceTiming.navigationStart", "navigationStart")}} moment plus a signed delta known as the **origin time.** Prior to establishing the `navigationStart` moment, the document timeline is **inactive**.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221006T092735Z">
        <seg>Los valores de tiempo para esta línea de tiempo se calculan como un desplazamiento fijo del reloj global, de modo que el **tiempo cero** corresponde al momento {{DOMxRef("PerformanceTiming.navigationStart", "navigationStart")}} más un delta con signo conocido como la **hora origen**. Antes de establecer el momento `navigationStart`, la línea de tiempo del documento está **inactiva**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The top and bottom margins have no effect on replaced inline elements, such as
\{{HTMLElement("span")}} or \{{HTMLElement("code")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191919Z" creationid="gitnacho" creationdate="20221008T191919Z">
        <seg>Los márgenes superior e inferior no tienen efecto en los elementos en línea reemplazados, como
\{{HTMLElement("span")}} o \{{HTMLElement("code")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The typical [MSS](https://en.wikipedia.org/wiki/Maximum_segment_size) (Maximum Segment Size), is big enough to contain several simple requests, although the demand in size of HTTP requests continues to grow.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T225142Z" creationid="gitnacho" creationdate="20221011T225142Z">
        <seg>El típico [MSS](https://en.wikipedia.org/wiki/Maximum_segment_size) (Tamaño máximo del segmento) es lo suficientemente grande como para contener varias solicitudes simples, aunque la demanda de tamaño de las solicitudes HTTP continúa creciendo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The unit of `initial` and `maximum` is WebAssembly pages — these are fixed to 64KB in size.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T210150Z" creationid="gitnacho" creationdate="20221006T210150Z">
        <seg>La unidad de `initial` y `maximum` son las páginas de WebAssembly; estas tienen un tamaño fijo de 64 KB.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The user agent appends the requested client hint headers, or at least the subset that it wants to share with that server, to all subsequent requests in the current browsing session.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092004Z" creationid="gitnacho" creationdate="20221012T092004Z">
        <seg>El agente de usuario agrega los encabezados de sugerencia de cliente solicitados, o al menos el subconjunto que desea compartir con ese servidor, a todas las solicitudes posteriores en la sesión de navegación actual.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The user initiates a drag by placing a pointer device (such as a mouse) on the touch surface and then dragging the pointer to a new location (such as another DOM element).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220902T054357Z" creationid="gitnacho" creationdate="20220902T054357Z">
        <seg>El usuario inicia un arrastre colocando un dispositivo de puntero (como un mouse) en la superficie táctil y luego arrastrando el puntero a una nueva ubicación (como otro elemento DOM).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The value finishes at the next CRLF or at the end of the message.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T211519Z" creationid="gitnacho" creationdate="20221017T211519Z">
        <seg>El valor finaliza en el CRLF siguiente o al final del mensaje.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The value of the argument at `index`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142533Z" creationid="gitnacho" creationdate="20221019T142533Z">
        <seg>El valor del argumento en `index`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The value of the global is then changed, first to `42` using the `Global.value` property, and then to 43 using the `incGlobal()` function exported out of the `global.wasm` module (this adds 1 to whatever value is given to it and then returns the new value).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233934Z" creationid="gitnacho" creationdate="20221006T233934Z">
        <seg>Luego se cambia el valor de global, primero a `42` usando la propiedad `Global.value`, y luego a 43 usando la función `incGlobal()` exportada fuera del módulo `global.wasm` (esto agrega 1 a cualquier valor que se le dé y luego devuelve el nuevo valor).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The value of this attribute will be in one of the following categories:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T130508Z" creationid="gitnacho" creationdate="20221003T130508Z">
        <seg>El valor de este atributo estará en una de las siguientes categorías:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The variable we're passing is `name`, the argument to the function, so if we call `greet("Steve")` we should see `"Hello, Steve!".`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063450Z" creationid="gitnacho" creationdate="20221004T063450Z">
        <seg>La variable que estamos pasando es `name`, el argumento de la función, por lo que si llamamos a `greet("Steve")` deberíamos ver `"¡Hola, Steve!".`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The virtual machine can then attach a stack trace to the exception object returned by the constructor.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T203539Z" creationid="gitnacho" creationdate="20221019T203539Z">
        <seg>Luego, la máquina virtual puede adjuntar un seguimiento de pila al objeto `exception` devuelto por el constructor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The web platform can be thought of as having two parts:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T005158Z" creationid="gitnacho" creationdate="20221003T005158Z">
        <seg>Se puede pensar en la plataforma web como si tuviera dos partes:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The width of the `&lt;iframe&gt;`, which can be expressed as a percentage or in pixels.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T212220Z" creationid="gitnacho" creationdate="20221005T212220Z">
        <seg>El ancho del `&lt;iframe&gt;`, que se puede expresar como un porcentaje o en píxeles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The worker function [`wasm_worker.js`](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/wasm_worker.js) defines an import object for the module to use.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T112149Z" creationid="gitnacho" creationdate="20221007T112149Z">
        <seg>La función `worker` de [`wasm_worker.js`](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/wasm_worker.js) define un objeto `import` para que lo use el módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The {{HTTPHeader("Access-Control-Allow-Credentials")}} header indicates whether or not the response to the request can be exposed when the `credentials` flag is true.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054152Z" creationid="gitnacho" creationdate="20221012T054152Z">
        <seg>El encabezado {{HTTPHeader("Access-Control-Allow-Credentials")}} indica si la respuesta a la solicitud se puede exponer o no cuando el indicador `credentials` es `true`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The {{HTTPHeader("Access-Control-Allow-Headers")}} header is used in response to a {{Glossary("preflight request")}} to indicate which HTTP headers can be used when making the actual request.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060329Z" creationid="gitnacho" creationdate="20221012T060329Z">
        <seg>El encabezado {{HTTPHeader("Access-Control-Allow-Headers")}} se usa en respuesta a un {{Glossary("preflight request")}} para indicar qué encabezados HTTP se pueden usar al realizar la solicitud real.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The {{HTTPHeader("Access-Control-Allow-Methods")}} header specifies the method or methods allowed when accessing the resource.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054356Z" creationid="gitnacho" creationdate="20221012T054356Z">
        <seg>El encabezado {{HTTPHeader("Access-Control-Allow-Methods")}} especifica el método o métodos permitidos al acceder al recurso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The {{HTTPHeader("Access-Control-Expose-Headers")}} header adds the specified headers to the allowlist that JavaScript (such as {{domxref("XMLHttpRequest.getResponseHeader()","getResponseHeader()")}}) in browsers is allowed to access.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221012T053955Z">
        <seg>El encabezado {{HTTPHeader("Access-Control-Expose-Headers")}} agrega los encabezados especificados a la lista de permitidos que JavaScript (como {{DOMxRef("XMLHttpRequest.getResponseHeader()","getResponseHeader()")}} ) en los navegadores se les permite acceder.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The {{HTTPHeader("Access-Control-Max-Age")}} header indicates how long the results of a preflight request can be cached.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054053Z" creationid="gitnacho" creationdate="20221012T054053Z">
        <seg>El encabezado {{HTTPHeader("Access-Control-Max-Age")}} indica cuánto tiempo se pueden almacenar en caché los resultados de una solicitud de preverificación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The {{HTTPHeader("Access-Control-Request-Headers")}} header is used when issuing a preflight request to let the server know what HTTP headers will be used when the actual request is made (such as with {{domxref("XMLHttpRequest.setRequestHeader()","setRequestHeader()")}}).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221012T060848Z">
        <seg>El encabezado {{HTTPHeader("Access-Control-Request-Headers")}} se usa cuando se emite una solicitud de preverificación para que el servidor sepa qué encabezados HTTP se usarán cuando se realice la solicitud real (como con {{DOMxRef( "XMLHttpRequest.setRequestHeader()","setRequestHeader()")}}).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The {{HTTPHeader("Access-Control-Request-Headers")}} header notifies the server that when the actual request is sent, it will do so with `X-PINGOTHER` and `Content-Type` custom headers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222935Z" creationid="gitnacho" creationdate="20221011T222935Z">
        <seg>El encabezado {{HTTPHeader("Access-Control-Request-Headers")}} notifica al servidor que cuando se envíe la solicitud real, lo hará con los encabezados personalizados `X-PINGOTHER` y `Content-Type`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The {{HTTPHeader("Access-Control-Request-Method")}} header notifies the server as part of a preflight request that when the actual request is sent, it will do so with a `POST` request method.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222918Z" creationid="gitnacho" creationdate="20221011T222918Z">
        <seg>El encabezado {{HTTPHeader("Access-Control-Request-Method")}} notifica al servidor como parte de una solicitud de preverificación que cuando se envíe la solicitud real, lo hará con un método de solicitud `POST`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The {{HTTPHeader("Access-Control-Request-Method")}} is used when issuing a preflight request to let the server know what HTTP method will be used when the actual request is made.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060650Z" creationid="gitnacho" creationdate="20221012T060650Z">
        <seg>El {{HTTPHeader("Access-Control-Request-Method")}} se usa cuando se emite una solicitud de preverificación para que el servidor sepa qué método HTTP se usará cuando se realice la solicitud real.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The {{HTTPHeader("Origin")}} header indicates the origin of the cross-origin access request or preflight request.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060541Z" creationid="gitnacho" creationdate="20221012T060541Z">
        <seg>El encabezado {{HTTPHeader("Origin")}} indica el origen de la solicitud de acceso de origen cruzado o solicitud de preverificación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The {{domxref("NavigationPreloadManager")}} provides a mechanism to allow fetching of the resources to run in parallel with service worker boot, so that by the time the worker is able to handle the fetch request from the browser, the resource may already have been fully or partially downloaded.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220922T205848Z">
        <seg>El {{DOMxRef("NavigationPreloadManager")}} proporciona un mecanismo para permitir que la recuperación de los recursos se ejecute en paralelo con el inicio del *service worker*, de modo que cuando el *worker* pueda manejar la solicitud de recuperación desde el navegador, el recurso posiblemente ya se ha descargado total o parcialmente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The {{domxref("Response.Response","Response()")}} constructor allows you to create a custom response.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T035441Z">
        <seg>El constructor {{DOMxRef("Response.Response","Response()")}} te permite crear una respuesta personalizada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>The {{domxref("Worker")}} `postMessage()` method delegates to the {{domxref("MessagePort")}} {{domxref("MessagePort.postMessage", "postMessage()")}} method, which adds a task on the event loop corresponding to the receiving {{domxref("MessagePort")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221007T115428Z">
        <seg>El método {{DOMxRef("Worker")}} `postMessage()` delega al método {{DOMxRef("MessagePort")}} {{DOMxRef("MessagePort.postMessage", "postMessage()")}}, que agrega una tarea en el bucle de eventos correspondiente al {{DOMxRef("MessagePort")}} recibido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Then add subsections with following H4 headings (`####`), in the order listed:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211046Z" creationid="gitnacho" creationdate="20221005T211025Z">
        <seg>Luego agrega subsecciones con los siguientes encabezados H4 (`####`), en el orden indicado:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Then use {{domxref("FetchEvent.preloadResponse", "event.preloadResponse")}} to wait for the preloaded resource to finish downloading in the `fetch` event handler.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T041301Z">
        <seg>Luego usa {{DOMxRef("FetchEvent.preloadResponse", "event.preloadResponse")}} para esperar a que el recurso precargado se termine de descargar en el controlador de eventos `fetch`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Then we call a function that calls `addAll()` on the created cache, which for its parameter takes an array of origin-relative URLs to all the resources you want to cache.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034553Z" creationid="gitnacho" creationdate="20220921T034553Z">
        <seg>Luego llamamos a una función que llama a `addAll()` en el caché creado, que para su parámetro toma un arreglo de URLs relativas al origen de todos los recursos que deseas almacenar en caché.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211103T072527Z" creationid="gitnacho" creationdate="20211103T072527Z">
        <seg>Allí</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are a few important limitations to note about the interactive examples:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205850Z" creationid="gitnacho" creationdate="20221005T205850Z">
        <seg>Hay algunas limitaciones importantes a tener en cuenta sobre los ejemplos interactivos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are a lot more things that can be put inside function bodies, but we will start off simple for now, and you'll see a lot more examples as you go along.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055331Z" creationid="gitnacho" creationdate="20221007T055331Z">
        <seg>Hay muchas más cosas que se pueden colocar dentro de los cuerpos de las funciones, pero por ahora comenzaremos de manera simple y verás muchos más ejemplos a medida que avanzas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are a number of online WASM assembler choices, such as:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T080903Z" creationid="gitnacho" creationdate="20221003T080903Z">
        <seg>Hay varias opciones para un ensamblador WASM en línea, como pueden ser:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are a number of options available when compiling with Emscripten, but the main two scenarios we'll cover are:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105306Z" creationid="gitnacho" creationdate="20221003T105306Z">
        <seg>Hay una serie de opciones disponibles al compilar con Emscripten, pero los dos principales escenarios que cubriremos son:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are a set of built-in APIs that are automatically loaded and made available to every template by the environment script, as well as providing some features from the ancient legacy DekiScript system that MDN relied on many years ago.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072906Z" creationid="gitnacho" creationdate="20221005T072906Z">
        <seg>Hay un conjunto de APIs integradas que se cargan automáticamente y están disponibles para cada plantilla mediante el script del entorno, además de proporcionar algunas funciones del antiguo sistema DekiScript heredado en el que se basó MDN hace muchos años.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are four types of code examples available on MDN:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T085400Z" creationid="gitnacho" creationdate="20221005T203940Z">
        <seg>Hay cuatro tipos de código de ejemplo disponibles en MDN:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are loads of (S)FTP programs available including [Cyberduck](https://cyberduck.io/), [Fetch](https://fetchsoftworks.com/) and [FileZilla](https://filezilla-project.org/).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T055134Z" creationid="gitnacho" creationdate="20221012T165158Z">
        <seg>Hay un montón de programas (S)FTP disponibles, incluidos [Cyberduck](https://cyberduck.io/), [Fetch](https://fetchsoftworks.com/) y [FileZilla](https://filezilla-project.org/).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are macros for locale-independent linking to pages in specific reference areas of MDN: JavaScript, CSS, HTML elements, SVG etc.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T104932Z" creationid="gitnacho" creationdate="20221005T104932Z">
        <seg>Hay macros para enlaces independientes de la configuración regional a páginas en áreas de referencia específicas de MDN: JavaScript, CSS, elementos HTML, SVG, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are many different tasks you can help with, from the simple (proof-reading and correcting typos) to the complex (writing API documentation).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T200437Z" creationid="gitnacho" creationdate="20221008T200437Z">
        <seg>Hay muchas tareas diferentes con las que puedes ayudar, desde las más simples (revisión y corrección de errores tipográficos) hasta las más complejas (escribir documentación de la API).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are many types of events, some of which use other interfaces based on the main `Event` interface.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T201713Z" creationid="gitnacho" creationdate="20221011T201713Z">
        <seg>Hay muchos tipos de eventos, algunos de los cuales usan otras interfaces basadas en la interfaz principal de `Event`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are no assessments in this part of the course.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224028Z" creationid="gitnacho" creationdate="20221018T224028Z">
        <seg>No hay evaluaciones en esta parte del curso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are no specific assessment articles in this set of modules.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T225317Z" creationid="gitnacho" creationdate="20221018T225317Z">
        <seg>No hay artículos de evaluación específicos en este conjunto de módulos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are several key concepts needed to understand how WebAssembly runs in the browser.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T101148Z" creationid="gitnacho" creationdate="20221003T010749Z">
        <seg>Hay varios conceptos clave que son necesarios para entender cómo se ejecuta WebAssembly en un navegador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are templates for almost every large collection of pages.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113741Z" creationid="gitnacho" creationdate="20221005T113741Z">
        <seg>Hay plantillas para casi todas las grandes colecciones de páginas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are three main circumstances in which authors should use HTML tables rather than GFM syntax: when the table uses features that are not supported in GFM, when the GFM table would be too wide to be readable, and when the writer wants a special type of table called a "properties table".</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184821Z" creationid="gitnacho" creationdate="20221008T184821Z">
        <seg>Hay tres circunstancias principales en las que los autores deben usar tablas HTML en lugar de sintaxis GFM: cuando la tabla usa características que no son compatibles con GFM, cuando la tabla GFM sería demasiado ancha para ser legible y cuando el escritor desea un tipo especial de tabla llamada "tabla de propiedades".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are three types of these: notes, warnings, and callouts.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181134Z" creationid="gitnacho" creationdate="20221008T181134Z">
        <seg>Hay tres tipos de estos: notas, advertencias y llamadas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are two main use cases for Rust and WebAssembly:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061012Z" creationid="gitnacho" creationdate="20221004T061012Z">
        <seg>Hay dos casos de uso principales para Rust y WebAssembly:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are two ways to determine the approximate amount of RAM a device has: use the Device Memory JavaScript API or accept Client Hints.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T104600Z" creationid="gitnacho" creationdate="20221012T095216Z">
        <seg>Hay dos formas de determinar la cantidad aproximada de RAM que tiene un dispositivo: usar la API *Device Memory* de JavaScript o aceptar las sugerencias del cliente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are two ways to do this.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180525T235516Z" creationid="nacho" creationdate="20180525T235516Z">
        <seg>Hay dos maneras de hacer esto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are two ways to get a `WebAssembly.Memory` object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000449Z" creationid="gitnacho" creationdate="20221008T000449Z">
        <seg>Hay dos formas de obtener un objeto `WebAssembly.Memory`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There are two ways to get a `WebAssembly.Memory` object: construct it from JavaScript, or have it exported by a WebAssembly module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T220150Z" creationid="gitnacho" creationdate="20221019T220150Z">
        <seg>Hay dos formas de obtener un objeto `WebAssembly.Memory`: construirlo desde JavaScript o exportarlo mediante un módulo WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There have been various attempts to create technologies to solve this problem, and some of the issues have been solved.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T015542Z" creationid="gitnacho" creationdate="20220921T015542Z">
        <seg>Ha habido varios intentos de crear tecnologías para resolver este problema, y ​​algunos de los problemas se han resuelto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There is a small set of [low entropy client hint headers](#low_entropy_hints) that may be sent by a client event if not requested.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T091642Z" creationid="gitnacho" creationdate="20221012T091642Z">
        <seg>Hay un pequeño conjunto de [encabezados de sugerencia de cliente de baja entropía](#sugerencias_de_baja_entropía) que puede enviar un evento de cliente si no se solicita.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There is also an {{domxref("ServiceWorkerGlobalScope/activate_event", "activate")}} event.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20221002T144834Z">
        <seg>También hay un evento {{DOMxRef("ServiceWorkerGlobalScope/activate_event", "activate")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There is another issue here — using numeric indices to refer to items can be confusing and annoying, so the text format allows you to name parameters, locals, and most other items by including a name prefixed by a dollar symbol (`$`) just before the type declaration.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054719Z" creationid="gitnacho" creationdate="20221007T054719Z">
        <seg>Aquí hay otro problema: el uso de índices numéricos para referirse a elementos puede ser confuso y molesto, por lo que el formato de texto te permite nombrar parámetros, locales y la mayoría de los demás elementos al incluir un nombre precedido por un símbolo de dólar (`$`) simplemente antes de la declaración de tipo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There is currently no way to tell the difference between an empty file and a nonexistent one.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082853Z" creationid="gitnacho" creationdate="20221005T082853Z">
        <seg>Actualmente no hay forma de saber la diferencia entre un archivo vacío y uno inexistente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There is hope that this restriction can be removed in the future.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T030726Z" creationid="gitnacho" creationdate="20220923T030726Z">
        <seg>Existe la esperanza de que esta restricción se pueda eliminar en el futuro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There must be one matching property for each declared import of `module` or</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193924Z" creationid="gitnacho" creationdate="20221007T193924Z">
        <seg>Debe haber una propiedad coincidente para cada `import` declarado de `module` o</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There must be one matching property for each declared import of the compiled module or</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T101931Z" creationid="gitnacho" creationdate="20221006T101931Z">
        <seg>Debe haber una propiedad coincidente para cada importación declarada del módulo compilado o</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>There's lots of exciting work going on in this space; if you'd like to help make it even better, check out [the Rust WebAssembly Working Group](https://fitzgeraldnick.com/2018/02/27/wasm-domain-working-group.html).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T070240Z" creationid="gitnacho" creationdate="20221004T070211Z">
        <seg>Hay mucho trabajo emocionante en este espacio; si deseas ayudar a mejorarlo aún más, consulta el [Grupo de trabajo de Rust WebAssembly](https://fitzgeraldnick.com/2018/02/27/wasm-domain-working-group.html).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These are great resources for people who are trying to figure out where to start, but they lack some of the tooling and optimizations of Emscripten.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T080936Z" creationid="gitnacho" creationdate="20221003T080936Z">
        <seg>Estos son puntos adecuados donde se puede empezar a plantear desde dónde empezar, pero que pueden no tener algunas optimizaciones para Emscripten.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These are not same origin because they use different hostnames:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T151517Z" creationid="gitnacho" creationdate="20221017T151517Z">
        <seg>Estos no son del mismo origen porque usan diferentes nombres de host:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These are not same origin because they use different ports:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T151525Z" creationid="gitnacho" creationdate="20221017T151525Z">
        <seg>Estos no son del mismo origen porque usan diferentes puertos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These are not same origin because they use different schemes:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T151507Z" creationid="gitnacho" creationdate="20221017T151507Z">
        <seg>Estos no son del mismo origen porque usan diferentes esquemas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These are passed to the WebAssembly module in the `importObject` when it is instantiated.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204157Z" creationid="gitnacho" creationdate="20221019T204157Z">
        <seg>Estas se pasan al módulo WebAssembly en `importObject` cuando se crea una instancia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These are put on a page using Markdown "code fences", as described in [Example code blocks](/en-US/docs/MDN/Writing_guidelines/Howto/Markdown_in_MDN#example_code_blocks).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T102006Z" creationid="gitnacho" creationdate="20221005T205531Z">
        <seg>Estos se colocan en una página usando "cercas de código" Markdown, como se describe en [Bloques de código de ejemplo](/es/docs/MDN/Writing_guidelines/Howto/Markdown_in_MDN#bloques_de_código_de_ejemplo).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These are same origin because a server delivers HTTP content through port 80 by default:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T151500Z" creationid="gitnacho" creationdate="20221017T151500Z">
        <seg>Estos tienen el mismo origen porque un servidor entrega contenido HTTP a través del puerto 80 de forma predeterminada:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These are same origin because they have the same scheme (`http`) and hostname (`example.com`), and the different file path does not matter:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T152837Z" creationid="gitnacho" creationdate="20221017T151442Z">
        <seg>Estos tienen el mismo origen porque tienen el mismo esquema (`http`) y nombre de host (`ejemplo.com`), y la ruta de archivo diferente no importa:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These are the functions we are going to refer to in our table (for example's sake, each one just returns a constant value).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072140Z" creationid="gitnacho" creationdate="20221007T072140Z">
        <seg>Estas son las funciones a las que nos referiremos en nuestra tabla (por ejemplo, cada una devuelve un valor constante).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These are used to share common variables and methods between templates:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073103Z" creationid="gitnacho" creationdate="20221005T073103Z">
        <seg>Estos se utilizan para compartir variables y métodos comunes entre plantillas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These are:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T005103Z" creationid="gitnacho" creationdate="20211102T005103Z">
        <seg>Estos son:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These days, service workers are enabled by default in all modern browsers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T021935Z" creationid="gitnacho" creationdate="20220921T020503Z">
        <seg>En estos días, el *service worker* está habilitado de forma predeterminada en todos los navegadores modernos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These events are sent to the stream when these changes occur.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220913T035037Z" creationid="gitnacho" creationdate="20220913T035037Z">
        <seg>Estos eventos se envían a la secuencia cuando se producen estos cambios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These examples show how to import (an external) script using the `&lt;script&gt;` element.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T133954Z" creationid="gitnacho" creationdate="20221003T133954Z">
        <seg>Estos ejemplos muestran cómo importar un script (externo) usando el elemento `&lt;script&gt;`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These hints include: {{HTTPHeader("Save-Data")}}, {{HTTPHeader("Sec-CH-UA")}}, {{HTTPHeader("Sec-CH-UA-Mobile")}}, {{HTTPHeader("Sec-CH-UA-Platform")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T093852Z" creationid="gitnacho" creationdate="20221012T092219Z">
        <seg>Estas sugerencias incluyen: {{HTTPHeader("Save-Data")}}, {{HTTPHeader("Sec-CH-UA-UA")}}, {{HTTPHeader("Sec-CH-UA-Mobile")}}, {{HTTPHeader("Sec-CH-UA-Platform")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These instructions are allowed on non-shared memories as of Firefox 80.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T081042Z" creationid="gitnacho" creationdate="20221007T081042Z">
        <seg>Estas instrucciones están permitidas en memorias no compartidas a partir de Firefox 80.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These libraries are implemented in terms of Web APIs and thus each one requires some JavaScript glue code to connect WebAssembly to the underlying Web API.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T081546Z" creationid="gitnacho" creationdate="20221003T081546Z">
        <seg>Estas bibliotecas se implementan en términos de APIs web y, por lo tanto, cada una requiere un código de enlace JavaScript para conectar WebAssembly a la API web subyacente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These libraries often rely on C's standard library, an operating system, a file system and other things.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053234Z" creationid="gitnacho" creationdate="20221004T053234Z">
        <seg>Estas bibliotecas a menudo se basan en la biblioteca estándar de C, un sistema operativo, un sistema de archivos y otras cosas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These methods are easier than their non-streaming counterparts, because they can turn the byte code directly into `Module`/`Instance` instances, cutting out the need to separately put the {{domxref("Response")}} into an {{jsxref("ArrayBuffer")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221006T181210Z">
        <seg>Estos métodos son más fáciles que sus contrapartes que no son de transmisión, porque pueden convertir el código de bytes directamente en instancias de `Module`/`Instance`, eliminando la necesidad de colocar por separado el {{DOMxRef("Response")}} en un {{jsxref("ArrayBuffer")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These methods don't directly access the byte code, so require an extra step to turn the response into an {{jsxref("ArrayBuffer")}} before compiling/instantiating the wasm module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T181642Z" creationid="gitnacho" creationdate="20221006T181642Z">
        <seg>Estos métodos no acceden directamente al código de bytes, por lo que requieren un paso adicional para convertir la respuesta en {{jsxref("ArrayBuffer")}} antes de compilar/crear una instancia del módulo `wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These pages can't be represented in GFM anyway, because they have a header column.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191200Z" creationid="gitnacho" creationdate="20221008T191125Z">
        <seg>De todos modos, estas páginas no se pueden representar en GFM porque tienen una columna de encabezado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These tables have two columns: the first column is the header column and lists the properties, and the second column lists their values for this particular item.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T190848Z" creationid="gitnacho" creationdate="20221008T190848Z">
        <seg>Estas tablas tienen dos columnas: la primera columna es la columna de encabezado y enumera las propiedades, y la segunda columna enumera sus valores para este elemento en particular.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These templates can be invoked in document content by any MDN author, through the use of macros.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T064934Z" creationid="gitnacho" creationdate="20221005T064934Z">
        <seg>Estas plantillas pueden ser invocadas en el contenido del documento por cualquier autor de MDN, mediante el uso de macros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These templates have the same semantics as their inline counterparts described above.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T115245Z" creationid="gitnacho" creationdate="20221005T115245Z">
        <seg>Estas plantillas tienen la misma semántica que sus contrapartes en línea descritas anteriormente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These will be rendered as:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181028Z" creationid="gitnacho" creationdate="20221008T181028Z">
        <seg>Estos se renderizará como:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These work as follows:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073844Z" creationid="gitnacho" creationdate="20221007T073844Z">
        <seg>Estos funcionan de la siguiente manera:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>These work in a very similar way to Traditional live samples, but they are a lot simpler:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T212008Z" creationid="gitnacho" creationdate="20221005T212008Z">
        <seg>Estos funcionan de manera muy similar a las muestras en vivo tradicionales, pero son mucho más simples:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>They</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211004T091112Z" creationid="gitnacho" creationdate="20211004T091112Z">
        <seg>Ellos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>They also cover topics such as how you can help with tasks and issues, open discussions, and suggest content.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T203505Z" creationid="gitnacho" creationdate="20221008T200604Z">
        <seg>También cubren temas sobre cómo puedes ayudar con tareas y problemas, debates abiertos y sugerencias de contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>They are each read once.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040402Z" creationid="gitnacho" creationdate="20220921T040402Z">
        <seg>Cada uno se lee una vez.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>They are intended, among other things, to enable the creation of effective offline experiences, intercept network requests and take appropriate action based on whether the network is available, and update assets residing on the server.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T133740Z" creationid="gitnacho" creationdate="20221002T133740Z">
        <seg>Están destinados, entre otras cosas, a permitir la creación de experiencias fuera de línea —*offline*— efectivas, interceptando peticiones de red y realizando la acción apropiada si la conexión de red está disponible y hay disponible contenido actualizado en el servidor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>They are not appropriate if you want to show, for example, how to combine a particular HTML/CSS/JS structure.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205929Z" creationid="gitnacho" creationdate="20221005T205929Z">
        <seg>No son apropiados si deseas mostrar, por ejemplo, cómo combinar una estructura particular de HTML/CSS/JS.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>They can also be used to mark up a section on a page.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T115314Z" creationid="gitnacho" creationdate="20221005T115314Z">
        <seg>También se pueden usar para marcar una sección en una página.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>They can however be awkward to edit and get working.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204751Z" creationid="gitnacho" creationdate="20221005T204751Z">
        <seg>Sin embargo, puede ser incómodo editarlos y trabajar con ellos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>They have a better contribution workflow, but it does require you to know GitHub.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204837Z" creationid="gitnacho" creationdate="20221005T204837Z">
        <seg>Tienen un mejor flujo de trabajo de contribución, pero requiere que conozcas GitHub.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>They may be sent by default on every client request, irrespective of the server `Accept-CH` response header, depending on the permission policy.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092145Z" creationid="gitnacho" creationdate="20221012T092145Z">
        <seg>Se pueden enviar de forma predeterminada en cada solicitud del cliente, independientemente del encabezado de respuesta "Accept-CH" del servidor, según la política de permisos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>They may not even notice that it's written in Rust.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061221Z" creationid="gitnacho" creationdate="20221004T061221Z">
        <seg>Es posible que ni siquiera se den cuenta de que está escrito en Rust.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>They must specify the language of the code sample using the first word of the info string, and this will be used to provide syntax highlighting for the block.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174723Z" creationid="gitnacho" creationdate="20221008T174723Z">
        <seg>Deben especificar el lenguaje del código de ejemplo usando la primera palabra de la cadena de información, y esto se usará para proporcionar resaltado de sintaxis para el bloque.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>They outline the policies for the type of content we write and the type of content we don't write.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T200707Z" creationid="gitnacho" creationdate="20221008T200707Z">
        <seg>Describen las políticas para el tipo de contenido que escribimos y el tipo de contenido que no aceptamos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>They typically link back to the main page of the reference/guide/tutorial (this is often needed because our breadcrumbs sometimes can't do this) and put the article in the appropriate category.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T113759Z" creationid="gitnacho" creationdate="20221005T113759Z">
        <seg>Por lo general, se vinculan a la página principal de la referencia/guía/tutorial (esto a menudo es necesario porque nuestras migas de pan a veces no pueden hacer esto) y colocan el artículo en la categoría adecuada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>They will also allow access to push notifications and background sync APIs.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T133805Z" creationid="gitnacho" creationdate="20221002T133805Z">
        <seg>También permitirán el acceso a notificaciones tipo push y APIs de  sincronización en segundo plano.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210703T022809Z" creationid="Pacho" creationdate="20200603T223446Z">
        <seg>Esta</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This
is the most efficient, optimized way to load wasm code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T101456Z" creationid="gitnacho" creationdate="20221006T101456Z">
        <seg>Esta es la forma más eficiente y optimizada de cargar código `wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This API works in a similar way to the browser's standard cache, but it is specific to your domain.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034201Z" creationid="gitnacho" creationdate="20220921T034201Z">
        <seg>Esta API funciona de manera similar a la memoria caché estándar del navegador, pero es específica para tu dominio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This HTML will be rendered as a highlighted box, like:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181702Z" creationid="gitnacho" creationdate="20221008T181702Z">
        <seg>Este HTML se renderizará como un cuadro resaltado, como:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This HTML will be rendered as with a code block, like:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182341Z" creationid="gitnacho" creationdate="20221008T182341Z">
        <seg>Este HTML se renderizará como un bloque de código, como:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This [cross-origin sharing standard](https://fetch.spec.whatwg.org/#http-cors-protocol) can enable cross-origin HTTP requests for:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T213305Z" creationid="gitnacho" creationdate="20221011T213103Z">
        <seg>Este [estándar de usar el intercambio de recursos de origen cruzado](https://fetch.spec.whatwg.org/#http-cors-protocol) puede habilitar solicitudes HTTP de origen cruzado para:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This `Module` can be instantiated again or</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T105703Z" creationid="gitnacho" creationdate="20221006T102302Z">
        <seg>Este `Module` se puede instanciar de nuevo o</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This `Module` can be instantiated again,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193609Z" creationid="gitnacho" creationdate="20221007T193609Z">
        <seg>Este `Módulo` se puede instanciar de nuevo,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This accepts a single parameter, which is the data to send to the worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115304Z" creationid="gitnacho" creationdate="20221007T115304Z">
        <seg>Este acepta un único parámetro, que son los datos a enviar al *worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This allows a single web app to use multiple independent libraries — each of which are using WebAssembly internally — to have separate memories that are fully isolated from each other.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T182127Z" creationid="gitnacho" creationdate="20221006T182127Z">
        <seg>Esto permite que una sola aplicación web use varias bibliotecas independientes, cada una de las cuales usa WebAssembly internamente, para tener memorias separadas que están completamente aisladas entre sí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This allows dynamic linking of multiple modules.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T101101Z" creationid="gitnacho" creationdate="20221003T101101Z">
        <seg>Esto permite el enlace dinámico de varios módulos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This allows servers to differentiate between normal and preload fetch requests, and to send different responses in each case if required.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210751Z" creationid="gitnacho" creationdate="20220922T210751Z">
        <seg>Esto permite a los servidores diferenciar entre solicitudes de recuperación normales y precargadas, y enviar diferentes respuestas en cada caso si es necesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This allows the indirectly-callable set of functions to change over time, which is necessary for [dynamic linking techniques](https://github.com/WebAssembly/tool-conventions/blob/main/DynamicLinking.md).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233138Z" creationid="gitnacho" creationdate="20221006T233138Z">
        <seg>Esto permite que el conjunto de funciones a las que se puede llamar indirectamente cambie con el tiempo, lo cual es necesario para [técnicas de enlace dinámico](https://github.com/WebAssembly/tool-conventions/blob/main/DynamicLinking.md).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This allows very fast communication between Workers, and significant performance gains in web applications.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080425Z" creationid="gitnacho" creationdate="20221007T080425Z">
        <seg>Esto permite una comunicación muy rápida entre *workers* y mejoras significativas en el rendimiento de las aplicaciones web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This allows you to take advantage of WebAssembly's performance and power and JavaScript's expressiveness and flexibility in the same apps, even if you don't know how to write WebAssembly code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T094502Z" creationid="gitnacho" creationdate="20221003T094423Z">
        <seg>Esto te permite aprovechar el rendimiento y poder de WebAssembly y la expresividad y flexibilidad de JavaScript en las mismas aplicaciones, incluso si no sabes cómo escribir código WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This also allows you to express complex data structures in macro parameters that are hard or impossible to do with a simple list of parameters.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065440Z" creationid="gitnacho" creationdate="20221005T065440Z">
        <seg>Esto también te permite expresar estructuras de datos complejas en parámetros macro que son difíciles o imposibles de hacer con una simple lista de parámetros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This also demonstrates how the `exports` property is used to access exported functions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T223658Z" creationid="gitnacho" creationdate="20221005T223658Z">
        <seg>Esto también demuestra cómo se usa la propiedad `exports` para acceder a las funciones exportadas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This approach also has the advantage that if you are showing source code and live examples side by side, you only need to update the code once to update both.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204724Z" creationid="gitnacho" creationdate="20221005T204724Z">
        <seg>Este enfoque también tiene la ventaja de que si muestras el código fuente y los ejemplos en vivo uno al lado del otro, solo necesitas actualizar el código una vez para actualizar ambos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This approach is efficient in that the server only requests the information that it is able to usefully handle.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T091549Z" creationid="gitnacho" creationdate="20221012T091549Z">
        <seg>Este enfoque es eficiente porque el servidor únicamente solicita la información que puede manejar de manera útil.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This article describes different methods of caching and how to use HTTP Headers to control them.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T062736Z" creationid="gitnacho" creationdate="20221012T062736Z">
        <seg>Este artículo presenta los distintos tipos de caché y cómo usar las cabeceras HTTP para su configuración y control.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This article describes how to get your simple sample code online with minimum effort.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T055931Z" creationid="gitnacho" creationdate="20220925T055931Z">
        <seg>Este artículo describe cómo publicar tu código de ejemplo en línea con el mínimo esfuerzo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This article describes what they are in a little more detail.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T084845Z" creationid="gitnacho" creationdate="20221006T084845Z">
        <seg>Este artículo describe cuáles son con un poco más de detalle.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This article describes what they are.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T100145Z" creationid="gitnacho" creationdate="20221003T100145Z">
        <seg>Este artículo las describe.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This article details the four types of KumaScript error, and some steps you can take to fix them.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T092018Z" creationid="gitnacho" creationdate="20221005T092018Z">
        <seg>Este artículo detalla los cuatro tipos de errores de KumaScript y algunos pasos que puedes seguir para corregirlos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This article discusses the different mechanisms available for adding code examples to pages, along with which ones you should use and when.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T085248Z" creationid="gitnacho" creationdate="20221005T202412Z">
        <seg>Este artículo analiza los diferentes mecanismos disponibles para agregar código de ejemplo a las páginas, junto con cuáles debes usar y cuándo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This article explains a little bit about how it works, and how to use available tools to convert text format files to the `.wasm` assembly format.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182521Z" creationid="gitnacho" creationdate="20221007T182521Z">
        <seg>Este artículo explica un poco sobre cómo funciona y cómo usar las herramientas disponibles para convertir archivos en formato de texto, al formato de ensamblador `.wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This article explains how that text format works, in terms of the raw syntax, and how it is related to the underlying bytecode it represents — and the wrapper objects representing wasm in JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053317Z" creationid="gitnacho" creationdate="20221007T053317Z">
        <seg>Este artículo explica cómo funciona ese formato de texto, en términos de sintaxis sin procesar, y cómo se relaciona con el código de bytes subyacente que representa, y el objeto contenedor que representa `wasm` en JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This article explains how to set up a sensible file structure for your website and what issues you should be aware of.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T043447Z" creationid="gitnacho" creationdate="20220925T043447Z">
        <seg>Este artículo explica cómo configurar una estructura de archivos sensible para tu sitio web y qué problemas debes tener en cuenta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This article explains the best practices around this.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T044843Z" creationid="gitnacho" creationdate="20221004T044843Z">
        <seg>Este artículo explica las mejores prácticas al respecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This article explains the concepts behind how WebAssembly works including its goals, the problems it solves, and how it runs inside the web browser's rendering engine.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T003819Z" creationid="gitnacho" creationdate="20221003T003819Z">
        <seg>En este artículo se explican los conceptos detrás de cómo funciona WebAssembly, sus objetivos, los problemas que resuelve, y como se ejecuta dentro del motor de renderizado de un navegador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This article has given you an explanation of what WebAssembly is, why it is so useful, how it fits into the web, and how you can make use of it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T091120Z" creationid="gitnacho" creationdate="20221003T091120Z">
        <seg>Este artículo ha dado una explicación de qué es WebAssembly, por qué es tan útil, cómo encaja en la web y cómo lo puedes utilizar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This article has taken you through the basics of using the WebAssembly JavaScript API to include a WebAssembly module in a JavaScript context and make use of its functions, and how to use WebAssembly memory and tables in JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T234303Z" creationid="gitnacho" creationdate="20221006T234303Z">
        <seg>Este artículo te ha llevado a través de los conceptos básicos del uso de la API JavaScript de WebAssembly para incluir un módulo de WebAssembly en un contexto de JavaScript y hacer uso de sus funciones, y cómo usar la memoria y las tablas de WebAssembly en JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This article provides a reference for the different mechanisms that can be used to fetch WebAssembly bytecode, as well as how to compile/instantiate then run it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T061817Z" creationid="gitnacho" creationdate="20221004T071248Z">
        <seg>Este artículo proporciona una referencia para los diferentes mecanismos que se pueden usar para obtener el código de bytes de WebAssembly, además de cómo compilarlo/crear una instancia y luego ejecutarla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This article provides basic information about using KumaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T064527Z" creationid="gitnacho" creationdate="20221005T064527Z">
        <seg>Este artículo proporciona información básica sobre el uso de KumaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This article provides information on getting started with service workers, including basic architecture, registering a service worker, the install and activation process for a new service worker, updating your service worker, cache control and custom responses, all in the context of a simple app with offline functionality.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T021137Z" creationid="gitnacho" creationdate="20220921T014735Z">
        <seg>Este artículo brinda información sobre cómo comenzar con el *service worker*, incluida la arquitectura básica, el registro de un *service worker*, el proceso de instalación y activación de un nuevo *service worker*, la actualización de tu *service worker*, el control de caché y las respuestas personalizadas, todo en el contexto de una aplicación simple, con funcionalidad fuera de línea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This article provides information on how to invoke MDN's macros within articles.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T094730Z" creationid="gitnacho" creationdate="20221005T094730Z">
        <seg>Este artículo proporciona información sobre cómo invocar las macros de MDN dentro de los artículos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This article teaches you what you'll need to know.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T111430Z" creationid="gitnacho" creationdate="20221006T111430Z">
        <seg>Este artículo te enseña lo que necesitarás saber.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This attribute allows the elimination of **parser-blocking JavaScript** where the browser would have to load and evaluate scripts before continuing to parse.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T122904Z" creationid="gitnacho" creationdate="20221003T122904Z">
        <seg>Este atributo permite la eliminación de **JavaScript que bloquea el analizador** donde el navegador tendría que cargar y evaluar scripts antes de continuar con el análisis.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This browser-side header will be answered by the complementary server-side header of {{HTTPHeader("Access-Control-Allow-Headers")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060902Z" creationid="gitnacho" creationdate="20221012T060902Z">
        <seg>Este encabezado del lado del navegador será respondido por el encabezado de lado del servidor complementario de {{HTTPHeader("Access-Control-Allow-Headers")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This can</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T043805Z" creationid="gitnacho" creationdate="20211102T043755Z">
        <seg>Esto se puede</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This can be any one of:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110536Z" creationid="gitnacho" creationdate="20221007T110536Z">
        <seg>Esta puede ser cualquiera de:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This can be any value, as long as its type matches the specified data type.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233852Z" creationid="gitnacho" creationdate="20221006T233852Z">
        <seg>Puede ser cualquier valor, siempre que su tipo coincida con el tipo de datos especificado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This can be any value, as long as its type matches the variable's data type.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110742Z" creationid="gitnacho" creationdate="20221007T110742Z">
        <seg>Puede ser cualquier valor, siempre que su tipo coincida con el tipo de dato de la variable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This can be made up of one or several media segments.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220916T070007Z" creationid="gitnacho" creationdate="20220916T070007Z">
        <seg>Este puede estar compuesto por uno o varios segmentos de medios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This can be replaced with the following Markdown:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T220202Z" creationid="gitnacho" creationdate="20221005T220202Z">
        <seg>Esto se puede reemplazar con el siguiente Markdown:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This can have a value of `"anyfunc"` (functions) or `"externref"` (host references).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000030Z" creationid="gitnacho" creationdate="20221020T000030Z">
        <seg>Esto puede tener un valor de `"anyfunc"` (funciones) o `"externref"` (referencias de host).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This can include loops, conditionals, etc.
- Nothing inside a `&lt;% %&gt;` block can ever contribute to the output stream.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070158Z" creationid="gitnacho" creationdate="20221005T070134Z">
        <seg>Este puede incluir bucles, condicionales, etc.
- Nada dentro de un bloque `&lt;% %&gt;` puede contribuir al flujo de salida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This causes KumaScript to invalidate cache for the current page, as well as for any templates or content used by the current page by issuing a request with a `Cache-Control: no-cache` header.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T075105Z" creationid="gitnacho" creationdate="20221005T075105Z">
        <seg>Esto hace que KumaScript invalide la caché para la página actual, así como para cualquier plantilla o contenido utilizado por la página actual al emitir una solicitud con un encabezado `Cache-Control: no-cache`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This causes KumaScript to invalidate its cache for the content on the current page by issuing a request with a `Cache-Control: max-age=0` header.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T075007Z" creationid="gitnacho" creationdate="20221005T075007Z">
        <seg>Esto hace que KumaScript invalide su caché para el contenido de la página actual emitiendo una solicitud con un encabezado `Cache-Control: max-age=0`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This code accesses each function reference stored in the table in turn, and instantiates them to print the values they hold to the console — note how each function reference is retrieved with a [`Table.prototype.get()`](/en-US/docs/WebAssembly/JavaScript_interface/Table/get) call, then we add an extra set of parentheses on the end to actually invoke the function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233621Z" creationid="gitnacho" creationdate="20221006T233453Z">
        <seg>Este código accede a cada referencia de función almacenada en la tabla y crea la instancia para imprimir en la consola los valores que contienen. Observa cómo se recupera cada referencia de función con [`Table.prototype.get()`](/es/docs/WebAssembly/JavaScript_interface/Table/get), luego agregamos un conjunto adicional de paréntesis al final para invocar realmente la función.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This code snippet creates a new `Tag` instance.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015441Z" creationid="gitnacho" creationdate="20221008T015441Z">
        <seg>Este fragmento de código crea una nueva instancia de `Tag`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This code snippet creates a tag defining two data types and then exports them using `type()`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T071533Z" creationid="gitnacho" creationdate="20221020T071533Z">
        <seg>Este fragmento de código crea una etiqueta que define dos tipos de datos y luego los exporta usando `type()`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This code snippet is from the [service worker registration-events sample](https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/registration-events/index.html) ([live demo](https://googlechrome.github.io/samples/service-worker/registration-events/)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213249Z" creationid="gitnacho" creationdate="20221003T213249Z">
        <seg>Este fragmento de código es de el [ejemplo de eventos de registro de *service worker*](https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/registration-events/index.html) ([demostración en vivo](https://googlechrome.github.io/samples/service-worker/registration-events/)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This code snippet is from the [service worker selective caching sample](https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/selective-caching/service-worker.js).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T203518Z" creationid="gitnacho" creationdate="20221003T203518Z">
        <seg>Este fragmento de código proviene de le [ejemplo de almacenamiento en caché selectivo del *service worker*](https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/selective-caching/service-worker.js).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This consists of calling `CacheStorage.open()` to create a new
cache, then using {{domxref("Cache.addAll()")}} to add a series of assets to it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T225349Z">
        <seg>Esto consiste en llamar a `CacheStorage.open()` para crear una nueva
caché, luego usa {{DOMxRef("Cache.addAll()")}} para agregarle una serie de recursos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This could be a text editor (e.g. [Visual Studio Code](https://code.visualstudio.com/), [Notepad++](https://notepad-plus-plus.org/), [Sublime Text](https://www.sublimetext.com/), [GNU Emacs](https://www.gnu.org/software/emacs/), or [VIM](https://www.vim.org/)), or a hybrid editor (e.g. [Dreamweaver](https://www.adobe.com/products/dreamweaver.html) or [WebStorm](https://www.jetbrains.com/webstorm/)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T164629Z" creationid="gitnacho" creationdate="20221012T164629Z">
        <seg>Podría ser un editor de texto (por ejemplo, [Visual Studio Code](https://code.visualstudio.com/), [Notepad++](https://notepad-plus-plus.org/), [Sublime Text](https ://www.sublimetext.com/), [GNU Emacs](https://www.gnu.org/software/emacs/), o [VIM](https://www.vim.org/)), o un editor híbrido (por ejemplo, [Dreamweaver](https://www.adobe.com/products/dreamweaver.html) o [WebStorm](https://www.jetbrains.com/webstorm/)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This could be for the following reasons:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T025555Z" creationid="gitnacho" creationdate="20220921T025555Z">
        <seg>Esto se podría deber a las siguientes razones:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This creates a new library in a subdirectory named `hello-wasm` with everything you need to get going:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061724Z" creationid="gitnacho" creationdate="20221004T061724Z">
        <seg>Esto crea una nueva biblioteca en un subdirectorio llamado `hello-wasm` con todo lo que necesitas para empezar:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This creates a tag with two values.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T071046Z" creationid="gitnacho" creationdate="20221020T071046Z">
        <seg>Esto crea una etiqueta con dos valores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This document also provides guidance on how to replace these macros should you encounter them in the content.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T215932Z" creationid="gitnacho" creationdate="20221005T215817Z">
        <seg>Este documento también brinda orientación sobre cómo reemplazar estas macros si las encuentras en el contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This does a number of things (and they take a lot of time, especially the first time you run `wasm-pack`).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064042Z" creationid="gitnacho" creationdate="20221004T064042Z">
        <seg>Esto hace varias cosas (y toman mucho tiempo, especialmente la primera vez que ejecutas `wasm-pack`).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This does not include nodes in shadow trees if the shadow root was created with its {{domxref("ShadowRoot.mode")}} closed.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204953Z">
        <seg>Esto no incluye nodos en árboles de sombra si la raíz de sombra se creó con su {{DOMxRef("ShadowRoot.mode")}} cerrado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This doesn't have much of a distinct use the first time your service worker is installed/activated, but it means more when the service worker is updated (see the [Updating your service worker](#updating_your_service_worker) section later on.)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T212549Z" creationid="gitnacho" creationdate="20220921T034740Z">
        <seg>Esto no tiene mucho de un uso distinto la primera vez que se instala/activa tu *service worker*, pero significa más cuando se actualiza el *service worker* (consulta la sección [Actualizar tu *service worker*](#actualizar_tu_service_worker) más adelante).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This element implements the {{domxref("SVGViewElement")}} interface.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T180801Z" creationid="gitnacho" creationdate="20221005T173846Z">
        <seg>Este elemento implementa la interfaz {{SVGElement("SVGViewElement")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This element includes the [global attributes](/en-US/docs/Web/HTML/Global_attributes).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T122626Z" creationid="gitnacho" creationdate="20221003T122626Z">
        <seg>Este elemento incluye los [atributos globales](/es/docs/Web/HTML/Global_attributes).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This element may contain block elements, including paragraphs, code blocks, embedded lists, and notes.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182745Z" creationid="gitnacho" creationdate="20221008T182601Z">
        <seg>Este elemento puede contener elementos de bloque, incluidos párrafos, bloques de código, listas incrustadas y notas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This enables a Web page to update just part of a page without disrupting what the user is doing.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220916T074951Z" creationid="gitnacho" creationdate="20220916T074951Z">
        <seg>Esto permite que una página web actualice solo una parte de una página sin interrumpir lo que está haciendo el usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This ensures that a different resource is cached for every different value of the hint header.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T091805Z" creationid="gitnacho" creationdate="20221012T091805Z">
        <seg>Esto garantiza que se almacene en caché un recurso diferente para cada valor diferente del encabezado de sugerencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This ensures that any functional events (like {{DOMxRef("FetchEvent")}}) are not dispatched to the {{DOMxRef("ServiceWorker")}}, until it upgrades database schemas, and deletes outdated cache entries, etc.
- {{DOMxRef("ExtendableMessageEvent")}} {{Experimental_Inline}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T150754Z" creationid="gitnacho" creationdate="20221002T150754Z">
        <seg>Esto garantiza que los eventos funcionales (como {{DOMxRef("FetchEvent")}}) no se envíen a {{DOMxRef("ServiceWorker")}}, hasta que actualice los esquemas de la base de datos y elimine las entradas de caché obsoletas, etc.
- {{DOMxRef("ExtendableMessageEvent")}} {{Experimental_Inline}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This ensures that download starts immediately on navigation to a page, rather than having to wait until the service worker has booted.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040903Z" creationid="gitnacho" creationdate="20220921T040903Z">
        <seg>Esto garantiza que la descarga comience de inmediato al navegar a una página, en lugar de tener que esperar hasta que se inicie el *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This ensures that the exception can only be read if the calling code has access to the tag.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142241Z" creationid="gitnacho" creationdate="20221019T142241Z">
        <seg>Esto garantiza que la excepción solo se pueda leer si el código de llamada tiene acceso a la etiqueta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This example (see our [instantiate-streaming.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/instantiate-streaming.html) demo on GitHub, and [view it live](https://mdn.github.io/webassembly-examples/js-api-examples/instantiate-streaming.html) also) shows how to use `instantiateStreaming()` to fetch a wasm module, import a JavaScript function into it, compile and instantiate it, and access its exported function — all in one step.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T181326Z" creationid="gitnacho" creationdate="20221006T181326Z">
        <seg>Este ejemplo (consulta nuestra demostración de [instantiate-streaming.html](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/instantiate-streaming.html) en GitHub y también lo puedes [ver en vivo](https://mdn.github.io/webassembly-examples/js-api-examples/instantiate-streaming.html)) muestra cómo usar `instantiateStreaming()` para obtener un módulo `wasm`, importar una función JavaScript en él, compilarlo e instanciarlo, y acceder a su función exportada, todo en un solo paso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This example contains a code block.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182224Z" creationid="gitnacho" creationdate="20221008T182224Z">
        <seg>Este ejemplo contiene un bloque de código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This example demonstrate how to throw an exception from WebAssembly that includes a stack trace.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T203750Z" creationid="gitnacho" creationdate="20221019T203750Z">
        <seg>Este ejemplo demuestra cómo generar una excepción desde WebAssembly que incluye un seguimiento de la pila.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This example is from the MDN [simple service worker example](https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker) (see [simple service worker running live](https://bncb2v.csb.app/)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T225255Z" creationid="gitnacho" creationdate="20220921T225255Z">
        <seg>Este ejemplo es de MDN [ejemplo de *service worker* simple](https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker) (ve el [*service worker* simple ejecutándose en vivo](https://bncb2v.csb.app/)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This example shows how to define a tag and import it into a module, then use it to throw an exception that is caught in JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023202Z" creationid="gitnacho" creationdate="20221008T023202Z">
        <seg>Este ejemplo muestra cómo definir una etiqueta e importarla a un módulo, luego usarla para generar una excepción que se detecta en JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This example shows that we're creating and accessing the table from JavaScript, but the
same table is visible and callable inside the wasm instance too.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T234803Z" creationid="gitnacho" creationdate="20221019T234803Z">
        <seg>Este ejemplo muestra que estamos creando y accediendo a la tabla desde JavaScript, pero la misma tabla también es visible y se puede llamar dentro de la instancia de `wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This example shows that we're creating and accessing the table from JavaScript, but the same table is visible and callable inside the wasm instance too.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095947Z" creationid="gitnacho" creationdate="20221006T095947Z">
        <seg>Este ejemplo muestra que estamos creando y accediendo a la tabla desde JavaScript, pero la misma tabla también es visible y se puede llamar dentro de la instancia de `wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This example shows the creation of an exception using a simple tag.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140743Z" creationid="gitnacho" creationdate="20221019T140743Z">
        <seg>Este ejemplo muestra la creación de una excepción usando una simple etiqueta `tag`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This example uses the following reference files:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T005257Z" creationid="gitnacho" creationdate="20221020T005257Z">
        <seg>Este ejemplo utiliza los siguientes archivos de referencia:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This feature is available in nightly builds effective in Firefox for Android 81 or later.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T090620Z" creationid="gitnacho" creationdate="20221019T090620Z">
        <seg>Esta característica está disponible en compilaciones nocturnas a partir de Firefox para Android 81 o posterior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This finishes our high-level tour of the major components of the WebAssembly text format and how they get reflected in the WebAssembly JS API.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T081114Z" creationid="gitnacho" creationdate="20221007T081114Z">
        <seg>Esto finaliza nuestro recorrido de alto nivel por los principales componentes del formato de texto de WebAssembly y cómo se reflejan en la API JS de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This function creates a constant containing the value `0`, and then uses the `i32.load` command to load the value contained in the provided memory index.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073916Z" creationid="gitnacho" creationdate="20221007T073916Z">
        <seg>Esta función crea una constante que contiene el valor `0` y luego usa el comando `i32.load` para cargar el valor contenido en el índice de memoria proporcionado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This function flattens nested layers of promise-like objects (e.g. a promise that fulfills to a promise that fulfills to something) into a single layer — a promise that fulfills to a non-thenable value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073329Z" creationid="gitnacho" creationdate="20221002T073329Z">
        <seg>Esta función aplana las capas anidadas de objetos similares a promesas (por ejemplo, una promesa que cumple con una promesa cumplida con algo) en una sola capa — una promesa que cumple con un valor no válido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This function gets two parameters, adds them together, and returns the result.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055317Z" creationid="gitnacho" creationdate="20221007T055317Z">
        <seg>Esta función obtiene dos parámetros, los suma y devuelve el resultado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This function has two overloads:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193058Z" creationid="gitnacho" creationdate="20221007T193058Z">
        <seg>Esta función tiene dos sobrecargas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This function is named `greet`, and takes one argument, a string (written `&amp;str`), `name`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063308Z" creationid="gitnacho" creationdate="20221004T063308Z">
        <seg>Esta función se llama `greet` y toma un argumento, una cadena (escrita `&amp;str`), `name`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This function is useful if it is necessary to a compile a module before it can be instantiated (otherwise, the [`WebAssembly.instantiate()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiate) function should be used).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T180311Z" creationid="gitnacho" creationdate="20221007T180311Z">
        <seg>Esta función es útil si es necesario compilar un módulo antes de que se pueda crear una instancia (de lo contrario, se debe usar la función [`WebAssembly.instantiate()`](/es/docs/WebAssembly/JavaScript_interface/instantiate)) .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This function is useful if it is necessary to a compile a module before it can be instantiated (otherwise, the [`WebAssembly.instantiateStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming) function should be used).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T185320Z" creationid="gitnacho" creationdate="20221007T185320Z">
        <seg>Esta función es útil si es necesario compilar un módulo antes de que se pueda crear una instancia (de lo contrario, se debe usar la función [`WebAssembly.instantiateStreaming()`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This gives you more of an idea of its wrapper-type nature.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T090119Z" creationid="gitnacho" creationdate="20221006T090119Z">
        <seg>Esto te da una idea más clara de la naturaleza de su tipo contenedor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This gives you: {{Bug(123456)}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T121526Z" creationid="gitnacho" creationdate="20221005T113206Z">
        <seg>Esto te da: {{Bug(123456)}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This has huge implications for the web platform — it provides a way to run code written in multiple languages on the web at near-native speed, with client apps running on the web that previously couldn't have done so.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T004039Z" creationid="gitnacho" creationdate="20221003T004039Z">
        <seg>Esto tiene enormes implicaciones para la plataforma web — presenta un medio para ejecutar código escrito en múltiples lenguajes en la web, haciendo que una aplicación web, se ejecute casi a la misma velocidad de código nativo, algo que previamente no se podía hacer.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This has worked well for us as JavaScript is powerful enough to solve most problems people have on the Web today.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T005431Z" creationid="gitnacho" creationdate="20221003T005431Z">
        <seg>Esto nos ha funcionado bien debido a que JavaScript es suficientemente capaz para resolver la mayor parte de los problemas que las personas tienen en la Web hoy día.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This header is the server side response to the browser's {{HTTPHeader("Access-Control-Request-Headers")}} header.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060344Z" creationid="gitnacho" creationdate="20221012T060344Z">
        <seg>Este encabezado es la respuesta de lado del servidor al encabezado {{HTTPHeader("Access-Control-Request-Headers")}} del navegador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This helps compile the code to WebAssembly, as well as produce the right packaging for use in the browser.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061602Z" creationid="gitnacho" creationdate="20221004T061602Z">
        <seg>Esto ayuda a compilar el código en WebAssembly, así como a producir el paquete correcto para usar en el navegador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This illustrates how `ccall()` is used to call the exported function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T112451Z" creationid="gitnacho" creationdate="20221003T112451Z">
        <seg>Esto ilustra cómo se usa `ccall()` para llamar a la función exportada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This imports a tag, which it refers to as `$tagname` internally, and imports a function that it refers to as `$throwExnWithStack`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T203844Z" creationid="gitnacho" creationdate="20221019T203844Z">
        <seg>Esto importa una etiqueta, a la que internamente, se refiere como `$tagname` e importa una función a la que se refiere como `$throwExnWithStack`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This imports a tag, which it refers to internally as `$tagname`, and exports a method `run` that can be called by external code to throw an exception using the tag.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142815Z" creationid="gitnacho" creationdate="20221019T142815Z">
        <seg>Esto importa una etiqueta, a la que se refiere internamente como `$tagname`, y exporta un método `run` que puede llamar un código externo para lanzar una excepción usando la etiqueta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This imports the new module from the `node_modules` folder.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065920Z" creationid="gitnacho" creationdate="20221004T065920Z">
        <seg>Esto importa el nuevo módulo desde el directorio `node_modules`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This includes</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211005T063544Z" creationid="gitnacho" creationdate="20211005T063544Z">
        <seg>Esto incluye</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This includes compiled wasm modules ([`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) JavaScript objects).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221004T050451Z">
        <seg>Esto incluye módulos `wasm` compilados (objetos JavaScript [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This includes listeners attached to the same element as well as those attached to elements that will be traversed later (during the capture phase, for instance).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T205030Z" creationid="gitnacho" creationdate="20221011T205030Z">
        <seg>Esto incluye escuchas adjuntos al mismo elemento, así como aquellos adjuntos a elementos que se atravesarán más adelante (durante la fase de captura, por ejemplo).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This installs a tool called "rustup", which lets you manage multiple versions of Rust.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061348Z" creationid="gitnacho" creationdate="20221004T061348Z">
        <seg>Esto instala una herramienta llamada "rustup", que te permite administrar varias versiones de Rust.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This interface contains also various miscellaneous commonly-used utility methods, such as matrix operations and the ability to control the time of redraw on visual rendering devices.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220916T064841Z" creationid="gitnacho" creationdate="20220916T064841Z">
        <seg>Esta interfaz también contiene varios útiles métodos misceláneos de uso común, como operaciones matriciales y la capacidad de controlar el tiempo de redibujado en dispositivos de renderizado visual.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211004T114321Z" creationid="gitnacho" creationdate="20211004T114321Z">
        <seg>Este es</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is OK, as you can fix your code and then try again the next time registration occurs.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034622Z" creationid="gitnacho" creationdate="20220921T034622Z">
        <seg>Esto está bien, ya que puedes corregir tu código y luego intentarlo de nuevo la próxima vez que se registre.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is `false` by default (if `options` or `options.traceStack` are not provided).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140546Z" creationid="gitnacho" creationdate="20221019T140546Z">
        <seg>Este es `false` de forma predeterminada (si no se proporcionan `options` u `options.traceStack`).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is a JavaScript function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072251Z" creationid="gitnacho" creationdate="20221005T072251Z">
        <seg>Esta es una función JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is a boolean attribute: the presence of a boolean attribute on an element represents the true value, and the absence of the attribute represents the false value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T122941Z" creationid="gitnacho" creationdate="20221003T122941Z">
        <seg>Este es un atributo booleano: la presencia de un atributo booleano en un elemento representa el valor `true` y la ausencia del atributo representa el valor `false`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is a copy of the `type` object that was originally passed into the [`Tag()` constructor](/en-US/docs/WebAssembly/JavaScript_interface/Tag/Tag).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T071442Z" creationid="gitnacho" creationdate="20221020T071442Z">
        <seg>Esta es una copia del objeto `type` que se pasó originalmente al constructor [`Tag()`](/es/docs/WebAssembly/JavaScript_interface/Tag/Tag).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is a general article about Cross-Origin Resource Sharing and includes a discussion of the necessary HTTP headers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T213657Z" creationid="gitnacho" creationdate="20221011T213657Z">
        <seg>Este es un artículo general sobre el uso del intercambio de recursos de origen cruzado e incluye una discusión sobre los encabezados HTTP necesarios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is a good simple program to test whether you can get the source code of libwebp to compile, as it doesn't require any parameters or complex data structures to invoke this function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053512Z" creationid="gitnacho" creationdate="20221004T053512Z">
        <seg>Este es un buen programa sencillo para probar si puedes obtener el código fuente de `libwebp` para compilar, ya que no requiere ningún parámetro o estructuras de datos complejas para invocar esta función.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is a great way to help explain long or complicated stretches of code more clearly.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205335Z" creationid="gitnacho" creationdate="20221005T205227Z">
        <seg>Esta es una excelente manera de ayudar a explicar tramos de código largos o complicados con mayor claridad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is a human readable string indicating the URL, name of the function type called, the function index, and its offset in the module binary.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T203704Z" creationid="gitnacho" creationdate="20221019T203704Z">
        <seg>Esta es una cadena legible por humanos que indica la URL, el nombre del tipo de función llamada, el índice de la función y su compensación en el binario del módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is a list of all the APIs that are available.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T040215Z" creationid="gitnacho" creationdate="20221002T040215Z">
        <seg>Esta es una lista de todas las APIs que están disponibles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is a list of all the interfaces (that is, types of objects) that are available.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T040228Z" creationid="gitnacho" creationdate="20221002T040228Z">
        <seg>Esta es una lista de todas las interfaces (es decir, tipos de objetos) que están disponibles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is a list of the functions that are to be referenced by the table, in the order they are to be referenced.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072223Z" creationid="gitnacho" creationdate="20221007T072223Z">
        <seg>Esta es una lista de las funciones a las que debe hacer referencia la tabla, en el orden en que deben ser referidas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is a special type of {{DOMxRef("Client")}} object, with some additional methods and properties available.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T152010Z" creationid="gitnacho" creationdate="20221002T152010Z">
        <seg>Este es un tipo especial de objeto {{DOMxRef("Client")}}, con algunos métodos y propiedades adicionales disponibles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is achieved using the [`WebAssembly.compileStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/compileStreamimg) and [`WebAssembly.instantiateStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming) methods.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T181122Z" creationid="gitnacho" creationdate="20221006T113356Z">
        <seg>Esto se logra utilizando los métodos [`WebAssembly.compileStreaming()`](/es/docs/WebAssembly/JavaScript_interface/compileStreamimg) y [`WebAssembly.instantiateStreaming()`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is added automatically, but you must restart your terminal for it to take effect.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061523Z" creationid="gitnacho" creationdate="20221004T061523Z">
        <seg>Esto se agrega automáticamente, pero debes reiniciar tu terminal para que surta efecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is already available with native apps, which is one of the main reasons native apps are often chosen over web apps.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T020441Z" creationid="gitnacho" creationdate="20220921T020441Z">
        <seg>Esto ya está disponible con las aplicaciones nativas, que es una de las principales razones por las que las aplicaciones nativas a menudo se eligen en lugar de las aplicaciones web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is also useful for removing data that is no longer needed to avoid filling up too much disk space — each browser has a hard limit on the amount of cache storage that a given service worker can use.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042014Z" creationid="gitnacho" creationdate="20220921T042014Z">
        <seg>Esto también es útil para eliminar datos que ya no se necesitan para evitar llenar demasiado espacio en disco: cada navegador tiene un límite estricto en la cantidad de almacenamiento en caché que puede usar un determinado *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is an incorrect way to write links on MDN:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T084108Z" creationid="gitnacho" creationdate="20221008T174048Z">
        <seg>Esta es una forma **incorrecta** de escribir enlaces en MDN:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is an intermediate form designed to be exposed in text editors, browser developer tools, etc.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053227Z" creationid="gitnacho" creationdate="20221007T053227Z">
        <seg>Esta es una forma intermedia diseñada para exponerla en editores de texto, herramientas de desarrollo de navegadores, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is analogous to `new Function(string)`, except that we are substituting a string of characters (JavaScript source code) with an array buffer of bytes (WebAssembly source code).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T071603Z" creationid="gitnacho" creationdate="20221004T071603Z">
        <seg>Esto es análogo a `new function(string)`, excepto que estamos sustituyendo una cadena de caracteres (código fuente de JavaScript) con un búfer de arreglo de bytes (código fuente de WebAssembly).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is because the statechange</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T225116Z" creationid="gitnacho" creationdate="20221003T225116Z">
        <seg>Esto se debe a que el estado cambia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is beyond the scope of this tutorial, but if you'd like to learn more, check out the Rust WebAssembly Working Group's documentation on [Shrinking .wasm Size](https://rustwasm.github.io/book/game-of-life/code-size.html#shrinking-wasm-size).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064500Z" creationid="gitnacho" creationdate="20221004T064500Z">
        <seg>Esto va más allá del alcance de este tutorial, pero si deseas obtener más información, consulta la documentación del grupo de trabajo de Rust WebAssembly sobre [Reducción del tamaño de .wasm](https://rustwasm.github.io/book/game-of -life/code-size.html#shrinking-wasm-size).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is easily done with the `fetch` event.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035048Z" creationid="gitnacho" creationdate="20220921T035048Z">
        <seg>Esto se hace fácilmente con el evento `fetch`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is equivalent to:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210920T055716Z" creationid="gitnacho" creationdate="20210920T055716Z">
        <seg>Esto es equivalente a:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is for use in live samples.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T180900Z" creationid="gitnacho" creationdate="20221008T180900Z">
        <seg>Esto es para usarlo en muestras en vivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is functionally equivalent to calling `fetch()`, then using `put()` to add the results to the cache.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T203307Z" creationid="gitnacho" creationdate="20221003T203307Z">
        <seg>Esto es funcionalmente equivalente a llamar a `fetch()` y luego usar `put()` para agregar los resultados a la caché.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is functionally equivalent to including a separate function statement outside the function, elsewhere in the module in the same manner as we did before, e.g.:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061310Z" creationid="gitnacho" creationdate="20221007T061310Z">
        <seg>Esto es funcionalmente equivalente a incluir una declaración de función separada fuera de la función, en otra parte del módulo de la misma manera que lo hicimos antes, por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is generally used to do stuff that would have broken the previous version while it was still running, for example getting rid of old caches.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T001418Z" creationid="gitnacho" creationdate="20220921T041948Z">
        <seg>Esto generalmente se usa para hacer cosas que habrían roto la versión anterior mientras aún se estaba ejecutando, por ejemplo, deshacerse de las cachés antiguas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is meant to let you access the contents of text attachments.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082839Z" creationid="gitnacho" creationdate="20221005T082839Z">
        <seg>Esto está destinado a permitirte acceder al contenido de los archivos de texto adjuntos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is our entry point into using service workers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T024158Z" creationid="gitnacho" creationdate="20220921T024158Z">
        <seg>Este es nuestro punto de entrada en el uso del *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is passed to `alert()`, so when we call this function we will see an alert box with "Hello, Steve!" in it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063524Z" creationid="gitnacho" creationdate="20221004T063524Z">
        <seg>Esto se pasa a `alert()`, por lo que cuando llamemos a esta función veremos un cuadro de alerta con "¡Hola, Steve!".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is primarily used to ensure that the service worker is not active until all of the core caches are populated.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223631Z" creationid="gitnacho" creationdate="20221003T223631Z">
        <seg>Esto se usa principalmente para garantizar que el *service worker* no esté activo hasta que se llenen todas las memorias caché principales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is probably a temporary failure of the KumaScript service.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T075722Z" creationid="gitnacho" creationdate="20221005T075722Z">
        <seg>Probablemente se trate de un error temporal del servicio KumaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is really the same kind of procedure as installing a native or Firefox OS app — making everything available for use offline.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T022937Z" creationid="gitnacho" creationdate="20220921T022937Z">
        <seg>Este es realmente el mismo tipo de procedimiento que instalar una aplicación nativa o Firefox OS: hace que todo esté disponible para usar sin conexión.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is sometimes called a design guide, design system, or brand book, and you can see an example at the [Firefox Photon Design System](https://design.firefox.com/photon/).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061242Z" creationid="gitnacho" creationdate="20221019T061242Z">
        <seg>Esto, a veces, se denomina guía de diseño, sistema de diseño o libro de marcas, y puedes ver un ejemplo en el [Sistema de diseño de fotones de Firefox](https://design.firefox.com/photon/).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is symmetric to a native application where multiple compiled `.dll`s share a single process's address space.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073737Z" creationid="gitnacho" creationdate="20221007T073737Z">
        <seg>Esto es simétrico a una aplicación nativa donde múltiples `.dll`s compilados comparten el espacio de direcciones de un solo proceso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is the category errors end up in if they are not one of the other kinds of error.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T093213Z" creationid="gitnacho" creationdate="20221005T093213Z">
        <seg>Esta es la categoría en la que terminan los errores si no son uno de los otros tipos de error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is the contents of our Rust project.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061947Z" creationid="gitnacho" creationdate="20221004T061947Z">
        <seg>Este es el contenido de nuestro proyecto Rust.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is the correct way to write GFM links on MDN:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T173939Z" creationid="gitnacho" creationdate="20221008T173939Z">
        <seg>Esta es la forma correcta de escribir enlaces GFM en MDN:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is the end of our tutorial; we hope you've found it useful.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T070146Z" creationid="gitnacho" creationdate="20221004T070146Z">
        <seg>Este es el final de nuestro tutorial; esperamos que lo hayas encontrado útil.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is the landing page for the MDN Web Docs project itself.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T200330Z" creationid="gitnacho" creationdate="20221008T200330Z">
        <seg>Esta es la página destino del propio proyecto MDN Web Docs.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is the low-level textual representation of a .wasm module shown in browser developer tools when debugging.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T100330Z" creationid="gitnacho" creationdate="20221003T100330Z">
        <seg>Esta es la representación textual de bajo nivel de un módulo `.wasm`, mostrada en las herramientas de desarrollador del navegador al depurar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is the object to which the event is currently slated to be sent.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T201129Z" creationid="gitnacho" creationdate="20221011T201129Z">
        <seg>Este es el objeto al que está programado enviar el evento actualmente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is the simplest case we'll look at, whereby you get emscripten to generate everything you need to run your code, as WebAssembly, in the browser.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105448Z" creationid="gitnacho" creationdate="20221003T105448Z">
        <seg>Este es el caso más simple que veremos, en el que obtienes emscripten para generar todo lo que necesitas para ejecutar tu código, como WebAssembly, en el navegador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is the underlying version control system software that GitHub works on top of.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T173546Z" creationid="Nachec" creationdate="20221020T173546Z">
        <seg>Este es el sistema de control de versiones de software con el que trabaja GitHub principalmente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is unavoidable, but usually doesn't have much impact.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T205603Z" creationid="gitnacho" creationdate="20220922T205603Z">
        <seg>Esto es inevitable, pero por lo general no tiene mucho impacto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is used in response to a preflight request.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054411Z" creationid="gitnacho" creationdate="20221012T054411Z">
        <seg>Esto se utiliza en respuesta a una solicitud de preverificación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is useful for accessing each channel separately, e.g. for performing channel mixing where gain must be separately controlled on each channel.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T015834Z" creationid="gitnacho" creationdate="20220901T015834Z">
        <seg>Esto es útil para acceder a cada canal por separado, p. ej. para realizar mezclas de canales donde la ganancia se debe controlar por separado en cada canal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is useful for accessing each channels separately, e.g. for performing channel mixing where gain must be separately controlled on each channel.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T015744Z" creationid="gitnacho" creationdate="20220901T015744Z">
        <seg>Esto es útil para acceder a cada canal por separado, p. ej. para realizar mezclas de canales donde la ganancia se debe controlar por separado en cada canal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This is very useful, as it allows dynamic linking of multiple modules.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233731Z" creationid="gitnacho" creationdate="20221006T233731Z">
        <seg>Esto es muy útil, ya que permite la vinculación dinámica de múltiples módulos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This isn't considered a best practice, but this is a demo, so it's OK for now.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065930Z" creationid="gitnacho" creationdate="20221004T065930Z">
        <seg>Esto no se considera una práctica recomendada, pero es una demostración, por lo que está bien por ahora.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This issue was resolved in &lt;https://github.com/mdn/content/issues/3483&gt;.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182413Z" creationid="gitnacho" creationdate="20221008T182413Z">
        <seg>Este problema se resolvió en &lt;https://github.com/mdn/content/issues/3483&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This issue was resolved in &lt;https://github.com/mdn/content/issues/3512&gt;.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181054Z" creationid="gitnacho" creationdate="20221008T181054Z">
        <seg>Este problema se resolvió en &lt;https://github.com/mdn/content/issues/3512&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This issue was resolved in &lt;https://github.com/mdn/content/issues/3923&gt;.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191716Z" creationid="gitnacho" creationdate="20221008T191716Z">
        <seg>Este problema se resolvió en &lt;https://github.com/mdn/content/issues/3923&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This issue was resolved in &lt;https://github.com/mdn/content/issues/4325&gt;, &lt;https://github.com/mdn/content/issues/7342&gt;, and &lt;https://github.com/mdn/content/issues/7898#issuecomment-913265900&gt;.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191252Z" creationid="gitnacho" creationdate="20221008T191252Z">
        <seg>Este problema se resolvió en &lt;https://github.com/mdn/content/issues/4325&gt;, &lt;https://github.com/mdn/content/issues/7342&gt; y &lt;https://github.com /mdn/content/issues/7898#issuecomment-913265900&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This issue was resolved in &lt;https://github.com/mdn/content/issues/4367&gt;.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183927Z" creationid="gitnacho" creationdate="20221008T183927Z">
        <seg>Este problema se resolvió en &lt;https://github.com/mdn/content/issues/4367&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This issue was resolved in &lt;https://github.com/mdn/content/issues/4578&gt;.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191509Z" creationid="gitnacho" creationdate="20221008T191509Z">
        <seg>Este problema se resolvió en &lt;https://github.com/mdn/content/issues/4578&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This leads us to the following guideline: _if the Markdown representation of the table would be more than 150 characters wide, use HTML for the table_.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185701Z" creationid="gitnacho" creationdate="20221008T185701Z">
        <seg>Esto nos lleva a la siguiente pauta: _si la representación Markdown de la tabla tuviera más de 150 caracteres de ancho, usa HTML para la tabla_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This looks like so when rendered:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T212329Z" creationid="gitnacho" creationdate="20221005T212329Z">
        <seg>Esto se ve así cuando se renderiza:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This looks similar to what we've seen before, except that we specify a global value using the keyword `global`, and we also specify the keyword `mut` along with the value's datatype if we want it to be mutable.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T063534Z" creationid="gitnacho" creationdate="20221007T063534Z">
        <seg>Esto se parece a lo que hemos visto antes, excepto que especificamos un valor global usando la palabra clave `global`, y también especificamos la palabra clave `mut` junto con el tipo de dato del valor si queremos que sea mutable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This macro accepts one required parameter and one optional parameter:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T104739Z" creationid="gitnacho" creationdate="20221005T104739Z">
        <seg>Esta macro acepta un parámetro requerido y un parámetro opcional:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This makes callouts a good choice when an author wants to provide a custom title.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181333Z" creationid="gitnacho" creationdate="20221008T181333Z">
        <seg>Esto hace que el texto resaltado sea una buena opción cuando un autor desea proporcionar un título personalizado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This makes the case where the worker has to start up "no worse" than when the worker is already started, and in some cases better.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T053040Z" creationid="gitnacho" creationdate="20220922T205933Z">
        <seg>Esto hace que el caso en el que el *worker* tenga que empezar "no sea peor" que cuando el *worker* ya se ha iniciado y, en algunos casos, mejor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This manually-maintained documentation is likely to fall out of date with the code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072030Z" creationid="gitnacho" creationdate="20221005T072030Z">
        <seg>Es probable que esta documentación mantenida manualmente quede desactualizada con el código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This may be any value or JavaScript object handled by the [structured clone](/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm) algorithm, which includes cyclical references.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115537Z" creationid="gitnacho" creationdate="20221007T115537Z">
        <seg>Puede ser cualquier valor u objeto JavaScript manejado por el algoritmo [clon estructurado](/es/docs/Web/API/Web_Workers_API/Structured_clone_algorithm), que incluye referencias cíclicas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This may not be clean C. In fact, it relies on wasm pointers being 32 bits wide.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054805Z" creationid="gitnacho" creationdate="20221004T054805Z">
        <seg>Es posible que esto no sea C limpio. De hecho, se basa en punteros `wasm` de 32 bits de ancho.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This may well change in the future though — a new int64 type is being considered for future standards, which could then be used by wasm.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T090317Z" creationid="gitnacho" creationdate="20221006T090317Z">
        <seg>Sin embargo, esto puede cambiar en el futuro: se está considerando un nuevo tipo int64 para estándares futuros, que luego `wasm` podría utilizar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This means all we need to do to pass a string to JavaScript is to pass out the offset of the string in linear memory along with some way to indicate the length.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064257Z" creationid="gitnacho" creationdate="20221007T064257Z">
        <seg>Esto significa que todo lo que tenemos que hacer para pasar una cadena a JavaScript es pasar el desplazamiento de la cadena en la memoria lineal junto con alguna forma de indicar la longitud.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This means that JavaScript can get access to the memory of a WebAssembly instance either by creating a new `WebAssembly.Memory` and passing it in as an import or by receiving a Memory export (via [`Instance.prototype.exports`](/en-US/docs/WebAssembly/JavaScript_interface/Instance/exports)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T225359Z" creationid="gitnacho" creationdate="20221006T225359Z">
        <seg>Esto significa que JavaScript puede obtener acceso a la memoria de una instancia de WebAssembly creando una nueva `WebAssembly.Memory` y pasándola como una `import` o recibiendo una `export` de memoria (a través de [`Instance.prototype.exports`](/es/docs/WebAssembly/JavaScript_interface/Instance/exports)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This means that a web application using those APIs can only request resources from the same origin the application was loaded from unless the response from other origins includes the right CORS headers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T213006Z" creationid="gitnacho" creationdate="20221011T213006Z">
        <seg>Esto significa que una aplicación web que usa esas APIs solo puede solicitar recursos del mismo origen desde el que se cargó la aplicación, a menos que la respuesta de otros orígenes incluye los encabezados CORS correctos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This means that for anything not otherwise specified in this page, you can refer to the GFM specification.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T173817Z" creationid="gitnacho" creationdate="20221008T173817Z">
        <seg>Esto significa que para cualquier cosa que no se especifique en esta página, puedes consultar la especificación GFM.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This means that providing `&lt;strong&gt;Note:&lt;/strong&gt;` will also generate a note.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181357Z" creationid="gitnacho" creationdate="20221008T181357Z">
        <seg>Esto significa que proporcionar `&lt;strong&gt;Nota:&lt;/strong&gt;` también generará una nota.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This means that the above memory instance has an initial size of 640KB, and a maximum size of 6.4MB.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T210222Z" creationid="gitnacho" creationdate="20221006T210222Z">
        <seg>Esto significa que la instancia de `memory` anterior tiene un tamaño inicial de 640 KB y un tamaño máximo de 6.4MB.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This means that the macro is only actually run when the inputs change.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T095217Z" creationid="gitnacho" creationdate="20221005T095217Z">
        <seg>Esto significa que la macro solo se ejecuta realmente cuando cambian las entradas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This memory can be accessed in the `exports` property of the WebAssembly instance (after the memory is exported within the Web Assembly module).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000912Z" creationid="gitnacho" creationdate="20221008T000912Z">
        <seg>Se puede acceder a esta memoria en la propiedad `exports` de la instancia de WebAssembly (después de exportar la memoria dentro del módulo Web Assembly).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This memory's `buffer` property will return a {{jsxref("SharedArrayBuffer")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T001040Z" creationid="gitnacho" creationdate="20221008T001040Z">
        <seg>La propiedad `buffer` de esta memoria devolverá un {{jsxref("SharedArrayBuffer")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This might be used, for example, to reduce the data sent to just part of the original page, or to customize the response based on the user's log-in state.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210005Z" creationid="gitnacho" creationdate="20220922T210005Z">
        <seg>Esto se podría usar, por ejemplo, para reducir los datos enviados a solo una parte de la página original o para personalizar la respuesta según el estado de inicio de sesión del usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This minimum example has `main` create an `ArrayBuffer` and transfer it to `myWorker`, then has `myWorker` transfer it back to `main`, with the size logged at each step.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120040Z" creationid="gitnacho" creationdate="20221007T120040Z">
        <seg>Este ejemplo mínimo hace que `main` cree un `ArrayBuffer` y lo transfiera a `myWorker`, luego `myWorker` lo transfiere de vuelta a `main`, con el tamaño registrado en cada paso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This module is totally empty, but is still a valid module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053838Z" creationid="gitnacho" creationdate="20221007T053838Z">
        <seg>Este módulo está totalmente vacío, pero sigue siendo un módulo válido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This more complex `Response` below shows that you can optionally pass a set of headers in with your response, emulating standard HTTP response headers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035652Z" creationid="gitnacho" creationdate="20220921T035652Z">
        <seg>Esta `Response` más compleja a continuación muestra que, opcionalmente, puedes pasar un conjunto de encabezados con tu respuesta, emulando los encabezados de respuesta HTTP estándar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This must be an [exported WebAssembly function](/en-US/docs/WebAssembly/Exported_functions),</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T234017Z" creationid="gitnacho" creationdate="20221019T234017Z">
        <seg>Debe ser una [función WebAssembly exportada](/es/docs/WebAssembly/Exported_functions),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This needs to be done using Git.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T212416Z" creationid="gitnacho" creationdate="20221005T212416Z">
        <seg>Esto se debe hacer usando Git.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This object comes with built-in backpressure and queuing.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220916T074804Z" creationid="gitnacho" creationdate="20220916T074804Z">
        <seg>Este objeto viene con contrapresión y colas incorporadas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This operation performs a simple exchange between the client and the server, using CORS headers to handle the privileges:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222028Z" creationid="gitnacho" creationdate="20221011T222014Z">
        <seg>Esta operación realiza un intercambio simple entre el cliente y el servidor, utilizando encabezados CORS para manejar los privilegios:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This overload is useful if the `Module` has already</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193304Z" creationid="gitnacho" creationdate="20221007T193304Z">
        <seg>Esta sobrecarga es útil si `Module` ya se ha</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This package will contain only WebAssembly and JavaScript code, and so the users of the package won't need Rust installed.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061202Z" creationid="gitnacho" creationdate="20221004T061202Z">
        <seg>Este paquete solo contendrá código WebAssembly y JavaScript, por lo que los usuarios del paquete no necesitarán que Rust esté instalado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This page describes how we use Markdown to write documentation on MDN Web Docs.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T173516Z" creationid="gitnacho" creationdate="20221008T173516Z">
        <seg>Esta página describe cómo usamos Markdown para escribir documentación en MDN Web Docs.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This page lists many of the general-purpose macros created for use on MDN.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T101648Z" creationid="gitnacho" creationdate="20221005T101541Z">
        <seg>Esta página enumera muchas de las macros de propósito general creadas para usarlas en MDN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This pattern of the {{HTTPHeader("Origin")}} and {{HTTPHeader("Access-Control-Allow-Origin")}} headers is the simplest use of the access control protocol.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222152Z" creationid="gitnacho" creationdate="20221011T222152Z">
        <seg>Este patrón de los encabezados {{HTTPHeader("Origin")}} y {{HTTPHeader("Access-Control-Allow-Origin")}} es el uso más simple del protocolo de control de acceso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This promise will resolve with the requested resource, which may be from the cache, a preloaded fetch request, or a new network request.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210424Z" creationid="gitnacho" creationdate="20220922T210424Z">
        <seg>Esta promesa se resolverá con el recurso solicitado, que puede ser desde la caché, una solicitud de recuperación precargada o una nueva solicitud de red.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This provides WebAssembly with a multitude of advances in terms of architectural efficiency:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T234045Z" creationid="gitnacho" creationdate="20221006T234045Z">
        <seg>Esta proporciona a WebAssembly una multitud de avances en términos de eficiencia arquitectónica:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This provides developers with a way to include custom data inside wasm modules for other purposes,
for example the [name custom section](https://github.com/WebAssembly/design/blob/main/BinaryEncoding.md#name-section),
which allows developers to provide names for all the functions and
locals in the module (like "symbols" in a native build).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T222411Z" creationid="gitnacho" creationdate="20221019T222411Z">
        <seg>Esto proporciona a los desarrolladores una forma de incluir datos personalizados dentro de los módulos `wasm` para otros fines, por ejemplo, la [sección personalizada `name`](https://github.com/WebAssembly/design/blob/main/BinaryEncoding.md#name-section),
que permite a los desarrolladores proporcionar nombres para todas las funciones y
locales en el módulo (como "símbolos" en una compilación nativa).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This reference lists the web platform features available only in secure contexts — see [Secure Contexts](/en-US/docs/Web/Security/Secure_Contexts) for a definition and more details.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T232651Z" creationid="gitnacho" creationdate="20221018T232536Z">
        <seg>Esta referencia enumera las características de la plataforma web disponibles solo en contextos seguros; consulta [Contextos seguros](/es/docs/Web/Security/Secure_Contexts) para obtener una definición y más detalles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This registers a service worker, which runs in a worker context, and therefore has no DOM access.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T053132Z" creationid="gitnacho" creationdate="20220921T025048Z">
        <seg>Esto registra un *service worker*, que se ejecuta en un contexto del *worker* y, por lo tanto, no tiene acceso al DOM.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This repo stores the example code blocks that are found at the top of many of our reference pages ([example](/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T102125Z" creationid="gitnacho" creationdate="20221008T102125Z">
        <seg>Este repositorio almacena los bloques de código de ejemplo que se encuentran en la parte superior de muchas de nuestras páginas de referencia ([example](/es/docs/Web/JavaScript/Reference/Global_Objects/globalThis)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This results in "Hi" being printed to the console:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064850Z" creationid="gitnacho" creationdate="20221007T064850Z">
        <seg>Esto da como resultado que se imprima "Hola" en la consola:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This section lists APIs that specifications make available only in secure contexts.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T232709Z" creationid="gitnacho" creationdate="20221018T232709Z">
        <seg>Esta sección enumera las API que las especificaciones ponen a disposición solo en contextos seguros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This section lists headers that clients may use when issuing HTTP requests in order to make use of the cross-origin sharing feature.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060415Z" creationid="gitnacho" creationdate="20221012T060415Z">
        <seg>Esta sección enumera los encabezados que los clientes pueden usar al emitir solicitudes HTTP para hacer uso de la función de uso compartido entre orígenes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This section lists the HTTP response headers that servers return for access control requests as defined by the Cross-Origin Resource Sharing specification.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053710Z" creationid="gitnacho" creationdate="20221012T053710Z">
        <seg>Esta sección enumera los encabezados de respuesta HTTP que los servidores devuelven para las solicitudes de control de acceso según lo definido por la especificación del intercambio de recursos de origen cruzado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This section will list examples of common patterns for templates used on MDN, including samples of legacy DekiScript templates and their new KumaScript equivalents.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T075152Z" creationid="gitnacho" creationdate="20221005T075152Z">
        <seg>Esta sección enumerará ejemplos de patrones comunes para plantillas utilizadas en MDN, incluidas muestras de plantillas de DekiScript heredadas y sus nuevos equivalentes de KumaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This secure connection allows clients to safely exchange sensitive data with a server, such as when performing banking activities or online shopping.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T202131Z" creationid="gitnacho" creationdate="20221018T202131Z">
        <seg>Esta conexión segura permite a los clientes intercambiar de forma segura datos confidenciales con un servidor, como cuando realizan actividades bancarias o compras en línea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This set of articles aims to guide complete beginners to web development with all that they need to start coding websites.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T234043Z" creationid="gitnacho" creationdate="20221012T231650Z">
        <seg>Si quieres aprender a crear tus propias páginas web, sitios o aplicaciones, has venido al lugar indicado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This starts a web server.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T070058Z" creationid="gitnacho" creationdate="20221004T070058Z">
        <seg>Esto inicia un servidor web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This summary is used for search engine optimization (SEO) and also automatically included alongside page listings by some macros.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191634Z" creationid="gitnacho" creationdate="20221008T191634Z">
        <seg>Este resumen se utiliza para la optimización de motores de búsqueda (SEO) y también se incluye automáticamente junto con las listas de páginas de algunas macros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This surface can be a touch screen or trackpad, for example.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220916T072915Z" creationid="gitnacho" creationdate="20220916T072915Z">
        <seg>Esta superficie puede ser una pantalla táctil o un trackpad, por ejemplo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This tag can be passed to a WebAssembly module as a tag import, where it will become a typed tag defined in the _tag section_ of the WebAssembly module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015309Z" creationid="gitnacho" creationdate="20221008T015309Z">
        <seg>Esta etiqueta se puede pasar a un módulo WebAssembly como una `import tag`, donde se convertirá en una etiqueta con tipo definido en la _sección `tag`_ del módulo WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This timeline is a special instance of {{domxref("DocumentTimeline")}} that is automatically created on page load.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221006T092617Z">
        <seg>Esta línea de tiempo es una instancia especial de {{DOMxRef("DocumentTimeline")}} que se crea automáticamente al cargar la página.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This timeline is unique to each `document` and persists for the lifetime of the `document` including calls to {{domxref("Document.open()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221006T092634Z">
        <seg>Esta línea de tiempo es única para cada `document` y persiste durante la vida útil del `document`, incluidas las llamadas a {{DOMxRef("Document.open()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This topic covers MathML.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131622Z" creationid="gitnacho" creationdate="20221020T131622Z">
        <seg>Este tema cubre MathML.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This topic gives you all you need to know.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131417Z" creationid="gitnacho" creationdate="20221020T131417Z">
        <seg>Este tema te da todo lo que necesitas saber.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This topic provides a general introduction to how the server-side works and detailed tutorials showing how to build up a server-side app using two popular frameworks: Django (Python) and Express (Node.js).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131840Z" creationid="gitnacho" creationdate="20221020T131840Z">
        <seg>Este tema proporciona una introducción general a cómo funciona el lado del servidor y tutoriales detallados que muestran cómo construir una aplicación de lado del servidor utilizando dos marcos de desarrollo populares: Django (Python) y Express (Node.js).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This topic provides comprehensive coverage of CSS.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131045Z" creationid="gitnacho" creationdate="20221020T131045Z">
        <seg>Este tema proporciona una amplia cobertura de CSS.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This topic teaches HTML in detail.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T130948Z" creationid="gitnacho" creationdate="20221020T130948Z">
        <seg>Este tema enseña el HTML en detalle.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This topic teaches all the essentials needed to become comfortable with writing and understanding JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T131143Z" creationid="gitnacho" creationdate="20221020T131143Z">
        <seg>Este tema enseña todo lo esencial necesario para sentirte cómodo con la escritura y comprensión de JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This tutorial takes you through all you need to know to compile a Rust project to wasm and use it in an existing web app.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T095240Z" creationid="gitnacho" creationdate="20221003T095240Z">
        <seg>Este tutorial te enseña todo lo que necesitas saber para compilar un proyecto de Rust a `.wasm` y usarlo en una aplicación web existente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This type is used when performing type checking of the table function reference calls later on.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072713Z" creationid="gitnacho" creationdate="20221007T072713Z">
        <seg>Este tipo se utiliza cuando se realiza la comprobación de tipo de las llamadas de referencia de función de tabla más adelante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This will convert the wasm into a file called `simple.wasm`, which contains the `.wasm` assembly code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182911Z" creationid="gitnacho" creationdate="20221007T182911Z">
        <seg>Esto convertirá el `wasm` en un archivo llamado `simple.wasm`, que contiene el código ensamblador `.wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This will give you an output in your terminal in the following way:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T183035Z" creationid="gitnacho" creationdate="20221007T183035Z">
        <seg>Esto te dará una salida en tu terminal de la siguiente manera:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This will produce the following HTML:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181631Z" creationid="gitnacho" creationdate="20221008T181631Z">
        <seg>Esto producirá el siguiente HTML:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This will take one `i32` as a parameter, which is given the argument name `$i`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072744Z" creationid="gitnacho" creationdate="20221007T072744Z">
        <seg>Esto tomará un `i32` como parámetro, al que se le asigna el nombre de argumento `$i`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This would look like the following:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061557Z" creationid="gitnacho" creationdate="20221007T061557Z">
        <seg>Esto se vería como lo siguiente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>This would mean that if extra images were added to the Star Wars gallery, our app could automatically grab them and cache them.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040128Z" creationid="gitnacho" creationdate="20220921T040128Z">
        <seg>Esto significaría que si se agregaran imágenes adicionales a la galería de Star Wars, nuestra aplicación podría capturarlas automáticamente y almacenarlas en caché.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Those are called _simple requests_ from the obsolete [CORS spec](https://www.w3.org/TR/2014/REC-cors-20140116/#terminology), though the [Fetch spec](https://fetch.spec.whatwg.org/) (which now defines CORS) doesn't use that term.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220059Z" creationid="gitnacho" creationdate="20221011T220059Z">
        <seg>Se denominan _solicitudes simples_ de la [especificación CORS](https://www.w3.org/TR/2014/REC-cors-20140116/#terminology) obsoleta, aunque la [especificación Fetch](https://fetch. spec.whatwg.org/) (que ahora define CORS) no usa ese término.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Though there's only one cache in this example, the same approach can be used for multiple caches.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T203741Z" creationid="gitnacho" creationdate="20221003T203741Z">
        <seg>Aunque solo hay una caché en este ejemplo, se puede usar el mismo enfoque para varias cachés.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Thus, tables are currently a rather low-level primitive used to compile low-level programming language features safely and portably.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233044Z" creationid="gitnacho" creationdate="20221006T233044Z">
        <seg>Por lo tanto, las tablas actualmente son una primitiva de bajo nivel que se utiliza para compilar funciones de lenguajes de programación de bajo nivel de forma segura y portátil.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Thus, to access any Web API, WebAssembly needs to call out to JavaScript, which then makes the Web API call.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T081332Z" creationid="gitnacho" creationdate="20221003T081332Z">
        <seg>Luego, para acceder a cualquier API Web, WebAssembly necesita llamar a JavaScript, que entonces llamará a la API Web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Thus, you could rewrite our previous signature like so:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054728Z" creationid="gitnacho" creationdate="20221007T054728Z">
        <seg>Por lo tanto, podrías reescribir nuestra firma anterior así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Time to complete: 1.5–2 hours</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224000Z" creationid="gitnacho" creationdate="20221018T224000Z">
        <seg>Tiempo para completar: 1.5 a 2 horas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Time to complete: 135–185 hours</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224745Z" creationid="gitnacho" creationdate="20221018T224745Z">
        <seg>Tiempo para completar: 135 a 185 horas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Time to complete: 35–50 hours</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224149Z" creationid="gitnacho" creationdate="20221018T224149Z">
        <seg>Tiempo para completar: 35 a 50 horas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Time to complete: 40–50 hours</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224931Z" creationid="gitnacho" creationdate="20221018T224931Z">
        <seg>Tiempo para completar: 40 a 50 horas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Time to complete: 45–55 hours</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T225120Z" creationid="gitnacho" creationdate="20221018T225055Z">
        <seg>Tiempo para completar: 45 a 55 horas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Time to complete: 55–90 hours</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T225242Z" creationid="gitnacho" creationdate="20221018T225242Z">
        <seg>Tiempo para completar: 55 a 90 horas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Time to complete: 90–120 hours</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224315Z" creationid="gitnacho" creationdate="20221018T224315Z">
        <seg>Tiempo para completar: 90 a 120 horas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To achieve this you can hide any code blocks which are note relevant with the `hidden` class.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211732Z" creationid="gitnacho" creationdate="20221005T211732Z">
        <seg>Para lograr esto, puedes ocultar cualquier bloque de código que sea relevante para la clase `hidden`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To allow error logging for sites which use a separate domain for static media, use this attribute.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T123503Z" creationid="gitnacho" creationdate="20221003T123503Z">
        <seg>Para permitir el registro de errores para sitios que usan un dominio separado para medios estáticos, usa este atributo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To begin, you'll need to answer these questions:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061038Z" creationid="gitnacho" creationdate="20221019T061038Z">
        <seg>Para comenzar, deberás responder estas preguntas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To build the package, we need an additional tool, `wasm-pack`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061537Z" creationid="gitnacho" creationdate="20221004T061537Z">
        <seg>Para construir el paquete, necesitamos una herramienta adicional, `wasm-pack`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To call them, note that we must add the function invocation operator `()` after the `get()` call:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T005716Z" creationid="gitnacho" creationdate="20221020T005716Z">
        <seg>Para llamarlas, ten en cuenta que debemos agregar el operador de invocación de función `()` después de la llamada a `get()`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To check if cross origin isolation has been successful, you can test against the [`crossOriginIsolated`](/en-US/docs/Web/API/crossOriginIsolated) property available to window and worker contexts:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20220923T023809Z">
        <seg>Para verificar si el aislamiento de origen cruzado ha sido exitoso, puedes probar con la propiedad [`crossOriginIsolated`](/es/docs/Web/API/crossOriginIsolated) disponible para los contextos de `window` y `worker`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To choose a color, go to [the Color Picker](/en-US/docs/Web/CSS/CSS_Colors/Color_picker_tool) and find a color you like.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062331Z" creationid="gitnacho" creationdate="20221019T062331Z">
        <seg>Para elegir un color, ve al [Selector de color](/es/docs/Web/CSS/CSS_Colors/Color_picker_tool) y busca un color que te guste.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To choose a font:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062905Z" creationid="gitnacho" creationdate="20221019T062905Z">
        <seg>Para elegir un tipo de letra:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To choose an image, go to [Google Images](https://www.google.com/imghp?gws_rd=ssl) and search for something suitable.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062529Z" creationid="gitnacho" creationdate="20221019T062529Z">
        <seg>Para elegir una imagen, ve a [Imágenes Google](https://www.google.com/imghp?gws_rd=ssl) y busca algo adecuado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To compile our code correctly, we first need to configure it with `Cargo.toml`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063622Z" creationid="gitnacho" creationdate="20221004T063622Z">
        <seg>Para compilar correctamente nuestro código, primero lo debemos configurar con `Cargo.toml`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To compile this program, you need to tell the compiler where it can find libwebp's header files using the `-I` flag and also pass it all the C files of libwebp that it needs.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053603Z" creationid="gitnacho" creationdate="20221004T053603Z">
        <seg>Para compilar este programa, necesitas decirle al compilador dónde puede encontrar los archivos de encabezado de `libwebp` usando el indicador `-I` y también pasarle todos los archivos C de `libwebp` que necesita.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To copy the learning area repo to a folder called learning-area in the current location your command prompt/terminal is pointing to, use the following command:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T173632Z" creationid="Nachec" creationdate="20221020T173632Z">
        <seg>Para copiar el repositorio del área de aprendizaje a un directorio llamado `learning-area` en la ubicación actual, en la ventana de tu Terminal o en la línea de comandos, debes usar el siguiente comando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To create a WebAssembly global instance from inside your JavaScript, you use the [`WebAssembly.Global()`](/en-US/docs/WebAssembly/JavaScript_interface/Global) constructor, which looks like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233747Z" creationid="gitnacho" creationdate="20221006T233747Z">
        <seg>Para crear una instancia global de WebAssembly desde dentro de tu JavaScript, utiliza el constructor [`WebAssembly.Global()`](/es/docs/WebAssembly/JavaScript_interface/Global), que tiene este aspecto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To create an equivalent value using JavaScript, you'd use the [`WebAssembly.Global()`](/en-US/docs/WebAssembly/JavaScript_interface/Global) constructor:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T063603Z" creationid="gitnacho" creationdate="20221007T063603Z">
        <seg>Para crear un valor equivalente usando JavaScript, deberías usar el constructor [`WebAssembly.Global()`](/es/docs/WebAssembly/JavaScript_interface/Global):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To create definition lists in MDN authors write a modified form of a GFM unordered list ({{HTMLElement("ul")}}).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182448Z" creationid="gitnacho" creationdate="20221008T182448Z">
        <seg>Para crear listas de definiciones en MDN, los autores escriben una forma modificada de una lista desordenada de GFM ({{HTMLElement("ul")}}).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To deal with strings and other more complex data types, WebAssembly provides **memory** (although we also have [Reference types](#reference_types) in newer implementation of WebAssembly).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T063801Z" creationid="gitnacho" creationdate="20221007T063801Z">
        <seg>Para manejar cadenas y otros tipos de datos más complejos, WebAssembly proporciona **`memory`** (aunque también tenemos [Tipos `Reference`](#tipos_reference) en la implementación más reciente de WebAssembly).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To demonstrate just the very basics of registering and installing a service worker, we have created a simple demo called [simple service worker](https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker), which is a simple Star wars Lego image gallery.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T023748Z" creationid="gitnacho" creationdate="20220921T023748Z">
        <seg>Para demostrar los conceptos básicos de registro e instalación de un *service worker*, hemos creado una demostración simple llamada [*service worker* simple](https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker), que es una simple galería de imágenes de Star Wars Lego.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To do this, they will use a GFM blockquote with a special first paragraph.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181128Z" creationid="gitnacho" creationdate="20221008T181128Z">
        <seg>Para hacerlo, usarán un bloque de cita GFM con un primer párrafo especial.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To do this, we can use the wabt tool, which includes compilers to convert between WebAssembly's text representation and wasm, and vice versa, plus more besides.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182815Z" creationid="gitnacho" creationdate="20221007T182815Z">
        <seg>Para hacerlo, podemos usar la herramienta `wabt`, que incluye compiladores para convertir entre la representación de texto de WebAssembly y `wasm`, y viceversa, entre otras cosas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To do this, we use Service Worker's storage API — {{domxref("cache")}} — a global object on the service worker that allows us to store assets delivered by responses, and keyed by their requests.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T034149Z">
        <seg>Para hacer esto, usamos la API de almacenamiento de *Service Worker*: {{DOMxRef("cache")}} — un objeto global en *Service Worker* que nos permite almacenar los activos entregados por las respuestas y con clave de sus solicitudes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To download and install it, enter the following command into your terminal:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061618Z" creationid="gitnacho" creationdate="20221004T061618Z">
        <seg>Para descargarlo e instalarlo, ingresa el siguiente comando en tu terminal:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To enable WebAssembly to be read and edited by humans, there is a textual representation of the wasm binary format.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053215Z" creationid="gitnacho" creationdate="20221007T044852Z">
        <seg>Para permitir que los humanos lean y editen WebAssembly, existe una representación textual del formato binario `wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To find out how to help, visit our [Getting started](/en-US/docs/MDN/Community/Contributing/Getting_started) page.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T200453Z" creationid="gitnacho" creationdate="20221008T200453Z">
        <seg>Para saber cómo ayudar, visita nuestra página [Cómo empezar](/es/docs/MDN/Community/Contributing/Getting_started).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To finish this tour of the WebAssembly text format, let's look at the most intricate, and often confusing, part of WebAssembly: **tables**.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T065009Z" creationid="gitnacho" creationdate="20221007T065009Z">
        <seg>Para finalizar este recorrido por el formato de texto de WebAssembly, echemos un vistazo a la parte más compleja y, a menudo, confusa de WebAssembly: **`tables`**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To fix the problem, just delete the macro.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082250Z" creationid="gitnacho" creationdate="20221005T082250Z">
        <seg>Para solucionar el problema, simplemente elimina la macro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To get Node.js and npm, go to the [Get npm!](https://docs.npmjs.com/getting-started/) page and follow the instructions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065232Z" creationid="gitnacho" creationdate="20221004T065232Z">
        <seg>Para obtener Node.js y npm, ve a la página [¡Obtener npm!](https://docs.npmjs.com/getting-started/) y sigue las instrucciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To get the most out of this series of articles you should already have basic to intermediate [JavaScript](/en-US/docs/Learn/Getting_started_with_the_web/JavaScript_basics) knowledge.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221002T100503Z">
        <seg>Para aprovechar al máximo esta serie de artículos, ya debes tener conocimientos básicos a intermedios de [JavaScript](/es/docs/Learn/Getting_started_with_the_web/JavaScript_basics).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To get the special styling, writers should apply the `"properties"` class to the table:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191226Z" creationid="gitnacho" creationdate="20221008T191226Z">
        <seg>Para obtener el estilo especial, los escritores deben aplicar la clase `"properties"` a la tabla:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To learn about them in detail, check out [this blog post on Mozilla Hacks](https://hacks.mozilla.org/2018/04/hello-wasm-pack/).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064103Z" creationid="gitnacho" creationdate="20221004T064103Z">
        <seg>Para conocerlos en detalle, consulta [esta publicación del blog sobre Mozilla Hacks](https://hacks.mozilla.org/2018/04/hello-wasm-pack/).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To make it a little more "safe", here we also test that we have the right tag using the [`is()` method](/en-US/docs/WebAssembly/JavaScript_interface/Exception/is).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T143239Z" creationid="gitnacho" creationdate="20221019T143239Z">
        <seg>Para hacerlo un poco más "seguro", aquí también probamos que tenemos la etiqueta correcta usando el método [`is()`](/es/docs/WebAssembly/JavaScript_interface/Exception/is).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To prove that it worked, turn your result buffer into a blob and use it on an `&lt;img&gt;` element:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T055213Z" creationid="gitnacho" creationdate="20221004T055213Z">
        <seg>Para probar que funcionó, convierte tu búfer de resultados en un blob y utilízalo en un elemento `&lt;img&gt;`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To prove this, we then retrieve these references back from `otherTable` and print their results to console too, which gives the same results.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085708Z" creationid="gitnacho" creationdate="20221006T085708Z">
        <seg>Para probar esto, luego recuperamos estas referencias de `otherTable` e imprimimos sus resultados en la consola también, lo cual da los mismos resultados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To reduce your likelihood of violating copyright, you can use Google's license filter.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062716Z" creationid="gitnacho" creationdate="20221019T062716Z">
        <seg>Para reducir tu probabilidad de violar los derechos de autor, puedes utilizar el filtro de licencias de Google.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To request script-inserted external scripts be executed in the insertion order in browsers where the `document.createElement("script").async` evaluates to `true` (such as Firefox 4), set `async="false"` on the scripts you want to maintain order.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134724Z" creationid="gitnacho" creationdate="20221003T134724Z">
        <seg>Para solicitar que los scripts externos insertados en el script se ejecuten en el orden de inserción en los navegadores donde `document.createElement("script").async` se evalúa como `true` (tal como Firefox 4), establece `async="false"` en los scripts que deseas mantener en orden.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To retrieve all keys within a certain range, you can use the following code constructs:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220911T211727Z" creationid="gitnacho" creationdate="20220911T211727Z">
        <seg>Para recuperar todas las claves dentro de un cierto rango, puedes usar las siguientes construcciones de código:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To run code using service workers, you'll need to serve your code via HTTPS — Service workers are restricted to running across HTTPS for security reasons.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T022516Z" creationid="gitnacho" creationdate="20220921T020652Z">
        <seg>Para ejecutar código con el *service worker*, deberás entregar tu código a través de HTTPS: el *service worker*, por razones de seguridad, está restringido a ejecutarse a través de HTTPS.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To see this in action, we'll create a single import object containing a Memory object and a Table object, and pass this same import object to multiple [`instantiate()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiate) calls.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073818Z" creationid="gitnacho" creationdate="20221007T073818Z">
        <seg>Para ver esto en acción, crearemos un solo objeto `import` que contenga un objeto `Memory` y un objeto `Table`, y pasaremos este mismo objeto `import` a múltiples llamadas a [`instantiate()`](/es/docs/WebAssembly/JavaScript_interface/instantiate).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To see why tables are needed, we need to first observe that the `call` instruction we saw earlier (see [Calling functions from other functions in the same module](#calling_functions_from_other_functions_in_the_same_module)) takes a static function index and thus can only ever call one function — but what if the callee is a runtime value?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T065113Z" creationid="gitnacho" creationdate="20221007T065113Z">
        <seg>Para ver por qué se necesitan tablas, primero debemos observar que la instrucción `call` que vimos anteriormente (consulta [Llamar funciones desde otras funciones en el mismo módulo](#llamar_funciones_desde_otras_funciones_en_el_mismo_módulo)) toma un índice de función estático y, por lo tanto, solo puedes llamar una función, pero ¿y si el destinatario es un valor del entorno de ejecución?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To share memory using {{jsxref("SharedArrayBuffer")}} objects from one agent in the cluster to another (an agent is either the web page's main program or one of its web workers), [`postMessage`](/en-US/docs/Web/API/Worker/postMessage) and [structured cloning](/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm) is used.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20220922T233017Z">
        <seg>Para compartir memoria usando objetos {{jsxref("SharedArrayBuffer")}} de un agente en el clúster a otro (un agente es el programa principal de la página web o uno de sus *web workers*), [`postMessage`](/es/docs/Web/API/Worker/postMessage) y [clonación estructurada](/es/docs/Web/API/Web_Workers_API/Structured_clone_algorithm).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To start off simple, expose `WebPGetEncoderVersion()` from `encode.h` to JavaScript by writing a C file called `webp.c`:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053420Z" creationid="gitnacho" creationdate="20221004T053420Z">
        <seg>Para empezar de manera simple, expón `WebPGetEncoderVersion()` desde `encode.h` a JavaScript escribiendo un archivo C llamado `webp.c`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To start with, make a copy of the above listing inside a text file; call it `simple.wat`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182724Z" creationid="gitnacho" creationdate="20221007T182724Z">
        <seg>Para empezar, haz una copia de la lista anterior dentro de un archivo de texto; nómbralo `simple.wat`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To start with, save the following code as `hello3.c` in a new directory:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111632Z" creationid="gitnacho" creationdate="20221003T111632Z">
        <seg>Para empezar, guarda el siguiente código como `hello3.c` en un nuevo directorio:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To synchronize, {{jsxref("Atomics", "atomic", "", 1)}} operations are needed.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T023501Z" creationid="gitnacho" creationdate="20220923T023501Z">
        <seg>Para sincronizar, se necesitan operaciones {{jsxref("Atomics", "atomic", "", 1)}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To take full advantage of these technologies, you need to know how to use them.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T092907Z" creationid="gitnacho" creationdate="20221002T092907Z">
        <seg>Para aprovechar al máximo estas tecnologías, debes saber cómo utilizarlas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To use WebAssembly in JavaScript, you first need to pull your module into memory before compilation/instantiation.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T071226Z" creationid="gitnacho" creationdate="20221004T071226Z">
        <seg>Para usar WebAssembly en JavaScript, primero debes extraer tu módulo en la memoria antes de la compilación/instanciación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To use a macro, you enclose the call to the macro in a pair of double-braces along with its parameters, if any:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T094858Z" creationid="gitnacho" creationdate="20221005T094858Z">
        <seg>Para usar una macro, encierra la llamada a la macro entre un par de llaves dobles junto con sus parámetros, si los hay:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To use it, just do something like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T074625Z" creationid="gitnacho" creationdate="20221005T074625Z">
        <seg>Para usarlo, solo haz algo como esto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>To view it, you can go to the Debugger Panel and click on the "wasm://" entry.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T181750Z" creationid="gitnacho" creationdate="20221006T181750Z">
        <seg>Para verlo, puedes ir al Panel del depurador y hacer clic en la entrada "wasm://".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Together, they help explain why an element's value fails to validate, if it's not valid.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220916T073311Z" creationid="gitnacho" creationdate="20220916T073311Z">
        <seg>Juntos, ayudan a explicar por qué el valor de un elemento no se valida, si no es válido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Traditional live samples are inserted into the page using the [`EmbedLiveSample`](https://github.com/mdn/yari/blob/main/kumascript/macros/EmbedLiveSample.ejs) macro.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T210830Z" creationid="gitnacho" creationdate="20221005T210830Z">
        <seg>Las muestras en vivo tradicionales se insertan en la página mediante la macro [`EmbedLiveSample`](https://github.com/mdn/yari/blob/main/kumascript/macros/EmbedLiveSample.ejs).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Transferable objects are instances of classes like {{jsxref("ArrayBuffer")}}, {{domxref("MessagePort")}} or {{domxref("ImageBitmap")}} objects that can be transferred.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221007T115730Z">
        <seg>Los objetos transferibles son instancias de clases como objetos {{jsxref("ArrayBuffer")}}, {{DOMxRef("MessagePort")}} o {{DOMxRef("ImageBitmap")}} que se pueden transferir.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Try this now in your demo — save what you've added so far, load it in your browser, then try entering the above two lines in your JavaScript console.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T210413Z" creationid="gitnacho" creationdate="20221006T210413Z">
        <seg>Prueba esto ahora en tu demostración: guarda lo que has agregado hasta ahora, cárgalo en tu navegador, luego intenta ingresar las dos líneas anteriores en tu consola de JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Try this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T183024Z" creationid="gitnacho" creationdate="20221007T183024Z">
        <seg>Prueba esto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Two objects have the same origin only when the scheme, hostname, and port all match.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T151418Z" creationid="gitnacho" creationdate="20221017T151418Z">
        <seg>Dos objetos tienen el mismo origen solo cuando el esquema, el nombre de host y el puerto coinciden.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Two of the many options for creating WASM code are an online wasm assembler or [Emscripten](https://emscripten.org/).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T085935Z" creationid="gitnacho" creationdate="20221003T080854Z">
        <seg>Dos de las muchas opciones para crear código WASM son o bien, un ensamblador WASM en línea, o [Emscripten](https://emscripten.org/).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Type this into your terminal:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064011Z" creationid="gitnacho" creationdate="20221004T064011Z">
        <seg>Escribe esto en tu terminal:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>U</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210919T153238Z" creationid="gitnacho" creationdate="20210919T153238Z">
        <seg>U</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>UX designers have a somewhat more abstract role in addressing how users will experience and interact with the website.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061917Z" creationid="gitnacho" creationdate="20221019T061917Z">
        <seg>Los diseñadores de experiencia de usuario tienen un papel algo más abstracto al abordar cómo los usuarios experimentarán e interactuarán con el sitio web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Under this assumption, the server doesn't have to opt-in (by responding to a preflight request) to receive any request that looks like a form submission, since the threat of CSRF is no worse than that of form submission.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T220302Z" creationid="gitnacho" creationdate="20221011T220302Z">
        <seg>Bajo esta suposición, el servidor no tiene que participar (respondiendo a una solicitud de verificación previa) para recibir cualquier solicitud que parezca un envío de formulario, ya que la amenaza de CSRF no es peor que la del envío de formulario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Unfortunately, it seems like migration has failed to convert some of them properly.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082358Z" creationid="gitnacho" creationdate="20221005T082358Z">
        <seg>Desafortunadamente, parece que la migración no ha logrado convertir algunas de ellas satisfactoriamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Unlike [_simple requests_](#simple_requests), for "preflighted" requests the browser first sends an HTTP request using the {{HTTPMethod("OPTIONS")}} method to the resource on the other origin, in order to determine if the actual request is safe to send.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222537Z" creationid="gitnacho" creationdate="20221011T222537Z">
        <seg>A diferencia de las [_solicitudes simples_](#solicitudes_simples), para las solicitudes "preverificadas", el navegador primero envía una solicitud HTTP usando el método {{HTTPMethod("OPTIONS")}} al recurso en el otro origen, para determinar si el la solicitud es segura para enviar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Unlike a native C/C++ program, however, where the available memory range spans the entire process, the memory accessible by a particular WebAssembly Instance is confined to one specific — potentially very small — range contained by a WebAssembly Memory object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T182109Z" creationid="gitnacho" creationdate="20221006T182109Z">
        <seg>Sin embargo, a diferencia de un programa C/C++ nativo, donde el rango de memoria disponible abarca todo el proceso, la memoria a la que puede acceder una instancia de WebAssembly en particular se limita a un rango específico, potencialmente muy pequeño, contenido por un objeto de `Memory` de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Unlike classic scripts, module scripts require the use of the CORS protocol for cross-origin fetching.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T132614Z" creationid="gitnacho" creationdate="20221003T132614Z">
        <seg>A diferencia de los scripts clásicos, los scripts de módulos requieren el uso del protocolo CORS para la obtención de origen cruzado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Unlike most other global objects, `WebAssembly` is not a constructor (it is not a function object).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221009T003320Z" creationid="gitnacho" creationdate="20221009T003320Z">
        <seg>A diferencia de la mayoría de los otros objetos globales, `WebAssembly` no es un constructor (no es un objeto `function`).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Unlike the Abstract Syntax Tree of a programming language, though, WebAssembly's tree is pretty flat, mostly consisting of lists of instructions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053556Z" creationid="gitnacho" creationdate="20221007T053556Z">
        <seg>Sin embargo, a diferencia del árbol de sintaxis abstracta de un lenguaje de programación, el árbol de WebAssembly es bastante plano y consiste principalmente en listas de instrucciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Unlike the `type` attribute, however, this attribute's possible values were never standardized.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T132933Z" creationid="gitnacho" creationdate="20221003T132933Z">
        <seg>Sin embargo, a diferencia del atributo `type`, los posibles valores de este atributo nunca se estandarizaron.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Unlike unshared memories, shared memories must specify a "maximum" size, in both the JavaScript API constructor and wasm text format.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080924Z" creationid="gitnacho" creationdate="20221007T080924Z">
        <seg>A diferencia de las memorias no compartidas, las memorias compartidas deben especificar un tamaño "máximo" `maximum`, tanto en el constructor de la API de JavaScript como en el formato de texto `wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Unshared WebAssembly memories don't need to set a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T215900Z" creationid="gitnacho" creationdate="20221019T215900Z">
        <seg>Las memorias no compartidas de WebAssembly no necesitan establecer un</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Until browsers catch up with the spec, you may be able to work around this limitation by doing one or both of the following:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T224905Z" creationid="gitnacho" creationdate="20221011T224905Z">
        <seg>Hasta que los navegadores se pongan al día con las especificaciones, es posible que se pueda solucionar esta limitación realizando una de las siguientes acciones o ambas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Update the repository using the following command:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T173735Z" creationid="Nachec" creationdate="20221020T173735Z">
        <seg>Puedes realizar actualizaciones al repositorio usando el siguiente comando:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Usage: `\{{Optional_Inline}}` or `\{{ReadOnlyInline}}`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114005Z" creationid="gitnacho" creationdate="20221005T114005Z">
        <seg>Uso: `\{{Optional_Inline}}` o `\{{ReadOnlyInline}}`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Use the constructor ({{domxref("Event.Event", "Event()")}} instead).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T205125Z">
        <seg>Utiliza el constructor ({{DOMxRef("Event.Event", "Event()")}} en su lugar).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Use the event name in methods like {{domxref("EventTarget.addEventListener", "addEventListener()")}}, or set an event handler property.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T224851Z">
        <seg>Utiliza el nombre del evento en métodos como {{DOMxRef("EventTarget.addEventListener", "addEventListener()")}}, o establece una propiedad de controlador de eventos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Use {{domxref("CacheStorage.open", "CacheStorage.open()")}} to open a specific named `Cache` object and then call any of the `Cache` methods to maintain the `Cache`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T202622Z">
        <seg>Usa {{DOMxRef("CacheStorage.open", "CacheStorage.open()")}} para abrir un objeto `Cache` con nombre específico y luego llama a cualquiera de los métodos `Cache` para mantener la `Cache`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Use {{domxref("Event.preventDefault()")}} and {{domxref("Event.defaultPrevented")}} instead.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204816Z">
        <seg>Utiliza {{DOMxRef("Event.preventDefault()")}} y {{DOMxRef("Event.defaultPrevented")}} en su lugar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Use {{domxref("Event.target")}} instead.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221011T204852Z">
        <seg>En su lugar usa {{DOMxRef("Event.target")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Used in templates like so: `&lt;% const my_module = require('MyModule'); %&gt;`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072537Z" creationid="gitnacho" creationdate="20221005T072537Z">
        <seg>Usada en plantillas así: `&lt;% const my_module = require('MyModule'); %&gt;`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>User</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211101T232100Z" creationid="gitnacho" creationdate="20211101T232100Z">
        <seg>User</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>User agent (UA) client hint headers allow a server to vary responses based on the user agent (browser), operating system, and device.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T092352Z" creationid="gitnacho" creationdate="20221012T092352Z">
        <seg>Los encabezados de sugerencia de cliente del agente de usuario (UA) permiten que un servidor varíe las respuestas según el agente de usuario (navegador), el sistema operativo y el dispositivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Using</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T203617Z" creationid="gitnacho" creationdate="20211102T203612Z">
        <seg>Utilizar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Using a Service worker you can easily set an app up to use cached assets first, thus providing a default experience even when offline, before then getting more data from the network (commonly known as [Offline First](https://offlinefirst.org/)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T021137Z" creationid="gitnacho" creationdate="20220921T020422Z">
        <seg>Al usar un *service worker*, puedes configurar fácilmente una aplicación para usar activos almacenados en caché primero, proporcionando así una experiencia predeterminada incluso cuando estás desconectado, antes de obtener más datos de la red (comúnmente conocido como [Primero sin conexión](https://offlinefirst.org/)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Using the built-in `require()` method, you can load a template as a module to share common variables and methods between templates.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073512Z" creationid="gitnacho" creationdate="20221005T073512Z">
        <seg>Con el método `require()` incorporado, puedes cargar una plantilla como un módulo para compartir variables y métodos comunes entre plantillas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Using the example above but hiding the HTML code would look like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211755Z" creationid="gitnacho" creationdate="20221005T211755Z">
        <seg>Usando el ejemplo anterior pero sin mostrar el código HTML se vería así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Using this module in KumaScript templates is not yet very friendly, so you may want to wrap usage in module APIs that simplify things.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072714Z" creationid="gitnacho" creationdate="20221005T072714Z">
        <seg>El uso de este módulo en las plantillas de KumaScript aún no es muy amigable, por lo que es posible que desees incluir el uso en las APIs del módulo para simplificar las cosas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Using this syntax, it's not possible to write a list with more than one consecutive `&lt;dt&gt;` element or more than one consecutive `&lt;dd&gt;` element: the parser will treat this as an error.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183709Z" creationid="gitnacho" creationdate="20221008T183709Z">
        <seg>Usando esta sintaxis, no es posible escribir una lista con más de un elemento `&lt;dt&gt;` consecutivo o más de un elemento `&lt;dd&gt;` consecutivo: el analizador lo tratará como un error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Wait on `event.preloadResponse`, which is passed as `preloadResponsePromise` to the `cacheFirst` function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041347Z" creationid="gitnacho" creationdate="20220921T041347Z">
        <seg>Esperar en `event.preloadResponse`, que se pasa como `preloadResponsePromise` a la función `cacheFirst`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T010738Z" creationid="gitnacho" creationdate="20211102T010738Z">
        <seg>Nosotros</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We all get stuck, whether we are beginner or professional web developers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223731Z" creationid="gitnacho" creationdate="20221018T223731Z">
        <seg>Todos hemos encallado, sin importar que seamos desarrolladores web principiantes o profesionales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We also touched on the concept of multiplicity.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T234315Z" creationid="gitnacho" creationdate="20221006T234315Z">
        <seg>También tocamos el concepto de multiplicidad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We are building an npm package, so you need to have Node.js and npm installed.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065213Z" creationid="gitnacho" creationdate="20221004T065213Z">
        <seg>Estamos creando un paquete npm, por lo que debes tener instalados Node.js y npm.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We are calling the new cache `v2`, so the previous `v1` cache isn't disturbed.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041855Z" creationid="gitnacho" creationdate="20220921T041855Z">
        <seg>Estamos llamando al nuevo caché `v2`, por lo que el caché anterior `v1` no se ve afectado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We are hoping to stop using it some day, but until then MDN will still rely on it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T064518Z" creationid="gitnacho" creationdate="20221005T064518Z">
        <seg>Esperamos dejar de usarlo algún día, pero hasta entonces, MDN seguirá confiando en él.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We call this function in the next section.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062818Z" creationid="gitnacho" creationdate="20221004T062818Z">
        <seg>Llamaremos a esta función en la siguiente sección.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We can also demonstrate that this exception will not match another tag even if the tag is created with the same parameters.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T144542Z" creationid="gitnacho" creationdate="20221019T144542Z">
        <seg>También podemos demostrar que esta excepción no coincidirá con otra etiqueta, incluso si la etiqueta se crea con los mismos parámetros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We can retrieve the index contents using [`Table.prototype.get()`](/en-US/docs/WebAssembly/JavaScript_interface/Table/get):</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T005444Z" creationid="gitnacho" creationdate="20221020T005444Z">
        <seg>Podemos recuperar el contenido del índice usando [`Table.prototype.get()`](/es/docs/WebAssembly/JavaScript_interface/Table/get):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We can see it is of type `WebAssembly.Exception`, but if we didn't have the right tag we couldn't do much else.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023608Z" creationid="gitnacho" creationdate="20221008T023608Z">
        <seg>Podemos ver que es del tipo `WebAssembly.Exception`, pero si no tuviéramos la etiqueta correcta, no podríamos hacer mucho más.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We can then grow the instance by one page like so:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T214623Z" creationid="gitnacho" creationdate="20221019T214623Z">
        <seg>Luego podemos hacer crecer la instancia en una página así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We could also use the tag to create a [`WebAssembly.Exception`](/en-US/docs/WebAssembly/JavaScript_interface/Exception) and throw that from a function called by WebAssembly.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015547Z" creationid="gitnacho" creationdate="20221008T015547Z">
        <seg>También podríamos usar la etiqueta para crear una [`WebAssembly.Exception`](/es/docs/WebAssembly/JavaScript_interface/Exception) y lanzarla desde una función llamada por WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We could do this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040043Z" creationid="gitnacho" creationdate="20220921T040043Z">
        <seg>Podríamos hacer esto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We could start by responding with the resource whose URL matches that of the network request, in each case:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035311Z" creationid="gitnacho" creationdate="20220921T035311Z">
        <seg>Podríamos empezar respondiendo con el recurso cuya URL coincida con la de la solicitud de red, en cada caso:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We could use the following call:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T212305Z" creationid="gitnacho" creationdate="20221005T212305Z">
        <seg>Podríamos usar la siguiente llamada:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We expect almost all definition lists on MDN will work with this limitation, and for those that do not, authors can fall back to raw HTML.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183759Z" creationid="gitnacho" creationdate="20221008T183759Z">
        <seg>Esperamos que casi todas las listas de definición en MDN funcionen con esta limitación, y para aquellas que no lo hagan, los autores pueden recurrir al HTML puro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We give a high-level explanation here, and gloss over some details; to learn more about Rust, please check the free online book [The Rust Programming Language](https://doc.rust-lang.org/book/).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062051Z" creationid="gitnacho" creationdate="20221004T062051Z">
        <seg>Damos una explicación de alto nivel aquí y pasamos por alto algunos detalles; para obtener más información sobre Rust, consulta el libro en línea gratuito [El lenguaje de programación Rust](https://doc.rust-lang.org/book/).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We have already seen JavaScript calling WebAssembly functions, but what about WebAssembly calling JavaScript functions?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061344Z" creationid="gitnacho" creationdate="20221007T061344Z">
        <seg>Ya hemos visto JavaScript llamando a funciones de WebAssembly, pero ¿qué pasa con WebAssembly llamando a funciones de JavaScript?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We have chosen GitHub-Flavored Markdown (GFM) as a baseline, and added some extensions to support some of the things we need to do on MDN that aren't readily supported in GFM.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T173738Z" creationid="gitnacho" creationdate="20221008T173654Z">
        <seg>Elegimos GitHub con sabor a Markdown (GFM — _GitHub-Flavored Markdown_) como referencia y agregamos algunas extensiones para admitir algunas de las cosas que necesitamos hacer en MDN que no son compatibles con GFM.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We have opted for this fallback image because the only updates that are likely to fail are new images, as everything else is depended on for installation in the `install` event listener we saw earlier.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T051555Z" creationid="gitnacho" creationdate="20220921T040737Z">
        <seg>Hemos optado por esta imagen alternativa porque las únicas actualizaciones que probablemente fallarán son las imágenes nuevas, ya que todo lo demás depende de la instalación en el detector de eventos `install` que vimos anteriormente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We have run into performance problems, however, when trying to use JavaScript for more intensive use cases like 3D games, Virtual and Augmented Reality, computer vision, image/video editing, and a number of other domains that demand native performance (see [WebAssembly use cases](https://webassembly.org/docs/use-cases/) for more ideas).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T005548Z" creationid="gitnacho" creationdate="20221003T005548Z">
        <seg>Sin embargo, hemos llegado a tener problemas de rendimiento cuando se trata de usar JavaScript para casos de uso más intenso, como juegos 3D, Realidad Virtual y Aumentada, visión por computadora, edición de vídeo/imágenes y algunos otros dominios de cosas que demandan rendimiento como el de código nativo (ve [Casos de Uso de WebAssembly](http://webassembly.org/docs/use-cases/) para más ideas).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We have tried to make learning front-end web development as comfortable as possible, but you will probably still get stuck because you don't understand something, or some code is just not working.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223712Z" creationid="gitnacho" creationdate="20221018T223712Z">
        <seg>Hemos tratado de hacer que el desarrollo de la interfaz de usuario web sea lo más cómodo posible, pero probablemente todavía quedes encallado porque no entiendes algo o porque algún código simplemente no funciona.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We haven't instructed Rust to optimize for size at all, and doing so cuts down on the size _a lot_.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064420Z" creationid="gitnacho" creationdate="20221004T064420Z">
        <seg>No le hemos indicado a Rust que optimice el tamaño en absoluto, y al hacerlo reduce _mucho_ el tamaño.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We instantiate `table2.wasm` using the [`WebAssembly.instantiateStreaming()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming) method:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T005522Z" creationid="gitnacho" creationdate="20221020T005522Z">
        <seg>Instanciamos `table2.wasm` usando el método [`WebAssembly.instantiateStreaming()`](/es/docs/WebAssembly/JavaScript_interface/instantiateStreaming):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We invite everyone to help!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T203325Z" creationid="gitnacho" creationdate="20221008T200408Z">
        <seg>¡Todos están invitados a participar!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We load it into a webpage using the following JavaScript:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073343Z" creationid="gitnacho" creationdate="20221007T073343Z">
        <seg>Lo cargamos en una página web usando el siguiente JavaScript:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We need to assemble this textual representation into the assembly language the browser actually reads before we can use it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182737Z" creationid="gitnacho" creationdate="20221007T182737Z">
        <seg>Necesitamos ensamblar esta representación textual en el lenguaje ensamblador que el navegador realmente lee antes de que podamos usarlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We need to reflect this two-level namespace in JavaScript when writing the object to be imported into the wasm module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T113227Z" creationid="gitnacho" creationdate="20221006T113227Z">
        <seg>Necesitamos reflejar este espacio de nombres de dos niveles en JavaScript al escribir el objeto que se importará al módulo `wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We now have an npm package, written in Rust, but compiled to WebAssembly.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065311Z" creationid="gitnacho" creationdate="20221004T065311Z">
        <seg>Ahora tenemos un paquete npm, escrito en Rust, pero compilado en WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We present three scenarios that demonstrate how Cross-Origin Resource Sharing works.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T215939Z" creationid="gitnacho" creationdate="20221011T214049Z">
        <seg>Presentamos tres escenarios que demuestran cómo funciona el intercambio de recursos de origen cruzado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We recommend starting with [Visual Studio Code](https://code.visualstudio.com/), which is a free editor, that offers live previews and code hints.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T054455Z" creationid="gitnacho" creationdate="20221012T154827Z">
        <seg>Recomendamos comenzar con [Visual Studio Code](https://code.visualstudio.com/), es un editor gratuito que ofrece vistas previas en vivo y sugerencias de código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We start by trying to open a database, then see if we already have a compiled Module with the key `url` stored in the given `db`:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T051550Z" creationid="gitnacho" creationdate="20221004T051550Z">
        <seg>Comenzamos intentando abrir una base de datos, luego vemos si ya tenemos un Módulo compilado con la clave `url` almacenada en la `db` dada:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We then call an [Exported WebAssembly function](/en-US/docs/WebAssembly/Exported_functions)
that is exported by the `Instance`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T094021Z" creationid="gitnacho" creationdate="20221006T094021Z">
        <seg>Luego llamamos a una [función WebAssembly exportada](/es/docs/WebAssembly/Exported_functions)
que es exportada por la `Instance`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We then create an import object that contains a reference to the table:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T234506Z" creationid="gitnacho" creationdate="20221019T234506Z">
        <seg>Luego creamos un objeto `import` que contiene una referencia a la tabla:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We then create an import object that contains the table:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095552Z" creationid="gitnacho" creationdate="20221006T095552Z">
        <seg>Luego creamos un objeto `import` que contiene la tabla:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We then get the function exported from the module, retrieve the functions it references via [`tbl.get()`](/en-US/docs/WebAssembly/JavaScript_interface/Table/get) and log the result of invoking each one to the console.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085613Z" creationid="gitnacho" creationdate="20221006T085613Z">
        <seg>Luego obtenemos la función exportada desde el módulo, recuperamos las funciones a las que hace referencia a través de [`tbl.get()`](/es/docs/WebAssembly/JavaScript_interface/Table/get) y registramos el resultado de invocar cada una a la consola.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We then print out the table length and contents of the two indexes
(retrieved via [`Table.prototype.get()`](/en-US/docs/WebAssembly/JavaScript_interface/Table/get)) to show that
the length is two, and the indexes currently contain no function references (they
currently return [`null`](/en-US/docs/Web/JavaScript/Reference/Operators/null)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T234443Z" creationid="gitnacho" creationdate="20221019T234443Z">
        <seg>Luego imprimimos la longitud de la tabla y el contenido de los dos índices
(obtenidos a través de [`Table.prototype.get()`](/es/docs/WebAssembly/JavaScript_interface/Table/get)) para mostrar que la longitud es dos, y los índices actualmente no contienen referencias a funciones (actualmente no
devuelve [`null`](/eS/docs/Web/JavaScript/Reference/Operators/null)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We then print out the table length and contents of the two indexes (retrieved via [`Table.prototype.get()`](/en-US/docs/WebAssembly/JavaScript_interface/Table/get) to show that the length is two and both elements are [`null`](/en-US/docs/Web/JavaScript/Reference/Operators/null).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095526Z" creationid="gitnacho" creationdate="20221006T095526Z">
        <seg>Luego imprimimos la longitud de la tabla y el contenido de los dos índices (recuperados a través de [`Table.prototype.get()`](/es/docs/WebAssembly/JavaScript_interface/Table/get) para mostrar que la longitud es dos y ambos elementos son [`null`](/es/docs/Web/JavaScript/Reference/Operators/null).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We then use the {{domxref("XMLHttpRequest.load_event", "load")}} event handler to invoke a function when the response has finished downloading — in this function we get the array buffer from the {{domxref("XMLHttpRequest.response", "response")}} property, and then feed that into our [`WebAssembly.instantiate()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiate) method as we did with Fetch.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221005T061047Z">
        <seg>Luego usamos el controlador de eventos {{DOMxRef("XMLHttpRequest.load_event", "load")}} para invocar una función cuando la respuesta se ha terminado de descargar; en esta función, obtenemos el arreglo del búfer desde {{DOMxRef("XMLHttpRequest.response", "response")}} y luego lo introducimos en nuestro método [`WebAssembly.instantiate()`](/es/docs/WebAssembly/JavaScript_interface/instantiate) como hicimos con Fetch.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We use `wasm-bindgen`'s functionality in our package.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062444Z" creationid="gitnacho" creationdate="20221004T062444Z">
        <seg>Usamos la funcionalidad `wasm-bindgen` en nuestro paquete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We use the {{domxref("CacheStorage.open()")}} method to open a new cache object in which responses can be stored (similar to an IndexedDB object store).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T230848Z">
        <seg>Usamos el método {{DOMxRef("CacheStorage.open()")}} para abrir un nuevo objeto de caché en el que se pueden almacenar las respuestas (similar a un almacén de objetos `IndexedDB`).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We use these features in the next section.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062351Z" creationid="gitnacho" creationdate="20221004T062351Z">
        <seg>Utilizaremos estas características en la siguiente sección.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We will look at both below.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105409Z" creationid="gitnacho" creationdate="20221003T105409Z">
        <seg>Veremos ambos a continuación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We will make use of this but:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184006Z" creationid="gitnacho" creationdate="20221008T184006Z">
        <seg>Las usaremos pero:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We won't use this test code at all, so go ahead and delete it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061856Z" creationid="gitnacho" creationdate="20221004T061856Z">
        <seg>No usaremos este código de prueba en absoluto, así que adelante, elimínalo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We'd like to hear from you about anything you think is wrong or missing on the site, requests for new learning topics, requests for help with items you don't understand, or any other questions or concerns.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T174044Z" creationid="Nachec" creationdate="20221020T174044Z">
        <seg>Nos gustaría saber cualquier cosa de ti, si bien crees que algo está mal o falta en el sitio, o quieres solicitar nuevos temas de aprendizaje, solicitar ayuda con elementos que no comprendes o cualquier otra duda o inquietud que tengas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We'll discuss each one in later sections.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204250Z" creationid="gitnacho" creationdate="20221005T204250Z">
        <seg>Hablaremos de cada uno en secciones posteriores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We'll see shortly what these nodes actually mean.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053809Z" creationid="gitnacho" creationdate="20221007T053809Z">
        <seg>Veremos en breve lo que realmente significan estos nodos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We'll start by creating a simple webpage with a heading, an image, and a few paragraphs.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061031Z" creationid="gitnacho" creationdate="20221019T061031Z">
        <seg>Comenzarás creando una página web simple con un encabezado, una imagen y algunos párrafos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We're done making files.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T070036Z" creationid="gitnacho" creationdate="20221004T070036Z">
        <seg>Hemos terminado de crear archivos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We've kept things static and simple for now.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T023807Z" creationid="gitnacho" creationdate="20220921T023807Z">
        <seg>Hemos mantenido las cosas estáticas y simples por ahora.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We've successfully called from JavaScript into Rust, and from Rust into JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065117Z" creationid="gitnacho" creationdate="20221004T065117Z">
        <seg>Hemos llamado con éxito desde JavaScript a Rust y de Rust a JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>We've successfully used the Rust module with npm.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T070130Z" creationid="gitnacho" creationdate="20221004T070130Z">
        <seg>Hemos utilizado con éxito el módulo Rust con npm.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Web</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210916T011504Z" creationid="gitnacho" creationdate="20210916T011504Z">
        <seg>Web.config</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Web APIs are typically used with JavaScript, although this doesn't always have to be the case.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T040148Z" creationid="gitnacho" creationdate="20221002T040148Z">
        <seg>Las APIs web típicamente se usan con JavaScript, aunque no siempre tiene que ser así.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Web assembly currently has four available _number types_:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074805Z" creationid="gitnacho" creationdate="20221007T074805Z">
        <seg>WebAssembly actualmente tiene cuatro _tipos de números_ disponibles:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Web content's **origin** is defined by the _scheme_ (protocol), _hostname_ (domain), and _port_ of the {{Glossary("URL")}} used to access it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T152529Z" creationid="gitnacho" creationdate="20221017T151410Z">
        <seg>El **origen** del contenido web está definido por el _esquema_ (protocolo), el _nombre de host_ (dominio) y el _puerto_ de la {{Glossary("URL")}} utilizada para acceder a él.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Web pages today very commonly load cross-site resources, including CSS stylesheets, images, scripts, and other resources.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T063505Z" creationid="gitnacho" creationdate="20221012T063505Z">
        <seg>Hoy día, las webs utilizan recursos de otros orígenes muy a menudo, incluyendo hojas de estilo CSS, imágenes, scripts y otros recursos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly Threads (supported in [Firefox 79](/en-US/docs/Mozilla/Firefox/Releases/79) onwards) allow WebAssembly Memory objects to be shared across multiple WebAssembly instances running in separate Web Workers, in the same fashion as [`SharedArrayBuffer`](/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer)s in JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080411Z" creationid="gitnacho" creationdate="20221007T080344Z">
        <seg>Los subprocesos de WebAssembly (compatibles con [Firefox 79](/es/docs/Mozilla/Firefox/Releases/79) en adelante) permiten que los objetos `Memory` de WebAssembly se compartan entre varias instancias de WebAssembly que se ejecutan en *Web Workers* separados, de la misma manera que [`SharedArrayBuffer`](/es/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer) en JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly code that needs to provide a stack trace must call a JavaScript function to create the exception, passing `options.traceStack=true` parameter in the constructor.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T022947Z" creationid="gitnacho" creationdate="20221008T022947Z">
        <seg>El código de WebAssembly que necesita proporcionar un seguimiento de pila debe llamar a una función de JavaScript para crear la excepción, pasando el parámetro `options.traceStack=true` en el constructor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly contains instructions like `i32.load` and `i32.store` for reading and writing from [linear memory](https://webassembly.github.io/spec/core/exec/index.html#linear-memory).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T063906Z" creationid="gitnacho" creationdate="20221007T063906Z">
        <seg>WebAssembly contiene instrucciones como `i32.load` y `i32.store` para leer y escribir desde [memoria lineal](https://webassembly.github.io/spec/core/exec/index.html#linear-memory).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly control flow instructions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T094407Z" creationid="gitnacho" creationdate="20221007T094407Z">
        <seg>Instrucciones de control de flujo WebAssembly</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly could add an `anyfunc` type ("any" because the type could hold functions of any signature), but unfortunately this `anyfunc` type couldn't be stored in linear memory for security reasons.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T065242Z" creationid="gitnacho" creationdate="20221007T065242Z">
        <seg>WebAssembly podría agregar un tipo `anyfunc` ("any" porque el tipo podría contener funciones de cualquier firma), pero desafortunadamente este tipo `anyfunc` no se pudo almacenar en la memoria lineal por razones de seguridad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly doesn't actually have any built-in knowledge of JavaScript, but it does have a general way to import functions that can accept either JavaScript or wasm functions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061402Z" creationid="gitnacho" creationdate="20221007T061402Z">
        <seg>WebAssembly en realidad no tiene ningún conocimiento incorporado de JavaScript, pero tiene una forma general de importar funciones que pueden aceptar JavaScript o funciones `wasm`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly gives us a lot of flexibility here: we can either create a [`Memory`](/en-US/docs/WebAssembly/JavaScript_interface/Memory) object in JavaScript and have the WebAssembly module import the memory, or we can have the WebAssembly module create the memory and export it to JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064438Z" creationid="gitnacho" creationdate="20221007T064438Z">
        <seg>WebAssembly nos da mucha flexibilidad aquí: podemos crear un objeto [`Memory`](/es/docs/WebAssembly/JavaScript_interface/Memory) en JavaScript y hacer que el módulo WebAssembly importe la memoria, o podemos hacer que el módulo WebAssembly cree la memoria y la exporte a JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly has a two-level namespace so the import statement here is saying that we're asking to import the `log` function from the `console` module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061429Z" creationid="gitnacho" creationdate="20221007T061429Z">
        <seg>WebAssembly tiene un espacio de nombres de dos niveles, por lo que la declaración de importación aquí dice que estamos solicitando importar la función `log` desde el módulo `console`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly has an S-expression-based textual representation, an intermediate form designed to be exposed in text editors, browser developer tools, etc.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182504Z" creationid="gitnacho" creationdate="20221007T182331Z">
        <seg>WebAssembly tiene una representación textual basada en expresiones-S, una forma intermedia diseñada para ser expuesta en editores de texto, herramientas de desarrollo de navegadores, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly has huge implications for the web platform — it provides a way to run code written in multiple languages on the web at near native speed, with client apps running on the web that previously couldn't have done so.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T094339Z" creationid="gitnacho" creationdate="20221003T094339Z">
        <seg>WebAssembly tiene grandes implicaciones para la plataforma web — provee una forma de correr código escrito en múltiples lenguajes en la web a una velocidad casi nativa, con aplicaciones cliente corriendo en la web como anteriormente no lo podrían haber hecho.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly has the ability to create global variable instances, accessible from both JavaScript and importable/exportable across one or more [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) instances.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233725Z" creationid="gitnacho" creationdate="20221006T233725Z">
        <seg>WebAssembly tiene la capacidad de crear instancias de variables globales, accesibles desde JavaScript e importables/exportables a través de una o más instancias de [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly is a different language from JavaScript, but it is not intended as a replacement.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T005714Z" creationid="gitnacho" creationdate="20221003T005714Z">
        <seg>WebAssembly es un lenguaje distinto a JavaScript, aunque no se pretende sea un reemplazo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly is a new type of code that can be run in modern web browsers and provides new features and major gains in performance.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T003851Z" creationid="gitnacho" creationdate="20221003T003851Z">
        <seg>WebAssembly es un nuevo tipo de código que se puede ejecutar en navegadores modernos, y provee nuevas funcionalidades y mejoras en rendimiento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly is a new type of code that can be run in modern web browsers — it is a low-level assembly-like language with a compact binary format that runs with near-native performance and provides languages such as C/C++, C# and Rust with a compilation target so that they can run on the web.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T094133Z" creationid="gitnacho" creationdate="20221003T094133Z">
        <seg>WebAssembly es un nuevo tipo de código que se puede ejecutar en navegadores modernos — es un lenguaje de bajo nivel, similar al lenguaje ensamblador, con un formato binario compacto que se ejecuta con rendimiento casi nativo y provee un objetivo de compilación para lenguajes como C/C++ y Rust que les permite correr en la web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly is being created as an open standard inside the [W3C WebAssembly Community Group](https://www.w3.org/community/webassembly/) with the following goals:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T004244Z" creationid="gitnacho" creationdate="20221003T004244Z">
        <seg>WebAssembly ha sido creado como un estándar abierto dentro de [W3C WebAssembly Community Group](https://www.w3.org/community/webassembly/) con los siguientes objetivos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly is designed to complement and run alongside JavaScript — using the WebAssembly JavaScript APIs, you can load WebAssembly modules into a JavaScript app and share functionality between the two.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T094447Z" creationid="gitnacho" creationdate="20221003T094420Z">
        <seg>WebAssembly esta diseñado para complementar y correr a la par de JavaScript — usando las APIs  JavaScript de WebAssembly, puedes cargar módulos de WebAssembly en una aplicación JavaScript y compartir funcionalidad entre ambos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly is not yet integrated with `&lt;script type='module'&gt;` or `import` statements, thus there is not a path to have the browser fetch modules for you using imports.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T071320Z" creationid="gitnacho" creationdate="20221004T071320Z">
        <seg>WebAssembly aún no está integrado con declaraciones `&lt;script type='module'&gt;` o `import`, por lo tanto, no hay una ruta para que el navegador busque módulos para ti usando importaciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly memory exposes its bytes by providing a buffer getter/setter that returns an ArrayBuffer.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T210303Z" creationid="gitnacho" creationdate="20221006T210303Z">
        <seg>La memoria de WebAssembly expone sus bytes proporcionando un `getter`/`setter` de búfer que devuelve un `ArrayBuffer`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly memory instructions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T095240Z" creationid="gitnacho" creationdate="20221007T095240Z">
        <seg>Instrucciones `memory` de WebAssembly:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly modules can be imported into a web (or Node.js) app, exposing WebAssembly functions for use via JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T004140Z" creationid="gitnacho" creationdate="20221003T004140Z">
        <seg>Los módulos de WebAssembly se pueden importar en una aplicación web (o Node.js), exponiendo funciones de WebAssembly para ser usadas mediante JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly needed a type of call instruction to achieve this, so we gave it `call_indirect`, which takes a dynamic function operand.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T065201Z" creationid="gitnacho" creationdate="20221007T065201Z">
        <seg>WebAssembly necesitaba un tipo de instrucción de llamada para lograr esto, así que le dimos `call_indirect`, que toma un operando de función dinámica.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly pages.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T215152Z" creationid="gitnacho" creationdate="20221019T215152Z">
        <seg>páginas WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly.compileStreaming(fetch("simple.wasm"))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T185728Z" creationid="gitnacho" creationdate="20221007T185728Z">
        <seg>WebAssembly.compileStreaming(fetch("simple.wasm"))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly.compileStreaming(fetch("simple.wasm")).then((mod) =&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T115728Z" creationid="gitnacho" creationdate="20221019T115728Z">
        <seg>WebAssembly.compileStreaming(fetch("simple.wasm")).then((mod) =&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly.instantiate(bytes, importObject).then((results) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T061058Z" creationid="gitnacho" creationdate="20221005T061058Z">
        <seg>WebAssembly.instantiate(bytes, importObject).then((results) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly.instantiate(mod, importObject).then((instance) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T111440Z" creationid="gitnacho" creationdate="20221007T111440Z">
        <seg>WebAssembly.instantiate(mod, importObject).then((instance) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly.instantiate(mod, importObject).then((result) =&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T231532Z" creationid="gitnacho" creationdate="20221019T231532Z">
        <seg>WebAssembly.instantiate(mod, importObject).then((result) =&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly.instantiateStreaming(fetch("example.wasm"))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T143242Z" creationid="gitnacho" creationdate="20221019T143242Z">
        <seg>WebAssembly.instantiateStreaming(fetch("example.wasm"))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly.instantiateStreaming(fetch("example.wasm"), importObject)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023512Z" creationid="gitnacho" creationdate="20221008T023512Z">
        <seg>WebAssembly.instantiateStreaming(fetch("example.wasm"), importObject)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly.instantiateStreaming(fetch("example.wasm"), importObject).then(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T122218Z" creationid="gitnacho" creationdate="20221019T122218Z">
        <seg>WebAssembly.instantiateStreaming(fetch("example.wasm"), importObject).then(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly.instantiateStreaming(fetch("global.wasm"), { js: { global } }).then(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233944Z" creationid="gitnacho" creationdate="20221006T233944Z">
        <seg>WebAssembly.instantiateStreaming(fetch("global.wasm"), { js: { global } }).then(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly.instantiateStreaming(fetch("logger.wasm"), importObject).then(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061602Z" creationid="gitnacho" creationdate="20221007T061602Z">
        <seg>WebAssembly.instantiateStreaming(fetch("logger.wasm"), importObject).then(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly.instantiateStreaming(fetch("logger2.wasm"), importObject).then(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064902Z" creationid="gitnacho" creationdate="20221007T064902Z">
        <seg>WebAssembly.instantiateStreaming(fetch("logger2.wasm"), importObject).then(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly.instantiateStreaming(fetch("memory.wasm"), {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T225716Z" creationid="gitnacho" creationdate="20221006T225716Z">
        <seg>WebAssembly.instantiateStreaming(fetch("memory.wasm"), {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly.instantiateStreaming(fetch("shared0.wasm"), importObj),</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074332Z" creationid="gitnacho" creationdate="20221007T074332Z">
        <seg>WebAssembly.instantiateStreaming(fetch("shared0.wasm"), importObj),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly.instantiateStreaming(fetch("shared1.wasm"), importObj),
]).then((results) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074333Z" creationid="gitnacho" creationdate="20221007T074333Z">
        <seg>WebAssembly.instantiateStreaming(fetch("shared1.wasm"), importObj),
]).then((results) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly.instantiateStreaming(fetch("simple.wasm"), importObject).then(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T101157Z" creationid="gitnacho" creationdate="20221006T101157Z">
        <seg>WebAssembly.instantiateStreaming(fetch("simple.wasm"), importObject).then(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly.instantiateStreaming(fetch("table.wasm")).then((obj) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085503Z" creationid="gitnacho" creationdate="20221006T085503Z">
        <seg>WebAssembly.instantiateStreaming(fetch("table.wasm")).then((obj) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebAssembly.instantiateStreaming(fetch("table.wasm")).then((results) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233433Z" creationid="gitnacho" creationdate="20221006T233433Z">
        <seg>WebAssembly.instantiateStreaming(fetch("table.wasm")).then((results) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>WebPFree(result);
}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054825Z" creationid="gitnacho" creationdate="20221004T054825Z">
        <seg>WebPFree(result);
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Welcome to our front-end web developer learning pathway!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223342Z" creationid="gitnacho" creationdate="20221018T223253Z">
        <seg>¡Bienvenido a la ruta de aprendizaje para desarrolladores de la interfaz de usuario web!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Welcome to the MDN learning area.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T124509Z" creationid="gitnacho" creationdate="20221012T231624Z">
        <seg>¡Hola! ¡Bienvenido al área de aprendizaje de MDN!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>What background images and colors should be used to decorate your website?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T114002Z" creationid="gitnacho" creationdate="20220925T054843Z">
        <seg>¿Qué imágenes de fondo y colores se deben utilizar para decorar tu sitio web?,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>What fonts and colors are you using?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T114221Z" creationid="gitnacho" creationdate="20220925T043025Z">
        <seg>¿Qué fuentes y colores estás usando?,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>What gives?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211003T095909Z" creationid="gitnacho" creationdate="20211003T095909Z">
        <seg>¿Que da?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>What if we wanted to log a text string?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T063724Z" creationid="gitnacho" creationdate="20221007T063724Z">
        <seg>¿Qué pasaría si quisiéramos registrar una cadena de texto?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>What information are you showcasing?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T043007Z" creationid="gitnacho" creationdate="20220925T043007Z">
        <seg>¿Qué información estás mostrando?,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>What kind of font is appropriate: formal, cartoony, bold and loud, subtle?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061151Z" creationid="gitnacho" creationdate="20221019T061151Z">
        <seg>¿qué tipo de letra es apropiado: formal, caricaturesca, atrevida y fuerte, sutil?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>What might look a bit weird is that the promise returned by `putInCache` is not awaited.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040409Z" creationid="gitnacho" creationdate="20220921T040409Z">
        <seg>Lo que puede parecer un poco extraño es que no se espera la promesa devuelta por `putInCache`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>What should your website actually do?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061006Z" creationid="gitnacho" creationdate="20221019T061006Z">
        <seg>¿Qué debería hacer realmente tu sitio web?;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>What values WebKit/Safari consider "nonstandard" is not documented, except in the following WebKit bugs:
&gt;
&gt; - [Require preflight for non-standard CORS-safelisted request headers Accept, Accept-Language, and Content-Language](https://bugs.webkit.org/show_bug.cgi?id=165178)
&gt; - [Allow commas in Accept, Accept-Language, and Content-Language request headers for simple CORS](https://bugs.webkit.org/show_bug.cgi?id=165566)
&gt; - [Switch to a blacklist model for restricted Accept headers in simple CORS requests](https://bugs.webkit.org/show_bug.cgi?id=166363)
&gt;
&gt; No other browsers implement these extra restrictions because they're not part of the spec.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T221210Z" creationid="gitnacho" creationdate="20221011T221210Z">
        <seg>Los valores que WebKit/Safari consideran "no estándar" no están documentados, excepto en los siguientes errores de WebKit:
&gt;
&gt; - [Requerir verificación previa para encabezados de solicitud incluidos en la lista segura de CORS no estándar Aceptar, Aceptar idioma y Contenido-idioma](https://bugs.webkit.org/show_bug.cgi?id=165178)
&gt; - [Permitir comas en los encabezados de solicitud Accept, Accept-Language y Content-Language para CORS simple](https://bugs.webkit.org/show_bug.cgi?id=165566)
&gt; - [Cambiar a un modelo de lista negra para aceptar encabezados restringidos en solicitudes CORS simples](https://bugs.webkit.org/show_bug.cgi?id=166363)
&gt;
&gt; Ningún otro navegador implementa estas restricciones adicionales porque no son parte de la especificación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>What's more, you don't even have to know how to create WebAssembly code to take advantage of it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T004106Z" creationid="gitnacho" creationdate="20221003T004106Z">
        <seg>Lo que es más, no es necesario conocer como se crea código WebAssembly para aprovechar sus ventajas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>What's the background color?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T061139Z" creationid="gitnacho" creationdate="20221019T061139Z">
        <seg>¿cuál es el color de fondo?,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T212734Z" creationid="gitnacho" creationdate="20211102T212734Z">
        <seg>Cuando</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When a client that supports client hints receives the `Accept-CH` header it can choose to append some or all of the listed client hint headers in its subsequent requests.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T091457Z" creationid="gitnacho" creationdate="20221012T091457Z">
        <seg>Cuando un cliente que admite sugerencias de clientes recibe el encabezado `Accept-CH`, puede optar por agregar algunos o todos los encabezados de sugerencias de cliente enumerados en sus solicitudes posteriores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When a function is called, it starts with an empty stack which is gradually filled up and emptied as the body's instructions are executed.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055043Z" creationid="gitnacho" creationdate="20221007T055043Z">
        <seg>Cuando se llama a una función, comienza con una pila vacía que se llena y vacía gradualmente a medida que se ejecutan las instrucciones del cuerpo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When a program is dynamically linked, multiple instances share the same memory and table.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073724Z" creationid="gitnacho" creationdate="20221007T073724Z">
        <seg>Cuando un programa está vinculado dinámicamente, varias instancias comparten la misma memoria y tabla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When a user navigates to a page that uses a service worker, the browser boots up the worker (if it isn't already running), then sends it a fetch event and waits for the result.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T053250Z" creationid="gitnacho" creationdate="20220922T205445Z">
        <seg>Cuando un usuario navega a una página que utiliza un *service worker*, el navegador inicia el *worker* (si aún no se está ejecutando), luego le envía un evento `fetch` y espera el resultado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When called, `shared0func` loads the `42` we stored in memory using the `i32.store` command in `shared1.wat`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074134Z" creationid="gitnacho" creationdate="20221007T074134Z">
        <seg>Cuando se llama, `shared0func` carga el `42` que almacenamos en la memoria usando el comando `i32.store` en `shared1.wat`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When catching and re-throwing an error with a more-specific or useful error message, this property can be used to pass the original error.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T135023Z" creationid="gitnacho" creationdate="20221019T135023Z">
        <seg>Al capturar y volver a generar un error con un mensaje de error más específico o útil, esta propiedad se puede usar para pasar el error original.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When creating a [`WebAssembly.Exception`](/en-US/docs/WebAssembly/JavaScript_interface/Exception), the tag defines the data types and order of the values carried by the exception.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015032Z" creationid="gitnacho" creationdate="20221008T015032Z">
        <seg>Al crear una [`WebAssembly.Exception`](/es/docs/WebAssembly/JavaScript_interface/Exception), la etiqueta define los tipos de datos y el orden de los valores transportados por la excepción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When either of two form inputs (`first` and `second`) have their values changed, {{domxref("HTMLElement/change_event", "change")}} events invoke `postMessage()` to send the value of both inputs to the current worker.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221007T115848Z">
        <seg>Cuando cualquiera de las dos entradas de formulario (`first` y `second`) cambian sus valores, los eventos {{DOMxRef("HTMLElement/change_event", "change")}} invocan a `postMessage()` para enviar el valor de ambas entradas al *worker* actual.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When growth occurs, since `ArrayBuffer`s can't change size, the current `ArrayBuffer` is detached and a new `ArrayBuffer` is created to point to the newer, bigger memory.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064242Z" creationid="gitnacho" creationdate="20221007T064242Z">
        <seg>Cuando ocurre el crecimiento, dado que los `ArrayBuffer`s no pueden cambiar de tamaño, el `ArrayBuffer` actual se separa y se crea un nuevo `ArrayBuffer` para apuntar a la memoria más nueva y más grande.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When in doubt, [try running your JSON through a validator](https://jsonlint.com/).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065543Z" creationid="gitnacho" creationdate="20221005T065543Z">
        <seg>En caso de duda, [intenta ejecutar tu JSON a través de un validador](https://jsonlint.com/).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When it comes to picking a version, choose any one you'd like; this tutorial isn't version-specific.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065245Z" creationid="gitnacho" creationdate="20221004T065245Z">
        <seg>Cuando se trata de elegir una versión, elige la que desees; este tutorial no es específico de la versión.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When it is called, it calls an imported JavaScript function called `imported_func`, which is run with the value (42) provided as a parameter.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182653Z" creationid="gitnacho" creationdate="20221007T182653Z">
        <seg>Cuando se llama, invoca a una función de JavaScript importada llamada `imported_func`, que se ejecuta con el valor (42) proporcionado como parámetro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When no pages are using the current version, the new worker activates and becomes responsible for fetches.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T053210Z" creationid="gitnacho" creationdate="20220921T041903Z">
        <seg>Cuando ninguna página está usando la versión actual, el nuevo *worker* se activa y se vuelve responsable de las recuperaciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When present, the `maximum` parameter acts as a hint</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T215206Z" creationid="gitnacho" creationdate="20221019T215206Z">
        <seg>Cuando está presente, el parámetro `maximum` actúa como una pista</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When replacing `Link` macros:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T220245Z" creationid="gitnacho" creationdate="20221005T220245Z">
        <seg>Al reemplazar las macros `Link`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When responding to a credentialed request:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053140Z" creationid="gitnacho" creationdate="20221012T053140Z">
        <seg>Al responder a una solicitud acreditada:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When serving an HTTP request, a server can send a `Set-Cookie` HTTP header with the response.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T062839Z" creationid="gitnacho" creationdate="20221012T062839Z">
        <seg>Al recibir una petición HTTP, un servidor puede enviar una cabecera `Set-Cookie` junto con la respuesta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When should you use each one?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T204349Z" creationid="gitnacho" creationdate="20221005T204349Z">
        <seg>¿Cuándo debes usar cada uno?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When the `oninstall` handler completes, the service worker is considered installed.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T213847Z" creationid="gitnacho" creationdate="20220921T023001Z">
        <seg>Cuando se completa el controlador `oninstall`, se considera que el *service worker* está instalado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When the module is received, we create an
instance from it using the [`WebAssembly.Instantiate()`](/en-US/docs/WebAssembly/JavaScript_interface/Instantiate) method, invoke an
exported function from inside it, then show how we can return information on the
available exports on a module using `WebAssembly.Module.exports`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T225612Z" creationid="gitnacho" creationdate="20221019T225037Z">
        <seg>Cuando se recibe el módulo, creamos una instancia de él usando el método [`WebAssembly.Instantiate()`](/es/docs/WebAssembly/JavaScript_interface/instantiate), invoca una función exportada desde dentro, luego muestra cómo podemos devolver información sobre las `export`s disponibles en un módulo usando `WebAssembly.Module.exports`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When the module is received, we create an
instance from it using the [`WebAssembly.instantiate()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiate) method and invoke an
exported function from inside it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T120210Z" creationid="gitnacho" creationdate="20221007T194548Z">
        <seg>Cuando se recibe el módulo, creamos una instancia de él usando el método [`WebAssembly.instantiate()`](#sintaxis) e invocamos una
función exportada desde su interior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When the module is received, we create an instance from it using the [`WebAssembly.instantiate()`](/en-US/docs/WebAssembly/JavaScript_interface/instantiate) method and invoke an exported function from inside it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T112230Z" creationid="gitnacho" creationdate="20221007T112230Z">
        <seg>Cuando se recibe el módulo, creamos una instancia a partir de él mediante el método [`WebAssembly.instantiate()`](/es/docs/WebAssembly/JavaScript_interface/instantiate) e invocamos una función exportada desde su interior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When the pointer is returned to JavaScript land, it is treated as just a number.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054328Z" creationid="gitnacho" creationdate="20221004T054328Z">
        <seg>Cuando el puntero se devuelve a la tierra de JavaScript, se trata solo como un número.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When the service worker is installed, it then receives an activate event.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T213847Z" creationid="gitnacho" creationdate="20220921T023019Z">
        <seg>Cuando se instala el *service worker*, recibe un evento de activación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When the time comes to call a function pointer, the WebAssembly caller supplies the index, which can then be safety bounds checked against the table before indexing and calling the indexed function reference.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233029Z" creationid="gitnacho" creationdate="20221006T233029Z">
        <seg>Cuando llega el momento de llamar a un puntero de función, el llamador a WebAssembly proporciona el índice, que luego se puede comparar con los límites de seguridad de la tabla antes de indexar y llamar a la referencia de función indexada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When the wiki makes a call to the KumaScript service, it passes along some context on the current document that KumaScript makes available to templates as variables:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T070521Z" creationid="gitnacho" creationdate="20221005T070521Z">
        <seg>Cuando el wiki hace una llamada al servicio KumaScript, transmite algún contexto en el documento actual que KumaScript pone a disposición de las plantillas como variables:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When there are many nested elements, each with its own handler(s), event processing can become very complicated—especially where a parent element receives the very same event as its child elements because "spatially" they overlap so the event technically occurs in both, and the processing order of such events depends on the [Event bubbling and capture](/en-US/docs/Learn/JavaScript/Building_blocks/Events#event_bubbling_and_capture) settings of each handler triggered.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T202445Z" creationid="gitnacho" creationdate="20221011T202102Z">
        <seg>Cuando hay muchos elementos anidados, cada uno con sus propios controladores, el procesamiento de eventos puede volverse muy complicado, especialmente cuando un elemento principal recibe el mismo evento que sus elementos secundarios porque "espacialmente" se superponen, por lo que técnicamente el evento ocurre en ambos, y el orden de procesamiento de dichos eventos depende de la configuración del [burbujeo y captura de `Event`](/es/docs/Learn/JavaScript/Building_blocks/Events#burbujeo_y_captura_de_eventos) de cada controlador activado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054210Z" creationid="gitnacho" creationdate="20221012T054210Z">
        <seg>Cuando se usa como parte de una respuesta a una solicitud de preverificación, indica si la solicitud real se puede realizar o no con credenciales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When viewing the [live example](https://mdn.github.io/webassembly-examples/js-api-examples/table2.html), open your developer console to display console log messages from the code snippets below.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T005252Z" creationid="gitnacho" creationdate="20221020T005252Z">
        <seg>Al ver el [ejemplo en vivo](https://mdn.github.io/webassembly-examples/js-api-examples/table2.html), abre tu consola de desarrollador para mostrar los mensajes de registro de la consola de los fragmentos de código a continuación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When writing code for the Web, there are a large number of Web APIs available.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T041243Z" creationid="gitnacho" creationdate="20221002T001825Z">
        <seg>Cuando escribimos código para la Web, podemos usar una gran cantidad de APIs Web disponibles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When you call them, you get some activity in the background to convert the arguments into types that wasm can work with (for example converting JavaScript numbers to Int32), the arguments are passed to the function inside your wasm module, the function is invoked, and the result is converted and passed back to JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085004Z" creationid="gitnacho" creationdate="20221006T085004Z">
        <seg>Cuando las llamas, obtienes alguna actividad en segundo plano para convertir los argumentos en tipos con los que `wasm` puede trabajar (por ejemplo, convertir números de JavaScript a Int32), los argumentos se pasan a la función dentro de tu módulo `wasm`, se invoca la función, y el resultado se convierte y se devuelve a JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When you click on a color, you'll see a strange six-character code like `#660066`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062343Z" creationid="gitnacho" creationdate="20221019T062343Z">
        <seg>Al hacer clic en un color, verás un extraño código de seis caracteres como `#660066`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When you find the image you want, click on the image to get an enlarged view of it.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062543Z" creationid="gitnacho" creationdate="20221019T062543Z">
        <seg>Cuando encuentres la imagen que deseas, haz clic en la imagen para obtener una vista ampliada de la misma.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When you're building a website, you need to assemble these files into a sensible structure and make sure they can talk to one another.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T043420Z" creationid="gitnacho" creationdate="20220925T043420Z">
        <seg>Cuando estás creando un sitio web, necesitas ensamblar estos archivos en una estructura sensata y asegurarte de que se puedan comunicar entre sí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>When you've written a new code module in a language like C/C++, you can compile it into WebAssembly using a tool like [Emscripten](https://emscripten.org/).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105131Z" creationid="gitnacho" creationdate="20221003T105131Z">
        <seg>Cuando hayas escrito un nuevo módulo de código en un lenguaje como C/C++, lo puedes compilar en WebAssembly usando una herramienta como [Emscripten](https://emscripten.org/).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Whenever you want to call JavaScript functions, you can add them to this file, and `wasm-bindgen` takes care of setting everything up for you.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062920Z" creationid="gitnacho" creationdate="20221004T062920Z">
        <seg>Siempre que desees llamar a las funciones de JavaScript, las puedes agregar a este archivo y `wasm-bindgen` se encarga de configurar todo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Where should content be drawn on the screen?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T113959Z" creationid="gitnacho" creationdate="20220925T054501Z">
        <seg>¿Dónde se debe dibujar el contenido en la pantalla?,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Where:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210930T104713Z" creationid="gitnacho" creationdate="20210930T104713Z">
        <seg>Dónde:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>While Memory provides a resizable typed array of raw bytes, it is unsafe for references to be stored in a Memory since a reference is an engine-trusted value whose bytes must not be read or written directly by content for safety, portability, and stability reasons.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T232815Z" creationid="gitnacho" creationdate="20221006T232815Z">
        <seg>Si bien la memoria proporciona un arreglo de bytes sin procesar con tipo de tamaño variable, no es seguro que las referencias se almacenen en una memoria, ya que una referencia es un valor confiable del motor cuyos bytes no se deben leer o escribir directamente por el contenido por razones de seguridad, portabilidad y estabilidad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>While there are many ways to encode a string's length in the string itself (for example, C strings); for simplicity here we just pass both offset and length as parameters:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064312Z" creationid="gitnacho" creationdate="20221007T064312Z">
        <seg>Si bien hay muchas formas de codificar la longitud de una cadena en la propia cadena (por ejemplo, cadenas C); para simplificar aquí, simplemente pasamos tanto el desplazamiento como la longitud como parámetros:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>While this happens, the previous version is still responsible for fetches.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041840Z" creationid="gitnacho" creationdate="20220921T041840Z">
        <seg>Mientras esto sucede, la versión anterior sigue siendo responsable de las recuperaciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>While we are creating and accessing the `WebAssembly.Table` from JavaScript, the same `Table` is also visible and callable inside the WebAssembly instance.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T005732Z" creationid="gitnacho" creationdate="20221020T005732Z">
        <seg>Mientras creamos y accedemos a `WebAssembly.Table` desde JavaScript, la misma `Table` también es visible y se puede llamar dentro de la instancia de WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Why?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210105T215438Z" creationid="nacho" creationdate="20210105T215438Z">
        <seg>¿Por qué?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Will render, for `de`:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083213Z" creationid="gitnacho" creationdate="20221005T083213Z">
        <seg>Renderizará, para `de`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>With a few exceptions, policies mostly involve specifying server origins and script endpoints.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T064710Z" creationid="gitnacho" creationdate="20221012T064710Z">
        <seg>Con unas pocas excepciones, las políticas implican origenes específicos del servidor y los puntos finales de los scripts.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>With all the Promise-based helper functions defined, we can now express the core logic of an IndexedDB cache lookup.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T051535Z" creationid="gitnacho" creationdate="20221004T051535Z">
        <seg>Con todas las funciones auxiliares basadas en `Promise` definidas, ahora podemos expresar la lógica central de una búsqueda de caché de IndexedDB.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>With service workers, the following steps are generally observed for basic set up:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T022550Z" creationid="gitnacho" creationdate="20220921T022550Z">
        <seg>Con el *service worker*, generalmente se observan los siguientes pasos para la configuración básica:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>With that in mind, you can always check out the latest state of built-in APIs in the [KumaScript source](https://github.com/mdn/yari/tree/main/kumascript/src/api).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T072108Z" creationid="gitnacho" creationdate="20221005T072108Z">
        <seg>Con eso en mente, siempre puedes consultar el estado más reciente de las APIs integradas en la [fuente de KumaScript](https://github.com/mdn/yari/tree/main/kumascript/src/api).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>With the above library function defined, getting a wasm module instance and using its exported features (while handling caching in the background) is as simple as calling it with the following parameters:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T051936Z" creationid="gitnacho" creationdate="20221004T051936Z">
        <seg>Con la función de biblioteca anterior definida, obtener una instancia de módulo `wasm` y usar sus características exportadas (mientras maneja el almacenamiento en caché en segundo plano) es tan simple como llamarla con los siguientes parámetros:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>With the advent of WebAssembly appearing in browsers, the virtual machine that we talked about earlier will now load and run two types of code — JavaScript AND WebAssembly.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T010525Z" creationid="gitnacho" creationdate="20221003T010525Z">
        <seg>Con la llegada de WebAssembly en los navegadores, la máquina virtual que se mencionó anteriormente, cargará y ejecutará dos tipos de código — JavaScript y WebAssembly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>With the environment set up, let's look at how to use it to compile a C example to Emscripten.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105249Z" creationid="gitnacho" creationdate="20221003T105249Z">
        <seg>Con el entorno configurado, veamos cómo usarlo para compilar un ejemplo de C en Emscripten.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>With these two headers set, `postMessage()` no longer throws for `SharedArrayBuffer` objects and shared memory across threads is therefore available.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T023846Z" creationid="gitnacho" creationdate="20220923T023846Z">
        <seg>Con estos dos encabezados configurados, `postMessage()` ya no arroja objetos `SharedArrayBuffer` y, por lo tanto, la memoria compartida entre subprocesos está disponible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Without overwhelming you, this article will provide enough information to make you familiar with HTML.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T043747Z" creationid="gitnacho" creationdate="20220925T043747Z">
        <seg>Sin abrumarte, este artículo proporciona suficiente información para familiarizarte con HTML.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Without the matching tag, exceptions can be caught and re-thrown, but they can't be inspected.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T022912Z" creationid="gitnacho" creationdate="20221008T022912Z">
        <seg>Sin la etiqueta coincidente, las excepciones se pueden capturar y volver a generar, pero no se pueden inspeccionar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Without this, the stack would be `undefined`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204515Z" creationid="gitnacho" creationdate="20221019T204515Z">
        <seg>Sin esto, la pila sería `undefined`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Work through each section, learning new skills (or improving existing ones) as you go along.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223420Z" creationid="gitnacho" creationdate="20221018T223420Z">
        <seg>Simplemente trabaja en cada sección, aprendiendo nuevas habilidades (o mejorando las existentes) sobre la marcha.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Write the code blocks in the respective subsections listed above.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211130Z" creationid="gitnacho" creationdate="20221005T211053Z">
        <seg>Escribe los bloques de código en las subsecciones respectivas enumeradas anteriormente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Writers should therefore use HTML.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191153Z" creationid="gitnacho" creationdate="20221008T191153Z">
        <seg>Por lo tanto, los escritores deben usar HTML.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Writers will be able to include KumaScript macro calls in prose content:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191728Z" creationid="gitnacho" creationdate="20221008T191728Z">
        <seg>Los escritores podrán incluir llamadas a macros de KumaScript en el contenido en prosa:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Writers will be able to supply any one of the following additional words, which must come after the language word:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T180745Z" creationid="gitnacho" creationdate="20221008T180745Z">
        <seg>Los escritores podrán proporcionar cualquiera de las siguientes palabras adicionales, que deben aparecer después de la palabra del lenguaje:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Writers will be able to use the HTML {{HTMLElement("sup")}} and {{HTMLElement("sub")}} elements if necessary, but should use alternatives if possible.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191319Z" creationid="gitnacho" creationdate="20221008T191319Z">
        <seg>Los escritores podrán usar los elementos HTML {{HTMLElement("sup")}} y {{HTMLElement("sub")}} si es necesario, pero deben usar alternativas si es posible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T071553Z" creationid="gitnacho" creationdate="20220828T071553Z">
        <seg>Puedes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You also get an `activate` event.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041935Z" creationid="gitnacho" creationdate="20220921T041935Z">
        <seg>También obtienes un evento `activate`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You also need to import the `emscripten.h` library to use `EMSCRIPTEN_KEEPALIVE`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111735Z" creationid="gitnacho" creationdate="20221003T111735Z">
        <seg>También necesitas importar la biblioteca `emscripten.h` para usar `EMSCRIPTEN_KEEPALIVE`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You are also responsible for periodically purging cache entries.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T202635Z" creationid="gitnacho" creationdate="20221003T202635Z">
        <seg>También eres responsable de depurar periódicamente las entradas de caché.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You are not running your application through HTTPS.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T025604Z" creationid="gitnacho" creationdate="20220921T025604Z">
        <seg>No estás ejecutando tu aplicación a través de HTTPS.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You are responsible for implementing how your script (e.g. in a {{domxref("ServiceWorker")}}) handles `Cache` updates.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T202544Z">
        <seg>Eres responsable de implementar cómo tu script (por ejemplo, en un {{DOMxRef("ServiceWorker")}}) maneja las actualizaciones de `Cache`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can [find them listed here](https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md#atomic-memory-accesses).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T081033Z" creationid="gitnacho" creationdate="20221007T081033Z">
        <seg>Las puedes [encontrar aquí](https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md#atomic-memory-accesses).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can access `CacheStorage` through the global
{{domxref("caches")}} property.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T224720Z">
        <seg>Puedes acceder a `CacheStorage` a través de la propiedad global
{{DOMxRef("caches")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can also export a tag defined in a module and use it to inspect exceptions thrown from the module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015319Z" creationid="gitnacho" creationdate="20221008T015319Z">
        <seg>También puedes exportar una etiqueta definida en un módulo y usarla para inspeccionar las excepciones lanzadas desde el módulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can also iterate over all the tags on a page, like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071704Z" creationid="gitnacho" creationdate="20221005T071704Z">
        <seg>También puedes iterar sobre todas las etiquetas en una página, así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can also see that the exported `logIt` function calls the imported function using the `call` instruction we introduced above.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061444Z" creationid="gitnacho" creationdate="20221007T061444Z">
        <seg>También puedes ver que la función `logIt` exportada llama a la función importada utilizando la instrucción `call` que presentamos anteriormente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can also use the `&lt;script&gt;` element to embed data in HTML with server-side rendering by specifying a valid non-JavaScript MIME type in the `type` attribute.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134306Z" creationid="gitnacho" creationdate="20221003T134306Z">
        <seg>También puedes usar el elemento `&lt;script&gt;` para incrustar datos en HTML con renderizado de lado del servidor especificando un tipo MIME válido que no sea JavaScript en el atributo `type`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can attach a `fetch` event listener to the service worker, then call the `respondWith()` method on the event to hijack our HTTP responses and update them with your own magic.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T051555Z" creationid="gitnacho" creationdate="20220921T035245Z">
        <seg>Puedes adjuntar un detector de eventos `fetch` al *service worker*, luego llamar al método `respondWith()` en el evento para capturar nuestras respuestas HTTP y actualizarlas con tu propia magia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can change the display text using a second parameter: &lt;code&gt;\{{DOMxRef("document.getElementsByName()","getElementsByName()")}}&lt;/code&gt; results in {{DOMxRef("document.getElementsByName()","getElementsByName()")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T111916Z" creationid="gitnacho" creationdate="20221005T110700Z">
        <seg>Puedes cambiar el texto a mostrar usando un segundo parámetro: &lt;code&gt;\{{DOMxRef("document.getElementsByName()","getElementsByName()")}}&lt;/code&gt; da como resultado {{DOMxRef("document.getElementsByName()","getElementsByName()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can check its documentation on &lt;https://www.assemblyscript.org/&gt;.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T091050Z" creationid="gitnacho" creationdate="20221003T091050Z">
        <seg>Puedes consultar su documentación en &lt;https://www.assemblyscript.org/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can compare it to {{jsxref("Math")}}, which is also a namespace object for mathematical constants and functions, or to {{jsxref("Intl")}} which is the namespace object for internationalization constructors and other language-sensitive functions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221009T003443Z" creationid="gitnacho" creationdate="20221009T003443Z">
        <seg>Lo puedes comparar con {{jsxref("Math")}}, que también es un objeto de espacio de nombres —`namespace`— para funciones y constantes matemáticas, o con {{jsxref("Intl")}}, que es el objeto de espacio de nombres para constructores de internacionalización y otras `Functions` sensibles al lenguaje.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can create a [shared memory](/en-US/docs/WebAssembly/Understanding_the_text_format#shared_memories)
from JavaScript by passing `shared: true` in the constructor's initialization object:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T220649Z" creationid="gitnacho" creationdate="20221019T220426Z">
        <seg>Puedes crear una [memoria compartida](/es/docs/WebAssembly/Understanding_the_text_format#memoria_compartida)
desde JavaScript pasando `shared: true` en la inicialización del objeto constructor:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can create a [shared memory](/en-US/docs/WebAssembly/Understanding_the_text_format#shared_memories) from JavaScript by passing `shared: true` in the constructor's initialization object:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T112225Z" creationid="gitnacho" creationdate="20221008T001032Z">
        <seg>Puedes crear una [memoria compartida](/es/docs/WebAssembly/Understanding_the_text_format#memoria_compartida) desde JavaScript pasando `shared: true` en el objeto de inicialización del constructor:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can create one using the [`WebAssembly.Memory()`](/en-US/docs/WebAssembly/JavaScript_interface/Memory) constructor, which takes as arguments an initial size and (optionally) a maximum size and a `shared` property that states whether it is a shared memory or not.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T182342Z" creationid="gitnacho" creationdate="20221006T182342Z">
        <seg>Puedes crear uno usando el constructor [`WebAssembly.Memory()`](/es/docs/WebAssembly/JavaScript_interface/Memory), que toma como argumentos un tamaño inicial y (opcionalmente) un tamaño máximo y una propiedad `shared` que indica si se trata de una memoria compartida o no.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can find full documentation on Emscripten at [emscripten.org](https://emscripten.org), and a guide to implementing the toolchain and compiling your own C/C++ app across to wasm at [Compiling from C/C++ to WebAssembly](/en-US/docs/WebAssembly/C_to_wasm).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T090231Z">
        <seg>Puedes encontrar documentación completa sobre Emscripten en [emscripten.org](https://emscripten.org), y una guía para implementar la cadena de herramientas y compilar tu propia aplicación C/C++ a través de wasm en [Compilación de C/C++ a WebAssembly](/es/docs/WebAssembly/C_to_wasm).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can find more in the [Emscripten documentation](https://emscripten.org/docs/compiling/Building-Projects.html).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053727Z" creationid="gitnacho" creationdate="20221004T053727Z">
        <seg>Puedes encontrar más en la [documentación de Emscripten](https://emscripten.org/docs/compiling/Building-Projects.html).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can find out how to do this in [How do you set up a local testing server?](/en-US/docs/Learn/Common_questions/set_up_a_local_testing_server)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T164346Z" creationid="gitnacho" creationdate="20221012T164346Z">
        <seg>Puedes averiguar cómo hacerlo en [¿Cómo se configura un servidor de prueba local?](/es/docs/Learn/Common_questions/set_up_a_local_testing_server)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can find this at [memory.wasm.](https://raw.githubusercontent.com/mdn/webassembly-examples/master/js-api-examples/memory.wasm)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T225527Z" creationid="gitnacho" creationdate="20221006T225527Z">
        <seg>Puedes encontrar esto en [memory.wasm.](https://raw.githubusercontent.com/mdn/webassembly-examples/master/js-api-examples/memory.wasm)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can find this at [table.wasm](https://raw.githubusercontent.com/mdn/webassembly-examples/master/js-api-examples/table.wasm).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233303Z" creationid="gitnacho" creationdate="20221006T233303Z">
        <seg>Puedes encontrar esto en [table.wasm](https://raw.githubusercontent.com/mdn/webassembly-examples/master/js-api-examples/table.wasm).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can get more information at [GitHub live samples](/en-US/docs/MDN/Writing_guidelines/Page_structures/Code_examples#github_live_samples).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T103501Z" creationid="gitnacho" creationdate="20221005T113716Z">
        <seg>Puedes obtener más información en [Muestras en vivo de GitHub](/es/docs/MDN/Writing_guidelines/Page_structures/Code_examples#muestras_en_vivo_de_github).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can get started with installing the necessary toolchain, compiling a sample Rust program to a WebAssembly npm package, and using that in a sample web app, over at our [Compiling from Rust to WebAssembly](/en-US/docs/WebAssembly/Rust_to_wasm) article.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T090927Z">
        <seg>Puedes comenzar instalando la cadena de herramientas necesaria, compilando un programa Rust de ejemplo en un paquete npm de WebAssembly y usándolo en una aplicación web de muestra, en nuestro artículo [Compilar de Rust a WebAssembly](/es/docs/WebAssembly/Rust_to_wasm).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can instead choose to download and cache a different resource on preload.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041544Z" creationid="gitnacho" creationdate="20220921T041544Z">
        <seg>En su lugar, puedes optar por descargar y almacenar en caché un recurso diferente en la precarga.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can listen for the {{domxref("ServiceWorkerGlobalScope/install_event", "install")}} event; a standard action is to prepare your service worker for usage when this fires, for example by creating a cache using the built in storage API, and placing assets inside it that you'll want for running your app offline.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T224513Z" creationid="gitnacho" creationdate="20221002T142553Z">
        <seg>Puedes detectar el evento {{DOMxRef("ServiceWorkerGlobalScope/install_event", "install")}}; una acción estándar es preparar a tu *service worker* para usarlo cuando esto se active, por ejemplo, creando una caché utilizando la API integrada de `storage` y colocando los activos dentro de ella, que querrás para ejecutar tu aplicación sin conexión.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can look to see if a specific tag exists on a page like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071640Z" creationid="gitnacho" creationdate="20221005T071521Z">
        <seg>Puedes mirar para saber si existe una etiqueta específica en una página con algo como esto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can modify the response to these requests in any way you want, using the {{DOMxRef("FetchEvent.respondWith()")}} method.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T144942Z" creationid="gitnacho" creationdate="20221002T144942Z">
        <seg>Puedes modificar la respuesta a estas solicitudes de la forma que desees, utilizando el método {{DOMxRef("FetchEvent.respondWith()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can now enter the directory and find the files you are after (either using your Finder/File Explorer or the [`cd` command](&lt;https://en.wikipedia.org/wiki/Cd_(command)&gt;)).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T173653Z" creationid="Nachec" creationdate="20221020T173653Z">
        <seg>Ahora puedes entrar en el directorio y encontrar todos los archivos que descargaste (posiblemente con el explorador de archivos o el [comando `cd`](https://es.wikipedia.org/wiki/Chdir)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can omit the filename if it is called `index.html`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T212206Z" creationid="gitnacho" creationdate="20221005T212123Z">
        <seg>Puedes omitir el nombre del archivo si se llama `index.html`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can read the contents of an attached file by using the `mdn.getFileContent()` function, like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082520Z" creationid="gitnacho" creationdate="20221005T082520Z">
        <seg>Puedes leer el contenido de un archivo adjunto usando la función `mdn.getFileContent()`, así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can read up on our most commonly-used macros on the [Commonly-used macros](/en-US/docs/MDN/Writing_guidelines/Page_structures/Macros/Commonly_used_macros) page; also, you can browse through the [complete sources for all macros](https://github.com/mdn/yari/tree/main/kumascript/macros).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T194055Z" creationid="gitnacho" creationdate="20221005T095312Z">
        <seg>Puedes leer sobre nuestras macros más utilizadas en la página [Macros de uso común](/es/docs/MDN/Writing_guidelines/Page_structures/Macros/Commonly_used_macros); Además, puedes navegar a través de las [fuentes completas para todas las macros](https://github.com/mdn/yari/tree/main/kumascript/macros).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can retrieve a lot of information about each request by calling parameters of the {{domxref("Request")}} object returned by the {{domxref("FetchEvent")}}:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220921T035905Z">
        <seg>Puedes recuperar mucha información sobre cada solicitud llamando a los parámetros del objeto {{DOMxRef("Request")}} devuelto por {{DOMxRef("FetchEvent")}}:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can retrieve data from a URL without having to do a full page refresh.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220916T074942Z" creationid="gitnacho" creationdate="20220916T074942Z">
        <seg>Puedes recuperar datos de un URL sin tener que actualizar la página completa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can retrieve exported WebAssembly functions in two ways:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085014Z" creationid="gitnacho" creationdate="20221006T085014Z">
        <seg>Puedes recuperar funciones WebAssembly exportadas de dos formas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can see multiplicity in action in our Understanding text format article — see the [Mutating tables and dynamic linking section](/en-US/docs/WebAssembly/Understanding_the_text_format#mutating_tables_and_dynamic_linking).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T113800Z" creationid="gitnacho" creationdate="20221006T234242Z">
        <seg>Puedes ver la multiplicidad en acción en nuestro artículo Comprensión del formato de texto: consulta la [sección Mutación de tablas y vinculación dinámica](/es/docs/WebAssembly/Understanding_the_text_format#tablas_mutantes_y_enlaces_dinámicos).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can see that this takes two parameters:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233756Z" creationid="gitnacho" creationdate="20221006T233756Z">
        <seg>Puedes ver que esto toma dos parámetros:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can see the [source code on GitHub](https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker), and the [simple service worker running live](https://bncb2v.csb.app/).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T024106Z" creationid="gitnacho" creationdate="20220921T024106Z">
        <seg>Puedes ver el [código fuente en GitHub](https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker) y el [Sencillo *service worker* ejecutándose en vivo](https://bncb2v.csb.app/).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can then go on to do pretty much anything to this function that you can do to other [functions](/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function) in JavaScript — [`call()`](/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call), [`bind()`](/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind), etc. `testFunc.toString()` returns an interesting result:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T090042Z" creationid="gitnacho" creationdate="20221006T090042Z">
        <seg>A continuación, puedes hacer prácticamente cualquier cosa con esta función de la misma manera que puedes hacer con otras [funciones](/es/docs/Web/JavaScript/Reference/Global_Objects/Function) en JavaScript — [`call()`](/es/docs/Web/JavaScript/Reference/Global_Objects/Function/call), [`bind()`](/es/docs/Web/JavaScript/Reference/Global_Objects/Function/bind), etc. `testFunc.toString()` devuelve un interesante resultado:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can then return the same value using:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T210337Z" creationid="gitnacho" creationdate="20221006T210337Z">
        <seg>Luego puedes devolver el mismo valor usando:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can update the `learning-area` repository with any changes made to the master version on GitHub with the following steps:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T173706Z" creationid="Nachec" creationdate="20221020T173706Z">
        <seg>Puedes actualizar el repositorio `learning-area` con los últimos cambios que se hayan hecho a la versión principal en GitHub con los siguientes pasos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can use the `log.debug()` method to output text to the scripting messages area at the top of the page that's running your template.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T074551Z" creationid="gitnacho" creationdate="20221005T074551Z">
        <seg>Puedes usar el método `log.debug()` para generar texto en el área de mensajes de scripts en la parte superior de la página que ejecuta tu plantilla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can use the argument `notservice` to indicate that a feature works in web workers except for service workers.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T120214Z" creationid="gitnacho" creationdate="20221005T115836Z">
        <seg>Puedes usar el argumento `notservice` para indicar que una característica funciona en *web workers*, excepto en *service workers".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can use {{domxref("NavigationPreloadManager.getState()")}} to check whether navigation preloading is enabled and to determine what directive value is sent with the
{{HTTPHeader("Service-Worker-Navigation-Preload")}} HTTP header for preload requests.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T000229Z" creationid="gitnacho" creationdate="20220922T211150Z">
        <seg>Puedes usar {{DOMxRef("NavigationPreloadManager.getState()")}} para verificar si la precarga de navegación está habilitada y determinar qué valor de directiva se envía con el encabezado HTTP
{{HTTPHeader("Service-Worker-Navigation-Preload")}} para solicitudes de precarga.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can work through sections in order, but each one is also self-contained.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223536Z" creationid="gitnacho" creationdate="20221018T223536Z">
        <seg>Puedes trabajar en las secciones en orden, pero cada una también es autónoma.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can work with these in many ways, of course, but here are a couple of suggestions.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071422Z" creationid="gitnacho" creationdate="20221005T071422Z">
        <seg>Puedes trabajar con estos de muchas maneras, por supuesto, pero aquí hay un par de sugerencias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can write or generate this format by hand and then convert it into the binary format with any of several [WebAssembly text-to-binary tools](https://webassembly.org/getting-started/advanced-tools/).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T090407Z" creationid="gitnacho" creationdate="20221003T090407Z">
        <seg>Puedes escribir o generar este formato a mano y luego convertirlo al formato binario con cualquiera de varias [herramientas de texto a binario de WebAssembly](https://webassembly.org/getting-started/advanced-tools/).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You can, of course, create more complex output using script code if it's helpful.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T074833Z" creationid="gitnacho" creationdate="20221005T074833Z">
        <seg>Por supuesto, puedes crear salida más compleja utilizando código desde scripts si es útil.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You could also declare the `call_indirect` parameter explicitly during the command call instead of before it, like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072907Z" creationid="gitnacho" creationdate="20221007T072907Z">
        <seg>También podrías declarar el parámetro `call_indirect` explícitamente durante la llamada al comando en lugar de antes, así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You could swap out the `i32` for any of the other available types, and change the value of the const to whatever you like (here we've set the value to `42`).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061218Z" creationid="gitnacho" creationdate="20221007T061218Z">
        <seg>Puedes cambiar el `i32` por cualquiera de los otros tipos disponibles y cambiar el valor de `const` a lo que quieras (aquí hemos establecido el valor en `42`).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You could then build your custom HTML completely from scratch, although this is an advanced approach; it is usually easier to use the provided HTML template.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111415Z" creationid="gitnacho" creationdate="20221003T111415Z">
        <seg>Luego, podrías crear tu HTML personalizado completamente desde cero, aunque este es un enfoque avanzado; por lo general, es más fácil usar la plantilla HTML provista.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You create and edit these files as you would the files of any open-source project on GitHub.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065806Z" creationid="gitnacho" creationdate="20221005T065806Z">
        <seg>Creas y editas estos archivos como lo harías con los archivos de cualquier proyecto de código abierto en GitHub.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You don't have to use it in conjunction with service workers, even though it is defined in the service worker spec.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T162006Z" creationid="gitnacho" creationdate="20220901T015502Z">
        <seg>No tienes que usarlo junto con los *service workers*, aunque esté definido en la especificación del *service worker*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You don't have to worry about placement of code blocks on the page — it grabs an HTML document in a GitHub repo, and puts it in the `&lt;iframe&gt;`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T212033Z" creationid="gitnacho" creationdate="20221005T212033Z">
        <seg>No tienes que preocuparte por la ubicación de los bloques de código en la página: toma un documento HTML en un repositorio de GitHub y lo coloca en un `&lt;iframe&gt;`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You don't need any previous knowledge to start this course.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223606Z" creationid="gitnacho" creationdate="20221018T223606Z">
        <seg>No necesitas conocimientos previos para empezar este curso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You have a package inside the `pkg` directory.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064343Z" creationid="gitnacho" creationdate="20221004T064343Z">
        <seg>Tienes un paquete dentro del directorio `pkg`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You have compiled a WebP encoder and transcoded a JPEG image to WebP.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T055149Z" creationid="gitnacho" creationdate="20221004T055149Z">
        <seg>Compilaste un codificador WebP y transcodificaste una imagen JPEG a WebP.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You just need to add `-s ALLOW_MEMORY_GROWTH=1` to your compilation command.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T055045Z" creationid="gitnacho" creationdate="20221004T055045Z">
        <seg>Solo necesitas agregar `-s ALLOW_MEMORY_GROWTH=1` a tu comando de compilación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You may also use the [Client Hints](/en-US/docs/Web/HTTP/Client_hints) HTTP Header with the `Device-Memory` directive to retrieve the same approximate RAM capacity.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T095418Z" creationid="gitnacho" creationdate="20221012T095418Z">
        <seg>También puede usar el encabezado HTTP [Client Hints](/es/docs/Web/HTTP/Client_hints) con la directiva `Device-Memory` para recuperar la misma capacidad de RAM aproximada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You may prefer to omit specifying {{HTTPHeader("Vary")}} or use some other strategy for client hint headers where the value changes a lot, as this effectively makes the resource uncacheable.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T091831Z" creationid="gitnacho" creationdate="20221012T091831Z">
        <seg>Es posible que prefieras omitir la especificación de {{HTTPHeader("Vary")}} o usar alguna otra estrategia para los encabezados de sugerencia de cliente donde el valor cambia mucho, ya que esto hace que el recurso no se pueda almacenar en caché.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You probably already have a basic text editor on your computer.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T154718Z" creationid="gitnacho" creationdate="20221012T154718Z">
        <seg>Probablemente ya tengas un editor de texto básico en tu computadora.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You register a service worker to control one or more pages that share the same origin.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220916T065859Z" creationid="gitnacho" creationdate="20220916T065859Z">
        <seg>Registra un trabajador de servicio para controlar una o más páginas que comparten el mismo origen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You should also test how your site performs on mobile devices and on any old browsers your target audience may still be using (such as IE 8–10).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T164953Z" creationid="gitnacho" creationdate="20221012T164953Z">
        <seg>También debes probar el rendimiento de tu sitio en dispositivos móviles y en cualquier navegador antiguo que tu público objetivo aún esté usando (como IE 8–10).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You should at least study [Introduction to HTML](/en-US/docs/Learn/HTML/Introduction_to_HTML) first.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T224537Z" creationid="gitnacho" creationdate="20221018T224418Z">
        <seg>Primero deberías estudiar [Introducción a HTML](/es/docs/Learn/HTML/Introduction_to_HTML) por lo menos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You should choose the option _Creative Commons licenses_.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062812Z" creationid="gitnacho" creationdate="20221019T062812Z">
        <seg>Debes elegir una opción como _Etiquetado para reutilización_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You should feel at home whether you are a student learning web development (on your own or as part of a class), a teacher looking for class materials, a hobbyist, or someone who just wants to understand more about how web technologies work.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T234234Z" creationid="gitnacho" creationdate="20221012T231814Z">
        <seg>Para que te sientas como en casa, ya seas un estudiante (por tu cuenta o como parte de un grupo), un maestro buscando material para sus clases, un aficionado o alguien que simplemente desea entender mejor cómo funcionan las tecnologías web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You should still have your paragraphs and title from earlier.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T062244Z" creationid="gitnacho" creationdate="20221019T062244Z">
        <seg>Aún debes tener los párrafos y el título de antes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You then run code in the service worker outside of your normal pages to control their loading.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T213847Z" creationid="gitnacho" creationdate="20220921T025115Z">
        <seg>Luego ejecuta el código en el *service worker* fuera de tus páginas normales para controlar su carga.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You use this interface to retrieve data.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220911T211248Z" creationid="gitnacho" creationdate="20220911T211248Z">
        <seg>Utiliza esta interfaz para recuperar datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You will hear the story of different wiki software migrations, how a documentation community was built, and many more highlights of the history of the site.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T181904Z" creationid="gitnacho" creationdate="20221019T181904Z">
        <seg>Escuchará la historia de diferentes migraciones de software wiki, cómo se construyó una comunidad de documentación y muchos más aspectos destacados de la historia del sitio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You won't build another Facebook right away, but it's not hard to make your own simple website online, so we'll start there.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T042324Z" creationid="gitnacho" creationdate="20220925T042324Z">
        <seg>No crearás otro Facebook de inmediato, pero no es difícil tener tu propio sitio web sencillo en línea, así que comenzaremos por ahí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You'll also find our writing style guide here, how-to guides to perform various content tasks, and also information about the structure of our different pages.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T200720Z" creationid="gitnacho" creationdate="20221008T200720Z">
        <seg>También encontrarás nuestra guía de estilo de escritura aquí, guías prácticas para realizar varias tareas de contenido y también información sobre la estructura de nuestras diferentes páginas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You'll set up the tools you need to construct a simple webpage and publish your own simple code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T042241Z" creationid="gitnacho" creationdate="20220925T042241Z">
        <seg>Configurarás las herramientas que necesitas para construir una sencilla página web y publicar tu propio código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>You'll want to update your `install` event listener in the new service worker to something like this (notice the new version number):</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220924T051555Z" creationid="gitnacho" creationdate="20220921T041809Z">
        <seg>Querrás actualizar tu detector de eventos `install` en el nuevo *service worker* a algo como esto (observa el nuevo número de versión):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Your code might look something like this:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T060513Z" creationid="gitnacho" creationdate="20221005T060513Z">
        <seg>Tu código podría ser algo como esto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>Your service worker can respond to requests using the {{DOMxRef("FetchEvent")}} event.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T144926Z" creationid="gitnacho" creationdate="20221002T144926Z">
        <seg>Tu *service worker* puede responder a las solicitudes mediante el evento {{DOMxRef("FetchEvent")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200421T172043Z" creationid="Pacho" creationdate="20200421T172043Z">
        <seg>[</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[Constructing](/en-US/docs/WebAssembly/JavaScript_interface/Tag/Tag) an instance of `Tag` creates a new unique tag.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015222Z" creationid="gitnacho" creationdate="20221008T015222Z">
        <seg>Al [construir](/es/docs/WebAssembly/JavaScript_interface/Tag/Tag) una instancia `Tag` se crea una nueva etiqueta única.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[Credentialed requests](#requests_with_credentials) are discussed above.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054339Z" creationid="gitnacho" creationdate="20221012T054339Z">
        <seg>[Solicitudes con credenciales](#solicitudes_con_credenciales) se analizan anteriormente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[Demo](https://googlechrome.github.io/samples/webassembly/image.html) | [Original Article](https://web.dev/emscripting-a-c-library/)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T052844Z" creationid="gitnacho" creationdate="20221004T052844Z">
        <seg>[Demo](https://googlechrome.github.io/samples/webassembly/image.html) | [Artículo Original](https://web.dev/emscripting-a-c-library/)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[Fetch](/en-US/docs/Web/API/Fetch_API) is a convenient, modern API for fetching network resources.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T055405Z" creationid="gitnacho" creationdate="20221005T055405Z">
        <seg>[Fetch](/es/docs/Web/API/Fetch_API) es una API moderna y conveniente para obtener recursos de red.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[IndexedDB](/en-US/docs/Web/API/IndexedDB_API) is a transactional database system that allows you to store and retrieve structured data on the client-side.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221004T045047Z">
        <seg>[IndexedDB](/es/docs/Web/API/IndexedDB_API) es un sistema de base de datos transaccional que te permite almacenar y recuperar datos estructurados en el lado del cliente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[Install Git](https://git-scm.com/downloads) on your machine.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T173529Z" creationid="Nachec" creationdate="20221020T173529Z">
        <seg>[Instala Git](https://git-scm.com/downloads) en tu máquina.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[Lynx](https://lynx.browser.org/), a text-based terminal web browser, is great for seeing how your site is experienced by visually-impaired users.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T165012Z" creationid="gitnacho" creationdate="20221012T165012Z">
        <seg>[Lynx](https://lynx.browser.org/), un navegador web de terminal basado en texto, es ideal para ver cómo los usuarios con discapacidades visuales experimentan tu sitio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[Some XML payload]
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T224441Z" creationid="gitnacho" creationdate="20221011T224441Z">
        <seg>[Carga algún XML]
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[Speed up Service Worker with Navigation Preloads &gt; Custom responses for preloads](https://developer.chrome.com/blog/navigation-preload/) provides a more complete example of a site where the response for an article web page is constructed from a cached header and footer, so that only the article content is returned for a prefetch.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T212956Z" creationid="gitnacho" creationdate="20220922T211117Z">
        <seg>[Acelera el *Service Worker*&amp;nbsp;con precargas de navegación &gt; Respuestas personalizadas para precargas](https://developer.chrome.com/blog/navigation-preload/) proporciona un ejemplo más completo de un sitio donde se construye la respuesta para una página web de artículo desde un encabezado y pie de página en caché, de modo que solo devuelva el contenido del artículo para una precarga.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[],</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210921T123324Z" creationid="gitnacho" creationdate="20210921T123324Z">
        <seg>[],</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[];</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210921T214457Z" creationid="gitnacho" creationdate="20210921T214457Z">
        <seg>[];</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[`Previous`](https://github.com/mdn/yari/blob/main/kumascript/macros/Previous.ejs), [`Next`](https://github.com/mdn/yari/blob/main/kumascript/macros/Next.ejs), and [`PreviousNext`](https://github.com/mdn/yari/blob/main/kumascript/macros/PreviousNext.ejs) provide navigation controls for articles which are part of sequences.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114633Z" creationid="gitnacho" creationdate="20221005T113347Z">
        <seg>[`Previous`](https://github.com/mdn/yari/blob/main/kumascript/macros/Previous.ejs), [`Next`](https://github.com/mdn/yari/blob/main/kumascript/macros/Next.ejs) y [`PreviousNext`](https://github.com/mdn/yari/blob/main/kumascript/macros/PreviousNext.ejs) proporcionan controles de navegación para artículos que son parte de secuencias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[`WebAssembly.CompileError`](/en-US/docs/WebAssembly/JavaScript_interface/CompileError), [`WebAssembly.LinkError`](/en-US/docs/WebAssembly/JavaScript_interface/LinkError), or</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T104454Z" creationid="gitnacho" creationdate="20221006T104454Z">
        <seg>[`WebAssembly.CompileError`](/es/docs/WebAssembly/JavaScript_interface/CompileError), [`WebAssembly.LinkError`](/es/docs/WebAssembly/JavaScript_interface/LinkError), o</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[`WebAssembly.CompileError`](/en-US/docs/WebAssembly/JavaScript_interface/CompileError).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T180552Z" creationid="gitnacho" creationdate="20221007T180552Z">
        <seg>[`WebAssembly.CompileError`](/es/docs/WebAssembly/JavaScript_interface/CompileError).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[`WebAssembly.LinkError`](/en-US/docs/WebAssembly/JavaScript_interface/LinkError)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T102058Z" creationid="gitnacho" creationdate="20221006T102004Z">
        <seg>[`WebAssembly.LinkError`](/es/docs/WebAssembly/JavaScript_interface/LinkError)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[`WebAssembly.Memory`](/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Memory) can still be used to get an instance.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20220923T030749Z">
        <seg>[`WebAssembly.Memory`](/es/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Memory) todavía se puede usar para obtener una instancia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[`WebAssembly.Memory`](/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Memory) objects can be created with the [`shared`](/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Memory/Memory#shared) constructor flag.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20220923T031014Z">
        <seg>Los objetos [`WebAssembly.Memory`](/es/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Memory) se pueden crear con el indicador [`shared`](/es/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Memory/Memory#shared) del constructor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module) and its first [`WebAssembly.Instance`](/en-US/docs/WebAssembly/JavaScript_interface/Instance).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193208Z" creationid="gitnacho" creationdate="20221007T193208Z">
        <seg>[`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module) compilado y su primer [`WebAssembly.Instance`](/es/docs/WebAssembly/JavaScript_interface/Instance).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[`WebAssembly.RuntimeError`](/en-US/docs/WebAssembly/JavaScript_interface/RuntimeError) are thrown, depending on the cause of the failure.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T210231Z" creationid="gitnacho" creationdate="20221019T210231Z">
        <seg>[`WebAssembly.RuntimeError`](/es/docs/WebAssembly/JavaScript_interface/RuntimeError), dependiendo de la causa de la falla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[`WebAssembly.RuntimeError`](/en-US/docs/WebAssembly/JavaScript_interface/RuntimeError), depending on the cause of the failure.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T104544Z" creationid="gitnacho" creationdate="20221006T104544Z">
        <seg>[`WebAssembly.RuntimeError`](/es/docs/WebAssembly/JavaScript_interface/RuntimeError), según la causa del error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[`XMLHttpRequest`](/en-US/docs/Web/API/XMLHttpRequest) is somewhat older than Fetch, but can still be happily used to get a typed array.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221005T060817Z">
        <seg>[`XMLHttpRequest`](/es/docs/Web/API/XMLHttpRequest) es un poco más antiguo que Fetch, pero, felizmente, aún se puede usar para obtener un arreglo tipado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[`deprecated_inline`](https://github.com/mdn/yari/blob/main/kumascript/macros/Deprecated_Inline.ejs) inserts an in-line deprecated mark ({{Deprecated_Inline}}) to discourage the use of an API that is officially deprecated (or has been removed).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T215106Z" creationid="gitnacho" creationdate="20221005T114427Z">
        <seg>[`deprecated_inline`](https://github.com/mdn/yari/blob/main/kumascript/macros/Deprecated_Inline.ejs) inserta en línea una marca obsoleta ({{Deprecated_Inline}}) para desalentar el uso de un API que está oficialmente en desuso (o se ha eliminado).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[`experimental_inline`](https://github.com/mdn/yari/blob/main/kumascript/macros/experimental_inline.ejs) inserts an in-line mark indicating the API is not widely implemented and may change in the future.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114305Z" creationid="gitnacho" creationdate="20221005T114305Z">
        <seg>[`experimental_inline`](https://github.com/mdn/yari/blob/main/kumascript/macros/experimental_inline.ejs) inserta una marca en línea que indica que la API no está ampliamente implementada y puede cambiar en el futuro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[`non-standard_inline`](https://github.com/mdn/yari/blob/main/kumascript/macros/Non-standard_Inline.ejs) inserts an in-line mark indicating the API has not been standardized and is not on a standards track.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T214627Z" creationid="gitnacho" creationdate="20221005T114134Z">
        <seg>[`non-standard_inline`](https://github.com/mdn/yari/blob/main/kumascript/macros/Non-standard_Inline.ejs) inserta una marca en línea que indica que la API no se ha estandarizado y no está en una pista estándar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[`null`](/en-US/docs/Web/JavaScript/Reference/Operators/null),</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T234139Z" creationid="gitnacho" creationdate="20221019T234139Z">
        <seg>[`null`](/es/docs/Web/JavaScript/Reference/Operators/null),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[`optional_inline`](https://github.com/mdn/yari/blob/main/kumascript/macros/optional_inline.ejs) and [`ReadOnlyInline`](https://github.com/mdn/yari/blob/main/kumascript/macros/ReadOnlyInline.ejs) are used in API documentation, usually when describing the list of properties of an object or parameters of a function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114925Z" creationid="gitnacho" creationdate="20221005T113954Z">
        <seg>[`optional_inline`](https://github.com/mdn/yari/blob/main/kumascript/macros/opcional_inline.ejs) y [`ReadOnlyInline`](https://github.com/mdn/yari/blob/main/kumascript/macros/ReadOnlyInline.ejs) se usan en la documentación de la API, generalmente cuando se describe la lista de propiedades de un objeto o los parámetros de una función.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[dependencies]
wasm-bindgen = "0.2"
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063640Z" creationid="gitnacho" creationdate="20221004T063640Z">
        <seg>[dependencies]
wasm-bindgen = "0.2"
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[lib]
crate-type = ["cdylib"]</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063639Z" creationid="gitnacho" creationdate="20221004T063639Z">
        <seg>[lib]
crate-type = ["cdylib"]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[macaron]: https://en.wikipedia.org/wiki/Macaron
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174132Z" creationid="gitnacho" creationdate="20221008T174132Z">
        <seg>[macaron]: https://en.wikipedia.org/wiki/Macaron
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[native code]
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T090949Z" creationid="gitnacho" creationdate="20221006T090048Z">
        <seg>[código nativo]
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[text/plain payload]
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230611Z" creationid="gitnacho" creationdate="20221011T230611Z">
        <seg>[text/plain payload]
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>[…XML Data…]
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222059Z" creationid="gitnacho" creationdate="20221011T222059Z">
        <seg>[…XML Data…]
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>\\{{EmbedGHLiveSample("learning-area/css/styling-boxes/backgrounds/", '100%', 100)}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T212313Z" creationid="gitnacho" creationdate="20221005T212313Z">
        <seg>\\{{EmbedGHLiveSample("learning-area/css/styling-boxes/backgrounds/", '100%', 100)}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>\{{EmbedInteractiveExample("pages/css/margin.html")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191851Z" creationid="gitnacho" creationdate="20221008T191851Z">
        <seg>\{{EmbedInteractiveExample("pages/css/margin.html")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>\{{EmbedLiveSample("Styling a paragraph")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211552Z" creationid="gitnacho" creationdate="20221005T211552Z">
        <seg>\{{EmbedLiveSample("Estilizar un párrafo")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>]</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170429T082152Z" creationid="nacho" creationdate="20170429T082152Z">
        <seg>]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>])</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T211201Z" creationid="nachec" creationdate="20220804T211201Z">
        <seg>])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>]);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T211205Z" creationid="nachec" creationdate="20220804T211205Z">
        <seg>]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>],</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170321T102258Z" creationid="nacho" creationdate="20170321T102258Z">
        <seg>],</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>];</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170321T232044Z" creationid="nacho" creationdate="20170321T232044Z">
        <seg>];</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>_Cargo_ ships _crates_.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062305Z" creationid="gitnacho" creationdate="20221004T062305Z">
        <seg>_Cargo_ viene con _crates_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>_Getting started with the web_ is a concise series introducing you to the practicalities of web development.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T042220Z" creationid="gitnacho" creationdate="20220925T040459Z">
        <seg>_Introducción a la Web_ es una serie concisa que te presenta los aspectos prácticos del desarrollo web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>_The `ServiceWorker` interface inherits methods from its parent, {{domxref("EventTarget")}}._</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T212541Z">
        <seg>_La interfaz `ServiceWorker` hereda métodos de su padre, {{DOMxRef("EventTarget")}}._</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>_The `ServiceWorker` interface inherits properties from its parent, {{domxref("EventTarget")}}._</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T212340Z">
        <seg>_La interfaz `ServiceWorker` hereda propiedades de su padre, {{DOMxRef("EventTarget")}}._</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>_What will your website look like?_ discusses the planning and design work you have to do for your website before writing code, including "What information does my website offer?", "What fonts and colors do I want?", and "What does my site do?"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T060922Z" creationid="gitnacho" creationdate="20221019T060922Z">
        <seg>_¿Cómo se verá tu sitio web?_, analiza el trabajo de planificación y diseño que debes realizar para tu sitio web antes de escribir el código, incluyendo: "¿qué información ofrece mi sitio web?", "¿qué tipos de letra y colores quiero?" y "¿qué hace mi sitio?".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200530T214859Z" creationid="Pacho" creationdate="20200530T214859Z">
        <seg>`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T211204Z" creationid="nachec" creationdate="20220804T211204Z">
        <seg>`);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`1` in the case of an `Uint8ClampedArray`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T050450Z" creationid="gitnacho" creationdate="20221005T050450Z">
        <seg>`1` en el caso de `Uint8ClampedArray`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210930T105157Z" creationid="gitnacho" creationdate="20210930T105157Z">
        <seg>`;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`Access-Control-Allow-Origin` specifies either a single origin which tells browsers to allow that origin to access the resource; or else — for requests **without** credentials — the "`*`" wildcard tells browsers to allow any origin to access the resource.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053803Z" creationid="gitnacho" creationdate="20221012T053803Z">
        <seg>`Access-Control-Allow-Origin` especifica un solo origen que le dice a los navegadores que permitan que ese origen acceda al recurso; o bien, para solicitudes **sin** credenciales, el comodín "`*`" le dice a los navegadores que permitan que cualquier origen acceda al recurso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`Cache` quota usage estimates are available via the {{domxref("StorageManager.estimate()")}} method.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221003T202708Z">
        <seg>Las estimaciones de uso de la cuota `cache` están disponibles a través del método {{DOMxRef("StorageManager.estimate()")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`DocumentParsingError` errors appear when KumaScript has trouble understanding something in the document itself.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T092045Z" creationid="gitnacho" creationdate="20221005T092045Z">
        <seg>Los errores `DocumentParsingError` aparecen cuando KumaScript tiene problemas para entender algo en el documento mismo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`Event` itself contains the properties and methods which are common to all events.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T201727Z" creationid="gitnacho" creationdate="20221011T201727Z">
        <seg>`Event` en sí mismo contiene las propiedades y métodos que son comunes a todos los eventos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`Instance` objects contain all the [Exported WebAssembly functions](/en-US/docs/WebAssembly/Exported_functions) that allow calling into WebAssembly code from JavaScript.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T070756Z" creationid="gitnacho" creationdate="20221003T101709Z">
        <seg>Los objetos `Instance` contienen todas las [funciones exportadas de WebAssembly](/es/docs/WebAssembly/Exported_functions) que permiten llamar a código WebAssembly desde JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`Instance`, such as functions or [`WebAssembly.Memory`](/en-US/docs/WebAssembly/JavaScript_interface/Memory) objects.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T101918Z" creationid="gitnacho" creationdate="20221006T101918Z">
        <seg>`Instance`, como funciones u objetos [`WebAssembly.Memory`](/es/docs/WebAssembly/JavaScript_interface/Memory).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`Module`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193238Z" creationid="gitnacho" creationdate="20221007T193238Z">
        <seg>`Module`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`SUCCESS!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233938Z" creationid="gitnacho" creationdate="20221006T233938Z">
        <seg>`SUCCESS!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`SharedArrayBuffer` objects are used by some web APIs, such as:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T023516Z" creationid="gitnacho" creationdate="20220923T023516Z">
        <seg>Algunas APIs web utilizan los objetos `SharedArrayBuffer`, como:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`TemplateExecutionError` errors appear when KumaScript encounters an error in the macro.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T093126Z" creationid="gitnacho" creationdate="20221005T093126Z">
        <seg>Los errores `TemplateExecutionError` aparecen cuando KumaScript encuentra un error en la macro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`TemplateLoadingError` errors appear when KumaScript has trouble finding which [macro](/en-US/docs/MDN/Writing_guidelines/Page_structures/Macros) to include on a page.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T194438Z" creationid="gitnacho" creationdate="20221005T093044Z">
        <seg>Los errores `TemplateLoadingError` aparecen cuando KumaScript tiene problemas para encontrar qué [macro](/es/docs/MDN/Writing_guidelines/Page_structures/Macros) incluir en una página.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`The given bytes are ${valid ?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T122630Z" creationid="gitnacho" creationdate="20221019T122500Z">
        <seg>`Los bytes dados ${valid ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`\{{Deprecated_Inline}}`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T115209Z" creationid="gitnacho" creationdate="20221005T115209Z">
        <seg>`\{{Deprecated_Inline}}`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`\{{Experimental_Inline}}`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114307Z" creationid="gitnacho" creationdate="20221005T114307Z">
        <seg>`\{{Experimental_Inline}}`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`\{{Non-standard_Inline}}`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T114142Z" creationid="gitnacho" creationdate="20221005T114142Z">
        <seg>`\{{Non-standard_Inline}}`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211208T055948Z" creationid="nacho" creationdate="20170312T060051Z">
        <seg>```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```
${url}:wasm-function[${funcIndex}]:${pcOffset}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T203735Z" creationid="gitnacho" creationdate="20221019T203735Z">
        <seg>```
${url}:wasm-function[${funcIndex}]:${pcOffset}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```
Firefox for Developers / Hello!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083248Z" creationid="gitnacho" creationdate="20221005T083248Z">
        <seg>```
Firefox for Developers / Hello!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```
Firefox für Entwickler / Hallo!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083214Z" creationid="gitnacho" creationdate="20221005T083214Z">
        <seg>```
Firefox für Entwickler / Hallo!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```
Firefox para desarrolladores / ¡Hola!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083225Z" creationid="gitnacho" creationdate="20221005T083225Z">
        <seg>```
Firefox para desarrolladores / ¡Hola!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```
Hello #0
Hello #1
Hello #2
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065116Z" creationid="gitnacho" creationdate="20221005T065116Z">
        <seg>```
Hello #0
Hello #1
Hello #2
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```
The result of 2 + 2 = 4
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073655Z" creationid="gitnacho" creationdate="20221005T073655Z">
        <seg>```
El resultado de 2 + 2 = 4
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```
````</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183340Z" creationid="gitnacho" creationdate="20221008T183340Z">
        <seg>```
````</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```
{</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T055855Z" creationid="gitnacho" creationdate="20221005T055855Z">
        <seg>```
{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```
{ module: "imports", name: "imported_func", kind: "function" }
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T230517Z" creationid="gitnacho" creationdate="20221019T230517Z">
        <seg>```
{ module: "imports", name: "imported_func", kind: "function" }
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>````</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211620Z" creationid="gitnacho" creationdate="20221005T211620Z">
        <seg>````</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>````
## Examples</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211257Z" creationid="gitnacho" creationdate="20221005T211257Z">
        <seg>````
## Ejemplos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>````plain
- term1</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183245Z" creationid="gitnacho" creationdate="20221008T183146Z">
        <seg>````plain
- term1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>````plain
&gt; **Note:** This is how you write a note.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182236Z" creationid="gitnacho" creationdate="20221008T182236Z">
        <seg>````plain
&gt; **Nota:** Así es como se escribe una nota.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>````plain
```fee fi fo fum
// some example code
```
````</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174651Z" creationid="gitnacho" creationdate="20221008T174651Z">
        <seg>````plain
```fee fi fo fum
// algún código de ejemplo
```
````</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>````plain
```js
const greeting = "I will get JavaScript syntax highlighting";
```
````</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T180702Z" creationid="gitnacho" creationdate="20221008T180702Z">
        <seg>````plain
```js
const greeting = "Obtendré resaltado de sintaxis de JavaScript";
```
````</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>````plain
```js example-good
const greeting = "I'm a good example";
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181001Z" creationid="gitnacho" creationdate="20221008T181001Z">
        <seg>````plain
```js example-good
const greeter = "Soy un buen ejemplo";
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```bash</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105608Z" creationid="gitnacho" creationdate="20221003T105608Z">
        <seg>```bash</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```bash
$ cargo new --lib hello-wasm</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061710Z" creationid="gitnacho" creationdate="20221004T061710Z">
        <seg>```bash
$ cargo new --lib hello-wasm</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```bash
$ emcc -O3 -s WASM=1 -s EXTRA_EXPORTED_RUNTIME_METHODS='["cwrap"]' \</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053628Z" creationid="gitnacho" creationdate="20221004T053628Z">
        <seg>```bash
$ emcc -O3 -s WASM=1 -s EXTRA_EXPORTED_RUNTIME_METHODS='["cwrap"]' \</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```bash
buf.byteLength in main BEFORE transfer to worker:        8                     main.js:19
buf.byteLength in main AFTER transfer to worker:         0                     main.js:27</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120958Z" creationid="gitnacho" creationdate="20221007T120958Z">
        <seg>```bash
buf.byteLength in main BEFORE transfer to worker:        8                     main.js:19
buf.byteLength in main AFTER transfer to worker:         0                     main.js:27</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```bash
cargo install wasm-pack
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061619Z" creationid="gitnacho" creationdate="20221004T061619Z">
        <seg>```bash
cargo install wasm-pack
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```bash
cd ..</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065630Z" creationid="gitnacho" creationdate="20221004T065630Z">
        <seg>```bash
cd ..</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```bash
cd pkg
npm link
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065302Z" creationid="gitnacho" creationdate="20221004T065302Z">
        <seg>```bash
cd pkg
npm link
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```bash
git clone https://github.com/webmproject/libwebp
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053346Z" creationid="gitnacho" creationdate="20221004T053346Z">
        <seg>```bash
git clone https://github.com/webmproject/libwebp
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```bash
npm install
npm run serve
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T070051Z" creationid="gitnacho" creationdate="20221004T070051Z">
        <seg>```bash
npm install
npm run serve
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```bash
wasm-pack build --target bundler
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065151Z" creationid="gitnacho" creationdate="20221004T065151Z">
        <seg>```bash
wasm-pack build --target bundler
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```bash
wasm-pack build --target web
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064012Z" creationid="gitnacho" creationdate="20221004T064012Z">
        <seg>```bash
wasm-pack build --target web
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```bash
wast2wasm simple-name-section.was -o simple-name-section.wasm --debug-names
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T222628Z" creationid="gitnacho" creationdate="20221019T222628Z">
        <seg>```bash
wast2wasm simple-name-section.was -o simple-name-section.wasm --debug-names
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```bash
wat2wasm simple.wat -v
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T183026Z" creationid="gitnacho" creationdate="20221007T183026Z">
        <seg>```bash
wat2wasm simple.wat -v
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```cpp</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105511Z" creationid="gitnacho" creationdate="20221003T105511Z">
        <seg>```cpp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```cpp
#include "emscripten.h"
#include "src/webp/encode.h"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053422Z" creationid="gitnacho" creationdate="20221004T053422Z">
        <seg>```cpp
#include "emscripten.h"
#include "src/webp/encode.h"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```cpp
#include &lt;stdlib.h&gt; // required for malloc definition</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054243Z" creationid="gitnacho" creationdate="20221004T054225Z">
        <seg>```cpp
#include &lt;stdlib.h&gt; // requerido por malloc definition</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```cpp
int result[2];
EMSCRIPTEN_KEEPALIVE
void encode(uint8_t* img_in, int width, int height, float quality) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054820Z" creationid="gitnacho" creationdate="20221004T054820Z">
        <seg>```cpp
int result[2];
EMSCRIPTEN_KEEPALIVE
void encode(uint8_t* img_in, int width, int height, float quality) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```css
:root {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174249Z" creationid="gitnacho" creationdate="20221012T174249Z">
        <seg>```css
:root {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```css
p.fancy {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211455Z" creationid="gitnacho" creationdate="20221005T211455Z">
        <seg>```css
p.fancy {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```html</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T112244Z" creationid="gitnacho" creationdate="20221003T112244Z">
        <seg>```html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```html
&lt;!-- Generated by the server --&gt;
&lt;script id="data" type="application/json"&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134322Z" creationid="gitnacho" creationdate="20221003T134322Z">
        <seg>```html
&lt;!-- Generado por el servidor --&gt;
&lt;script id="data" type="application/json"&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```html
&lt;!-- wiki.languages({ "zh-tw": "zh_tw/Core_JavaScript_1.5_教學/JavaScript_概要", ... }) --&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082304Z" creationid="gitnacho" creationdate="20221005T082304Z">
        <seg>```html
&lt;!-- wiki.languages({ "zh-tw": "zh_tw/Core_JavaScript_1.5_教學/JavaScript_概要", ... }) --&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```html
&lt;!DOCTYPE html&gt;
&lt;html lang="en-US"&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064601Z" creationid="gitnacho" creationdate="20221004T064601Z">
        <seg>```html
&lt;!DOCTYPE html&gt;
&lt;html lang="en-US"&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```html
&lt;div class="callout"&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181939Z" creationid="gitnacho" creationdate="20221008T181939Z">
        <seg>```html
&lt;div class="callout"&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```html
&lt;div class="notecard note"&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181632Z" creationid="gitnacho" creationdate="20221008T181632Z">
        <seg>```html
&lt;div class="notecard note"&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```html
&lt;div class="notecard warning"&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181839Z" creationid="gitnacho" creationdate="20221008T181839Z">
        <seg>```html
&lt;div class="notecard warning"&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```html
&lt;dl&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183538Z" creationid="gitnacho" creationdate="20221008T183538Z">
        <seg>```html
&lt;dl&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```html
&lt;img src="example.svg" alt="three circles" width="300" height="100" /&gt;
&lt;br /&gt;
&lt;img src="example.svg#three" alt="blue circle" width="100" height="100" /&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T173816Z" creationid="gitnacho" creationdate="20221005T173816Z">
        <seg>```html
&lt;img src="example.svg" alt="tres círculos" width="300" height="100" /&gt;
&lt;br /&gt;
&lt;img src="example.svg#three" alt="círculo azul" width="100" height="100" /&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```html
&lt;p&gt;I'm not fancy.&lt;/p&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211355Z" creationid="gitnacho" creationdate="20221005T211355Z">
        <seg>&lt;p&gt;No soy elegante.&lt;/p&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```html
&lt;pre&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174245Z" creationid="gitnacho" creationdate="20221012T174245Z">
        <seg>```html
&lt;pre&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```html
&lt;script src="./a.out.js"&gt;&lt;/script&gt;
&lt;script&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053743Z" creationid="gitnacho" creationdate="20221004T053743Z">
        <seg>```html
&lt;script src="./a.out.js"&gt;&lt;/script&gt;
&lt;script&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```html
&lt;script src="javascript.js"&gt;&lt;/script&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T133956Z" creationid="gitnacho" creationdate="20221003T133956Z">
        <seg>```html
&lt;script src="javascript.js"&gt;&lt;/script&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```html
&lt;script type="module" src="main.js"&gt;&lt;/script&gt;
&lt;script nomodule src="fallback.js"&gt;&lt;/script&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134207Z" creationid="gitnacho" creationdate="20221003T134207Z">
        <seg>```html
&lt;script type="module" src="main.js"&gt;&lt;/script&gt;
&lt;script nomodule src="fallback.js"&gt;&lt;/script&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```html
&lt;script&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134013Z" creationid="gitnacho" creationdate="20221003T134013Z">
        <seg>```html
&lt;script&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```html
&lt;table class="properties"&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191228Z" creationid="gitnacho" creationdate="20221008T191228Z">
        <seg>```html
&lt;table class="properties"&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```html
&lt;table&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185057Z" creationid="gitnacho" creationdate="20221008T185057Z">
        <seg>```html
&lt;table&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```html
&lt;ul&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183350Z" creationid="gitnacho" creationdate="20221008T183350Z">
        <seg>```html
&lt;ul&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```html hidden
&lt;p&gt;I'm not fancy.&lt;/p&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211833Z" creationid="gitnacho" creationdate="20221005T211833Z">
        <seg>```html hidden
&lt;p&gt;No soy elegante.&lt;/p&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
302 Found
Location: /NewPage.html
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T211815Z" creationid="gitnacho" creationdate="20221017T211815Z">
        <seg>```http
302 Found
Location: /NewPage.html
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
304 Not Modified
Access-Control-Allow-Origin: *
Age: 2318192
Cache-Control: public, max-age=315360000
Connection: keep-alive
Date: Mon, 18 Jul 2016 16:06:00 GMT
Server: Apache
Vary: Accept-Encoding
Via: 1.1 3dc30c7222755f86e824b93feb8b5b8c.cloudfront.net (CloudFront)
X-Amz-Cf-Id: TOl0FEm6uI4fgLdrKJx0Vao5hpkKGZULYN2TWD2gAWLtr7vlNjTvZw==
X-Backend-Server: developer6.webapp.scl3.mozilla.com
X-Cache: Hit from cloudfront
X-Cache-Info: cached
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T080901Z" creationid="gitnacho" creationdate="20221017T211825Z">
        <seg>```http
304 Note Modified
Access-Control-Allow-Origin: *
Age: 2318192
Cache-Control: public, max-age=315360000
Connection: keep-alive
Date: Mon, 18 Jul 2016 16:06:00 GMT
Server: Apache
Vary: Accept-Encoding
Via: 1.1 3dc30c7222755f86e824b93feb8b5b8c.cloudfront.net (CloudFront)
X-Amz-Cf-Id: TOl0FEm6uI4fgLdrKJx0Vao5hpkKGZULYN2TWD2gAWLtr7vlNjTvZw==
X-Backend-Server: developer6.webapp.scl3.mozilla.com
X-Cache: Hit from cloudfront
X-Cache-Info: cached
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
Accept-CH: Width, Downlink, Sec-CH-UA
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T091531Z" creationid="gitnacho" creationdate="20221012T091531Z">
        <seg>```http
Accept-CH: Width, Downlink, Sec-CH-UA
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
Access-Control-Allow-Credentials: true
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054231Z" creationid="gitnacho" creationdate="20221012T054231Z">
        <seg>```http
Access-Control-Allow-Credentials: true
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
Access-Control-Allow-Headers: &lt;header-name&gt;[, &lt;header-name&gt;]*
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060346Z" creationid="gitnacho" creationdate="20221012T060346Z">
        <seg>```http
Access-Control-Allow-Headers: &lt;header-name&gt;[, &lt;header-name&gt;]*
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
Access-Control-Allow-Methods: &lt;method&gt;[, &lt;method&gt;]*
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054438Z" creationid="gitnacho" creationdate="20221012T054438Z">
        <seg>```http
Access-Control-Allow-Methods: &lt;method&gt;[, &lt;method&gt;]*
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
Access-Control-Allow-Origin: *
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222134Z" creationid="gitnacho" creationdate="20221011T222134Z">
        <seg>```http
Access-Control-Allow-Origin: *
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
Access-Control-Allow-Origin: &lt;origin&gt; | *
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053742Z" creationid="gitnacho" creationdate="20221012T053742Z">
        <seg>```http
Access-Control-Allow-Origin: &lt;origin&gt; | *
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
Access-Control-Allow-Origin: https://foo.example
Access-Control-Allow-Methods: POST, GET, OPTIONS
Access-Control-Allow-Headers: X-PINGOTHER, Content-Type
Access-Control-Max-Age: 86400
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T223011Z" creationid="gitnacho" creationdate="20221011T223011Z">
        <seg>```http
Access-Control-Allow-Origin: https://foo.example
Access-Control-Allow-Methods: POST, GET, OPTIONS
Access-Control-Allow-Headers: X-PINGOTHER, Content-Type
Access-Control-Max-Age: 86400
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
Access-Control-Allow-Origin: https://foo.example
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222216Z" creationid="gitnacho" creationdate="20221011T222216Z">
        <seg>```http
Access-Control-Allow-Origin: https://foo.example
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
Access-Control-Allow-Origin: https://mozilla.org
Vary: Origin
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053818Z" creationid="gitnacho" creationdate="20221012T053818Z">
        <seg>```http
Access-Control-Allow-Origin: https://mozilla.org
Vary: Origin
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
Access-Control-Expose-Headers: &lt;header-name&gt;[, &lt;header-name&gt;]*
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T053957Z" creationid="gitnacho" creationdate="20221012T053957Z">
        <seg>```http
Access-Control-Expose-Headers: &lt;header-name&gt;[, &lt;header-name&gt;]*
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
Access-Control-Expose-Headers: X-My-Custom-Header, X-Another-Custom-Header
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054004Z" creationid="gitnacho" creationdate="20221012T054004Z">
        <seg>```http
Access-Control-Expose-Headers: X-My-Custom-Header, X-Another-Custom-Header
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
Access-Control-Max-Age: &lt;delta-seconds&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054109Z" creationid="gitnacho" creationdate="20221012T054109Z">
        <seg>```http
Access-Control-Max-Age: &lt;delta-seconds&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
Access-Control-Request-Headers: &lt;field-name&gt;[, &lt;field-name&gt;]*
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060903Z" creationid="gitnacho" creationdate="20221012T060903Z">
        <seg>```http
Access-Control-Request-Headers: &lt;field-name&gt;[, &lt;field-name&gt;]*
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
Access-Control-Request-Method: &lt;method&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060651Z" creationid="gitnacho" creationdate="20221012T060651Z">
        <seg>```http
Access-Control-Request-Method: &lt;method&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
Access-Control-Request-Method: POST
Access-Control-Request-Headers: X-PINGOTHER, Content-Type
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222855Z" creationid="gitnacho" creationdate="20221011T222855Z">
        <seg>```http
Access-Control-Request-Method: POST
Access-Control-Request-Headers: X-PINGOTHER, Content-Type
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
Cross-Origin-Opener-Policy: same-origin
Cross-Origin-Embedder-Policy: require-corp
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T023730Z" creationid="gitnacho" creationdate="20220923T023730Z">
        <seg>```http
Cross-Origin-Opener-Policy: same-origin
Cross-Origin-Embedder-Policy: require-corp
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
GET /example.http HTTP/1.1
Host: example.com
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T211746Z" creationid="gitnacho" creationdate="20221017T211746Z">
        <seg>```http
GET /ejemplo.http HTTP/1.1
Host: ejemplo.com
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
GET /resources/credentialed-content/ HTTP/1.1
Host: bar.other
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:71.0) Gecko/20100101 Firefox/71.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Connection: keep-alive
Referer: https://foo.example/examples/credential.html
Origin: https://foo.example
Cookie: pageAccess=2</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230609Z" creationid="gitnacho" creationdate="20221011T230609Z">
        <seg>```http
GET /resources/credentialed-content/ HTTP/1.1
Host: bar.other
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:71.0) Gecko/20100101 Firefox/71.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Connection: keep-alive
Referer: https://foo.example/examples/credential.html
Origin: https://foo.example
Cookie: pageAccess=2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
GET /resources/public-data/ HTTP/1.1
Host: bar.other
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:71.0) Gecko/20100101 Firefox/71.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Connection: keep-alive
Origin: https://foo.example
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222040Z" creationid="gitnacho" creationdate="20221011T222040Z">
        <seg>```http
GET /resources/public-data/ HTTP/1.1
Host: bar.other
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:71.0) Gecko/20100101 Firefox/71.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Connection: keep-alive
Origin: https://foo.example
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
HTTP/1.1 200 OK
Date: Mon, 01 Dec 2008 00:23:53 GMT
Server: Apache/2
Access-Control-Allow-Origin: *
Keep-Alive: timeout=2, max=100
Connection: Keep-Alive
Transfer-Encoding: chunked
Content-Type: application/xml</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222058Z" creationid="gitnacho" creationdate="20221011T222058Z">
        <seg>```http
HTTP/1.1 200 OK
Date: Mon, 01 Dec 2008 00:23:53 GMT
Server: Apache/2
Access-Control-Allow-Origin: *
Keep-Alive: timeout=2, max=100
Connection: Keep-Alive
Transfer-Encoding: chunked
Content-Type: application/xml</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
OPTIONS /doc HTTP/1.1
Host: bar.other
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:71.0) Gecko/20100101 Firefox/71.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Connection: keep-alive
Origin: https://foo.example
Access-Control-Request-Method: POST
Access-Control-Request-Headers: X-PINGOTHER, Content-Type</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T222726Z" creationid="gitnacho" creationdate="20221011T222726Z">
        <seg>```http
OPTIONS /doc HTTP/1.1
Host: bar.other
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:71.0) Gecko/20100101 Firefox/71.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Connection: keep-alive
Origin: https://foo.example
Access-Control-Request-Method: POST
Access-Control-Request-Headers: X-PINGOTHER, Content-Type</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
Origin: &lt;origin&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T060542Z" creationid="gitnacho" creationdate="20221012T060542Z">
        <seg>```http
Origin: &lt;origin&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
POST /doc HTTP/1.1
Host: bar.other
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:71.0) Gecko/20100101 Firefox/71.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Connection: keep-alive
X-PINGOTHER: pingpong
Content-Type: text/xml; charset=UTF-8
Referer: https://foo.example/examples/preflightInvocation.html
Content-Length: 55
Origin: https://foo.example
Pragma: no-cache
Cache-Control: no-cache</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T224418Z" creationid="gitnacho" creationdate="20221011T224418Z">
        <seg>```http
POST /doc HTTP/1.1
Host: bar.other
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:71.0) Gecko/20100101 Firefox/71.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Connection: keep-alive
X-PINGOTHER: pingpong
Content-Type: text/xml; charset=UTF-8
Referer: https://foo.example/examples/preflightInvocation.html
Content-Length: 55
Origin: https://foo.example
Pragma: no-cache
Cache-Control: no-cache</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```http
Vary: Accept, Width, ECT
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T091806Z" creationid="gitnacho" creationdate="20221012T091806Z">
        <seg>```http
Vary: Accept, Width, ECT
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035450Z" creationid="gitnacho" creationdate="20220921T035450Z">
        <seg>```js</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
// Create a new tag (with same parameters) and verify it does not match the exception
const tag2 = new WebAssembly.Tag({ parameters: ["i32", "f64"] });
console.log(`Tag2: ${exception1.is(tag2)}`);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T145431Z" creationid="gitnacho" creationdate="20221019T144532Z">
        <seg>```js
// Crea una nueva etiqueta (con los mismos parámetros) y
// verifica que no coincida con la excepción
const tag2 = new WebAssembly.Tag({ parameters: ["i32", "f64"] });
console.log(`Tag2: ${exception1.is(tag2)}`);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
// Create tag and use it to create an exception
const tag = new WebAssembly.Tag({ parameters: ["i32", "f32"] });
const exception = new WebAssembly.Exception(tag, [42, 42.3]);
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140824Z" creationid="gitnacho" creationdate="20221019T140824Z">
        <seg>```js
// Crea una etiqueta y la usa para crear una excepción
const tag = new WebAssembly.Tag({ parameters: ["i32", "f32"] });
const exception = new WebAssembly.Exception(tag, [42, 42.3]);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
// Create tag and use it to create an exception
const tag1 = new WebAssembly.Tag({ parameters: ["i32", "f64"] });
const exception1 = new WebAssembly.Exception(tag1, [42, 42.3]);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T144659Z" creationid="gitnacho" creationdate="20221019T144659Z">
        <seg>```js
// Crea una etiqueta y la usa para crear una excepción
const tag1 = new WebAssembly.Tag({ parameters: ["i32", "f64"] });
const exception1 = new WebAssembly.Exception(tag1, [42, 42.3]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
// From a length
const uintc8 = new Uint8ClampedArray(2);
uintc8[0] = 42;
uintc8[1] = 1337;
console.log(uintc8[0]); // 42
console.log(uintc8[1]); // 255 (clamped)
console.log(uintc8.length); // 2
console.log(uintc8.BYTES_PER_ELEMENT); // 1</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T052619Z" creationid="gitnacho" creationdate="20221005T052619Z">
        <seg>```js
// De una longitud
const uintc8 = new Uint8ClampedArray(2);
uintc8[0] = 42;
uintc8[1] = 1337;
console.log(uintc8[0]); // 42
console.log(uintc8[1]); // 255 (clamped)
console.log(uintc8.length); // 2
console.log(uintc8.BYTES_PER_ELEMENT); // 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
// Resolving a thenable object
const p1 = Promise.resolve({</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080202Z" creationid="gitnacho" creationdate="20221002T080134Z">
        <seg>```js
// Resolver un objeto thenable
const p1 = Promesa.resolve({</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
// TBD
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T230538Z" creationid="gitnacho" creationdate="20221003T230538Z">
        <seg>```js
// TBD
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
// This is a JS example
const test = "Hello";
console.log(test);
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T205602Z" creationid="gitnacho" creationdate="20221005T205602Z">
        <seg>```js
// Este es un ejemplo de JS
const test = "Hello";
console.log(test);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
// create worker
const myWorker = new Worker("myWorker.js");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120202Z" creationid="gitnacho" creationdate="20221007T120104Z">
        <seg>```js
// crea el worker
const myWorker = new Worker("myWorker.js");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
// listen for main to transfer the buffer to myWorker
self.onmessage = function handleMessageFromMain(msg) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120418Z" creationid="gitnacho" creationdate="20221007T120344Z">
        <seg>```js
// escucha a main para transferir el búfer a myWorker
self.onmessage = function handleMessageFromMain(msg) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
&lt;%</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082520Z" creationid="gitnacho" creationdate="20221005T082520Z">
        <seg>```js
&lt;%</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
&lt;%
const math_lib = require("MathLib");
%&gt;
The result of 2 + 2 = &lt;%= math_lib.add(2, 2) %&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073632Z" creationid="gitnacho" creationdate="20221005T073632Z">
        <seg>```js
&lt;%
const math_lib = require("MathLib");
%&gt;
El resultado de 2 + 2 = &lt;%= math_lib.add(2, 2) %&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
&lt;%
const s_title = mdn.localString({</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083128Z" creationid="gitnacho" creationdate="20221005T083128Z">
        <seg>```js
&lt;%
const s_title = mdn.localString({</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
&lt;%
const text = mdn.localString({</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082946Z" creationid="gitnacho" creationdate="20221005T082946Z">
        <seg>```js
&lt;%
const text = mdn.localString({</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
&lt;%
const text = mdn.localStringMap({</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083019Z" creationid="gitnacho" creationdate="20221005T083019Z">
        <seg>```js
&lt;%
const text = mdn.localStringMap({</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
&lt;%
module.exports = {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073535Z" creationid="gitnacho" creationdate="20221005T073535Z">
        <seg>```js
&lt;%
module.exports = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
&lt;% for (let i = 0; i &lt; $0; i++) { %&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065026Z" creationid="gitnacho" creationdate="20221005T065026Z">
        <seg>```js
&lt;% for (let i = 0; i &lt; $0; i++) { %&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
&lt;%- log.debug("Some text goes here"); %&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T074649Z" creationid="gitnacho" creationdate="20221005T074649Z">
        <seg>```js
&lt;%- log.debug("Aquí va algo de texto"); %&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
&lt;%- mdn.getFileContent(env.files[0]); %&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082647Z" creationid="gitnacho" creationdate="20221005T082647Z">
        <seg>```js
&lt;%- mdn.getFileContent(env.files[0]); %&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
&lt;%- mdn.getFileContent(fileObject); %&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082548Z" creationid="gitnacho" creationdate="20221005T082548Z">
        <seg>```js
&lt;%- mdn.getFileContent(fileObject); %&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
Promise.resolve('Success').then(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073714Z" creationid="gitnacho" creationdate="20221002T073714Z">
        <seg>```js
Promise.resolve('Success').then(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
WebAssembly.compileStreaming(fetch("simple-name-section.wasm")).then((mod) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T222832Z" creationid="gitnacho" creationdate="20221019T222832Z">
        <seg>```js
WebAssembly.compileStreaming(fetch("simple-name-section.wasm")).then((mod) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
WebAssembly.compileStreaming(fetch("simple.wasm")).then((mod) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T230506Z" creationid="gitnacho" creationdate="20221019T230506Z">
        <seg>```js
WebAssembly.compileStreaming(fetch("simple.wasm")).then((mod) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
WebAssembly.instantiate(bufferSource, importObject);
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T191413Z" creationid="gitnacho" creationdate="20221007T191413Z">
        <seg>```js
WebAssembly.instantiate(bufferSource, importObject);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
WebAssembly.instantiate(module, importObject);
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T191253Z" creationid="gitnacho" creationdate="20221007T191253Z">
        <seg>```js
WebAssembly.instantiate(module, importObject);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
WebAssembly.instantiateStreaming(fetch("add.wasm")).then((obj) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T060922Z" creationid="gitnacho" creationdate="20221007T060922Z">
        <seg>```js
WebAssembly.instantiateStreaming(fetch("add.wasm")).then((obj) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
WebAssembly.instantiateStreaming(fetch("call.wasm")).then((obj) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061322Z" creationid="gitnacho" creationdate="20221007T061322Z">
        <seg>```js
WebAssembly.instantiateStreaming(fetch("call.wasm")).then((obj) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
WebAssembly.instantiateStreaming(fetch("memory.wasm")).then((obj) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T121131Z" creationid="gitnacho" creationdate="20221019T121131Z">
        <seg>```js
WebAssembly.instantiateStreaming(fetch("memory.wasm")).then((obj) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
WebAssembly.instantiateStreaming(fetch("myModule.wasm"), importObject).then(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T060515Z" creationid="gitnacho" creationdate="20221005T060515Z">
        <seg>```js
WebAssembly.instantiateStreaming(fetch("myModule.wasm"), importObject).then(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
WebAssembly.instantiateStreaming(fetch("simple.wasm"), importObject).then(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T055513Z" creationid="gitnacho" creationdate="20221005T055513Z">
        <seg>```js
WebAssembly.instantiateStreaming(fetch("simple.wasm"), importObject).then(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
WebAssembly.instantiateStreaming(fetch("table.wasm")).then((obj) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T121723Z" creationid="gitnacho" creationdate="20221019T121723Z">
        <seg>```js
WebAssembly.instantiateStreaming(fetch("table.wasm")).then((obj) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
WebAssembly.instantiateStreaming(fetch("table2.wasm"), importObject).then(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T121858Z" creationid="gitnacho" creationdate="20221019T121858Z">
        <seg>```js
WebAssembly.instantiateStreaming(fetch("table2.wasm"), importObject).then(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
WebAssembly.instantiateStreaming(fetch("wasm-table.wasm")).then((obj) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073344Z" creationid="gitnacho" creationdate="20221007T073344Z">
        <seg>```js
WebAssembly.instantiateStreaming(fetch("wasm-table.wasm")).then((obj) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
addEventListener("activate", (event) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210156Z" creationid="gitnacho" creationdate="20220922T210156Z">
        <seg>```js
addEventListener("activate", (event) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
addEventListener("fetch", (event) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210538Z" creationid="gitnacho" creationdate="20220922T210538Z">
        <seg>```js
addEventListener("fetch", (event) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
addEventListener('controllerchange', (event) =&gt; { });</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T230526Z" creationid="gitnacho" creationdate="20221003T230526Z">
        <seg>```js
addEventListener('controllerchange', (event) =&gt; { });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
addEventListener('statechange', (event) =&gt; { });</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T224854Z" creationid="gitnacho" creationdate="20221003T224854Z">
        <seg>```js
addEventListener('statechange', (event) =&gt; { });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
api.encode(p, image.width, image.height, 100);
const resultPointer = api.get_result_pointer();
const resultSize = api.get_result_size();
const resultView = new Uint8Array(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054900Z" creationid="gitnacho" creationdate="20221004T054900Z">
        <seg>```js
api.encode(p, image.width, image.height, 100);
const resultPointer = api.get_result_pointer();
const resultSize = api.get_result_size();
const resultView = new Uint8Array(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
async function loadImage(src) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054057Z" creationid="gitnacho" creationdate="20221004T054057Z">
        <seg>```js
async function loadImage(src) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
console.log(browser.runtime.getManifest().version);
// expected output: "0.1"
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T102604Z" creationid="gitnacho" creationdate="20221002T102604Z">
        <seg>```js
console.log(browser.runtime.getManifest().version);
// salida esperada: "0.1"
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
console.log(table.length); // 2
table.grow(1);
console.log(table.length); // 3
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T122043Z" creationid="gitnacho" creationdate="20221019T122043Z">
        <seg>```js
console.log(table.length); // 2
table.grow(1);
console.log(table.length); // 3
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
console.log(tbl.length); // a table with 2 elements
console.log(tbl.get(0)); // content for index 0 is null
console.log(tbl.get(1)); // content for index 1 is null
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000240Z" creationid="gitnacho" creationdate="20221020T000240Z">
        <seg>```js
console.log(tbl.length); // una tabla con 2 elementos
console.log(tbl.get(0)); // el contenido para el índice 0 es null
console.log(tbl.get(1)); // el contenido para el índice 1 es null
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const CACHE_VERSION = 1;
const CURRENT_CACHES = {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T201845Z" creationid="gitnacho" creationdate="20221003T201845Z">
        <seg>```js
const CACHE_VERSION = 1;
const CURRENT_CACHES = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const addResourcesToCache = async (resources) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034325Z" creationid="gitnacho" creationdate="20220921T034325Z">
        <seg>```js
const addResourcesToCache = async (resources) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const api = {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054352Z" creationid="gitnacho" creationdate="20221004T054352Z">
        <seg>```js
const api = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const blob = new Blob([result], { type: "image/webp" });
const blobURL = URL.createObjectURL(blob);
const img = document.createElement("img");
img.src = blobURL;
document.body.appendChild(img);
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053159Z" creationid="gitnacho" creationdate="20221004T053159Z">
        <seg>```js
const blob = new Blob([result], { type: "image/webp" });
const blobURL = URL.createObjectURL(blob);
const img = document.createElement("img");
img.src = blobURL;
document.body.appendChild(img);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const bytesPerPage = 64 * 1024;
console.log(memory.buffer.byteLength / bytesPerPage); // "1"
console.log(memory.grow(1)); // "1"
console.log(memory.buffer.byteLength / bytesPerPage); // "2"
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T214021Z" creationid="gitnacho" creationdate="20221019T214021Z">
        <seg>```js
const bytesPerPage = 64 * 1024;
console.log(memory.buffer.byteLength / bytesPerPage); // "1"
console.log(memory.grow(1)); // "1"
console.log(memory.buffer.byteLength / bytesPerPage); // "2"
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const cacheFirst = async (request) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040044Z" creationid="gitnacho" creationdate="20220921T040044Z">
        <seg>```js
const cacheFirst = async (request) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const deleteCache = async (key) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042131Z" creationid="gitnacho" creationdate="20220921T042131Z">
        <seg>```js
const deleteCache = async (key) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const enableNavigationPreload = async () =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041153Z" creationid="gitnacho" creationdate="20220921T041153Z">
        <seg>```js
const enableNavigationPreload = async () =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const f = () =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174246Z" creationid="gitnacho" creationdate="20221012T174246Z">
        <seg>```js
const f = () =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const global = new WebAssembly.Global({ value: "i32", mutable: true }, 0);
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233749Z" creationid="gitnacho" creationdate="20221006T233749Z">
        <seg>```js
const global = new WebAssembly.Global({ value: "i32", mutable: true }, 0);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const importObj = {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095553Z" creationid="gitnacho" creationdate="20221006T095553Z">
        <seg>```js
const importObj = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const importObject = {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T223600Z" creationid="gitnacho" creationdate="20221005T223600Z">
        <seg>```js
const importObject = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const importObject = { imports: { imported_func: (arg) =&gt; console.log(arg) } };</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T101155Z" creationid="gitnacho" creationdate="20221006T101155Z">
        <seg>```js
const importObject = { imports: { imported_func: (arg) =&gt; console.log(arg) } };</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const instantiating = WebAssembly.instantiateStreaming(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000317Z" creationid="gitnacho" creationdate="20221020T000317Z">
        <seg>```js
const instantiating = WebAssembly.instantiateStreaming(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const invocation = new XMLHttpRequest();
const url = "https://bar.other/resources/credentialed-content/";</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230424Z" creationid="gitnacho" creationdate="20221011T230424Z">
        <seg>```js
const invocation = new XMLHttpRequest();
const url = "https://bar.other/resources/credentialed-content/";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const lang = env.locale;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082427Z" creationid="gitnacho" creationdate="20221005T082427Z">
        <seg>```js
const lang = env.locale;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const memory = new WebAssembly.Memory({</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080723Z" creationid="gitnacho" creationdate="20221007T080723Z">
        <seg>```js
const memory = new WebAssembly.Memory({</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const memory = new WebAssembly.Memory({ initial: 1 });</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064854Z" creationid="gitnacho" creationdate="20221007T064854Z">
        <seg>```js
const memory = new WebAssembly.Memory({ initial: 1 });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const myWorker = new Worker('worker.js');</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115851Z" creationid="gitnacho" creationdate="20221007T115851Z">
        <seg>```js
const myWorker = new Worker('worker.js');</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const original = Promise.resolve(33);
const cast = Promise.resolve(original);
cast.then((value) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T074001Z" creationid="gitnacho" creationdate="20221002T074001Z">
        <seg>```js
const original = Promise.resolve(33);
const cast = Promise.resolve(original);
cast.then((value) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const otherTable = new WebAssembly.Table({ element: "anyfunc", initial: 2 });</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085455Z" creationid="gitnacho" creationdate="20221006T085455Z">
        <seg>```js
const otherTable = new WebAssembly.Table({ element: "anyfunc", initial: 2 });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const output = document.getElementById("output");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233935Z" creationid="gitnacho" creationdate="20221006T233935Z">
        <seg>```js
const output = document.getElementById("output");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const p = Promise.resolve([1,2,3]);
p.then((v) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073931Z" creationid="gitnacho" creationdate="20221002T073931Z">
        <seg>```js
const p = Promise.resolve([1,2,3]);
p.then((v) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const path = require("path");
module.exports = {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065728Z" creationid="gitnacho" creationdate="20221004T065728Z">
        <seg>```js
const path = require("path");
module.exports = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const putInCache = async (request, response) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040136Z" creationid="gitnacho" creationdate="20220921T040136Z">
        <seg>```js
const putInCache = async (request, response) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const registerServiceWorker = async () =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T024200Z" creationid="gitnacho" creationdate="20220921T024200Z">
        <seg>```js
const registerServiceWorker = async () =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const request = new XMLHttpRequest();
request.open("GET", "simple.wasm");
request.responseType = "arraybuffer";
request.send();</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T061054Z" creationid="gitnacho" creationdate="20221005T061054Z">
        <seg>```js
const request = new XMLHttpRequest();
request.open("GET", "simple.wasm");
request.responseType = "arraybuffer";
request.send();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const sab = new SharedArrayBuffer(1024);
worker.postMessage(sab);
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T023357Z" creationid="gitnacho" creationdate="20220923T023357Z">
        <seg>```js
const sab = new SharedArrayBuffer(1024);
worker.postMessage(sab);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const table = new WebAssembly.Table({</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T110228Z" creationid="gitnacho" creationdate="20221006T110228Z">
        <seg>```js
const table = new WebAssembly.Table({</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const tag = new WebAssembly.Tag({ parameters: ["i32", "i64"] });
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T071048Z" creationid="gitnacho" creationdate="20221020T071048Z">
        <seg>```js
const tag = new WebAssembly.Tag({ parameters: ["i32", "i64"] });
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const tag = new WebAssembly.Tag({ parameters: ["i32", "i64"] });
console.log(tag.type());</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T071539Z" creationid="gitnacho" creationdate="20221020T071539Z">
        <seg>```js
const tag = new WebAssembly.Tag({ parameters: ["i32", "i64"] });
console.log(tag.type());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const tag = new WebAssembly.Tag({ parameters: ["i32"] });</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204230Z" creationid="gitnacho" creationdate="20221019T204230Z">
        <seg>```js
const tag = new WebAssembly.Tag({ parameters: ["i32"] });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const tagToImport = new WebAssembly.Tag({ parameters: ["i32", "f32"] });
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T015442Z" creationid="gitnacho" creationdate="20221008T015442Z">
        <seg>```js
const tagToImport = new WebAssembly.Tag({ parameters: ["i32", "f32"] });
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const tagToImport = new WebAssembly.Tag({ parameters: ["i32"] });</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023455Z" creationid="gitnacho" creationdate="20221008T023455Z">
        <seg>```js
const tagToImport = new WebAssembly.Tag({ parameters: ["i32"] });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const tbl = new WebAssembly.Table({</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000107Z" creationid="gitnacho" creationdate="20221020T000107Z">
        <seg>```js
const tbl = new WebAssembly.Table({</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const tbl = new WebAssembly.Table({ initial: 2, element: "anyfunc" });
console.log(tbl.length);
console.log(tbl.get(0));
console.log(tbl.get(1));
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T234448Z" creationid="gitnacho" creationdate="20221019T234448Z">
        <seg>```js
const tbl = new WebAssembly.Table({ initial: 2, element: "anyfunc" });
console.log(tbl.length);
console.log(tbl.get(0));
console.log(tbl.get(1));
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const tbl = new WebAssembly.Table({ initial: 2, element: "anyfunc" });
console.log(tbl.length); // "2"
console.log(tbl.get(0)); // "null"
console.log(tbl.get(1)); // "null"
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T121854Z" creationid="gitnacho" creationdate="20221019T121854Z">
        <seg>```js
const tbl = new WebAssembly.Table({ initial: 2, element: "anyfunc" });
console.log(tbl.length); // "2"
console.log(tbl.get(0)); // "null"
console.log(tbl.get(1)); // "null"
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const testFunc = otherTable.get(0);
typeof testFunc;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085851Z" creationid="gitnacho" creationdate="20221006T085851Z">
        <seg>```js
const testFunc = otherTable.get(0);
typeof testFunc;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const thenable = {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080651Z" creationid="gitnacho" creationdate="20221002T080651Z">
        <seg>```js
const thenable = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const wasmCacheVersion = 1;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043908Z" creationid="gitnacho" creationdate="20221004T043908Z">
        <seg>```js
const wasmCacheVersion = 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const worker = new Worker("wasm_worker.js");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T111454Z" creationid="gitnacho" creationdate="20221007T111454Z">
        <seg>```js
const worker = new Worker("wasm_worker.js");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const xhr = new XMLHttpRequest();
const url = "https://bar.other/resources/public-data/";</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T221251Z" creationid="gitnacho" creationdate="20221011T221251Z">
        <seg>```js
const xhr = new XMLHttpRequest();
const url = "https://bar.other/resources/public-data/";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
const xhr = new XMLHttpRequest();
xhr.open("POST", "https://bar.other/doc");
xhr.setRequestHeader("X-PINGOTHER", "pingpong");
xhr.setRequestHeader("Content-Type", "text/xml");
xhr.onreadystatechange = handler;
xhr.send("&lt;person&gt;&lt;name&gt;Arun&lt;/name&gt;&lt;/person&gt;");
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T150558Z" creationid="gitnacho" creationdate="20221017T150558Z">
        <seg>```js
const xhr = new XMLHttpRequest();
xhr.open("POST", "https://bar.other/doc");
xhr.setRequestHeader("X-PINGOTHER", "pingpong");
xhr.setRequestHeader("Content-Type", "text/xml");
xhr.onreadystatechange = handler;
xhr.send("&lt;person&gt;&lt;name&gt;Arun&lt;/name&gt;&lt;/person&gt;");
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
env.tag.forEach(function (tag) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071705Z" creationid="gitnacho" creationdate="20221005T071705Z">
        <seg>```js
env.tag.forEach(function (tag) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
fetch("module.wasm")</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T055704Z" creationid="gitnacho" creationdate="20221005T055704Z">
        <seg>```js
fetch("module.wasm")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
fetch("simple.wasm")</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T181650Z" creationid="gitnacho" creationdate="20221006T181650Z">
        <seg>```js
fetch("simple.wasm")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
function () {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072440Z" creationid="gitnacho" creationdate="20221007T072440Z">
        <seg>```js
function () {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
function consoleLogString(offset, length) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064351Z" creationid="gitnacho" creationdate="20221007T064351Z">
        <seg>```js
function consoleLogString(offset, length) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
function instantiateCachedURL(dbVersion, url, importObject) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T051029Z" creationid="gitnacho" creationdate="20221004T051029Z">
        <seg>```js
function instantiateCachedURL(dbVersion, url, importObject) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
function lookupInDatabase(db) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043452Z" creationid="gitnacho" creationdate="20221004T043452Z">
        <seg>```js
function lookupInDatabase(db) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
function openDatabase() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043358Z" creationid="gitnacho" creationdate="20221004T043358Z">
        <seg>```js
function openDatabase() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
function storeInDatabase(db, module) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043614Z" creationid="gitnacho" creationdate="20221004T043614Z">
        <seg>```js
function storeInDatabase(db, module) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
if ("serviceWorker" in navigator) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213304Z" creationid="gitnacho" creationdate="20221003T213304Z">
        <seg>```js
if ("serviceWorker" in navigator) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
if (crossOriginIsolated) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220923T023811Z" creationid="gitnacho" creationdate="20220923T023811Z">
        <seg>```js
if (crossOriginIsolated) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
if (env.tags.indexOf("tag") !== −1) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071531Z" creationid="gitnacho" creationdate="20221005T071531Z">
        <seg>```js
if (env.tags.indexOf("tag") !== −1) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
if (window.isSecureContext) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T204406Z" creationid="gitnacho" creationdate="20221018T204406Z">
        <seg>```js
if (window.isSecureContext) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
import("./node_modules/hello-wasm/hello_wasm.js").then((js) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065752Z" creationid="gitnacho" creationdate="20221004T065752Z">
        <seg>```js
import("./node_modules/hello-wasm/hello_wasm.js").then((js) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
instantiating.then((obj) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000327Z" creationid="gitnacho" creationdate="20221020T000327Z">
        <seg>```js
instantiating.then((obj) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
let serviceWorker;
if (registration.installing) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223937Z" creationid="gitnacho" creationdate="20221003T223937Z">
        <seg>```js
let serviceWorker;
if (registration.installing) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
let tagExportedFromWasm;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T143239Z" creationid="gitnacho" creationdate="20221019T143239Z">
        <seg>```js
let tagExportedFromWasm;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
memory.buffer; // returns SharedArrayBuffer
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T090430Z" creationid="gitnacho" creationdate="20221007T080840Z">
        <seg>```js
memory.buffer; // devuelve SharedArrayBuffer
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
memory.grow(1);
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T210500Z" creationid="gitnacho" creationdate="20221006T210500Z">
        <seg>```js
memory.grow(1);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
navigator.serviceWorker.ready</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210952Z" creationid="gitnacho" creationdate="20220922T210952Z">
        <seg>```js
navigator.serviceWorker.ready</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
navigator.serviceWorker.register("/sw.js").then((swr) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T225027Z" creationid="gitnacho" creationdate="20221003T225027Z">
        <seg>```js
navigator.serviceWorker.register("/sw.js").then((swr) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
new WebAssembly.Exception(tag, [param], { traceStack: true });
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204446Z" creationid="gitnacho" creationdate="20221019T204446Z">
        <seg>```js
new WebAssembly.Exception(tag, [param], { traceStack: true });
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
new WebAssembly.Instance(module, importObject);
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T210135Z" creationid="gitnacho" creationdate="20221019T210135Z">
        <seg>```js
new WebAssembly.Instance(module, importObject);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
self.addEventListener("fetch", (event) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035247Z" creationid="gitnacho" creationdate="20220921T035247Z">
        <seg>```js
self.addEventListener("fetch", (event) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
self.addEventListener("install", (event) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T225351Z" creationid="gitnacho" creationdate="20220921T225351Z">
        <seg>```js
self.addEventListener("install", (event) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
try {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T064722Z" creationid="gitnacho" creationdate="20221008T064722Z">
        <seg>```js
try {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js
{ name: "exported_func", kind: "function" }
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T225056Z" creationid="gitnacho" creationdate="20221019T225056Z">
        <seg>```js
{ name: "exported_func", kind: "function" }
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js example-bad
const greeting = "I'm a bad example";
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181045Z" creationid="gitnacho" creationdate="20221008T181045Z">
        <seg>```js example-bad
const greeter = "Soy un mal ejemplo";
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js example-bad
const greeting = "I'm a bad example";
```
````</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181007Z" creationid="gitnacho" creationdate="20221008T181007Z">
        <seg>```js example-bad
const greeter = "Soy un mal ejemplo";
```
````</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js example-bad
const memory = new WebAssembly.Memory({</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T213956Z" creationid="gitnacho" creationdate="20221019T213956Z">
        <seg>```js example-bad
const memory = new WebAssembly.Memory({</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js example-bad
const thenable = {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080737Z" creationid="gitnacho" creationdate="20221002T080737Z">
        <seg>```js example-bad
const thenable = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js example-good
const greeting = "I'm a good example";
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181036Z" creationid="gitnacho" creationdate="20221008T181036Z">
        <seg>```js example-good
const greeter = "Soy un buen ejemplo";
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js example-good
const memory = new WebAssembly.Memory({</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T213923Z" creationid="gitnacho" creationdate="20221019T213923Z">
        <seg>```js example-good
const memory = new WebAssembly.Memory({</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
Promise.resolve(value)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073336Z" creationid="gitnacho" creationdate="20221002T073336Z">
        <seg>```js-nolint
Promise.resolve(value)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
WebAssembly.Module.customSections(module, sectionName)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T221712Z" creationid="gitnacho" creationdate="20221019T221712Z">
        <seg>```js-nolint
WebAssembly.Module.customSections(module, sectionName)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
WebAssembly.Module.exports(module)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T224610Z" creationid="gitnacho" creationdate="20221019T224610Z">
        <seg>```js-nolint
WebAssembly.Module.exports(module)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
WebAssembly.Module.imports(module)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T230223Z" creationid="gitnacho" creationdate="20221019T230223Z">
        <seg>```js-nolint
WebAssembly.Module.imports(module)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
WebAssembly.compile(bufferSource)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T122202Z" creationid="gitnacho" creationdate="20221007T122202Z">
        <seg>```js-nolint
WebAssembly.compile(bufferSource)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
WebAssembly.compileStreaming(source)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T185343Z" creationid="gitnacho" creationdate="20221007T185343Z">
        <seg>```js-nolint
WebAssembly.compileStreaming(source)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
WebAssembly.instantiateStreaming(source, importObject)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T101111Z" creationid="gitnacho" creationdate="20221006T101111Z">
        <seg>```js-nolint
WebAssembly.instantiateStreaming(source, importObject)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
WebAssembly.validate(bufferSource)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T195647Z" creationid="gitnacho" creationdate="20221007T195647Z">
        <seg>```js-nolint
WebAssembly.validate(bufferSource)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
get(index)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T091638Z" creationid="gitnacho" creationdate="20221006T091638Z">
        <seg>```js-nolint
get(index)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
getArg(exceptionTag, index)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T142352Z" creationid="gitnacho" creationdate="20221019T142352Z">
        <seg>```js-nolint
getArg(exceptionTag, index)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
grow(number)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T233316Z" creationid="gitnacho" creationdate="20221019T233316Z">
        <seg>```js-nolint
grow(number)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
grow(pageIncrease)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T214432Z" creationid="gitnacho" creationdate="20221019T214432Z">
        <seg>```js-nolint
grow(pageIncrease)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
is(tag)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T144936Z" creationid="gitnacho" creationdate="20221019T144936Z">
        <seg>```js-nolint
is(tag)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
new Exception(tag, payload)
new Exception(tag, payload, options)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T140226Z" creationid="gitnacho" creationdate="20221019T140226Z">
        <seg>```js-nolint
new Exception(tag, payload)
new Exception(tag, payload, options)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
new WebAssembly.CompileError()
new WebAssembly.CompileError(message)
new WebAssembly.CompileError(message, options)
new WebAssembly.CompileError(message, fileName)
new WebAssembly.CompileError(message, fileName, lineNumber)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T134923Z" creationid="gitnacho" creationdate="20221019T134923Z">
        <seg>```js-nolint
new WebAssembly.CompileError()
new WebAssembly.CompileError(message)
new WebAssembly.CompileError(message, options)
new WebAssembly.CompileError(message, fileName)
new WebAssembly.CompileError(message, fileName, lineNumber)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
new WebAssembly.Global(descriptor, value)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110501Z" creationid="gitnacho" creationdate="20221007T110501Z">
        <seg>```js-nolint
new WebAssembly.Global(descriptor, value)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
new WebAssembly.LinkError()
new WebAssembly.LinkError(message)
new WebAssembly.LinkError(message, options)
new WebAssembly.LinkError(message, fileName)
new WebAssembly.LinkError(message, fileName, lineNumber)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T211630Z" creationid="gitnacho" creationdate="20221019T211630Z">
        <seg>```js-nolint
new WebAssembly.LinkError()
new WebAssembly.LinkError(message)
new WebAssembly.LinkError(message, options)
new WebAssembly.LinkError(message, fileName)
new WebAssembly.LinkError(message, fileName, lineNumber)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
new WebAssembly.Memory(memoryDescriptor)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T215113Z" creationid="gitnacho" creationdate="20221019T215113Z">
        <seg>```js-nolint
new WebAssembly.Memory(memoryDescriptor)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
new WebAssembly.Module(bufferSource)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T231434Z" creationid="gitnacho" creationdate="20221019T231434Z">
        <seg>```js-nolint
new WebAssembly.Module(bufferSource)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
new WebAssembly.RuntimeError()
new WebAssembly.RuntimeError(message)
new WebAssembly.RuntimeError(message, options)
new WebAssembly.RuntimeError(message, fileName)
new WebAssembly.RuntimeError(message, fileName, lineNumber)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T232253Z" creationid="gitnacho" creationdate="20221019T232253Z">
        <seg>```js-nolint
new WebAssembly.RuntimeError()
new WebAssembly.RuntimeError(message)
new WebAssembly.RuntimeError(message, options)
new WebAssembly.RuntimeError(message, fileName)
new WebAssembly.RuntimeError(message, fileName, lineNumber)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
new WebAssembly.Table(tableDescriptor)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T235946Z" creationid="gitnacho" creationdate="20221019T235946Z">
        <seg>```js-nolint
new WebAssembly.Table(tableDescriptor)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
new WebAssembly.Tag(type)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T070805Z" creationid="gitnacho" creationdate="20221020T070805Z">
        <seg>```js-nolint
new WebAssembly.Tag(type)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
open(cacheName)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T225026Z" creationid="gitnacho" creationdate="20220921T225026Z">
        <seg>```js-nolint
open(cacheName)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
postMessage(message)
postMessage(message, transfer)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115450Z" creationid="gitnacho" creationdate="20221007T115450Z">
        <seg>```js-nolint
postMessage(message)
postMessage(message, transfer)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
set(index, value)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T233949Z" creationid="gitnacho" creationdate="20221019T233949Z">
        <seg>```js-nolint
set(index, value)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```js-nolint
type()
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T071407Z" creationid="gitnacho" creationdate="20221020T071407Z">
        <seg>```js-nolint
type()
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```json
{</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065654Z" creationid="gitnacho" creationdate="20221004T065654Z">
        <seg>```json
{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```markdown
The [Numbers and dates](/en-US/docs/Web/JavaScript/Guide/Numbers_and_dates) page on MDN
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T220233Z" creationid="gitnacho" creationdate="20221005T220233Z">
        <seg>```markdown
La página [Números y fechas](/es/docs/Web/JavaScript/Guide/Numbers_and_dates) en MDN
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```md example-bad
[Macarons][macaron] are delicious but tricky to make.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T174126Z" creationid="gitnacho" creationdate="20221008T174126Z">
        <seg>```md example-bad
[Macarrones][macaron] son ​​deliciosos pero difíciles de hacer.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```md example-good
[Macarons](https://en.wikipedia.org/wiki/Macaron) are delicious but tricky to make.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184229Z" creationid="gitnacho" creationdate="20221008T174032Z">
        <seg>```md example-good
[Macarrones](https://en.wikipedia.org/wiki/Macaron) son deliciosos pero difíciles de hacer.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185346Z" creationid="gitnacho" creationdate="20221008T185346Z">
        <seg>```plain</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain
+-- Cargo.toml
+-- src</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061725Z" creationid="gitnacho" creationdate="20221004T061725Z">
        <seg>```plain
+-- Cargo.toml
+-- src</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain
- `param1`, `param2`, `param3`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183824Z" creationid="gitnacho" creationdate="20221008T183824Z">
        <seg>```plain
- `param1`, `param2`, `param3`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain
&gt; **Callout:** **This is how you write a callout.**
&gt;
&gt; It can have multiple paragraphs.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181951Z" creationid="gitnacho" creationdate="20221008T181935Z">
        <seg>```plain
&gt; **Llamada:** **Así es como se escribe una llamada.**
&gt;
&gt; Puede tener varios párrafos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain
&gt; **Note:** This is how you write a note.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181605Z" creationid="gitnacho" creationdate="20221008T181547Z">
        <seg>```plain
&gt; **Nota:** Así es como se escribe una nota.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain
&gt; **Warning:** This is how you write a warning.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T181803Z" creationid="gitnacho" creationdate="20221008T181803Z">
        <seg>```plain
&gt; **Advertencia:** Así es como se escribe una advertencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain
&gt; **Warnung:** So schreibt man eine Warnung.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T182105Z" creationid="gitnacho" creationdate="20221008T182105Z">
        <seg>```plain
&gt; **Warnung:** So schreibt man eine Warnung.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain
Heading 1 | Heading 2 | Heading 3</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184734Z" creationid="gitnacho" creationdate="20221008T184734Z">
        <seg>```plain
Título 1 | Título 2 | Título 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain
Kumascript service failed unexpectedly: &lt;class 'httplib.BadStatusLine'&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T094749Z" creationid="gitnacho" creationdate="20221005T075713Z">
        <seg>```plain
El servicio Kumascript falló inesperadamente: &lt;class 'httplib.BadStatusLine'&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain
Syntax error at line 436, column 461: Expected valid JSON object as the parameter of the preceding macro but…
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082224Z" creationid="gitnacho" creationdate="20221005T082224Z">
        <seg>```plain
Error de sintaxis en la línea 436, columna 461: Se esperaba un objeto JSON válido como parámetro de la macro anterior pero...
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain
The **`margin`** [CSS](/en-US/docs/Web/CSS) property
sets the margin area on all four sides of an element.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T191806Z" creationid="gitnacho" creationdate="20221008T191806Z">
        <seg>```plain
La propiedad **`margin`** [CSS](/es/docs/Web/CSS)
establece el área de margen en los cuatro lados de un elemento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain
The \{{Link("/en-US/docs/Web/JavaScript/Guide/Numbers_and_dates")}} page on MDN
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T220152Z" creationid="gitnacho" creationdate="20221005T220152Z">
        <seg>```plain
La página \{{Link("/es/docs/Web/JavaScript/Guide/Numbers_and_dates")}} en MDN
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain
\{{ wiki.languages({ "zh-tw": "zh_tw/Core_JavaScript_1.5_教學/JavaScript_概要", … }) }}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082240Z" creationid="gitnacho" creationdate="20221005T082240Z">
        <seg>```plain
\{{ wiki.languages({ "zh-tw": "zh_tw/Core_JavaScript_1.5_教學/JavaScript_概要", … }) }}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain
\{{AvailableInWorkers}}
\{{AvailableInWorkers("notservice")}}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T115847Z" creationid="gitnacho" creationdate="20221005T115847Z">
        <seg>```plain
\{{AvailableInWorkers}}
\{{AvailableInWorkers("notservice")}}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain
\{{hello(3)}}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065109Z" creationid="gitnacho" creationdate="20221005T065109Z">
        <seg>```plain
\{{hello(3)}}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain
\{{macroname(parameter-list)}}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T094917Z" creationid="gitnacho" creationdate="20221005T094917Z">
        <seg>```plain
\{{nombre-macro(lista-de-parámetros)}}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain
\{{templateName("arg0", "arg1", /* …, */ "argN")}}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065134Z" creationid="gitnacho" creationdate="20221005T065134Z">
        <seg>```plain
\{{templateName("arg0", "arg1", /* …, */ "argN")}}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain
\{{templateName({ "Alpha": "one", "Beta": ["a", "b", "c"], "Foo": "https:\/\/mozilla.org\/" })}}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T065406Z" creationid="gitnacho" creationdate="20221005T065406Z">
        <seg>```plain
\{{templateName({ "Alpha": "one", "Beta": ["a", "b", "c"], "Foo": "https:\/\/mozilla.org\/" })}}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain
function 0() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T090043Z" creationid="gitnacho" creationdate="20221006T090043Z">
        <seg>```plain
function 0() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```plain
| Heading 1 | Heading 2 | Heading 3 |
|-----------|-----------|-----------|
| cell 1    | cell 2    | cell 3    |
| cell 4    | cell 5    | cell 6    |
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184717Z" creationid="gitnacho" creationdate="20221008T184717Z">
        <seg>```plain
| Título 1 | Título 2 | Título 3 |
|-----------|-----------------|-----------|
| celda 1 | celda 2 | celda 3 |
| celda 4 | celda 5 | celda 6 |
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```python
class BookListView(generic.ListView):</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174207Z" creationid="gitnacho" creationdate="20221012T174207Z">
        <seg>```python
class BookListView(generic.ListView):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```rust
#[cfg(test)]
mod tests {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061822Z" creationid="gitnacho" creationdate="20221004T061822Z">
        <seg>```rust
#[cfg(test)]
mod tests {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```rust
#[wasm_bindgen]
extern {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062509Z" creationid="gitnacho" creationdate="20221004T062509Z">
        <seg>```rust
#[wasm_bindgen]
extern {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```rust
#[wasm_bindgen]
pub fn greet(name: &amp;str) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T063103Z" creationid="gitnacho" creationdate="20221004T063103Z">
        <seg>```rust
#[wasm_bindgen]
pub fn greet(name: &amp;str) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```rust
use wasm_bindgen::prelude::*;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061932Z" creationid="gitnacho" creationdate="20221004T061932Z">
        <seg>```rust
use wasm_bindgen::prelude::*;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```rust
use wasm_bindgen::prelude::*;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062117Z" creationid="gitnacho" creationdate="20221004T062117Z">
        <seg>```rust
use wasm_bindgen::prelude::*;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```svg
&lt;svg viewBox="0 0 300 100" width="300" height="100"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T173715Z" creationid="gitnacho" creationdate="20221005T173715Z">
        <seg>```svg
&lt;svg viewBox="0 0 300 100" width="300" height="100"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```toml
[package]
name = "hello-wasm"
version = "0.1.0"
authors = ["Your Name &lt;you@example.com&gt;"]
description = "A sample project with wasm-pack"
license = "MIT/Apache-2.0"
repository = "https://github.com/yourgithubusername/hello-wasm"
edition = "2018"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T152837Z" creationid="gitnacho" creationdate="20221004T063637Z">
        <seg>```toml
[package]
name = "hello-wasm"
version = "0.1.0"
authors = ["Your Name &lt;you@ejemplo.com&gt;"]
description = "A sample project with wasm-pack"
license = "MIT/Apache-2.0"
repository = "https://github.com/yourgithubusername/hello-wasm"
edition = "2018"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T113141Z" creationid="gitnacho" creationdate="20221006T113141Z">
        <seg>```wasm</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
( func &lt;signature&gt; &lt;locals&gt; &lt;body&gt; )
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054125Z" creationid="gitnacho" creationdate="20221007T054125Z">
        <seg>```wasm
( func &lt;signature&gt; &lt;locals&gt; &lt;body&gt; )
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
(call_indirect (type $return_i32) (local.get $i))
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072909Z" creationid="gitnacho" creationdate="20221007T072909Z">
        <seg>```wasm
(call_indirect (type $return_i32) (local.get $i))
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
(export "add" (func $add))
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T060750Z" creationid="gitnacho" creationdate="20221007T060750Z">
        <seg>```wasm
(export "add" (func $add))
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
(export "getAnswerPlus1" (func $functionName))
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061311Z" creationid="gitnacho" creationdate="20221007T061311Z">
        <seg>```wasm
(export "getAnswerPlus1" (func $functionName))
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
(func $add …)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T060734Z" creationid="gitnacho" creationdate="20221007T060734Z">
        <seg>```wasm
(func $add …)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
(func (param $p i32)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055050Z" creationid="gitnacho" creationdate="20221007T055050Z">
        <seg>```wasm
(func (param $p i32)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
(func (param $p1 i32) (param $p2 f32) (local $loc f64) …)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054730Z" creationid="gitnacho" creationdate="20221007T054730Z">
        <seg>```wasm
(func (param $p1 i32) (param $p2 f32) (local $loc f64) …)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
(func (param i32) (param f32) (local f64)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054631Z" creationid="gitnacho" creationdate="20221007T054631Z">
        <seg>```wasm
(func (param i32) (param f32) (local f64)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
(func (param i32) (param i32) (result f64) ...)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054453Z" creationid="gitnacho" creationdate="20221007T054453Z">
        <seg>```wasm
(func (param i32) (param i32) (result f64) ...)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
(import "console" "log" (func $log (param i32) (param i32)))
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064313Z" creationid="gitnacho" creationdate="20221007T064313Z">
        <seg>```wasm
(import "console" "log" (func $log (param i32) (param i32)))
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
(import "js" "mem" (memory 1))
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064457Z" creationid="gitnacho" creationdate="20221007T064457Z">
        <seg>```wasm
(import "js" "mem" (memory 1))
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
(memory 1 2 shared)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080853Z" creationid="gitnacho" creationdate="20221007T080853Z">
        <seg>```wasm
(memory 1 2 shared)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
(module</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055306Z" creationid="gitnacho" creationdate="20221007T055306Z">
        <seg>```wasm
(module</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
(module (memory 1) (func))
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053716Z" creationid="gitnacho" creationdate="20221007T053716Z">
        <seg>```wasm
(module (memory 1) (func))
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
(module)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053828Z" creationid="gitnacho" creationdate="20221007T053828Z">
        <seg>```wasm
(module)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
(type $return_i32 (func (result i32))) ;; if this was f32, type checking would fail
(func (export "callByIndex") (param $i i32) (result i32)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T084725Z" creationid="gitnacho" creationdate="20221007T072639Z">
        <seg>```wasm
(type $return_i32 (func (result i32))) ;; si esto fuera f32, la verificación de tipo fallaría
(func (export "callByIndex") (param $i i32) (result i32)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
0000000: 0061 736d              ; WASM_BINARY_MAGIC
0000004: 0100 0000              ; WASM_BINARY_VERSION
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053948Z" creationid="gitnacho" creationdate="20221007T053948Z">
        <seg>```wasm
0000000: 0061 736d              ; WASM_BINARY_MAGIC
0000004: 0100 0000              ; WASM_BINARY_VERSION
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
;; label the block so that it can be branched to.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T075335Z" creationid="gitnacho" creationdate="20221020T075335Z">
        <seg>```wasm
;; etiqueta el block para que se pueda ramificar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
;; label the loop so that it can be branched to
(loop $my_loop</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T081719Z" creationid="gitnacho" creationdate="20221020T081719Z">
        <seg>```wasm
;; etiqueta el bucle para que se pueda ramificar
(loop $my_loop</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
;; load two numbers onto the stack
i32.const 10
i32.const 3</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T091520Z" creationid="gitnacho" creationdate="20221007T091520Z">
        <seg>```wasm
;; cargar dos números en la pila
i32.const 10
i32.const 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
;; push multiple values onto the stack
i32.const 1
i32.const 2
i32.const 3</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T083143Z" creationid="gitnacho" creationdate="20221020T083143Z">
        <seg>```wasm
;; empuja múltiples valores a la pila
i32.const 1
i32.const 2
i32.const 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
call $greet
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T082834Z" creationid="gitnacho" creationdate="20221020T082834Z">
        <seg>```wasm
call $greet
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
call_indirect $my_spicy_table (type $i32_to_void)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073300Z" creationid="gitnacho" creationdate="20221007T073300Z">
        <seg>```wasm
call_indirect $my_spicy_table (type $i32_to_void)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
i32.const 0
(if</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T084109Z" creationid="gitnacho" creationdate="20221020T084109Z">
        <seg>```wasm
i32.const 0
(if</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
i32.const 0
if</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T083647Z" creationid="gitnacho" creationdate="20221020T083647Z">
        <seg>```wasm
i32.const 0
if</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>```wasm
nop
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T090148Z" creationid="gitnacho" creationdate="20221020T090148Z">
        <seg>```wasm
nop
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`async` has a similar effect in this case.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T124447Z" creationid="gitnacho" creationdate="20221003T124447Z">
        <seg>`async` tiene un efecto similar en este caso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`byteLength` goes to 0 after the `ArrayBuffer` is transferred.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T121017Z" creationid="gitnacho" creationdate="20221007T121017Z">
        <seg>`byteLength` pasa a 0 después de transferir `ArrayBuffer`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`caches.match(event.request)` allows us to match each resource requested from the network with the equivalent resource available in the cache, if there is a matching one available.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035331Z" creationid="gitnacho" creationdate="20220921T035331Z">
        <seg>`caches.match(event.request)` nos permite hacer coincidir cada recurso solicitado de la red con el recurso equivalente disponible en caché, si hay uno coincidente disponible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`call_indirect` calls a function in a table.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T082830Z" creationid="gitnacho" creationdate="20221020T082830Z">
        <seg>`call_indirect` llama a una función en una tabla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`call_indirect`'s operand can therefore be an i32 index value.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T065332Z" creationid="gitnacho" creationdate="20221007T065332Z">
        <seg>Por lo tanto, el operando de `call_indirect` puede ser un valor de índice `i32`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`defer` has a similar effect in this case.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T122911Z" creationid="gitnacho" creationdate="20221003T122911Z">
        <seg>`defer` tiene un efecto similar en este caso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`externref` can be used for value types and table elements.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074959Z" creationid="gitnacho" creationdate="20221007T074959Z">
        <seg>`externref` se puede usar para tipos de valor y elementos de tabla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`maximum`, but shared memories do.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T221108Z" creationid="gitnacho" creationdate="20221019T215914Z">
        <seg>`maximum`, pero las memorias compartidas sí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`null` is not an acceptable value for `transfer`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115741Z" creationid="gitnacho" creationdate="20221007T115741Z">
        <seg>`null` no es un valor aceptable para `transfer`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`shared0.wat`:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073828Z" creationid="gitnacho" creationdate="20221007T073828Z">
        <seg>`shared0.wat`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`shared1.wat`:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073834Z" creationid="gitnacho" creationdate="20221007T073834Z">
        <seg>`shared1.wat`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`table2.html`: An HTML file containing JavaScript that creates a `WebAssembly.Table` ([source code](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.html))
2.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T005350Z" creationid="gitnacho" creationdate="20221020T005350Z">
        <seg>`table2.html`: Un archivo HTML que contiene JavaScript que crea una `WebAssembly.Table` ([código fuente](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.html))
2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`table2.wasm`: A WebAssembly module imported by the JavaScript code in `table2.html` ([source code](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.wat))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T005419Z" creationid="gitnacho" creationdate="20221020T005419Z">
        <seg>`table2.wasm`: un módulo WebAssembly importado por el código JavaScript en `table2.html` ([código fuente](https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.wat))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`undefined`</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210829T095634Z" creationid="gitnacho" creationdate="20210829T095634Z">
        <seg>`undefined`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>`wasm-pack` uses `wasm-bindgen`, another tool, to provide a bridge between the types of JavaScript and Rust.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062414Z" creationid="gitnacho" creationdate="20221004T062414Z">
        <seg>`wasm-pack` usa `wasm-bindgen`, otra herramienta, para proporcionar un puente entre los tipos de JavaScript y Rust.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>a .wasm module you want to stream and compile.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T185435Z" creationid="gitnacho" creationdate="20221007T185435Z">
        <seg>un módulo `.wasm` que deseas transmitir y compilar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>a .wasm module you want to stream, compile, and instantiate.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T101833Z" creationid="gitnacho" creationdate="20221006T101833Z">
        <seg>un módulo `.wasm` que deseas transmitir, compilar e instanciar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>a JavaScript wrapper for an underlying wasm function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T234030Z" creationid="gitnacho" creationdate="20221019T234030Z">
        <seg>un contenedor de JavaScript para una función `wasm` subyacente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>a {{jsxref("TypeError")}} is thrown.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T234155Z" creationid="gitnacho" creationdate="20221019T234155Z">
        <seg>se lanza un {{JSxRef("TypeError")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>a.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210112T220222Z" creationid="nacho" creationdate="20210112T220222Z">
        <seg>a.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>add(a, b) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073536Z" creationid="gitnacho" creationdate="20221005T073536Z">
        <seg>add(a, b) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>addResourcesToCache([</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034333Z" creationid="gitnacho" creationdate="20220921T034333Z">
        <seg>addResourcesToCache([</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>alert("Hello World!");
&lt;/script&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134025Z" creationid="gitnacho" creationdate="20221003T134025Z">
        <seg>alert("¡Hola Mundo!");
&lt;/script&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>alert("check console");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T112317Z" creationid="gitnacho" creationdate="20221003T112317Z">
        <seg>alert("check console");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>alert(&amp;format!("Hello, {}!", name));
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061938Z" creationid="gitnacho" creationdate="20221004T061938Z">
        <seg>alert(&amp;format!("Hello, {}!", name));
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>and</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180616T003630Z" creationid="nacho" creationdate="20180616T003630Z">
        <seg>y</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>and its internal contents will comprise the contents of the `&lt;dt&gt;`, except for the final nested `&lt;ul&gt;`, which will not be included in the `&lt;dt&gt;`.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183005Z" creationid="gitnacho" creationdate="20221008T183005Z">
        <seg>y su contenido interno comprenderá el contenido de `&lt;dt&gt;`, excepto el `&lt;ul&gt;` final anidado, que no se incluirá en `&lt;dt&gt;`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>and not this style:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T184723Z" creationid="gitnacho" creationdate="20221008T184723Z">
        <seg>y no este estilo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>and returns a `Promise` that resolves to an `Instance` of that</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193237Z" creationid="gitnacho" creationdate="20221007T193237Z">
        <seg>y devuelve una `Promise` que se resuelve en una `Instance` de ese</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>animation:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T224322Z" creationid="nachec" creationdate="20220804T224322Z">
        <seg>animation:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>any</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211025T044139Z" creationid="nacho" creationdate="20201123T213242Z">
        <seg>any</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>app.get("/", function (req, res) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210828T135132Z" creationid="nacho" creationdate="20201212T214141Z">
        <seg>app.get("/", function(req, res) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>aria-haspopup="true"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T075922Z" creationid="gitnacho" creationdate="20220828T075922Z">
        <seg>aria-haspopup="true"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>aria-live="polite"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T013726Z" creationid="gitnacho" creationdate="20220901T013726Z">
        <seg>aria-live="polite"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>article {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T233550Z" creationid="nachec" creationdate="20220804T233550Z">
        <seg>article {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>assertEq(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233945Z" creationid="gitnacho" creationdate="20221006T233945Z">
        <seg>assertEq(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>assertEq("WebAssembly.Global exists", typeof WebAssembly.Global, "function");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233942Z" creationid="gitnacho" creationdate="20221006T233942Z">
        <seg>assertEq("WebAssembly.Global exists", typeof WebAssembly.Global, "function");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>assertEq("getting wasm-updated value from JS", global.value, 43);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233952Z" creationid="gitnacho" creationdate="20221006T233952Z">
        <seg>assertEq("getting wasm-updated value from JS", global.value, 43);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>assert_eq!(2 + 2, 4);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061824Z" creationid="gitnacho" creationdate="20221004T061824Z">
        <seg>assert_eq!(2 + 2, 4);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>async function main() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210929T100522Z" creationid="gitnacho" creationdate="20210929T100522Z">
        <seg>async function main() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>autoComplete="off"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T013811Z" creationid="gitnacho" creationdate="20220901T013811Z">
        <seg>autoComplete="off"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>await Promise.all(cachesToDelete.map(deleteCache));
};</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042138Z" creationid="gitnacho" creationdate="20220921T042138Z">
        <seg>await Promise.all(cachesToDelete.map(deleteCache));
};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>await cache.addAll(resources);
};</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034329Z" creationid="gitnacho" creationdate="20220921T034329Z">
        <seg>await cache.addAll(resources);
};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>await cache.put(request, response);
};</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040137Z" creationid="gitnacho" creationdate="20220921T040137Z">
        <seg>await cache.put(request, response);
};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>await caches.delete(key);
};</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042132Z" creationid="gitnacho" creationdate="20220921T042132Z">
        <seg>await caches.delete(key);
};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>await self.registration.navigationPreload.enable();</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041223Z" creationid="gitnacho" creationdate="20220921T041223Z">
        <seg>await self.registration.navigationPreload.enable();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>b.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210112T220229Z" creationid="nacho" creationdate="20210112T220229Z">
        <seg>b.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>background-color: var(--first-color);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174253Z" creationid="gitnacho" creationdate="20221012T174253Z">
        <seg>background-color: var(--first-color);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>bar</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210916T044325Z" creationid="gitnacho" creationdate="20210916T044325Z">
        <seg>bar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>bar() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210929T210709Z" creationid="gitnacho" creationdate="20210929T210709Z">
        <seg>bar() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>bar();</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210929T105413Z" creationid="gitnacho" creationdate="20210929T105413Z">
        <seg>bar();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>bar,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200730T202146Z" creationid="nacho" creationdate="20200730T202146Z">
        <seg>bar,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>been compiled.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193310Z" creationid="gitnacho" creationdate="20221007T193310Z">
        <seg>compilado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>body {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T233541Z" creationid="nachec" creationdate="20220804T233541Z">
        <seg>body {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>br $my_block</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T075541Z" creationid="gitnacho" creationdate="20221020T075541Z">
        <seg>br $my_block</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>br $my_loop</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T081747Z" creationid="gitnacho" creationdate="20221020T081747Z">
        <seg>br $my_loop</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>break</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220805T141143Z" creationid="nachec" creationdate="20220805T141143Z">
        <seg>break</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>break;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200813T133039Z" creationid="nacho" creationdate="20200813T133039Z">
        <seg>break;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>bufTransferredBackFromWorker.byteLength</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120108Z" creationid="gitnacho" creationdate="20221007T120108Z">
        <seg>bufTransferredBackFromWorker.byteLength</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>bufTransferredFromMain.byteLength</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120348Z" creationid="gitnacho" creationdate="20221007T120348Z">
        <seg>bufTransferredFromMain.byteLength</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>button.disabled = true;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T211529Z" creationid="nachec" creationdate="20220804T211529Z">
        <seg>button.disabled = true;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>button.onclick = () =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T211529Z" creationid="nachec" creationdate="20220804T211529Z">
        <seg>button.onclick = () =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>cache.addAll([</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T225356Z" creationid="gitnacho" creationdate="20220921T225356Z">
        <seg>cache.addAll([</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>cache.put(event.request, response.clone());</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204921Z" creationid="gitnacho" creationdate="20221003T204921Z">
        <seg>cache.put(event.request, response.clone());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>cacheFirst({</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040700Z" creationid="gitnacho" creationdate="20220921T040700Z">
        <seg>cacheFirst({</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>cacheNames.map((cacheName) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T201907Z" creationid="gitnacho" creationdate="20221003T201907Z">
        <seg>cacheNames.map((cacheName) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>caches</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T225353Z" creationid="gitnacho" creationdate="20220921T225353Z">
        <seg>caches</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>caches.keys().then((cacheNames) =&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T201904Z" creationid="gitnacho" creationdate="20221003T201904Z">
        <seg>caches.keys().then((cacheNames) =&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>caches.match("./fallback.html");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035854Z" creationid="gitnacho" creationdate="20220921T035854Z">
        <seg>caches.match("./fallback.html");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>caches.open("v1").then((cache) =&gt; cache.addAll(myAssets));</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T232920Z" creationid="gitnacho" creationdate="20220921T232920Z">
        <seg>caches.open("v1").then((cache) =&gt; cache.addAll(myAssets));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>caches.open(CURRENT_CACHES.font).then((cache) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T201927Z" creationid="gitnacho" creationdate="20221003T201927Z">
        <seg>caches.open(CURRENT_CACHES.font).then((cache) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>call $getAnswer</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061140Z" creationid="gitnacho" creationdate="20221007T061140Z">
        <seg>call $getAnswer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>call $get_two_numbers</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080239Z" creationid="gitnacho" creationdate="20221007T080239Z">
        <seg>call $get_two_numbers</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>call $i</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182619Z" creationid="gitnacho" creationdate="20221007T182619Z">
        <seg>call $i</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>call $i))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T113151Z" creationid="gitnacho" creationdate="20221006T113151Z">
        <seg>call $i))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>call $log))
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061407Z" creationid="gitnacho" creationdate="20221007T061407Z">
        <seg>call $log))
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>call $throwException</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023355Z" creationid="gitnacho" creationdate="20221008T023355Z">
        <seg>call $throwException</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>call $throwExnWithStack</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204119Z" creationid="gitnacho" creationdate="20221019T204119Z">
        <seg>call $throwExnWithStack</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>call_indirect (type $return_i32))
)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073336Z" creationid="gitnacho" creationdate="20221007T073336Z">
        <seg>call_indirect (type $return_i32))
)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>call_indirect (type $return_i32))
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072641Z" creationid="gitnacho" creationdate="20221007T072641Z">
        <seg>call_indirect (type $return_i32))
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>call_indirect (type $void_to_i32))
)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073838Z" creationid="gitnacho" creationdate="20221007T073838Z">
        <seg>call_indirect (type $void_to_i32))
)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>canvas.height = img.height;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054129Z" creationid="gitnacho" creationdate="20221004T054129Z">
        <seg>canvas.height = img.height;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>canvas.width = img.width;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054129Z" creationid="gitnacho" creationdate="20221004T054129Z">
        <seg>canvas.width = img.width;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>case "closed":</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211103T065125Z" creationid="gitnacho" creationdate="20211103T065125Z">
        <seg>case "closed":</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>case "failed":</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210917T062410Z" creationid="nacho" creationdate="20201210T200817Z">
        <seg>case "failed":</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>case "loading":</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210917T062403Z" creationid="nacho" creationdate="20201210T200802Z">
        <seg>case "loading":</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>case 0:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211002T051449Z" creationid="gitnacho" creationdate="20211002T051449Z">
        <seg>case 0:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>case 1:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211002T051502Z" creationid="gitnacho" creationdate="20211002T051502Z">
        <seg>case 1:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>case 2:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200813T133234Z" creationid="nacho" creationdate="20200813T133234Z">
        <seg>case 2:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>case 3:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220805T141149Z" creationid="nachec" creationdate="20220805T141149Z">
        <seg>case 3:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>case 4:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220806T063158Z" creationid="nachec" creationdate="20220806T063158Z">
        <seg>case 4:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>cd learning-area</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T173728Z" creationid="Nachec" creationdate="20221020T173728Z">
        <seg>cd learning-area</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>class A {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201215T191120Z" creationid="nacho" creationdate="20201215T191120Z">
        <seg>class A {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>class C {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200730T181349Z" creationid="nacho" creationdate="20200730T181349Z">
        <seg>class C {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>class Derived extends Base {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210917T071237Z" creationid="nacho" creationdate="20201213T190625Z">
        <seg>class Derived extends Base {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>class Dog extends Animal {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210908T111201Z" creationid="nacho" creationdate="20180528T190501Z">
        <seg>class Dog extends Animal {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>class Dog {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210918T181302Z" creationid="gitnacho" creationdate="20210918T181302Z">
        <seg>class Dog {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>class Foo {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200607T121304Z" creationid="Pacho" creationdate="20200607T121304Z">
        <seg>class Foo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>class Person {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210908T112915Z" creationid="nacho" creationdate="20180524T175159Z">
        <seg>class Person {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>clear() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210918T201614Z" creationid="nacho" creationdate="20201216T181942Z">
        <seg>clear() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>code.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220915T124304Z" creationid="gitnacho" creationdate="20220915T124304Z">
        <seg>código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>color: red;
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T211456Z" creationid="gitnacho" creationdate="20221005T211456Z">
        <seg>color: red;
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>color: var(--second-color);
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174334Z" creationid="gitnacho" creationdate="20221012T174334Z">
        <seg>color: var(--second-color);
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>commands.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220910T205624Z" creationid="gitnacho" creationdate="20220910T205624Z">
        <seg>comandos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>compile, or a [`WebAssembly.Module`](/en-US/docs/WebAssembly/JavaScript_interface/Module).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193510Z" creationid="gitnacho" creationdate="20221007T193510Z">
        <seg>compilar, o un [`WebAssembly.Module`](/es/docs/WebAssembly/JavaScript_interface/Module).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>compiled WebAssembly module.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T102253Z" creationid="gitnacho" creationdate="20221006T102253Z">
        <seg>módulo WebAssembly compilado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>considered.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T221739Z" creationid="gitnacho" creationdate="20221019T221739Z">
        <seg>considerando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.assert(Object.hasOwn(ClassWithStaticField, 'staticField'));
console.log(ClassWithStaticField.staticField);
// expected output: "undefined"
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T102754Z" creationid="gitnacho" creationdate="20221002T102754Z">
        <seg>console.assert(Object.hasOwn(ClassWithStaticField, 'staticField'));
console.log(ClassWithStaticField.staticField);
// salida esperada: "undefined"
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.error(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210921T124700Z" creationid="gitnacho" creationdate="20210921T124700Z">
        <seg>console.error(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.error("  Error in fetch handler:", error);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T205113Z" creationid="gitnacho" creationdate="20221003T205113Z">
        <seg>console.error("  Error en el controlador fetch: ", error);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.error(`Registration failed with ${error}`);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T024232Z" creationid="gitnacho" creationdate="20220921T024232Z">
        <seg>console.error(`Falló el registro con el ${error}`);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.error(e);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023516Z" creationid="gitnacho" creationdate="20221008T023516Z">
        <seg>console.error(e);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.error(e); // TypeError: Throwing</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080440Z" creationid="gitnacho" creationdate="20221002T080440Z">
        <seg>console.error(e); // TypeError: Throwing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.info("using preload response", preloadResponse);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041435Z" creationid="gitnacho" creationdate="20220921T041435Z">
        <seg>console.info("using preload response", preloadResponse);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200425T004420Z" creationid="Pacho" creationdate="20200425T004420Z">
        <seg>console.log(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log("  Caching the response to", event.request.url);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204917Z" creationid="gitnacho" creationdate="20221003T204917Z">
        <seg>console.log("  Almacenamiento en caché de la respuesta a ", event.request.url);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log("  Not caching the response to", event.request.url);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204941Z" creationid="gitnacho" creationdate="20221003T204941Z">
        <seg>console.log("  No almacenar en caché la respuesta a ", event.request.url);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(" Found response in cache:", response);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204308Z" creationid="gitnacho" creationdate="20221003T204308Z">
        <seg>console.log("Respuesta encontrada en caché:", response);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log("All done!");
};</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T212633Z" creationid="gitnacho" creationdate="20220922T212633Z">
        <seg>console.log("¡Todo listo!");
};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log("Deleting out of date cache:", cacheName);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204140Z" creationid="gitnacho" creationdate="20221003T204140Z">
        <seg>console.log("Elimina la caché desactualizada:", cacheName);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log("Done!");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T212709Z" creationid="gitnacho" creationdate="20220922T210953Z">
        <seg>console.log("¡Listo!");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log("Handling fetch event for", event.request.url);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204209Z" creationid="gitnacho" creationdate="20221003T204209Z">
        <seg>console.log("Manejo del evento fetch para", event.request.url);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log("Module contains a name section");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T222835Z" creationid="gitnacho" creationdate="20221019T222835Z">
        <seg>console.log("Module contains a name section");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log("Service worker active");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034254Z" creationid="gitnacho" creationdate="20220921T024214Z">
        <seg>console.log("Service worker activo");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log("Service worker installed");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034306Z" creationid="gitnacho" creationdate="20220921T024212Z">
        <seg>console.log("Service worker instalado");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log("Service worker installing");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034323Z" creationid="gitnacho" creationdate="20220921T024210Z">
        <seg>console.log("Instalando el Service worker");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log("User information: %o", userInfo);
&lt;/script&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134400Z" creationid="gitnacho" creationdate="20221003T134400Z">
        <seg>console.log("Información del usuario: %o", userInfo);
&lt;/script&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log("hello!");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201124T191503Z" creationid="nacho" creationdate="20201124T191503Z">
        <seg>console.log("¡hola!");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log("message from main received in worker:", msg);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120345Z" creationid="gitnacho" creationdate="20221007T120345Z">
        <seg>console.log("message from main received in worker:", msg);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log("message from worker received in main:", msg);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120106Z" creationid="gitnacho" creationdate="20221007T120106Z">
        <seg>console.log("message from worker received in main:", msg);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log("module received from main thread");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T115744Z" creationid="gitnacho" creationdate="20221019T115744Z">
        <seg>console.log("module received from main thread");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log('Message posted to worker');
}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115854Z" creationid="gitnacho" creationdate="20221007T115854Z">
        <seg>console.log('Message posted to worker');
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log('Message posted to worker');
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115859Z" creationid="gitnacho" creationdate="20221007T115859Z">
        <seg>console.log('Message posted to worker');
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(ClassWithStaticField.staticField);
// expected output: "static field"
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T102743Z" creationid="gitnacho" creationdate="20221002T102743Z">
        <seg>console.log(ClassWithStaticField.staticField);
// salida esperada: "static field"
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(SubClassWithStaticField.baseStaticField);
// expected output: "base field"
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T102830Z" creationid="gitnacho" creationdate="20221002T102830Z">
        <seg>console.log(SubClassWithStaticField.baseStaticField);
// salida esperada: "base field"
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(SubClassWithStaticField.subStaticField);
// expected output: "sub class field"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T102817Z" creationid="gitnacho" creationdate="20221002T102817Z">
        <seg>console.log(SubClassWithStaticField.subStaticField);
// salida esperada: "sub class field"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(`Clearing out version ${event.oldVersion} wasm cache`);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043427Z" creationid="gitnacho" creationdate="20221004T043427Z">
        <seg>console.log(`Limpiando la versión ${event.oldVersion} wasm cache`);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(`Creating version ${event.newVersion} wasm cache`);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043439Z" creationid="gitnacho" creationdate="20221004T043439Z">
        <seg>console.log(`Creando versión ${event.newVersion} wasm cache`);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(`Failed to store in wasm cache: ${err}`);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043648Z" creationid="gitnacho" creationdate="20221004T043648Z">
        <seg>console.log(`Error al almacenar en caché wasm: ${err}`);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(`Found ${url} in wasm cache`);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043816Z" creationid="gitnacho" creationdate="20221004T043816Z">
        <seg>console.log(`Se encontró ${url} en caché wasm`);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(`Instance says the answer is: ${instance.exports.answer()}`)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043927Z" creationid="gitnacho" creationdate="20221004T043927Z">
        <seg>console.log(`La instancia dice que la respuesta es: ${instance.exports.answer()}`)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(`Successfully stored ${url} in wasm cache`);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043701Z" creationid="gitnacho" creationdate="20221004T043701Z">
        <seg>console.log(`${url} guardado con éxito en la caché de wasm`);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(`getArg 0 : ${e.getArg(tagExportedFromWasm, 0)}`);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T143310Z" creationid="gitnacho" creationdate="20221019T143310Z">
        <seg>console.log(`getArg 0 : ${e.getArg(tagExportedFromWasm, 0)}`);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(`getArg 0 : ${e.getArg(tagToImport, 0)}`);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023540Z" creationid="gitnacho" creationdate="20221008T023540Z">
        <seg>console.log(`getArg 0 : ${e.getArg(tagToImport, 0)}`);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(`stack: ${e.stack}`);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204347Z" creationid="gitnacho" creationdate="20221019T204347Z">
        <seg>console.log(`stack: ${e.stack}`);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(`value: ${value}`);
});
console.log(`original === cast ?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T074004Z" creationid="gitnacho" creationdate="20221002T074004Z">
        <seg>console.log(`value: ${value}`);
});
console.log(`original === cast ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(api.version());</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053748Z" creationid="gitnacho" creationdate="20221004T053748Z">
        <seg>console.log(api.version());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(arg);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T223604Z" creationid="gitnacho" creationdate="20221005T223604Z">
        <seg>console.log(arg);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(descriptor);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211004T124143Z" creationid="gitnacho" creationdate="20211004T124143Z">
        <seg>console.log(descriptor);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(e instanceof CompileError); // true</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T064724Z" creationid="gitnacho" creationdate="20221008T064724Z">
        <seg>console.log(e instanceof CompileError); // true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(e instanceof LinkError); // true</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T075522Z" creationid="gitnacho" creationdate="20221008T075522Z">
        <seg>console.log(e instanceof LinkError); // true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(e instanceof WebAssembly.RuntimeError); // true</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T080939Z" creationid="gitnacho" creationdate="20221008T080939Z">
        <seg>console.log(e instanceof WebAssembly.RuntimeError); // true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(e);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210921T065359Z" creationid="gitnacho" creationdate="20210921T065359Z">
        <seg>console.log(e);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(e.columnNumber);            // 0</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T064749Z" creationid="gitnacho" creationdate="20221008T064749Z">
        <seg>console.log(e.columnNumber);            // 0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(e.columnNumber); // 0</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T120820Z" creationid="gitnacho" creationdate="20221019T120820Z">
        <seg>console.log(e.columnNumber); // 0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(e.fileName);                // "someFile"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T064746Z" creationid="gitnacho" creationdate="20221008T064746Z">
        <seg>console.log(e.fileName);                // "algunArchivo"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(e.fileName); // "someFile"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T120812Z" creationid="gitnacho" creationdate="20221019T120812Z">
        <seg>console.log(e.fileName); // "someFile"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(e.lineNumber);              // 10</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T064748Z" creationid="gitnacho" creationdate="20221008T064748Z">
        <seg>console.log(e.lineNumber);              // 10</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(e.lineNumber); // 10</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T120813Z" creationid="gitnacho" creationdate="20221019T120813Z">
        <seg>console.log(e.lineNumber); // 10</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(e.message);                 // "Hello"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T064731Z" creationid="gitnacho" creationdate="20221008T064731Z">
        <seg>console.log(e.message);                 // "Hola"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(e.message); // "Hello"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T120811Z" creationid="gitnacho" creationdate="20221019T120811Z">
        <seg>console.log(e.message); // "Hello"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(e.name);                    // "CompileError"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T064735Z" creationid="gitnacho" creationdate="20221008T064735Z">
        <seg>console.log(e.name);                    // "CompileError"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(e.name); // "CompileError"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T120613Z" creationid="gitnacho" creationdate="20221020T120613Z">
        <seg>console.log(e.name); // "CompileError"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(e.name); // "LinkError"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T120812Z" creationid="gitnacho" creationdate="20221019T120812Z">
        <seg>console.log(e.name); // "LinkError"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(e.name); // "RuntimeError"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T121513Z" creationid="gitnacho" creationdate="20221019T121513Z">
        <seg>console.log(e.name); // "RuntimeError"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(e.stack);                   // returns the location where the code was run
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T071102Z" creationid="gitnacho" creationdate="20221008T064806Z">
        <seg>console.log(e.atack);                   // devuelve la ubicación donde
                                          // se ejecutó el código
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(e.stack); // returns the location where the code was run
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T120851Z" creationid="gitnacho" creationdate="20221019T120851Z">
        <seg>console.log(e.stack); // devuelve la ubicación donde se ejecutó el código
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(element.internals_.form);
// expected output: &lt;form&gt;&lt;custom-checkbox&gt;&lt;/custom-checkbox&gt;&lt;/form&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T102620Z" creationid="gitnacho" creationdate="20221002T102620Z">
        <seg>console.log(element.internals_.form);
// salida esperada: &lt;form&gt;&lt;custom-checkbox&gt;&lt;/custom-checkbox&gt;&lt;/form&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(errMsg);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043843Z" creationid="gitnacho" creationdate="20221004T043843Z">
        <seg>console.log(errMsg);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(exports[0]);
};
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T225041Z" creationid="gitnacho" creationdate="20221019T225041Z">
        <seg>console.log(exports[0]);
};
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(i);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200815T075847Z" creationid="nacho" creationdate="20200815T075847Z">
        <seg>console.log(i);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(imports[0]);
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T230509Z" creationid="gitnacho" creationdate="20221019T230509Z">
        <seg>console.log(imports[0]);
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(message);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211002T045358Z" creationid="gitnacho" creationdate="20211002T045358Z">
        <seg>console.log(message);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(n);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211101T170621Z" creationid="gitnacho" creationdate="20211101T170621Z">
        <seg>console.log(n);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(name);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211101T170643Z" creationid="gitnacho" creationdate="20211101T170643Z">
        <seg>console.log(name);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(nameSections[0]);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T222836Z" creationid="gitnacho" creationdate="20221019T222836Z">
        <seg>console.log(nameSections[0]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(num);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210920T070051Z" creationid="gitnacho" creationdate="20210920T070051Z">
        <seg>console.log(num);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(obj.instance.exports.add(1, 2)); // "3"
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T060923Z" creationid="gitnacho" creationdate="20221007T060923Z">
        <seg>console.log(obj.instance.exports.add(1, 2)); // "3"
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(obj.instance.exports.callByIndex(0)); // returns 42</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073500Z" creationid="gitnacho" creationdate="20221007T073346Z">
        <seg>console.log(obj.instance.exports.callByIndex(0)); // devuelve 42</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(obj.instance.exports.callByIndex(1)); // returns 13</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073455Z" creationid="gitnacho" creationdate="20221007T073348Z">
        <seg>console.log(obj.instance.exports.callByIndex(1)); // devuelve 13</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(obj.instance.exports.callByIndex(2)); // returns an error, because there is no index position 2 in the table
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073446Z" creationid="gitnacho" creationdate="20221007T073359Z">
        <seg>console.log(obj.instance.exports.callByIndex(2)); // devuelve un error, porque no hay posición de índice 2 en la tabla
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(obj.instance.exports.getAnswerPlus1()); // "43"
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061323Z" creationid="gitnacho" creationdate="20221007T061323Z">
        <seg>console.log(obj.instance.exports.getAnswerPlus1()); // "43"
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(obj.instance.exports.run());</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023514Z" creationid="gitnacho" creationdate="20221008T023514Z">
        <seg>console.log(obj.instance.exports.run());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(oldMemoryView); // Uint8Array []
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T213930Z" creationid="gitnacho" creationdate="20221019T213930Z">
        <seg>console.log(oldMemoryView); // Uint8Array []
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(otherTable.get(0)());</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085508Z" creationid="gitnacho" creationdate="20221006T085508Z">
        <seg>console.log(otherTable.get(0)());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(otherTable.get(1)());
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085509Z" creationid="gitnacho" creationdate="20221006T085509Z">
        <seg>console.log(otherTable.get(1)());
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(results[1].instance.exports.doIt()); // prints 42
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T085515Z" creationid="gitnacho" creationdate="20221007T074334Z">
        <seg>console.log(results[1].instance.exports.doIt()); // imprime 42
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(state.enabled); // boolean</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T211218Z" creationid="gitnacho" creationdate="20220922T211218Z">
        <seg>console.log(state.enabled); // boolean</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(state.headerValue); // string</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T211305Z" creationid="gitnacho" creationdate="20220922T211247Z">
        <seg>console.log(state.headerValue); // string</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(string);
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064353Z" creationid="gitnacho" creationdate="20221007T064353Z">
        <seg>console.log(string);
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(sum);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T225843Z" creationid="gitnacho" creationdate="20221006T225843Z">
        <seg>console.log(sum);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(sum);
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000831Z" creationid="gitnacho" creationdate="20221008T000831Z">
        <seg>console.log(sum);
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(table.get(0)());</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T060557Z" creationid="gitnacho" creationdate="20221005T060557Z">
        <seg>console.log(table.get(0)());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(tbl.get(0)());</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095806Z" creationid="gitnacho" creationdate="20221006T095806Z">
        <seg>console.log(tbl.get(0)());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(tbl.get(0)()); // 13</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085505Z" creationid="gitnacho" creationdate="20221006T085505Z">
        <seg>console.log(tbl.get(0)()); // 13</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(tbl.get(0)()); // 42</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000328Z" creationid="gitnacho" creationdate="20221020T000328Z">
        <seg>console.log(tbl.get(0)()); // 42</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(tbl.get(1)());</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T121903Z" creationid="gitnacho" creationdate="20221019T121903Z">
        <seg>console.log(tbl.get(1)());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(tbl.get(1)()); // 42</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085506Z" creationid="gitnacho" creationdate="20221006T085506Z">
        <seg>console.log(tbl.get(1)()); // 42</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(tbl.get(1)()); // 42
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T121726Z" creationid="gitnacho" creationdate="20221019T121726Z">
        <seg>console.log(tbl.get(1)()); // 42
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(tbl.get(1)()); // 83
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000341Z" creationid="gitnacho" creationdate="20221020T000341Z">
        <seg>console.log(tbl.get(1)()); // 83
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(tbl.length);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095805Z" creationid="gitnacho" creationdate="20221006T095805Z">
        <seg>console.log(tbl.length);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(tbl.length); // 2</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000327Z" creationid="gitnacho" creationdate="20221020T000327Z">
        <seg>console.log(tbl.length); // 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(v); // "Resolving"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080637Z" creationid="gitnacho" creationdate="20221002T080637Z">
        <seg>console.log(v); // "Resolviendo"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(v); // "fulfilled!"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080319Z" creationid="gitnacho" creationdate="20221002T080319Z">
        <seg>console.log(v); // "¡cumplida!"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(v); // 42</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080706Z" creationid="gitnacho" creationdate="20221002T080706Z">
        <seg>console.log(v); // 42</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(v[0]); // 1
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073933Z" creationid="gitnacho" creationdate="20221002T073933Z">
        <seg>console.log(v[0]); // 1
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(value); // "Success"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073722Z" creationid="gitnacho" creationdate="20221002T073722Z">
        <seg>console.log(value); // "Éxito"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(values[0]);
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000931Z" creationid="gitnacho" creationdate="20221008T000931Z">
        <seg>console.log(values[0]);
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console.log(x);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201228T135701Z" creationid="nacho" creationdate="20201228T135701Z">
        <seg>console.log(x);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console: {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061558Z" creationid="gitnacho" creationdate="20221007T061558Z">
        <seg>console: {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>console: { log: consoleLogString },</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064856Z" creationid="gitnacho" creationdate="20221007T064856Z">
        <seg>console: { log: consoleLogString },</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const [count, setCount] = useState(0);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T071629Z" creationid="gitnacho" creationdate="20220828T071629Z">
        <seg>const [count, setCount] = useState(0);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const api = {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T032238Z" creationid="gitnacho" creationdate="20211102T032238Z">
        <seg>const api = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const app = express();</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201212T214134Z" creationid="nacho" creationdate="20201212T214134Z">
        <seg>const app = express();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const body = mdn.localString({</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083135Z" creationid="gitnacho" creationdate="20221005T083135Z">
        <seg>const body = mdn.localString({</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const bufTransferredBackFromWorker = msg.data;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120107Z" creationid="gitnacho" creationdate="20221007T120107Z">
        <seg>const bufTransferredBackFromWorker = msg.data;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const bufTransferredFromMain = msg.data;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120346Z" creationid="gitnacho" creationdate="20221007T120346Z">
        <seg>const bufTransferredFromMain = msg.data;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const button = document.createElement("button");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T210716Z" creationid="nachec" creationdate="20220804T210716Z">
        <seg>const button = document.createElement("button");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const bytes = new Uint8Array(memory.buffer, offset, length);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064352Z" creationid="gitnacho" creationdate="20221007T064352Z">
        <seg>const bytes = new Uint8Array(memory.buffer, offset, length);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const bytes = request.response;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T061057Z" creationid="gitnacho" creationdate="20221005T061057Z">
        <seg>const bytes = request.response;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const cache = await caches.open("downloads");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T230916Z" creationid="gitnacho" creationdate="20220921T230916Z">
        <seg>const cache = await caches.open("downloads");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const cache = await caches.open("v1");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034328Z" creationid="gitnacho" creationdate="20220921T034328Z">
        <seg>const cache = await caches.open("v1");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const cache = await caches.open("v2");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041812Z" creationid="gitnacho" creationdate="20220921T041812Z">
        <seg>const cache = await caches.open("v2");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const cacheFirst = async (request) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040139Z" creationid="gitnacho" creationdate="20220921T040139Z">
        <seg>const cacheFirst = async (request) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const cacheFirst = async ({ request, preloadResponsePromise, fallbackUrl }) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040450Z" creationid="gitnacho" creationdate="20220921T040450Z">
        <seg>const cacheFirst = async ({ request, preloadResponsePromise, fallbackUrl }) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const cacheKeepList = ["v2"];</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042133Z" creationid="gitnacho" creationdate="20220921T042133Z">
        <seg>const cacheKeepList = ["v2"];</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const cachedResponse = await caches.match(event.request);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210557Z" creationid="gitnacho" creationdate="20220922T210557Z">
        <seg>const cachedResponse = await caches.match(event.request);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const cachesToDelete = keyList.filter((key) =&gt; !cacheKeepList.includes(key));</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042136Z" creationid="gitnacho" creationdate="20220921T042136Z">
        <seg>const cachesToDelete = keyList.filter((key) =&gt; !cacheKeepList.includes(key));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const canvas = document.createElement("canvas");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054128Z" creationid="gitnacho" creationdate="20221004T054128Z">
        <seg>const canvas = document.createElement("canvas");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const config = {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211202T173028Z" creationid="gitnacho" creationdate="20211202T173028Z">
        <seg>const config = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const ctx = canvas.getContext("2d");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054143Z" creationid="gitnacho" creationdate="20221004T054143Z">
        <seg>const ctx = canvas.getContext("2d");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const db = request.result;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043405Z" creationid="gitnacho" creationdate="20221004T043405Z">
        <seg>const db = request.result;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const dbName = 'wasm-cache';</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T051031Z" creationid="gitnacho" creationdate="20221004T051031Z">
        <seg>const dbName = 'wasm-cache';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const deleteOldCaches = async () =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042133Z" creationid="gitnacho" creationdate="20220921T042133Z">
        <seg>const deleteOldCaches = async () =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const expectedCacheNamesSet = new Set(Object.values(CURRENT_CACHES));</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204032Z" creationid="gitnacho" creationdate="20221003T204032Z">
        <seg>const expectedCacheNamesSet = new Set(Object.values(CURRENT_CACHES));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const exports = WebAssembly.Module.exports(mod);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T225040Z" creationid="gitnacho" creationdate="20221019T225040Z">
        <seg>const exports = WebAssembly.Module.exports(mod);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const f1 = ... /* some imported WebAssembly function */</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072523Z" creationid="gitnacho" creationdate="20221007T072523Z">
        <seg>const f1 = ... /* alguna función WebAssembly importada */</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const f2 = ... /* some imported WebAssembly function */</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072539Z" creationid="gitnacho" creationdate="20221007T072539Z">
        <seg>const f2 = ... /* alguna función WebAssembly importada */</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const fallbackResponse = await caches.match(fallbackUrl);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040546Z" creationid="gitnacho" creationdate="20220921T040546Z">
        <seg>const fallbackResponse = await caches.match(fallbackUrl);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const global = new WebAssembly.Global({ value: "i32", mutable: true }, 0);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233943Z" creationid="gitnacho" creationdate="20221006T233943Z">
        <seg>const global = new WebAssembly.Global({ value: "i32", mutable: true }, 0);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const headers = {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211002T044339Z" creationid="gitnacho" creationdate="20211002T044339Z">
        <seg>const headers = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const i32 = new Uint32Array(memory.buffer);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T225840Z" creationid="gitnacho" creationdate="20221006T225840Z">
        <seg>const i32 = new Uint32Array(memory.buffer);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const i32 = new Uint32Array(obj.instance.exports.memory.buffer);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T060545Z" creationid="gitnacho" creationdate="20221005T060545Z">
        <seg>const i32 = new Uint32Array(obj.instance.exports.memory.buffer);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const image = await loadImage("./image.jpg");
const p = api.create_buffer(image.width, image.height);
Module.HEAP8.set(image.data, p);
// ... call encoder ...
api.destroy_buffer(p);
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054556Z" creationid="gitnacho" creationdate="20221004T054533Z">
        <seg>const image = await loadImage("./image.jpg");
const p = api.create_buffer(image.width, image.height);
Module.HEAP8.set(image.data, p);
// ... llama  al codificador ...
api.destroy_buffer(p);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const img = await createImageBitmap(imgBlob);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054110Z" creationid="gitnacho" creationdate="20221004T054110Z">
        <seg>const img = await createImageBitmap(imgBlob);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const imgBlob = await fetch(src).then((resp) =&gt; resp.blob());</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054110Z" creationid="gitnacho" creationdate="20221004T054110Z">
        <seg>const imgBlob = await fetch(src).then((resp) =&gt; resp.blob());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const importObject = {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T113250Z" creationid="gitnacho" creationdate="20221006T113250Z">
        <seg>const importObject = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const imports = WebAssembly.Module.imports(mod);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T230507Z" creationid="gitnacho" creationdate="20221019T230507Z">
        <seg>const imports = WebAssembly.Module.imports(mod);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const instance = new WebAssembly.Instance(mod, importObject);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T223612Z" creationid="gitnacho" creationdate="20221005T223612Z">
        <seg>const instance = new WebAssembly.Instance(mod, importObject);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const keyList = await caches.keys();</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042135Z" creationid="gitnacho" creationdate="20220921T042135Z">
        <seg>const keyList = await caches.keys();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const memory = new WebAssembly.Memory({ initial: 10, maximum: 100 });</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T210120Z" creationid="gitnacho" creationdate="20221006T210120Z">
        <seg>const memory = new WebAssembly.Memory({ initial: 10, maximum: 100 });</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const mod = createWasmModule(bytes);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T231530Z" creationid="gitnacho" creationdate="20221019T231530Z">
        <seg>const mod = createWasmModule(bytes);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const mod = e.data;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T111439Z" creationid="gitnacho" creationdate="20221007T111439Z">
        <seg>const mod = e.data;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const mod = new WebAssembly.Module(bytes);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T223610Z" creationid="gitnacho" creationdate="20221005T223610Z">
        <seg>const mod = new WebAssembly.Module(bytes);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const nameSections = WebAssembly.Module.customSections(mod, "name");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T222834Z" creationid="gitnacho" creationdate="20221019T222834Z">
        <seg>const nameSections = WebAssembly.Module.customSections(mod, "name");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const num = 123;
console.log(leftFillNum(num, 5));
// expected output: "00123"
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T103023Z" creationid="gitnacho" creationdate="20221002T103023Z">
        <seg>const num = 123;
console.log(leftFillNum(num, 5));
// salida esperada: "00123"
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const obj = {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201215T224722Z" creationid="nacho" creationdate="20201215T224722Z">
        <seg>const obj = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const opts = {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211001T191515Z" creationid="gitnacho" creationdate="20211001T191515Z">
        <seg>const opts = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const p = document.createElement("p");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210830T143022Z" creationid="gitnacho" creationdate="20210830T143022Z">
        <seg>const p = document.createElement("p");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const p2 = Promise.resolve(thenable);
p2.then(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080434Z" creationid="gitnacho" creationdate="20221002T080434Z">
        <seg>const p2 = Promise.resolve(thenable);
p2.then(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const p3 = Promise.resolve(thenable);
p3.then(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080536Z" creationid="gitnacho" creationdate="20221002T080536Z">
        <seg>const p3 = Promise.resolve(thenable);
p3.then(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const parser = new DOMParser();</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T210615Z" creationid="nachec" creationdate="20220804T210615Z">
        <seg>const parser = new DOMParser();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const path = require('path');</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210919T084025Z" creationid="gitnacho" creationdate="20210919T084025Z">
        <seg>const path = require('path');</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const preloadResponse = await preloadResponsePromise;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041434Z" creationid="gitnacho" creationdate="20220921T041434Z">
        <seg>const preloadResponse = await preloadResponsePromise;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const putInCache = async (request, response) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041415Z" creationid="gitnacho" creationdate="20220921T041415Z">
        <seg>const putInCache = async (request, response) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const registration = await navigator.serviceWorker.register("/sw.js", {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T024206Z" creationid="gitnacho" creationdate="20220921T024206Z">
        <seg>const registration = await navigator.serviceWorker.register("/sw.js", {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const request = indexedDB.open(dbName, dbVersion);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043400Z" creationid="gitnacho" creationdate="20221004T043400Z">
        <seg>const request = indexedDB.open(dbName, dbVersion);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const request = store.get(url);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043506Z" creationid="gitnacho" creationdate="20221004T043506Z">
        <seg>const request = store.get(url);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const request = store.put(module, url);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043618Z" creationid="gitnacho" creationdate="20221004T043618Z">
        <seg>const request = store.put(module, url);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const response = await event.preloadResponse;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210610Z" creationid="gitnacho" creationdate="20220922T210610Z">
        <seg>const response = await event.preloadResponse;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const responseFromCache = await caches.match(request);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040046Z" creationid="gitnacho" creationdate="20220921T040046Z">
        <seg>const responseFromCache = await caches.match(request);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const responseFromNetwork = await fetch(request);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040140Z" creationid="gitnacho" creationdate="20220921T040140Z">
        <seg>const responseFromNetwork = await fetch(request);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const result =</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233936Z" creationid="gitnacho" creationdate="20221006T233936Z">
        <seg>const result =</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const result = Module.ccall(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T112318Z" creationid="gitnacho" creationdate="20221003T112318Z">
        <seg>const result = Module.ccall(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const store = db.transaction([storeName]).objectStore(storeName);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043453Z" creationid="gitnacho" creationdate="20221004T043453Z">
        <seg>const store = db.transaction([storeName]).objectStore(storeName);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const store = db.transaction([storeName], "readwrite").objectStore(storeName);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043616Z" creationid="gitnacho" creationdate="20221004T043616Z">
        <seg>const store = db.transaction([storeName], "readwrite").objectStore(storeName);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const storeName = 'wasm-cache';
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T051052Z" creationid="gitnacho" creationdate="20221004T051052Z">
        <seg>const storeName = 'wasm-cache';
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const string = new TextDecoder("utf8").decode(bytes);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064352Z" creationid="gitnacho" creationdate="20221007T064352Z">
        <seg>const string = new TextDecoder("utf8").decode(bytes);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const sum = obj.instance.exports.accumulate(0, 10);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000829Z" creationid="gitnacho" creationdate="20221008T000829Z">
        <seg>const sum = obj.instance.exports.accumulate(0, 10);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const sum = results.instance.exports.accumulate(0, 10);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T225842Z" creationid="gitnacho" creationdate="20221006T225842Z">
        <seg>const sum = results.instance.exports.accumulate(0, 10);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const summands = new Uint32Array(memory.buffer);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000828Z" creationid="gitnacho" creationdate="20221008T000828Z">
        <seg>const summands = new Uint32Array(memory.buffer);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const table = obj.instance.exports.table;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T060556Z" creationid="gitnacho" creationdate="20221005T060556Z">
        <seg>const table = obj.instance.exports.table;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const tbl = new WebAssembly.Table({initial: 2, element: "anyfunc"});</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072450Z" creationid="gitnacho" creationdate="20221007T072450Z">
        <seg>const tbl = new WebAssembly.Table({initial: 2, element: "anyfunc"});</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const tbl = obj.instance.exports.tbl;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085504Z" creationid="gitnacho" creationdate="20221006T085504Z">
        <seg>const tbl = obj.instance.exports.tbl;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const tbl = results.instance.exports.tbl;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233446Z" creationid="gitnacho" creationdate="20221006T233446Z">
        <seg>const tbl = results.instance.exports.tbl;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const thing = 1;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T183339Z" creationid="gitnacho" creationdate="20221008T183339Z">
        <seg>const cosa = 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const total = new PrivateCounter(7);
console.log(total.current);  // expected output: 7
total.increase();            // #count now = 8
total.increase(5);           // #count now = 13
console.log(total.current);  // expected output: 13
total.reset();               // #count now = 7
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T102728Z" creationid="gitnacho" creationdate="20221002T102728Z">
        <seg>const total = new PrivateCounter(7);
console.log(total.current);  // salida esperada: 7
total.increase();            // #count ahora = 8
total.increase(5);           // #count ahora = 13
console.log(total.current);  // salida esperada: 13
total.reset();               // #count ahora = 7
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const userInfo = JSON.parse(document.getElementById("data").text);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134340Z" creationid="gitnacho" creationdate="20221003T134340Z">
        <seg>const userInfo = JSON.parse(document.getElementById("data").text);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const valid = WebAssembly.validate(bytes);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T195652Z" creationid="gitnacho" creationdate="20221007T195652Z">
        <seg>const valid = WebAssembly.validate(bytes);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const values = new Uint32Array(obj.instance.exports.memory.buffer);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000930Z" creationid="gitnacho" creationdate="20221008T000930Z">
        <seg>const values = new Uint32Array(obj.instance.exports.memory.buffer);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>const {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T210557Z" creationid="nachec" creationdate="20220804T210557Z">
        <seg>const {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>constructor() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170317T102641Z" creationid="nacho" creationdate="20170317T102641Z">
        <seg>constructor() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>constructor() {}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210918T181316Z" creationid="gitnacho" creationdate="20210918T181316Z">
        <seg>constructor() {}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>constructor(data) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210919T034950Z" creationid="gitnacho" creationdate="20210919T034950Z">
        <seg>constructor(data) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>constructor(start = 0) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211101T170522Z" creationid="gitnacho" creationdate="20211101T170522Z">
        <seg>constructor(start = 0) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>containing WebAssembly binary code to be validated.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T200017Z" creationid="gitnacho" creationdate="20221007T200017Z">
        <seg>que contiene código binario WebAssembly para ser validado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>containing the binary code of the .wasm module you want to compile.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T180405Z" creationid="gitnacho" creationdate="20221007T180405Z">
        <seg>que contiene el código binario del módulo `.wasm` que deseas compilar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>context_object_name = 'my_book_list'</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174219Z" creationid="gitnacho" creationdate="20221012T174219Z">
        <seg>context_object_name = 'my_book_list'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>create_buffer: Module.cwrap("create_buffer", "number", ["number", "number"]),</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054354Z" creationid="gitnacho" creationdate="20221004T054354Z">
        <seg>create_buffer: Module.cwrap("create_buffer", "number", ["number", "number"]),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>ctx.drawImage(img, 0, 0);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054144Z" creationid="gitnacho" creationdate="20221004T054144Z">
        <seg>ctx.drawImage(img, 0, 0);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>data type of the global.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110527Z" creationid="gitnacho" creationdate="20221007T110527Z">
        <seg>tipo de datos del global.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>db.createObjectStore(storeName);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043448Z" creationid="gitnacho" creationdate="20221004T043448Z">
        <seg>db.createObjectStore(storeName);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>db.deleteObjectStore(storeName);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043430Z" creationid="gitnacho" creationdate="20221004T043430Z">
        <seg>db.deleteObjectStore(storeName);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>default:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200813T133048Z" creationid="nacho" creationdate="20200813T133048Z">
        <seg>default:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>description,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220805T152004Z" creationid="nachec" creationdate="20220805T152004Z">
        <seg>description,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>description:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200531T063456Z" creationid="Pacho" creationdate="20200531T063456Z">
        <seg>description:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>destroy_buffer: Module.cwrap("destroy_buffer", "", ["number"]),</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054357Z" creationid="gitnacho" creationdate="20221004T054357Z">
        <seg>destroy_buffer: Module.cwrap("destroy_buffer", "", ["number"]),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>detail about something, so much so that the table formatting starts to</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185322Z" creationid="gitnacho" creationdate="20221008T185322Z">
        <seg>detalle sobre algo, tanto que el formato de la tabla comienza a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>document</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220806T063228Z" creationid="nachec" creationdate="20220806T063228Z">
        <seg>document</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>document.getElementById("mybutton").addEventListener("click", () =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T112316Z" creationid="gitnacho" creationdate="20221003T112316Z">
        <seg>document.getElementById("mybutton").addEventListener("click", () =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>document.querySelector("#kind").textContent = "active";</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213321Z" creationid="gitnacho" creationdate="20221003T213321Z">
        <seg>document.querySelector("#kind").textContent = "active";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>document.querySelector("#kind").textContent = "installing";</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213314Z" creationid="gitnacho" creationdate="20221003T213314Z">
        <seg>document.querySelector("#kind").textContent = "installing";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>document.querySelector("#kind").textContent = "waiting";</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213318Z" creationid="gitnacho" creationdate="20221003T213318Z">
        <seg>document.querySelector("#kind").textContent = "waiting";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>document.querySelector('#kind').textContent = 'active';
}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223942Z" creationid="gitnacho" creationdate="20221003T223942Z">
        <seg>document.querySelector('#kind').textContent = 'active';
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>document.querySelector('#kind').textContent = 'installing';
} else if (registration.waiting) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223938Z" creationid="gitnacho" creationdate="20221003T223938Z">
        <seg>document.querySelector('#kind').textContent = 'installing';
} else if (registration.waiting) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>document.querySelector('#kind').textContent = 'waiting';
} else if (registration.active) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223940Z" creationid="gitnacho" creationdate="20221003T223940Z">
        <seg>document.querySelector('#kind').textContent = 'waiting';
} else if (registration.active) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>done();</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211004T004029Z" creationid="gitnacho" creationdate="20211004T004029Z">
        <seg>done();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>e.preventDefault();</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220830T084902Z" creationid="gitnacho" creationdate="20220830T084902Z">
        <seg>e.preventDefault();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>element:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211001T194634Z" creationid="gitnacho" creationdate="20211001T194634Z">
        <seg>element:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>element: "anyfunc",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T110229Z" creationid="gitnacho" creationdate="20221006T110229Z">
        <seg>element: "anyfunc",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>element: "anyfunc",
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000150Z" creationid="gitnacho" creationdate="20221020T000150Z">
        <seg>element: "anyfunc",
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>else a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T102131Z" creationid="gitnacho" creationdate="20221006T101949Z">
        <seg>si no un</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>else a [`WebAssembly.LinkError`](/en-US/docs/WebAssembly/JavaScript_interface/LinkError) is thrown.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193520Z" creationid="gitnacho" creationdate="20221007T193520Z">
        <seg>de lo contrario, se genera un [`WebAssembly.LinkError`](/es/docs/WebAssembly/JavaScript_interface/LinkError).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>else {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170312T032254Z" creationid="nacho" creationdate="20170312T032254Z">
        <seg>else {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>emcc -o hello2.html hello2.c -O3 --shell-file html_template/shell_minimal.html</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T110753Z" creationid="gitnacho" creationdate="20221003T110753Z">
        <seg>emcc -o hello2.html hello2.c -O3 --shell-file html_template/shell_minimal.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>emcc -o hello3.html hello3.c -O3 --shell-file html_template/shell_minimal.html -s NO_EXIT_RUNTIME=1 -s "EXPORTED_RUNTIME_METHODS=['ccall']"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T112102Z" creationid="gitnacho" creationdate="20221003T112102Z">
        <seg>emcc -o hello3.html hello3.c -O3 --shell-file html_template/shell_minimal.html -s NO_EXIT_RUNTIME=1 -s "EXPORTED_RUNTIME_METHODS=['ccall']"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>emcc hello.c -o hello.html</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105609Z" creationid="gitnacho" creationdate="20221003T105609Z">
        <seg>emcc hello.c -o hello.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>en</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220731T193441Z" creationid="nachec" creationdate="20220731T193441Z">
        <seg>es</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>encode: Module.cwrap("encode", "", ["number", "number", "number", "number"]),</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054359Z" creationid="gitnacho" creationdate="20221004T054359Z">
        <seg>encode: Module.cwrap("encode", "", ["number", "number", "number", "number"]),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>entry: "./index.js",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065729Z" creationid="gitnacho" creationdate="20221004T065729Z">
        <seg>entry: "./index.js",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>error.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T183833Z" creationid="gitnacho" creationdate="20211102T183833Z">
        <seg>error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>event</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035247Z" creationid="gitnacho" creationdate="20220921T035247Z">
        <seg>event</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>event.request.body;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035908Z" creationid="gitnacho" creationdate="20220921T035908Z">
        <seg>event.request.body;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>event.request.headers;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035907Z" creationid="gitnacho" creationdate="20220921T035907Z">
        <seg>event.request.headers;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>event.request.method;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035906Z" creationid="gitnacho" creationdate="20220921T035906Z">
        <seg>event.request.method;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>event.request.url</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204408Z" creationid="gitnacho" creationdate="20221003T204408Z">
        <seg>event.request.url</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>event.request.url,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204554Z" creationid="gitnacho" creationdate="20221003T204554Z">
        <seg>event.request.url,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>event.request.url;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035905Z" creationid="gitnacho" creationdate="20220921T035905Z">
        <seg>event.request.url;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>event.respondWith(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040659Z" creationid="gitnacho" creationdate="20220921T040659Z">
        <seg>event.respondWith(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>event.respondWith(cacheFirst(event.request));
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040052Z" creationid="gitnacho" creationdate="20220921T040052Z">
        <seg>event.respondWith(cacheFirst(event.request));
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>event.respondWith(caches.match(event.request));
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035313Z" creationid="gitnacho" creationdate="20220921T035313Z">
        <seg>event.respondWith(caches.match(event.request));
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>event.waitUntil(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034332Z" creationid="gitnacho" creationdate="20220921T034332Z">
        <seg>event.waitUntil(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>event.waitUntil(deleteOldCaches());
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T042140Z" creationid="gitnacho" creationdate="20220921T042140Z">
        <seg>event.waitUntil(deleteOldCaches());
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>event.waitUntil(enableNavigationPreload());
});</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041511Z" creationid="gitnacho" creationdate="20220921T041511Z">
        <seg>event.waitUntil(enableNavigationPreload());
});</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>event.waitUntil(enableNavigationPreload());
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041226Z" creationid="gitnacho" creationdate="20220921T041226Z">
        <seg>event.waitUntil(enableNavigationPreload());
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>example:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T195523Z" creationid="gitnacho" creationdate="20210824T213512Z">
        <seg>ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>export default {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200503T172559Z" creationid="Pacho" creationdate="20200503T172559Z">
        <seg>export default {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>extension:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211004T104540Z" creationid="gitnacho" creationdate="20211004T104540Z">
        <seg>extension:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>extmod: {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T113125Z" creationid="gitnacho" creationdate="20221019T113125Z">
        <seg>extmod: {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>exttag: tag,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204343Z" creationid="gitnacho" creationdate="20221019T204343Z">
        <seg>exttag: tag,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>exttag: tagToImport,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T113134Z" creationid="gitnacho" creationdate="20221019T113134Z">
        <seg>exttag: tagToImport,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>f() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200730T202644Z" creationid="nacho" creationdate="20200730T202644Z">
        <seg>f() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>fallbackUrl: "/gallery/myLittleVader.jpg",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040715Z" creationid="gitnacho" creationdate="20220921T040715Z">
        <seg>fallbackUrl: "/gallery/myLittleVader.jpg",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>false</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200815T050228Z" creationid="nacho" creationdate="20200815T050228Z">
        <seg>false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>false,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210830T053306Z" creationid="gitnacho" creationdate="20210830T053306Z">
        <seg>false,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>false.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211003T060721Z" creationid="gitnacho" creationdate="20211003T060721Z">
        <seg>`false`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>fetch("simple.wasm")</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T122144Z" creationid="gitnacho" creationdate="20221007T122144Z">
        <seg>fetch("simple.wasm")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>fetch("table2.wasm"),</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000318Z" creationid="gitnacho" creationdate="20221020T000318Z">
        <seg>fetch("table2.wasm"),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>fetch(event.request);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035830Z" creationid="gitnacho" creationdate="20220921T035830Z">
        <seg>fetch(event.request);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>file.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210121T221623Z" creationid="nacho" creationdate="20210121T221623Z">
        <seg>archivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>filename: "index.js",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065733Z" creationid="gitnacho" creationdate="20221004T065733Z">
        <seg>filename: "index.js",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>fill="none"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T075531Z" creationid="gitnacho" creationdate="20220828T075531Z">
        <seg>fill="none"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>first.onchange = () =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115852Z" creationid="gitnacho" creationdate="20221007T115852Z">
        <seg>first.onchange = () =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>fn it_works() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061824Z" creationid="gitnacho" creationdate="20221004T061824Z">
        <seg>fn it_works() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>font: `font-cache-v${CACHE_VERSION}`,
};</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T201901Z" creationid="gitnacho" creationdate="20221003T201901Z">
        <seg>font: `font-cache-v${CACHE_VERSION}`,
};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>foo() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210929T210520Z" creationid="gitnacho" creationdate="20210929T210520Z">
        <seg>foo() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>for (const element of elements) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211003T002159Z" creationid="gitnacho" creationdate="20211003T002159Z">
        <seg>for (const element of elements) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>for (let i = 0; i &lt; 10; i++) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210921T070554Z" creationid="gitnacho" creationdate="20210921T070554Z">
        <seg>for (let i = 0; i &lt; 10; i++) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>for (let i = 0; i &lt; 3; i++) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211001T201712Z" creationid="gitnacho" creationdate="20211001T201712Z">
        <seg>for (let i = 0; i &lt; 3; i++) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>for (let i = 0; i &lt; 5; i++) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170323T115935Z" creationid="nacho" creationdate="20170323T115935Z">
        <seg>for (let i = 0; i &lt; 5; i++) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>for (let i = 0; i &lt; collection.length; i++) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211003T110934Z" creationid="gitnacho" creationdate="20211003T110934Z">
        <seg>for (let i = 0; i &lt; collection.length; i++) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>for (let i = 0; i &lt; count; i++) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220827T215437Z" creationid="gitnacho" creationdate="20220827T215437Z">
        <seg>for (let i = 0; i &lt; count; i++) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>for example:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211103T064756Z" creationid="gitnacho" creationdate="20211103T064756Z">
        <seg>por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>format.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185253Z" creationid="gitnacho" creationdate="20221008T185253Z">
        <seg>GFM.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>free(p);
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054248Z" creationid="gitnacho" creationdate="20221004T054248Z">
        <seg>free(p);
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>free_result: Module.cwrap("free_result", "", ["number"]),</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054400Z" creationid="gitnacho" creationdate="20221004T054400Z">
        <seg>free_result: Module.cwrap("free_result", "", ["number"]),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>function () {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201129T095004Z" creationid="nacho" creationdate="20201129T095004Z">
        <seg>function () {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>function App() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211004T180632Z" creationid="gitnacho" creationdate="20211004T180632Z">
        <seg>function App() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>function C() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210919T045134Z" creationid="gitnacho" creationdate="20210919T045134Z">
        <seg>function C() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>function assertEq(msg, got, expected) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233935Z" creationid="gitnacho" creationdate="20221006T233935Z">
        <seg>function assertEq(msg, got, expected) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>function callOtherDomain() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230425Z" creationid="gitnacho" creationdate="20221011T230425Z">
        <seg>function callOtherDomain() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>function createWasmModule(bytes) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T231527Z" creationid="gitnacho" creationdate="20221019T231527Z">
        <seg>function createWasmModule(bytes) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>function f() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200815T054051Z" creationid="nacho" creationdate="20200815T054051Z">
        <seg>function f() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>function fail() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200730T192623Z" creationid="nacho" creationdate="20200730T192623Z">
        <seg>function fail() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>function foo() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201228T135742Z" creationid="nacho" creationdate="20201228T135742Z">
        <seg>function foo() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>function g() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210921T064304Z" creationid="gitnacho" creationdate="20210921T064304Z">
        <seg>function g() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>function throwExceptionWithStack(param) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204231Z" creationid="gitnacho" creationdate="20221019T204231Z">
        <seg>function throwExceptionWithStack(param) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>function.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T042805Z" creationid="gitnacho" creationdate="20211102T042805Z">
        <seg> async.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>get area() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210922T043938Z" creationid="gitnacho" creationdate="20210922T043938Z">
        <seg>get area() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>get foo() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211003T093102Z" creationid="gitnacho" creationdate="20211003T093102Z">
        <seg>get foo() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>getName() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210918T200922Z" creationid="nacho" creationdate="20201215T224705Z">
        <seg>getName() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>get_result_pointer: Module.cwrap("get_result_pointer", "number", []),</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054402Z" creationid="gitnacho" creationdate="20221004T054402Z">
        <seg>get_result_pointer: Module.cwrap("get_result_pointer", "number", []),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>get_result_size: Module.cwrap("get_result_size", "number", []),
};</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054411Z" creationid="gitnacho" creationdate="20221004T054411Z">
        <seg>get_result_size: Module.cwrap("get_result_size", "number", []),
};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>git add .</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210828T114326Z" creationid="gitnacho" creationdate="20210828T114326Z">
        <seg>git add .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>git clone https://github.com/mdn/learning-area</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T173634Z" creationid="Nachec" creationdate="20221020T173634Z">
        <seg>git clone https://github.com/mdn/learning-area</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>git pull</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Nachec" changedate="20221020T173736Z" creationid="Nachec" creationdate="20221020T173736Z">
        <seg>git pull</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>global.value = 42;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233948Z" creationid="gitnacho" creationdate="20221006T233948Z">
        <seg>global.value = 42;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>got === expected</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233937Z" creationid="gitnacho" creationdate="20221006T233937Z">
        <seg>got === expected</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>greet("WebAssembly");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064618Z" creationid="gitnacho" creationdate="20221004T064618Z">
        <seg>greet("WebAssembly");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>greet() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210908T110959Z" creationid="nacho" creationdate="20180528T184824Z">
        <seg>greet() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>grid:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T224329Z" creationid="nachec" creationdate="20220804T224329Z">
        <seg>grid:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>gulp</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210830T114203Z" creationid="gitnacho" creationdate="20210830T114203Z">
        <seg>gulp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>hasTouchScreen =</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T230248Z" creationid="nachec" creationdate="20220804T230248Z">
        <seg>hasTouchScreen =</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>have a valid [JavaScript MIME type](/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#javascript_types).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T105758Z" creationid="gitnacho" creationdate="20221008T105758Z">
        <seg>tener un [tipo MIME de JavaScript](/es/docs/Web/HTTP/Basics_of_HTTP/MIME_types#tipos_javascript) válido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>headers: { "Content-Type": "text/html" },</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035750Z" creationid="gitnacho" creationdate="20220921T035750Z">
        <seg>headers: { "Content-Type": "text/html" },</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>headers: { "Content-Type": "text/plain" },</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040658Z" creationid="gitnacho" creationdate="20220921T040658Z">
        <seg>headers: { "Content-Type": "text/plain" },</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>height="10"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T075545Z" creationid="gitnacho" creationdate="20220828T075545Z">
        <seg>height="10"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>height="25"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220828T075638Z" creationid="gitnacho" creationdate="20220828T075638Z">
        <seg>height="25"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>href="https://github.com/mdn/yari/tree/main/kumascript/macros/SVGElement.ejs"&gt;SVGElement&lt;/a&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T111343Z" creationid="gitnacho" creationdate="20221005T111343Z">
        <seg>href="https://github.com/mdn/yari/tree/main/kumascript/macros/SVGElement.ejs"&gt;SVGElement&lt;/a&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>href="https://ingorichter.github.io/BracketsExtensionTweetBot/"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T122322Z" creationid="gitnacho" creationdate="20221020T122322Z">
        <seg>href="https://ingorichter.github.io/BracketsExtensionTweetBot/"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>html</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220803T021640Z" creationid="nacho" creationdate="20210107T014039Z">
        <seg>html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>html {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T231428Z" creationid="nachec" creationdate="20220804T231045Z">
        <seg>html {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>i32.add</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080240Z" creationid="gitnacho" creationdate="20221007T080240Z">
        <seg>i32.add</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>i32.add)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T060819Z" creationid="gitnacho" creationdate="20221007T060819Z">
        <seg>i32.add)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>i32.add)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055052Z" creationid="gitnacho" creationdate="20221007T055052Z">
        <seg>i32.add)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>i32.add))
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055308Z" creationid="gitnacho" creationdate="20221007T055308Z">
        <seg>i32.add))
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>i32.const 0</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073832Z" creationid="gitnacho" creationdate="20221007T073832Z">
        <seg>i32.const 0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>i32.const 0  ;; pass offset 0 to log</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T083953Z" creationid="gitnacho" creationdate="20221007T064744Z">
        <seg>i32.const 0 ;; pasa el desplazamiento 0 para log</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>i32.const 1</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061141Z" creationid="gitnacho" creationdate="20221007T061141Z">
        <seg>i32.const 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>i32.const 13</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061406Z" creationid="gitnacho" creationdate="20221007T061406Z">
        <seg>i32.const 13</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>i32.const 13)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072038Z" creationid="gitnacho" creationdate="20221007T072038Z">
        <seg>i32.const 13)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>i32.const 2</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080235Z" creationid="gitnacho" creationdate="20221007T080235Z">
        <seg>i32.const 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>i32.const 2  ;; pass length 2 to log</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T084005Z" creationid="gitnacho" creationdate="20221007T064807Z">
        <seg>i32.const 4 ;; pasa la longitud 4 para log</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>i32.const 42</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T113147Z" creationid="gitnacho" creationdate="20221006T113147Z">
        <seg>i32.const 42</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>i32.const 42)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061139Z" creationid="gitnacho" creationdate="20221007T061139Z">
        <seg>i32.const 42)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>i32.load)
)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073833Z" creationid="gitnacho" creationdate="20221007T073833Z">
        <seg>i32.load)
)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>i32.store  ;; store 42 at address 0</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T073836Z" creationid="gitnacho" creationdate="20221007T073836Z">
        <seg>i32.store  ;; store 42 at address 0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>i32[i] = i;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T225841Z" creationid="gitnacho" creationdate="20221006T225841Z">
        <seg>i32[i] = i;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>id,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220805T222307Z" creationid="nachec" creationdate="20220805T222307Z">
        <seg>id,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T230000Z" creationid="nachec" creationdate="20220804T230000Z">
        <seg>if (</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (!expectedCacheNamesSet.has(cacheName)) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T201914Z" creationid="gitnacho" creationdate="20221003T201914Z">
        <seg>if (!expectedCacheNamesSet.has(cacheName)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (!result) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T230011Z" creationid="nachec" creationdate="20220804T230011Z">
        <seg>if (!result) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if ("serviceWorker" in navigator) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T024203Z" creationid="gitnacho" creationdate="20220921T024203Z">
        <seg>if ("serviceWorker" in navigator) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (Array.isArray(item)) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T230014Z" creationid="nachec" creationdate="20220804T230014Z">
        <seg>if (Array.isArray(item)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (cachedResponse) return cachedResponse;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210558Z" creationid="gitnacho" creationdate="20220922T210558Z">
        <seg>if (cachedResponse) return cachedResponse;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (condition) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200607T121251Z" creationid="Pacho" creationdate="20200607T121251Z">
        <seg>if (condition) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (db.objectStoreNames.contains(storeName)) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043411Z" creationid="gitnacho" creationdate="20221004T043411Z">
        <seg>if (db.objectStoreNames.contains(storeName)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (e.is(tagExportedFromWasm)) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T143308Z" creationid="gitnacho" creationdate="20221019T143308Z">
        <seg>if (e.is(tagExportedFromWasm)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (e.is(tagToImport)) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023538Z" creationid="gitnacho" creationdate="20221008T023538Z">
        <seg>if (e.is(tagToImport)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (err) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T010257Z" creationid="gitnacho" creationdate="20220901T010257Z">
        <seg>if (err) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (fallbackResponse) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040547Z" creationid="gitnacho" creationdate="20220921T040547Z">
        <seg>if (fallbackResponse) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (foo) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210922T055128Z" creationid="gitnacho" creationdate="20210922T055128Z">
        <seg>if (foo) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (invocation) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230425Z" creationid="gitnacho" creationdate="20221011T230425Z">
        <seg>if (invocation) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (nameSections.length !== 0) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T222834Z" creationid="gitnacho" creationdate="20221019T222834Z">
        <seg>if (nameSections.length !== 0) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (open) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T225959Z" creationid="nachec" creationdate="20220804T225959Z">
        <seg>if (open) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (p) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211003T133645Z" creationid="gitnacho" creationdate="20211003T133645Z">
        <seg>if (p) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (preloadResponse) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041434Z" creationid="gitnacho" creationdate="20220921T041434Z">
        <seg>if (preloadResponse) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (registration.installing) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T024209Z" creationid="gitnacho" creationdate="20220921T024209Z">
        <seg>if (registration.installing) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (request.result) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043534Z" creationid="gitnacho" creationdate="20221004T043534Z">
        <seg>if (request.result) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (response) return response;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210610Z" creationid="gitnacho" creationdate="20220922T210610Z">
        <seg>if (response) return response;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (response) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T201938Z" creationid="gitnacho" creationdate="20221003T201938Z">
        <seg>if (response) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (responseFromCache) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040046Z" creationid="gitnacho" creationdate="20220921T040046Z">
        <seg>if (responseFromCache) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (result) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T225954Z" creationid="nachec" creationdate="20220804T225954Z">
        <seg>if (result) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (self.registration.navigationPreload) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041154Z" creationid="gitnacho" creationdate="20220921T041154Z">
        <seg>if (self.registration.navigationPreload) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (serviceWorker) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213323Z" creationid="gitnacho" creationdate="20221003T213323Z">
        <seg>if (serviceWorker) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (tabFocus &lt; 0) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T225955Z" creationid="nachec" creationdate="20220804T225955Z">
        <seg>if (tabFocus &lt; 0) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (tabFocus &gt;= tabs.length) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T225955Z" creationid="nachec" creationdate="20220804T225955Z">
        <seg>if (tabFocus &gt;= tabs.length) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (tag.indexOf("a") === 0) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071715Z" creationid="gitnacho" creationdate="20221005T071715Z">
        <seg>if (tag.indexOf("a") === 0) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (true) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200607T121240Z" creationid="Pacho" creationdate="20200607T121240Z">
        <seg>if (true) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (typeof obj === "string") {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210201T091142Z" creationid="nacho" creationdate="20210201T091142Z">
        <seg>if (typeof obj === "string") {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if (x) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211001T202757Z" creationid="gitnacho" creationdate="20211001T202757Z">
        <seg>if (x) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>if you only specify the attribute name.&lt;br /&gt;Attribute associated with a specific HTML element if you specify an attribute name and an element name.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T112525Z" creationid="gitnacho" creationdate="20221005T110859Z">
        <seg>si solo especificas el nombre del atributo.&lt;br /&gt;El atributo asociado con un elemento HTML específico si especificas un nombre de atributo y un nombre de elemento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>import init, { greet } from "./pkg/hello_wasm.js";</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064616Z" creationid="gitnacho" creationdate="20221004T064616Z">
        <seg>import init, { greet } from "./pkg/hello_wasm.js";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>import {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220803T120958Z" creationid="nachec" creationdate="20220803T120958Z">
        <seg>import {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>importObject
);
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000326Z" creationid="gitnacho" creationdate="20221020T000326Z">
        <seg>importObject
);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>imported_func(arg) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T223601Z" creationid="gitnacho" creationdate="20221005T223601Z">
        <seg>imported_func(arg) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>imports: {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T223600Z" creationid="gitnacho" creationdate="20221005T223600Z">
        <seg>imports: {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>imports: { imported_func: (arg) =&gt; console.log(arg) },</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T113251Z" creationid="gitnacho" creationdate="20221006T113251Z">
        <seg>imports: { imported_func: (arg) =&gt; console.log(arg) },</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>include:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T224309Z" creationid="nachec" creationdate="20220804T224309Z">
        <seg>include:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>index.js</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210916T044323Z" creationid="gitnacho" creationdate="20210916T044323Z">
        <seg>index.js</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>init().then(() =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T064617Z" creationid="gitnacho" creationdate="20221004T064617Z">
        <seg>init().then(() =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>initial: 1,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T214615Z" creationid="gitnacho" creationdate="20221019T214615Z">
        <seg>initial: 1,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>initial: 1,
});
const oldMemoryView = new Uint8Array(memory.buffer);
memory.grow(1);
// the array is empty!</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T213945Z" creationid="gitnacho" creationdate="20221019T213945Z">
        <seg>initial: 1,
});
const oldMemoryView = new Uint8Array(memory.buffer);
memory.grow(1);
// ¡El arreglo está vacío!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>initial: 1,
});
memory.grow(1);
const currentMemoryView = new Uint8Array(memory.buffer);
// the array is full of zeros
console.log(currentMemoryView); // Uint8Array(131072) [ 0, 0, 0, ... ]
// 131072 = 64KiB * 2
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T213925Z" creationid="gitnacho" creationdate="20221019T213925Z">
        <seg>initial: 1,
});
memory.grow(1);
const currentMemoryView = new Uint8Array(memory.buffer);
// the array is full of zeros
console.log(currentMemoryView); // Uint8Array(131072) [ 0, 0, 0, ... ]
// 131072 = 64KiB * 2
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>initial: 10,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080724Z" creationid="gitnacho" creationdate="20221007T080724Z">
        <seg>initial: 10,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>initial: 2,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T110229Z" creationid="gitnacho" creationdate="20221006T110229Z">
        <seg>initial: 2,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>instance : Instance // A new WebAssembly.Instance of the module object
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T060016Z" creationid="gitnacho" creationdate="20221005T060016Z">
        <seg>instance : Instance // Una nueva WebAssembly.Instance del objeto mudule
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>instance.exports.exported_func();</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T111450Z" creationid="gitnacho" creationdate="20221007T111450Z">
        <seg>instance.exports.exported_func();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>instance.exports.getGlobal(),</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233947Z" creationid="gitnacho" creationdate="20221006T233947Z">
        <seg>instance.exports.getGlobal(),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>instance.exports.incGlobal();</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233951Z" creationid="gitnacho" creationdate="20221006T233951Z">
        <seg>instance.exports.incGlobal();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>instantiateCachedURL(wasmCacheVersion, "test.wasm")</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043910Z" creationid="gitnacho" creationdate="20221004T043910Z">
        <seg>instantiateCachedURL(wasmCacheVersion, "test.wasm")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>int main() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105513Z" creationid="gitnacho" creationdate="20221003T105513Z">
        <seg>int main() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>invocation.onreadystatechange = handler;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230426Z" creationid="gitnacho" creationdate="20221011T230426Z">
        <seg>invocation.onreadystatechange = handler;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>invocation.open("GET", url, true);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230425Z" creationid="gitnacho" creationdate="20221011T230425Z">
        <seg>invocation.open("GET", url, true);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>invocation.send();</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230428Z" creationid="gitnacho" creationdate="20221011T230428Z">
        <seg>invocation.send();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>invocation.withCredentials = true;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T230426Z" creationid="gitnacho" creationdate="20221011T230426Z">
        <seg>invocation.withCredentials = true;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>is thrown.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T102147Z" creationid="gitnacho" creationdate="20221006T102039Z">
        <seg>será lanzado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>j++;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211003T110939Z" creationid="gitnacho" creationdate="20211003T110939Z">
        <seg>j++;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>js.greet("WebAssembly with npm");
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065753Z" creationid="gitnacho" creationdate="20221004T065753Z">
        <seg>js.greet("WebAssembly with npm");
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>js: {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074327Z" creationid="gitnacho" creationdate="20221007T074327Z">
        <seg>js: {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>js: { mem: memory },</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T225717Z" creationid="gitnacho" creationdate="20221006T225717Z">
        <seg>js: { mem: memory },</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>js: { mem: memory },
}).then((obj) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T121118Z" creationid="gitnacho" creationdate="20221019T121118Z">
        <seg>js: { mem: memory },
}).then((obj) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>js: { mem: memory },
};</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064857Z" creationid="gitnacho" creationdate="20221007T064857Z">
        <seg>js: { mem: memory },
};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>js: { tbl },
};
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T095554Z" creationid="gitnacho" creationdate="20221006T095554Z">
        <seg>js: { tbl },
};
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>lang="en"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220903T151951Z" creationid="gitnacho" creationdate="20220903T151951Z">
        <seg>lang="es"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>let contents = mdn.getFileContent(fileUrl);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T082521Z" creationid="gitnacho" creationdate="20221005T082521Z">
        <seg>let contents = mdn.getFileContent(fileUrl);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>let counter = 0;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T230707Z" creationid="nachec" creationdate="20220804T230707Z">
        <seg>let counter = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>let i = 0;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210929T212648Z" creationid="gitnacho" creationdate="20210929T212648Z">
        <seg>let i = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>let options = {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20181129T062001Z" creationid="nacho" creationdate="20181129T062001Z">
        <seg>let options = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>let result = 0;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201229T234529Z" creationid="nacho" creationdate="20201229T234529Z">
        <seg>let result = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>let serviceWorker;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213310Z" creationid="gitnacho" creationdate="20221003T213310Z">
        <seg>let serviceWorker;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>let sum = 0;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210921T070217Z" creationid="gitnacho" creationdate="20210921T070217Z">
        <seg>let sum = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>let x = 3;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210921T051613Z" creationid="gitnacho" creationdate="20210921T051613Z">
        <seg>let x = 3;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>libwebp/src/{dec,dsp,demux,enc,mux,utils}/*.c
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053632Z" creationid="gitnacho" creationdate="20221004T053632Z">
        <seg>libwebp/src/{dec,dsp,demux,enc,mux,utils}/*.c
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>local.get $errorValueArg</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023343Z" creationid="gitnacho" creationdate="20221008T023343Z">
        <seg>local.get $errorValueArg</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>local.get $i</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072640Z" creationid="gitnacho" creationdate="20221007T072640Z">
        <seg>local.get $i</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>local.get $lhs</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055307Z" creationid="gitnacho" creationdate="20221007T055307Z">
        <seg>local.get $lhs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>local.get $p</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055051Z" creationid="gitnacho" creationdate="20221007T055051Z">
        <seg>local.get $p</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>local.get $rhs</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T055307Z" creationid="gitnacho" creationdate="20221007T055307Z">
        <seg>local.get $rhs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>local.get 0</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054632Z" creationid="gitnacho" creationdate="20221007T054632Z">
        <seg>local.get 0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>local.get 1</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054632Z" creationid="gitnacho" creationdate="20221007T054632Z">
        <seg>local.get 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>local.get 2)
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T054633Z" creationid="gitnacho" creationdate="20221007T054633Z">
        <seg>local.get 2)
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>log(arg) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061559Z" creationid="gitnacho" creationdate="20221007T061559Z">
        <seg>log(arg) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>logState(e.target.state);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223944Z" creationid="gitnacho" creationdate="20221003T223944Z">
        <seg>logState(e.target.state);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>logState(serviceWorker.state);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223942Z" creationid="gitnacho" creationdate="20221003T223942Z">
        <seg>logState(serviceWorker.state);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>look bad in GFM format.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185327Z" creationid="gitnacho" creationdate="20221008T185327Z">
        <seg>se ven mal en formato GFM.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>make a local copy of `memory.wasm` in the same directory as before.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T225544Z" creationid="gitnacho" creationdate="20221006T225544Z">
        <seg>Haz una copia local de `memory.wasm` en el mismo directorio que antes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>maximum: 10,
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T110231Z" creationid="gitnacho" creationdate="20221006T110231Z">
        <seg>maximum: 10,
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>maximum: 100,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080729Z" creationid="gitnacho" creationdate="20221007T080729Z">
        <seg>maximum: 100,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>maximum: 100,
});</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T121058Z" creationid="gitnacho" creationdate="20221019T121058Z">
        <seg>maximum: 100,
});</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>maximum: 100,
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T121056Z" creationid="gitnacho" creationdate="20221019T121056Z">
        <seg>maximum: 100,
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>memory: new WebAssembly.Memory({ initial: 1 }),</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074328Z" creationid="gitnacho" creationdate="20221007T074328Z">
        <seg>memory: new WebAssembly.Memory({ initial: 1 }),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>message from main received in worker:                    MessageEvent { ... }  myWorker.js:3
buf.byteLength in worker BEFORE transfer back to main:   8                     myWorker.js:7
buf.byteLength in worker AFTER transfer back to main:    0                     myWorker.js:15</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120959Z" creationid="gitnacho" creationdate="20221007T120959Z">
        <seg>message from main received in worker:                    MessageEvent { ... }  myWorker.js:3
buf.byteLength in worker BEFORE transfer back to main:   8                     myWorker.js:7
buf.byteLength in worker AFTER transfer back to main:    0                     myWorker.js:15</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>message from worker received in main:                    MessageEvent { ... }  main.js:6
buf.byteLength in main AFTER transfer back from worker:  8                     main.js:10
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T121000Z" creationid="gitnacho" creationdate="20221007T121000Z">
        <seg>message from worker received in main:                    MessageEvent { ... }  main.js:6
buf.byteLength in main AFTER transfer back from worker:  8                     main.js:10
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>method() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210919T043820Z" creationid="gitnacho" creationdate="20210919T043820Z">
        <seg>method() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>method2() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210919T043909Z" creationid="gitnacho" creationdate="20210919T043909Z">
        <seg>method2() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>mkdir site
cd site
npm link hello-wasm
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065631Z" creationid="gitnacho" creationdate="20221004T065631Z">
        <seg>mkdir site
cd site
npm link hello-wasm
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>mkdir src</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210830T114951Z" creationid="gitnacho" creationdate="20210830T114951Z">
        <seg>mkdir src</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>mode: "development",
};
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065734Z" creationid="gitnacho" creationdate="20221004T065734Z">
        <seg>mode: "development",
};
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>model = Book</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174209Z" creationid="gitnacho" creationdate="20221012T174209Z">
        <seg>model = Book</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>module : Module // The newly compiled WebAssembly.Module object,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T055923Z" creationid="gitnacho" creationdate="20221005T055923Z">
        <seg>module : Module // El objeto WebAssembly.Module recién compilado,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>mutable or not.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T110704Z" creationid="gitnacho" creationdate="20221007T110704Z">
        <seg>mutable o no.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>myBuf.byteLength
);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120114Z" creationid="gitnacho" creationdate="20221007T120114Z">
        <seg>myBuf.byteLength
);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>myBuf.byteLength
);
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120121Z" creationid="gitnacho" creationdate="20221007T120121Z">
        <seg>myBuf.byteLength
);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>myWorker.postMessage([first.value, second.value]);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115853Z" creationid="gitnacho" creationdate="20221007T115853Z">
        <seg>myWorker.postMessage([first.value, second.value]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>name</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220805T212519Z" creationid="nachec" creationdate="20220805T212519Z">
        <seg>name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>name,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210920T081130Z" creationid="gitnacho" creationdate="20210920T081130Z">
        <seg>name,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>navigator.serviceWorker</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213305Z" creationid="gitnacho" creationdate="20221003T213305Z">
        <seg>navigator.serviceWorker</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>navigator.serviceWorker.register("/offline-worker.js").then(() =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T204449Z" creationid="gitnacho" creationdate="20221018T204449Z">
        <seg>navigator.serviceWorker.register("/offline-worker.js").then(() =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>new Response(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035704Z" creationid="gitnacho" creationdate="20220921T035704Z">
        <seg>new Response(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>new Response("Hello from your friendly neighborhood service worker!");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T035603Z" creationid="gitnacho" creationdate="20220921T035603Z">
        <seg>new Response("¡Hola desde tu amigable vecindario del *service worker*!");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>new Uint32Array(memory.buffer)[0] = 42;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T210319Z" creationid="gitnacho" creationdate="20221006T210319Z">
        <seg>new Uint32Array(memory.buffer)[0] = 42;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>new Uint32Array(memory.buffer)[0];</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T210338Z" creationid="gitnacho" creationdate="20221006T210338Z">
        <seg>new Uint32Array(memory.buffer)[0];</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>none</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211005T033027Z" creationid="gitnacho" creationdate="20211005T033027Z">
        <seg>none</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>npm init</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210830T115025Z" creationid="gitnacho" creationdate="20210830T115025Z">
        <seg>npm init</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>npm run build</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200607T121702Z" creationid="Pacho" creationdate="20200607T121702Z">
        <seg>npm run build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>null</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210930T100211Z" creationid="gitnacho" creationdate="20210930T100211Z">
        <seg>null</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>null // arguments</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T112425Z" creationid="gitnacho" creationdate="20221003T112425Z">
        <seg>null // argumentos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>null,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210827T033438Z" creationid="gitnacho" creationdate="20210827T033438Z">
        <seg>null,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>null, // argument types</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T112422Z" creationid="gitnacho" creationdate="20221003T112422Z">
        <seg>null, // tipo de argumentos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>null, // return type</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T112346Z" creationid="gitnacho" creationdate="20221003T112346Z">
        <seg>null, // tipo de retorno</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>obj.instance.exports.exported_func();</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T060528Z" creationid="gitnacho" creationdate="20221005T060528Z">
        <seg>obj.instance.exports.exported_func();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>obj.instance.exports.logIt();</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T061603Z" creationid="gitnacho" creationdate="20221007T061603Z">
        <seg>obj.instance.exports.logIt();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>obj.instance.exports.writeHi();</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T064905Z" creationid="gitnacho" creationdate="20221007T064905Z">
        <seg>obj.instance.exports.writeHi();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>object or a promise that will fulfill with one, representing the underlying source of</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T101816Z" creationid="gitnacho" creationdate="20221006T101714Z">
        <seg>o una promesa que se cumplirá con uno, que representa la fuente subyacente de</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>object.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T184030Z" creationid="gitnacho" creationdate="20211102T184030Z">
        <seg>object.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>occurred.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T043040Z" creationid="gitnacho" creationdate="20211102T043040Z">
        <seg>ocurrido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>onFulfill('fulfilled!');</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080206Z" creationid="gitnacho" creationdate="20221002T080206Z">
        <seg>onFulfill('fulfilled!');</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>onFulfilled('Resolving');</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080431Z" creationid="gitnacho" creationdate="20221002T080431Z">
        <seg>onFulfilled('Resolving');</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>onFulfilled(42);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080703Z" creationid="gitnacho" creationdate="20221002T080703Z">
        <seg>onFulfilled(42);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>onFulfilled(thenable);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080739Z" creationid="gitnacho" creationdate="20221002T080739Z">
        <seg>onFulfilled(thenable);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>onFulfilled({</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080654Z" creationid="gitnacho" creationdate="20221002T080654Z">
        <seg>onFulfilled({</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>oncontrollerchange = (event) =&gt; { };
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T230528Z" creationid="gitnacho" creationdate="20221003T230528Z">
        <seg>oncontrollerchange = (event) =&gt; { };
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>onmessage = (e) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T111438Z" creationid="gitnacho" creationdate="20221007T111438Z">
        <seg>onmessage = (e) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>onstatechange = (event) =&gt; { };
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T224920Z" creationid="gitnacho" creationdate="20221003T224920Z">
        <seg>onstatechange = (event) =&gt; { };
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>or</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170811T063112Z">
        <seg>o</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>otherTable.set(0, tbl.get(0));</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085506Z" creationid="gitnacho" creationdate="20221006T085506Z">
        <seg>otherTable.set(0, tbl.get(0));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>otherTable.set(1, tbl.get(1));</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085507Z" creationid="gitnacho" creationdate="20221006T085507Z">
        <seg>otherTable.set(1, tbl.get(1));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>output.innerHTML += `Testing ${msg}: ${result}`;
}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T233941Z" creationid="gitnacho" creationdate="20221006T233941Z">
        <seg>output.innerHTML += `Testing ${msg}: ${result}`;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>output: {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065730Z" creationid="gitnacho" creationdate="20221004T065730Z">
        <seg>output: {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>p1.then(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080252Z" creationid="gitnacho" creationdate="20221002T080252Z">
        <seg>p1.then(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>package.json</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210919T083518Z" creationid="gitnacho" creationdate="20210919T083518Z">
        <seg>`package.json`</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>padding:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201210T200209Z" creationid="nacho" creationdate="20201210T200209Z">
        <seg>padding:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>pages:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210830T061914Z" creationid="gitnacho" creationdate="20210830T061914Z">
        <seg>pages:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>path</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T210821Z" creationid="nachec" creationdate="20220804T210821Z">
        <seg>path</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>path: path.resolve(__dirname, "dist"),</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T065731Z" creationid="gitnacho" creationdate="20221004T065731Z">
        <seg>path: path.resolve(__dirname, "dist"),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>paths:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211004T094945Z" creationid="gitnacho" creationdate="20211004T094945Z">
        <seg>paths:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>pre {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T233559Z" creationid="nachec" creationdate="20220804T233559Z">
        <seg>pre {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>preloadResponsePromise: event.preloadResponse,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041515Z" creationid="gitnacho" creationdate="20220921T041515Z">
        <seg>preloadResponsePromise: event.preloadResponse,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>printf("Hello World\n");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105523Z" creationid="gitnacho" creationdate="20221003T105523Z">
        <seg>printf("Hola Mundo\n");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>printf("MyFunction Called\n");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T111643Z" creationid="gitnacho" creationdate="20221003T111643Z">
        <seg>printf("MyFunction Called\n");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>program,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220805T222305Z" creationid="nachec" creationdate="20220805T222305Z">
        <seg>program,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>properties:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220803T020255Z" creationid="nachec" creationdate="20220803T014253Z">
        <seg>properties:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>property.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211101T225500Z" creationid="gitnacho" creationdate="20211101T225500Z">
        <seg>propiedad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>pub fn alert(s: &amp;str);
}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061935Z" creationid="gitnacho" creationdate="20221004T061935Z">
        <seg>pub fn alert(s: &amp;str);
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>pub fn alert(s: &amp;str);
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T062511Z" creationid="gitnacho" creationdate="20221004T062511Z">
        <seg>pub fn alert(s: &amp;str);
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>publicMethod() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211003T110301Z" creationid="gitnacho" creationdate="20211003T110301Z">
        <seg>publicMethod() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>putInCache(request, preloadResponse.clone());</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041436Z" creationid="gitnacho" creationdate="20220921T041436Z">
        <seg>putInCache(request, preloadResponse.clone());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>putInCache(request, responseFromNetwork.clone());</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040141Z" creationid="gitnacho" creationdate="20220921T040141Z">
        <seg>putInCache(request, responseFromNetwork.clone());</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>queryset = Book.objects.filter(title__icontains='war')[:5]</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174219Z" creationid="gitnacho" creationdate="20221012T174219Z">
        <seg>queryset = Book.objects.filter(title__icontains='war')[:5]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>registerServiceWorker();
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T024237Z" creationid="gitnacho" creationdate="20220921T024237Z">
        <seg>registerServiceWorker();
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>reject();</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210919T051038Z" creationid="gitnacho" creationdate="20210919T051038Z">
        <seg>reject();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>reject(`Module ${url} was not found in wasm cache`);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043609Z" creationid="gitnacho" creationdate="20221004T043609Z">
        <seg>reject(`El módulo ${url} no se encontró en la caché wasm`);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>represents a tree with the root node "module" and two child nodes, a "memory" node with the attribute "1" and a "func" node.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T053759Z" creationid="gitnacho" creationdate="20221007T053759Z">
        <seg>representa un árbol con el nodo raíz "`module`" y dos nodos secundarios, un nodo "`memory`" con el atributo "1" y un nodo "`func`".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>request.onerror = (err) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043620Z" creationid="gitnacho" creationdate="20221004T043620Z">
        <seg>request.onerror = (err) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>request.onerror = reject.bind(null, "Error opening wasm cache database");</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T102512Z" creationid="gitnacho" creationdate="20221004T043401Z">
        <seg>request.onerror = reject.bind(null, "Error al abrir la base de datos de caché wasm");</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>request.onerror = reject.bind(null, `Error getting wasm module ${url}`);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043530Z" creationid="gitnacho" creationdate="20221004T043530Z">
        <seg>request.onerror = reject.bind(null, `Error al obtener el módulo wasm ${url}`);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>request.onload = () =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T061055Z" creationid="gitnacho" creationdate="20221005T061055Z">
        <seg>request.onload = () =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>request.onsuccess = () =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043402Z" creationid="gitnacho" creationdate="20221004T043402Z">
        <seg>request.onsuccess = () =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>request.onsuccess = (err) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043651Z" creationid="gitnacho" creationdate="20221004T043651Z">
        <seg>request.onsuccess = (err) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>request.onsuccess = (event) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043531Z" creationid="gitnacho" creationdate="20221004T043531Z">
        <seg>request.onsuccess = (event) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>request.onupgradeneeded = (event) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043404Z" creationid="gitnacho" creationdate="20221004T043404Z">
        <seg>request.onupgradeneeded = (event) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>request: event.request,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040702Z" creationid="gitnacho" creationdate="20220921T040702Z">
        <seg>request: event.request,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>resolve();</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211003T094522Z" creationid="gitnacho" creationdate="20211003T094522Z">
        <seg>resolve();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>resolve(10);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211001T185145Z" creationid="gitnacho" creationdate="20211001T185145Z">
        <seg>resolve(10);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>resolve(request.result);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043403Z" creationid="gitnacho" creationdate="20221004T043403Z">
        <seg>resolve(request.result);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>resolve(value);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211003T094631Z" creationid="gitnacho" creationdate="20211003T094631Z">
        <seg>resolve(value);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>response</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204557Z" creationid="gitnacho" creationdate="20221003T204557Z">
        <seg>response</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>response.headers.get("content-type").match(/^font\//i)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204600Z" creationid="gitnacho" creationdate="20221003T204600Z">
        <seg>response.headers.get("content-type").match(/^font\//i)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>response.headers.has("content-type") &amp;&amp;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204559Z" creationid="gitnacho" creationdate="20221003T204559Z">
        <seg>response.headers.has("content-type") &amp;&amp;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>response.status &lt; 400 &amp;&amp;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204558Z" creationid="gitnacho" creationdate="20221003T204558Z">
        <seg>response.status &lt; 400 &amp;&amp;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>result += value;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210919T005953Z" creationid="nacho" creationdate="20210105T015642Z">
        <seg>result += value;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>result.exports.exported_func()</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T231534Z" creationid="gitnacho" creationdate="20221019T231534Z">
        <seg>result.exports.exported_func()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>resultPointer,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054902Z" creationid="gitnacho" creationdate="20221004T054902Z">
        <seg>resultPointer,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>resultSize
);
const result = new Uint8Array(resultView);
api.free_result(resultPointer);
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054904Z" creationid="gitnacho" creationdate="20221004T054904Z">
        <seg>resultSize
);
const result = new Uint8Array(resultView);
api.free_result(resultPointer);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>result[0] = (int)img_out;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054823Z" creationid="gitnacho" creationdate="20221004T054823Z">
        <seg>result[0] = (int)img_out;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>result[1] = size;
}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054824Z" creationid="gitnacho" creationdate="20221004T054824Z">
        <seg>result[1] = size;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>results.instance.exports.exported_func();</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T061059Z" creationid="gitnacho" creationdate="20221005T061059Z">
        <seg>results.instance.exports.exported_func();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200815T082439Z" creationid="nacho" creationdate="20200815T082439Z">
        <seg>return</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return "";</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201216T184212Z" creationid="nacho" creationdate="20201216T184212Z">
        <seg>return "";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return "world";</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210918T203109Z" creationid="nacho" creationdate="20201216T184104Z">
        <seg>return "world";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return (</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210902T153152Z" creationid="gitnacho" creationdate="20210902T153152Z">
        <seg>return (</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return () =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200730T222631Z" creationid="nacho" creationdate="20200730T222631Z">
        <seg>return () =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return (...args) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T230920Z" creationid="nachec" creationdate="20220804T230920Z">
        <seg>return (...args) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return -1;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211002T035759Z" creationid="gitnacho" creationdate="20211002T035759Z">
        <seg>return -1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return 0;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T105525Z" creationid="gitnacho" creationdate="20221003T105525Z">
        <seg>return 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return 1;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200730T202643Z" creationid="nacho" creationdate="20200730T202643Z">
        <seg>return 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return 2;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200730T202605Z" creationid="nacho" creationdate="20200730T202605Z">
        <seg>return 2;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return Math.random() &gt; 0.5 ?</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210922T054828Z" creationid="gitnacho" creationdate="20210922T054828Z">
        <seg>return Math.random() &gt; 0.5 ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return Math.random();
};
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174247Z" creationid="gitnacho" creationdate="20221012T174247Z">
        <seg>return Math.random();
};
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return WebAssembly.instantiate(module, importObject);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043817Z" creationid="gitnacho" creationdate="20221004T043817Z">
        <seg>return WebAssembly.instantiate(module, importObject);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return WebAssembly.instantiateStreaming(fetch(url)).then((results) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043845Z" creationid="gitnacho" creationdate="20221004T043845Z">
        <seg>return WebAssembly.instantiateStreaming(fetch(url)).then((results) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return WebPGetEncoderVersion();
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053424Z" creationid="gitnacho" creationdate="20221004T053424Z">
        <seg>return WebPGetEncoderVersion();
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return [</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T230919Z" creationid="nachec" creationdate="20220804T230919Z">
        <seg>return [</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return a + b;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073537Z" creationid="gitnacho" creationdate="20221005T073537Z">
        <seg>return a + b;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return cache</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T201928Z" creationid="gitnacho" creationdate="20221003T201928Z">
        <seg>return cache</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return caches.delete(cacheName);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T201925Z" creationid="gitnacho" creationdate="20221003T201925Z">
        <seg>return caches.delete(cacheName);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return ctx.getImageData(0, 0, img.width, img.height);
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054145Z" creationid="gitnacho" creationdate="20221004T054145Z">
        <seg>return ctx.getImageData(0, 0, img.width, img.height);
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return fallbackResponse;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040548Z" creationid="gitnacho" creationdate="20220921T040548Z">
        <seg>return fallbackResponse;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return false;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20181129T033225Z" creationid="nacho" creationdate="20181129T033225Z">
        <seg>return false;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return fetch(event.request);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210639Z" creationid="gitnacho" creationdate="20220922T210639Z">
        <seg>return fetch(event.request);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return fetch(event.request.clone()).then((response) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T204529Z" creationid="gitnacho" creationdate="20221003T204529Z">
        <seg>return fetch(event.request.clone()).then((response) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return fetch(request);
};</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040049Z" creationid="gitnacho" creationdate="20220921T040049Z">
        <seg>return fetch(request);
};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return function () {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170408T060654Z" creationid="nacho" creationdate="20170408T060654Z">
        <seg>return function () {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return i;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211002T062743Z" creationid="gitnacho" creationdate="20211002T062743Z">
        <seg>return i;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return info;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T230912Z" creationid="nachec" creationdate="20220804T230912Z">
        <seg>return info;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return key;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220728T201140Z" creationid="gitnacho" creationdate="20220728T201140Z">
        <seg>return key;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return lookupInDatabase(db).then((module) =&gt; {
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043717Z" creationid="gitnacho" creationdate="20221004T043717Z">
        <seg>return lookupInDatabase(db).then((module) =&gt; {
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return malloc(width * height * 4 * sizeof(uint8_t));
}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054246Z" creationid="gitnacho" creationdate="20221004T054246Z">
        <seg>return malloc(width * height * 4 * sizeof(uint8_t));
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return new Promise((resolve, reject) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043400Z" creationid="gitnacho" creationdate="20221004T043400Z">
        <seg>return new Promise((resolve, reject) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return new Response("Network error happened", {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040654Z" creationid="gitnacho" creationdate="20220921T040654Z">
        <seg>return new Response("Ocurrió un error de red", {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return new WebAssembly.Module(bytes);
}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T231529Z" creationid="gitnacho" creationdate="20221019T231529Z">
        <seg>return new WebAssembly.Module(bytes);
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return null;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211002T045424Z" creationid="gitnacho" creationdate="20211002T045424Z">
        <seg>return null;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return num;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210918T212804Z" creationid="gitnacho" creationdate="20210918T212804Z">
        <seg>return num;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return obj.length;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210201T091038Z" creationid="nacho" creationdate="20210201T091038Z">
        <seg>return obj.length;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return obj;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201222T134554Z" creationid="nacho" creationdate="20201222T134554Z">
        <seg>return obj;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return openDatabase().then((db) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043713Z" creationid="gitnacho" creationdate="20221004T043713Z">
        <seg>return openDatabase().then((db) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return preloadResponse;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041438Z" creationid="gitnacho" creationdate="20220921T041438Z">
        <seg>return preloadResponse;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return res</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220803T073031Z" creationid="nachec" creationdate="20220803T073031Z">
        <seg>return res</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return response;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T202021Z" creationid="gitnacho" creationdate="20221003T202021Z">
        <seg>return response;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return responseFromCache;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040048Z" creationid="gitnacho" creationdate="20220921T040048Z">
        <seg>return responseFromCache;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return responseFromNetwork;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040544Z" creationid="gitnacho" creationdate="20220921T040544Z">
        <seg>return responseFromNetwork;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return responseFromNetwork;
};</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040144Z" creationid="gitnacho" creationdate="20220921T040144Z">
        <seg>return responseFromNetwork;
};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return result;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170430T104052Z" creationid="nacho" creationdate="20170430T104052Z">
        <seg>return result;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return result[0];
}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054827Z" creationid="gitnacho" creationdate="20221004T054827Z">
        <seg>return result[0];
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return result[1];
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054829Z" creationid="gitnacho" creationdate="20221004T054829Z">
        <seg>return result[1];
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return results.instance</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043905Z" creationid="gitnacho" creationdate="20221004T043905Z">
        <seg>return results.instance</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return results.instance;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043854Z" creationid="gitnacho" creationdate="20221004T043854Z">
        <seg>return results.instance;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return target;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211002T050821Z" creationid="gitnacho" creationdate="20211002T050821Z">
        <seg>return target;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return this.name;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210918T200923Z" creationid="nacho" creationdate="20201215T224713Z">
        <seg>return this.name;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return this.value;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210919T143000Z" creationid="nacho" creationdate="20180525T153026Z">
        <seg>return this.value;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return this;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180526T000302Z" creationid="nacho" creationdate="20180526T000302Z">
        <seg>return this;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return true;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170324T205155Z" creationid="nacho" creationdate="20170324T205155Z">
        <seg>return true;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return undefined;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211003T095717Z" creationid="gitnacho" creationdate="20211003T095717Z">
        <seg>devuelve undefined</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return value;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180812T185147Z" creationid="nacho" creationdate="20180812T185147Z">
        <seg>return value;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return x;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170812T210734Z" creationid="nacho" creationdate="20170812T210734Z">
        <seg>return x;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200503T172631Z" creationid="Pacho" creationdate="20200503T172631Z">
        <seg>return {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return {};</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201220T204725Z" creationid="nacho" creationdate="20201220T204725Z">
        <seg>return {};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>return;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170315T095456Z" creationid="nacho" creationdate="20170315T095456Z">
        <seg>return;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>role="button"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T013729Z" creationid="gitnacho" creationdate="20220901T013729Z">
        <seg>role="button"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>role="presentation"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220830T084932Z" creationid="gitnacho" creationdate="20220830T084932Z">
        <seg>role="presentation"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>sayHello() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210918T175623Z" creationid="nacho" creationdate="20201215T185222Z">
        <seg>sayHello() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>scope: "./",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213306Z" creationid="gitnacho" creationdate="20221003T213306Z">
        <seg>scope: "./",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>scope: "/",</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T024208Z" creationid="gitnacho" creationdate="20220921T024208Z">
        <seg>scope: "/",</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>second.onchange = () =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115857Z" creationid="gitnacho" creationdate="20221007T115857Z">
        <seg>second.onchange = () =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>self.addEventListener("activate", (event) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T041225Z" creationid="gitnacho" creationdate="20220921T041225Z">
        <seg>self.addEventListener("activate", (event) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>self.addEventListener("fetch", (event) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040051Z" creationid="gitnacho" creationdate="20220921T040051Z">
        <seg>self.addEventListener("fetch", (event) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>self.addEventListener("install", (event) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T034331Z" creationid="gitnacho" creationdate="20220921T034331Z">
        <seg>self.addEventListener("install", (event) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>self.postMessage(bufTransferredFromMain, [bufTransferredFromMain]);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T120350Z" creationid="gitnacho" creationdate="20221007T120350Z">
        <seg>self.postMessage(bufTransferredFromMain, [bufTransferredFromMain]);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>serviceWorker = registration.active;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213319Z" creationid="gitnacho" creationdate="20221003T213319Z">
        <seg>serviceWorker = registration.active;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>serviceWorker = registration.installing;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213312Z" creationid="gitnacho" creationdate="20221003T213312Z">
        <seg>serviceWorker = registration.installing;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>serviceWorker = registration.waiting;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213318Z" creationid="gitnacho" creationdate="20221003T213318Z">
        <seg>serviceWorker = registration.waiting;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>serviceWorker.addEventListener("statechange", (e) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213326Z" creationid="gitnacho" creationdate="20221003T213326Z">
        <seg>serviceWorker.addEventListener("statechange", (e) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>serviceWorker.addEventListener('statechange', (e) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223943Z" creationid="gitnacho" creationdate="20221003T223943Z">
        <seg>serviceWorker.addEventListener('statechange', (e) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>set foo(value) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211003T093105Z" creationid="gitnacho" creationdate="20211003T093105Z">
        <seg>set foo(value) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>set to `true`, it is a shared memory.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T215938Z" creationid="gitnacho" creationdate="20221019T215938Z">
        <seg>se establece en `true`, es una memoria compartida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>setTimeout(() =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T231723Z" creationid="nachec" creationdate="20220804T231723Z">
        <seg>setTimeout(() =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>setTimeout(function () {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210921T064812Z" creationid="gitnacho" creationdate="20210921T064812Z">
        <seg>setTimeout(function () {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>setup() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211005T055014Z" creationid="gitnacho" creationdate="20211005T055014Z">
        <seg>setup() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>shared via [postMessage()](/en-US/docs/Web/API/Worker/postMessage).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T102322Z" creationid="gitnacho" creationdate="20221006T102322Z">
        <seg>compartir a través de [postMessage()](/es/docs/Web/API/Worker/postMessage).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>shared via {{domxref("Worker.postMessage", "postMessage()")}} or [cached in IndexedDB](/en-US/docs/WebAssembly/Caching_modules).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T083840Z" creationid="gitnacho" creationdate="20221007T193724Z">
        <seg>compartir a través de {{DOMxRef("Worker.postMessage", "postMessage()")}} o [almacenar en caché en `IndexedDB`](/es/docs/WebAssembly/Caching_modules).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>shared: true,
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080731Z" creationid="gitnacho" creationdate="20221007T080731Z">
        <seg>shared: true,
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>size = WebPEncodeRGBA(img_in, width, height, width * 4, quality, &amp;img_out);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054823Z" creationid="gitnacho" creationdate="20221004T054823Z">
        <seg>size = WebPEncodeRGBA(img_in, width, height, width * 4, quality, &amp;img_out);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>size_t size;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054821Z" creationid="gitnacho" creationdate="20221004T054821Z">
        <seg>size_t size;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>slug: Learn/Getting_started_with_the_web/What_will_your_website_look_like
tags:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T055844Z" creationid="gitnacho" creationdate="20221019T055844Z">
        <seg>slug: Learn/Getting_started_with_the_web/What_will_your_website_look_like
tags:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>something, so much so that the table formatting starts to look bad in GFM</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185259Z" creationid="gitnacho" creationdate="20221008T185224Z">
        <seg>algo, tanto que el formato de la tabla empieza a verse mal en formato</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>specification.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210203T191919Z" creationid="nacho" creationdate="20210203T191919Z">
        <seg>de tipo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>start() {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210929T143017Z" creationid="gitnacho" creationdate="20210929T143017Z">
        <seg>start() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>static {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210918T200210Z" creationid="gitnacho" creationdate="20210918T200210Z">
        <seg>static {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>status: 408,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T040655Z" creationid="gitnacho" creationdate="20220921T040655Z">
        <seg>status: 408,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>step.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193136Z" creationid="gitnacho" creationdate="20221007T193136Z">
        <seg>paso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>storeInDatabase(db, results.module);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043846Z" creationid="gitnacho" creationdate="20221004T043846Z">
        <seg>storeInDatabase(db, results.module);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>string</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210916T211335Z" creationid="nacho" creationdate="20201211T191432Z">
        <seg>string</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>string,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210113T054445Z" creationid="nacho" creationdate="20210113T054445Z">
        <seg>string,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>strings:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T224304Z" creationid="nachec" creationdate="20220804T224304Z">
        <seg>strings:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>style.css</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220731T193441Z" creationid="nachec" creationdate="20220731T193441Z">
        <seg>style.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>summands[i] = i;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T000828Z" creationid="gitnacho" creationdate="20221008T000828Z">
        <seg>summands[i] = i;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>super();</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170326T195356Z" creationid="nacho" creationdate="20170326T195356Z">
        <seg>super();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>super(...args);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211001T200614Z" creationid="gitnacho" creationdate="20211001T200614Z">
        <seg>super(...args);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>super(name);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210908T111519Z" creationid="nacho" creationdate="20180528T195850Z">
        <seg>super(name);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>switch (action) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T195215Z" creationid="gitnacho" creationdate="20211102T195215Z">
        <seg>switch (action) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>switch (direction) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211002T035757Z" creationid="gitnacho" creationdate="20211002T035757Z">
        <seg>switch (direction) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>switch (type) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220827T102145Z" creationid="gitnacho" creationdate="20220827T102145Z">
        <seg>switch (type) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>swr.installing = null;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T225046Z" creationid="gitnacho" creationdate="20221003T225046Z">
        <seg>swr.installing = null;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>swr.installing.onstatechange = () =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T225028Z" creationid="gitnacho" creationdate="20221003T225028Z">
        <seg>swr.installing.onstatechange = () =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>swr.installing.state = "installing";</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T225028Z" creationid="gitnacho" creationdate="20221003T225028Z">
        <seg>swr.installing.state = "installing";</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tab.onclick = () =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T211530Z" creationid="nachec" creationdate="20220804T211530Z">
        <seg>tab.onclick = () =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>table: new WebAssembly.Table({ initial: 1, element: "anyfunc" }),</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T074329Z" creationid="gitnacho" creationdate="20221007T074329Z">
        <seg>table: new WebAssembly.Table({ initial: 1, element: "anyfunc" }),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tagExportedFromWasm = obj.instance.exports.exptag;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T143301Z" creationid="gitnacho" creationdate="20221019T143301Z">
        <seg>tagExportedFromWasm = obj.instance.exports.exptag;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tbl.set(0, f1);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072549Z" creationid="gitnacho" creationdate="20221007T072549Z">
        <seg>tbl.set(0, f1);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>tbl.set(1, f2);
};
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T072551Z" creationid="gitnacho" creationdate="20221007T072551Z">
        <seg>tbl.set(1, f2);
};
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>template_name = 'books/my_arbitrary_template_name_list.html'
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174241Z" creationid="gitnacho" creationdate="20221012T174241Z">
        <seg>template_name = 'books/my_arbitrary_template_name_list.html'
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>the [Exported WebAssembly functions](/en-US/docs/WebAssembly/Exported_functions).</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T102431Z" creationid="gitnacho" creationdate="20221006T102431Z">
        <seg>las [Funciones WebAssembly exportadas](/es/docs/WebAssembly/Exported_functions).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>the memory's [`buffer`](/en-US/docs/WebAssembly/JavaScript_interface/Memory/buffer) property will now return a `SharedArrayBuffer`, instead of the usual `ArrayBuffer`:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T080838Z" creationid="gitnacho" creationdate="20221007T080838Z">
        <seg>la propiedad [`buffer`](/es/docs/WebAssembly/JavaScript_interface/Memory/buffer) de `Memory` ahora devolverá un `SharedArrayBuffer`, en lugar del habitual `ArrayBuffer`:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>the promise rejects with a {{jsxref("TypeError")}}.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T180539Z" creationid="gitnacho" creationdate="20221007T180539Z">
        <seg>la promesa se rechaza con {{jsxref("TypeError")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>then(onFulfill, onReject) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080204Z" creationid="gitnacho" creationdate="20221002T080204Z">
        <seg>then(onFulfill, onReject) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>then(onFulfilled) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080424Z" creationid="gitnacho" creationdate="20221002T080424Z">
        <seg>then(onFulfilled) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>then(onFulfilled, onRejected) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080653Z" creationid="gitnacho" creationdate="20221002T080653Z">
        <seg>then(onFulfilled, onRejected) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>this reservation request.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T215414Z" creationid="gitnacho" creationdate="20221019T215414Z">
        <seg>esta solicitud de reserva.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>this._name = name;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211101T170409Z" creationid="gitnacho" creationdate="20211101T170409Z">
        <seg>this._name = name;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>this.height = height;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211005T055515Z" creationid="gitnacho" creationdate="20211005T055515Z">
        <seg>this.height = height;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>this.name = name;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210908T112921Z" creationid="nacho" creationdate="20200813T133919Z">
        <seg>this.name = name;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>this.value = value;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210930T080330Z" creationid="gitnacho" creationdate="20210930T080330Z">
        <seg>this.value = value;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>this.width = width;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211005T055514Z" creationid="gitnacho" creationdate="20211005T055514Z">
        <seg>this.width = width;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>this.x = x;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201213T190439Z" creationid="nacho" creationdate="20201213T190439Z">
        <seg>this.x = x;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>this.y = y;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201213T190442Z" creationid="nacho" creationdate="20201213T190442Z">
        <seg>this.y = y;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>throw $tagname</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T023346Z" creationid="gitnacho" creationdate="20221008T023346Z">
        <seg>throw $tagname</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>throw error;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T205115Z" creationid="gitnacho" creationdate="20221003T205115Z">
        <seg>throw error;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>throw new TypeError('Throwing');</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080428Z" creationid="gitnacho" creationdate="20221002T080428Z">
        <seg>throw new TypeError('Throwing');</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>throw new WebAssembly.CompileError("Hello", "someFile", 10);
} catch (e) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T120606Z" creationid="gitnacho" creationdate="20221020T120606Z">
        <seg>throw new WebAssembly.CompileError("Hello", "someFile", 10);
} catch (e) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>throw new WebAssembly.CompileError('Hello', 'someFile', 10);
} catch (e) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T070801Z" creationid="gitnacho" creationdate="20221008T064723Z">
        <seg>throw new WebAssembly.CompileError('Hola', 'algunArchivo', 10);
} catch (e) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>throw new WebAssembly.Exception(tag, [param], { traceStack: true });
}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204247Z" creationid="gitnacho" creationdate="20221019T204247Z">
        <seg>throw new WebAssembly.Exception(tag, [param], { traceStack: true });
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>throw new WebAssembly.LinkError("Hello", "someFile", 10);
} catch (e) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T120801Z" creationid="gitnacho" creationdate="20221019T120801Z">
        <seg>throw new WebAssembly.LinkError("Hello", "someFile", 10);
} catch (e) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>throw new WebAssembly.RuntimeError("Hello", "someFile", 10);
} catch (e) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T121504Z" creationid="gitnacho" creationdate="20221019T121504Z">
        <seg>throw new WebAssembly.RuntimeError("Hello", "someFile", 10);
} catch (e) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>throwExnWithStack: throwExceptionWithStack,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T204345Z" creationid="gitnacho" creationdate="20221019T204345Z">
        <seg>throwExnWithStack: throwExceptionWithStack,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>thrown.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000454Z" creationid="gitnacho" creationdate="20221020T000454Z">
        <seg>thrown.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>to</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200810T075951Z" creationid="nacho" creationdate="20200810T075951Z">
        <seg>a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>to [`Table.prototype.length`](/en-US/docs/WebAssembly/JavaScript_interface/Table/length), a</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T234126Z" creationid="gitnacho" creationdate="20221019T234050Z">
        <seg>a [`Table.prototype.length`](/es/docs/WebAssembly/JavaScript_interface/Table/length),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>to the engine to reserve memory up front.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T215229Z" creationid="gitnacho" creationdate="20221019T215229Z">
        <seg>para que el motor reserve memoria por adelantado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>transaction.onerror = (event) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T212636Z" creationid="gitnacho" creationdate="20220922T212636Z">
        <seg>transaction.onerror = (event) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>true</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20201211T213432Z" creationid="nacho" creationdate="20201211T213432Z">
        <seg>true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>true
// value: 33
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T074028Z" creationid="gitnacho" creationdate="20221002T074028Z">
        <seg>true
// value: 33
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>true,</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210204T002036Z" creationid="nacho" creationdate="20210204T002036Z">
        <seg>true,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>try {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200531T005217Z" creationid="Pacho" creationdate="20200531T005217Z">
        <seg>try {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>type="button"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T013825Z" creationid="gitnacho" creationdate="20220901T013825Z">
        <seg>type="button"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>type="search"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T013815Z" creationid="gitnacho" creationdate="20220901T013815Z">
        <seg>type="search"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>types.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211102T032356Z" creationid="gitnacho" creationdate="20211102T032356Z">
        <seg>tipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>types:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211006T032056Z" creationid="gitnacho" creationdate="20211006T032056Z">
        <seg>types:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>uint8_t* img_out;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T054821Z" creationid="gitnacho" creationdate="20221004T054821Z">
        <seg>uint8_t* img_out;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>undefined</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210824T044929Z" creationid="gitnacho" creationdate="20210824T044929Z">
        <seg>undefined</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>unreachable</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T075615Z" creationid="gitnacho" creationdate="20221020T075615Z">
        <seg>unreachable</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>url:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210902T115714Z" creationid="gitnacho" creationdate="20210902T115714Z">
        <seg>url:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>useEffect(() =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T231743Z" creationid="nachec" creationdate="20220804T231743Z">
        <seg>useEffect(() =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>values:</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210918T232711Z" creationid="nacho" creationdate="20201228T135028Z">
        <seg>values:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>var a = 1;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200813T054820Z" creationid="nacho" creationdate="20200813T054820Z">
        <seg>var a = 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>var x = 1;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211003T055855Z" creationid="gitnacho" creationdate="20211003T055855Z">
        <seg>var x = 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>var x;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20210212T200055Z" creationid="nacho" creationdate="20210212T200055Z">
        <seg>var x;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>var y = 2;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211003T055856Z" creationid="gitnacho" creationdate="20211003T055856Z">
        <seg>var y = 2;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>version: Module.cwrap("version", "number", []),</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053747Z" creationid="gitnacho" creationdate="20221004T053747Z">
        <seg>version: Module.cwrap("version", "number", []),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>wat2wasm simple.wat -o simple.wasm</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T182901Z" creationid="gitnacho" creationdate="20221007T182901Z">
        <seg>wat2wasm simple.wat -o simple.wasm</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>webp.c \</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053630Z" creationid="gitnacho" creationdate="20221004T053630Z">
        <seg>webp.c \</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>websites.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220915T131738Z" creationid="gitnacho" creationdate="20220915T131738Z">
        <seg>sitios web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>while (</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211003T110936Z" creationid="gitnacho" creationdate="20211003T110936Z">
        <seg>while (</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>while (true) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180528T144900Z" creationid="nacho" creationdate="20180528T144900Z">
        <seg>while (true) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>window.addEventListener(</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T211530Z" creationid="nachec" creationdate="20220804T211530Z">
        <seg>window.addEventListener(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>with</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220804T233759Z" creationid="nachec" creationdate="20220804T233759Z">
        <seg>con</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>worker.postMessage(mod)
);
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T115736Z" creationid="gitnacho" creationdate="20221019T115736Z">
        <seg>worker.postMessage(mod)
);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>x = 0;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200801T005127Z" creationid="nacho" creationdate="20200801T005127Z">
        <seg>x = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>xhr.open("GET", url);
xhr.onreadystatechange = someHandler;
xhr.send();
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T221252Z" creationid="gitnacho" creationdate="20221011T221252Z">
        <seg>xhr.open("GET", url);
xhr.onreadystatechange = someHandler;
xhr.send();
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>xmlns="http://www.w3.org/2000/svg"</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T144641Z" creationid="gitnacho" creationdate="20220828T075534Z">
        <seg>xmlns="https://www.w3.org/2000/svg"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>xmlns="http://www.w3.org/2000/svg"&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221017T144641Z" creationid="gitnacho" creationdate="20221005T173716Z">
        <seg>xmlns="https://www.w3.org/2000/svg"&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>y = 0;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200801T005140Z" creationid="nacho" creationdate="20200801T005140Z">
        <seg>y = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>yield 1;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20200818T012658Z" creationid="nacho" creationdate="20200818T012658Z">
        <seg>yield 1;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>yield 4;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211001T193423Z" creationid="gitnacho" creationdate="20211001T193423Z">
        <seg>yield 4;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>you'll get the result `function` returned.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T085912Z" creationid="gitnacho" creationdate="20221006T085912Z">
        <seg>obtendrás el resultado `function` devuelto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{</seg>
      </tuv>
      <tuv lang="es-MX" changeid="NaPa" changedate="20120627T113010Z">
        <seg>{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220830T083949Z" creationid="gitnacho" creationdate="20220830T083949Z">
        <seg>{{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{ APIRef("Web Animations") }}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T092539Z" creationid="gitnacho" creationdate="20221006T092539Z">
        <seg>{{ APIRef("Web Animations") }}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{APIListAlpha}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T040228Z" creationid="gitnacho" creationdate="20221002T040228Z">
        <seg>{{APIListAlpha}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{APIRef("DOM")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T200841Z" creationid="gitnacho" creationdate="20221011T200841Z">
        <seg>{{APIRef("DOM")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{APIRef("Service Workers API")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T224618Z" creationid="gitnacho" creationdate="20220921T224618Z">
        <seg>{{APIRef("Service Workers API")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{APIRef("Web Workers API")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T115216Z" creationid="gitnacho" creationdate="20221007T115216Z">
        <seg>{{APIRef("Web Workers API")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{AvailableInWorkers}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T201715Z" creationid="gitnacho" creationdate="20221003T201715Z">
        <seg>{{AvailableInWorkers}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{AvailableInWorkers}}
{{AvailableInWorkers("notservice")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T115852Z" creationid="gitnacho" creationdate="20221005T115852Z">
        <seg>{{AvailableInWorkers}}
{{AvailableInWorkers("notservice")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{CanvasSidebar}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T061942Z" creationid="gitnacho" creationdate="20221002T061942Z">
        <seg>{{CanvasSidebar}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{Compat}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T225436Z" creationid="gitnacho" creationdate="20220921T225436Z">
        <seg>{{Compat}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{EmbedGHLiveSample("learning-area/css/styling-boxes/backgrounds/", '100%', 100)}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T212338Z" creationid="gitnacho" creationdate="20221005T212338Z">
        <seg>{{EmbedGHLiveSample("learning-area/css/styling-boxes/backgrounds/", '100%', 100)}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{EmbedInteractiveExample("pages/js/array-push.html")}}Try adjusting the code to see what happens, and playing with the controls.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T210319Z" creationid="gitnacho" creationdate="20221005T210319Z">
        <seg>{{EmbedInteractiveExample("pages/js/array-push.html")}} Intenta ajustar el código para ver qué sucede y juega con los controles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{EmbedInteractiveExample("pages/js/promise-resolve.html")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073333Z" creationid="gitnacho" creationdate="20221002T073333Z">
        <seg>{{EmbedInteractiveExample("pages/js/promise-resolve.html")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{EmbedInteractiveExample("pages/wat/block.html", "tabbed-taller")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T075304Z" creationid="gitnacho" creationdate="20221020T075304Z">
        <seg>{{EmbedInteractiveExample("pages/wat/block.html", "tabbed-taller")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{EmbedInteractiveExample("pages/wat/br.html", "tabbed-taller")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T081604Z" creationid="gitnacho" creationdate="20221020T081604Z">
        <seg>{{EmbedInteractiveExample("pages/wat/br.html", "tabbed-taller")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{EmbedInteractiveExample("pages/wat/call.html", "tabbed-standard")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T082832Z" creationid="gitnacho" creationdate="20221020T082832Z">
        <seg>{{EmbedInteractiveExample("pages/wat/call.html", "tabbed-standard")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{EmbedInteractiveExample("pages/wat/drop.html", "tabbed-taller")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T083117Z" creationid="gitnacho" creationdate="20221020T083117Z">
        <seg>{{EmbedInteractiveExample("pages/wat/drop.html", "tabbed-taller")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{EmbedInteractiveExample("pages/wat/end.html", "tabbed-taller")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T083645Z" creationid="gitnacho" creationdate="20221020T083645Z">
        <seg>{{EmbedInteractiveExample("pages/wat/end.html", "tabbed-taller")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{EmbedInteractiveExample("pages/wat/if...else.html", "tabbed-taller")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T084108Z" creationid="gitnacho" creationdate="20221020T084108Z">
        <seg>{{EmbedInteractiveExample("pages/wat/if...else.html", "tabbed-taller")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{EmbedInteractiveExample("pages/wat/loop.html", "tabbed-taller")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T084939Z" creationid="gitnacho" creationdate="20221020T084939Z">
        <seg>{{EmbedInteractiveExample("pages/wat/loop.html", "tabbed-taller")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{EmbedInteractiveExample("pages/wat/mul.html", "tabbed-taller")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T091827Z" creationid="gitnacho" creationdate="20221007T091827Z">
        <seg>{{EmbedInteractiveExample("pages/wat/mul.html", "tabbed-taller")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{EmbedInteractiveExample("pages/wat/nop.html", "tabbed-shorter")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T090144Z" creationid="gitnacho" creationdate="20221020T090144Z">
        <seg>{{EmbedInteractiveExample("pages/wat/nop.html", "tabbed-shorter")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{EmbedLiveSample("Example", "85ch", "240px")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T173821Z" creationid="gitnacho" creationdate="20221005T173821Z">
        <seg>{{EmbedLiveSample("Example", "85ch", "240px")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{FirefoxSidebar}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T205723Z" creationid="gitnacho" creationdate="20221006T205723Z">
        <seg>{{FirefoxSidebar}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{GamesSidebar}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T013756Z" creationid="gitnacho" creationdate="20220921T013756Z">
        <seg>{{GamesSidebar}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{HTMLRef}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T120241Z" creationid="gitnacho" creationdate="20221003T120241Z">
        <seg>{{HTMLRef}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{HTTPSidebar}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221011T212716Z" creationid="gitnacho" creationdate="20221011T212716Z">
        <seg>{{HTTPSidebar}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{HTTPSidebar}}{{Non-standard_header}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T074101Z" creationid="gitnacho" creationdate="20221012T074101Z">
        <seg>{{HTTPSidebar}}{{Non-standard_header}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{InheritanceDiagram}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T212316Z" creationid="gitnacho" creationdate="20221003T212316Z">
        <seg>{{InheritanceDiagram}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{JSRef}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T231507Z" creationid="gitnacho" creationdate="20220922T231507Z">
        <seg>{{JSRef}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{LandingPageListSubPages()}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T093948Z" creationid="gitnacho" creationdate="20221005T093948Z">
        <seg>{{LandingPageListSubPages()}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{LandingPageListSubpages}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T063303Z" creationid="gitnacho" creationdate="20221005T063303Z">
        <seg>{{LandingPageListSubpages}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{LearnSidebar}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220925T035539Z" creationid="gitnacho" creationdate="20220925T035539Z">
        <seg>{{LearnSidebar}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{LearnSidebar}}{{NextMenu("Learn/Getting_started_with_the_web/What_will_your_website_look_like", "Learn/Getting_started_with_the_web")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T115310Z" creationid="gitnacho" creationdate="20221012T115310Z">
        <seg>{{LearnSidebar}}{{NextMenu("Learn/Getting_started_with_the_web/What_will_your_website_look_like", "Learn/Getting_started_with_the_web")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{LearnSidebar}}{{PreviousMenuNext("Learn/Getting_started_with_the_web/Installing_basic_software", "Learn/Getting_started_with_the_web/Dealing_with_files", "Learn/Getting_started_with_the_web")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T060859Z" creationid="gitnacho" creationdate="20221019T060859Z">
        <seg>{{LearnSidebar}}{{PreviousMenuNext("Learn/Getting_started_with_the_web/Installing_basic_software", "Learn/Getting_started_with_the_web/Dealing_with_files", "Learn/Getting_started_with_the_web")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{ListGroups}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T040216Z" creationid="gitnacho" creationdate="20221002T040216Z">
        <seg>{{ListGroups}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{ListSubpages("", 1, 0, 1)}}
&lt;/section&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T092734Z" creationid="gitnacho" creationdate="20221002T092734Z">
        <seg>{{ListSubpages("", 1, 0, 1)}}
&lt;/section&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{MDNSidebar}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T063216Z" creationid="gitnacho" creationdate="20221005T063216Z">
        <seg>{{MDNSidebar}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{NextMenu("Learn/Getting_started_with_the_web/What_will_your_website_look_like", "Learn/Getting_started_with_the_web")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T165320Z" creationid="gitnacho" creationdate="20221012T165320Z">
        <seg>{{NextMenu("Learn/Getting_started_with_the_web/What_will_your_website_look_like", "Learn/Getting_started_with_the_web")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{Non-standard_Header}}
{{Deprecated_Header}}
[![Iceberg pic](iceberg.jpg)](iceberg.jpg)</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T174044Z" creationid="gitnacho" creationdate="20221012T174044Z">
        <seg>{{Non-standard_Header}}
{{Deprecated_Header}}
[![Iceberg pic](iceberg.jpg)](iceberg.jpg)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{PreviousMenuNext("Learn/Getting_started_with_the_web/Installing_basic_software", "Learn/Getting_started_with_the_web/Dealing_with_files", "Learn/Getting_started_with_the_web")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T063623Z" creationid="gitnacho" creationdate="20221019T063623Z">
        <seg>{{PreviousMenuNext("Learn/Getting_started_with_the_web/Installing_basic_software", "Learn/Getting_started_with_the_web/Dealing_with_files", "Learn/Getting_started_with_the_web")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{QuickLinksWithSubpages("/en-US/docs/Web/Security")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T205420Z" creationid="gitnacho" creationdate="20221018T205420Z">
        <seg>{{QuickLinksWithSubpages("/es/docs/Web/Security")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{SVGRef}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T121914Z" creationid="gitnacho" creationdate="20221005T121914Z">
        <seg>{{SVGRef}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{ServiceWorkerSidebar}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T014616Z" creationid="gitnacho" creationdate="20220921T014616Z">
        <seg>{{ServiceWorkerSidebar}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{Specifications}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T225416Z" creationid="gitnacho" creationdate="20220921T225416Z">
        <seg>{{Specifications}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{WebAssemblySidebar}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T003701Z" creationid="gitnacho" creationdate="20221003T003701Z">
        <seg>{{WebAssemblySidebar}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{WebAssemblySidebar}} {{non-standard_header}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T203327Z" creationid="gitnacho" creationdate="20221019T203327Z">
        <seg>{{WebAssemblySidebar}} {{non-standard_header}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{jsxref("ArrayBuffer")}} containing the binary code of the .wasm module you want to</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193458Z" creationid="gitnacho" creationdate="20221007T193458Z">
        <seg>{{jsxref("ArrayBuffer")}} que contiene el código binario del módulo `.wasm` que deseas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{jsxref("ArrayBuffer")}}, and performs both compilation and instantiation in one</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T193131Z" creationid="gitnacho" creationdate="20221007T193131Z">
        <seg>{{jsxref("ArrayBuffer")}}, y realiza tanto la compilación como la instanciación en un</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{jsxref("RangeError")}} is thrown.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T234110Z" creationid="gitnacho" creationdate="20221019T234110Z">
        <seg>lanza un {{JSxRef("RangeError")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{jsxref("TypeError")}} is thrown.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T104235Z" creationid="gitnacho" creationdate="20221006T104235Z">
        <seg>lanza un {{jsxref("TypeError")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{learnsidebar}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221018T223204Z" creationid="gitnacho" creationdate="20221018T223204Z">
        <seg>{{learnsidebar}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{securecontext_header}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T201720Z" creationid="gitnacho" creationdate="20221003T201720Z">
        <seg>{{securecontext_header}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{securecontext_header}}{{APIRef("Service Workers API")}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T211941Z" creationid="gitnacho" creationdate="20221003T211941Z">
        <seg>{{securecontext_header}}{{APIRef("Service Workers API")}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{{svginfo}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T122012Z" creationid="gitnacho" creationdate="20221005T122012Z">
        <seg>{{svginfo}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200607T224514Z" creationid="Pacho" creationdate="20200607T224514Z">
        <seg>{}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{},</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210830T062037Z" creationid="gitnacho" creationdate="20210830T062037Z">
        <seg>{},</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>{};</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220805T130802Z" creationid="nachec" creationdate="20220805T130802Z">
        <seg>{};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>|</seg>
      </tuv>
      <tuv lang="es-MX" changeid="NaPa" changedate="20120424T070357Z">
        <seg>|</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>| ------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------ | ------------------ |</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185527Z" creationid="gitnacho" creationdate="20221008T185527Z">
        <seg>| ------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------ | ------------------ |</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>| A heading 1        | A heading 2                                                                                                                                         | A heading 3        | A heading 4                                                                                                                                                              | A heading 5        | A heading 6        |</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185524Z" creationid="gitnacho" creationdate="20221008T185524Z">
        <seg>| Un encabezado 1        | Un encabezado 2        | Un encabezado 3        | Un encabezado 4        | Un encabezado 5        | Un encabezado 6        |</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>| Instruction     | Binary opcode |
| --------------- | ------------- |
| `call`          | `0x10`        |
| `call_indirect` | `0x11`        |</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T082901Z" creationid="gitnacho" creationdate="20221020T082901Z">
        <seg>| Instrucción     | Código binario de operación |
| --------------- | ------------- |
| `call`          | `0x10`        |
| `call_indirect` | `0x11`        |</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>| Instruction | Binary opcode |
| ----------- | ------------- |
| `block`     | `0x02`        |</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T081131Z" creationid="gitnacho" creationdate="20221020T075652Z">
        <seg>| Instrucción | Código binario de operación |
| ----------- | ------------- |
| `block`     | `0x02`        |</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>| Instruction | Binary opcode |
| ----------- | ------------- |
| `br`        | `0x0c`        |
| `br_if`     | `0x0d`        |
| `br_table`  | `0x0e`        |</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T081813Z" creationid="gitnacho" creationdate="20221020T081813Z">
        <seg>| Instrucción | Código binario de operación |
| ----------- | ------------- |
| `br`        | `0x0c`        |
| `br_if`     | `0x0d`        |
| `br_table`  | `0x0e`        |</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>| Instruction | Binary opcode |
| ----------- | ------------- |
| `drop`      | `0x1a`        |</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T083255Z" creationid="gitnacho" creationdate="20221020T083255Z">
        <seg>| Instrucción | Código binario de operación |
| ----------- | ------------- |
| `drop`      | `0x1a`        |</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>| Instruction | Binary opcode |
| ----------- | ------------- |
| `end`       | `0x0b`        |</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T083719Z" creationid="gitnacho" creationdate="20221020T083719Z">
        <seg>| Instrucción | Código binario de operación |
| ----------- | ------------- |
| `end`       | `0x0b`        |</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>| Instruction | Binary opcode |
| ----------- | ------------- |
| `i32.mul`   | `0x6c`        |
| `i64.mul`   | `0x7e`        |
| `f32.mul`   | `0x94`        |
| `f64.mul`   | `0xa2`        |</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221007T091757Z" creationid="gitnacho" creationdate="20221007T091757Z">
        <seg>| Instrucción | Código de Op. Binario |
| ----------- | ------------- |
| `i32.mul`   | `0x6c`        |
| `i64.mul`   | `0x7e`        |
| `f32.mul`   | `0x94`        |
| `f64.mul`   | `0xa2`        |</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>| Instruction | Binary opcode |
| ----------- | ------------- |
| `if`        | `0x04`        |
| `else`      | `0x05`        |</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T084135Z" creationid="gitnacho" creationdate="20221020T084135Z">
        <seg>| Instrucción | Código binario de operación |
| ----------- | ------------- |
| `if`        | `0x04`        |
| `else`      | `0x05`        |</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>| Instruction | Binary opcode |
| ----------- | ------------- |
| `loop`      | `0x03`        |</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085101Z" creationid="gitnacho" creationdate="20221020T085101Z">
        <seg>| Instrucción | Código binario de operación |
| ----------- | ------------- |
| `loop`      | `0x03`        |</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>| Instruction | Binary opcode |
| ----------- | ------------- |
| `nop`       | `0x01`        |</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T090240Z" creationid="gitnacho" creationdate="20221020T090240Z">
        <seg>| Instrucción | Código binario de operación |
| ----------- | ------------- |
| `nop`       | `0x01`        |</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>| Something shortish | Another cell with lots of text in it, that also really goes into a lot of detail about something, so much so that the table formatting starts to look bad in GFM format.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185619Z" creationid="gitnacho" creationdate="20221008T185619Z">
        <seg>| Algo corto | Otra celda con mucho texto, que también entra en muchos detalles sobre algo, tanto que el formato de la tabla comienza a verse mal en formato GFM.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>| Something shortish | Something much longer that really goes into a lot of detail about something, so much so that the table formatting starts to look bad in GFM format.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185553Z" creationid="gitnacho" creationdate="20221008T185553Z">
        <seg>| Algo corto | Algo mucho más largo que realmente entra en muchos detalles sobre algo, tanto que el formato de la tabla comienza a verse mal en formato GFM.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>| Something shortish | Something shortish |
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221008T185626Z" creationid="gitnacho" creationdate="20221008T185626Z">
        <seg>| Algo corto | Algo corto |
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>| boolean</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210929T141900Z" creationid="gitnacho" creationdate="20210929T141900Z">
        <seg>| boolean</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>| null</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210929T141901Z" creationid="gitnacho" creationdate="20210929T141901Z">
        <seg>| null</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>| number</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210929T141859Z" creationid="gitnacho" creationdate="20210929T141859Z">
        <seg>| number</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>| string</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210929T141858Z" creationid="gitnacho" creationdate="20210929T141858Z">
        <seg>| string</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="pacho" changedate="20190731T172441Z">
        <seg>}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>}
);
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T055531Z" creationid="gitnacho" creationdate="20221005T055531Z">
        <seg>}
);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>}
&lt;/script&gt;</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T134337Z" creationid="gitnacho" creationdate="20221003T134337Z">
        <seg>}
&lt;/script&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213423Z" creationid="gitnacho" creationdate="20221003T213423Z">
        <seg>}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>}
}
%&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T073538Z" creationid="gitnacho" creationdate="20221005T073538Z">
        <seg>}
}
%&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>}
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T061825Z" creationid="gitnacho" creationdate="20221004T061825Z">
        <seg>}
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>}
})
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T225200Z" creationid="gitnacho" creationdate="20221003T225200Z">
        <seg>}
})
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>}
});
%&gt;
&lt;%= s_title %&gt; / &lt;%= body['hello'] %&gt; / &lt;%= body['goodbye'] %&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T083151Z" creationid="gitnacho" creationdate="20221005T083151Z">
        <seg>}
});
%&gt;
&lt;%= s_title %&gt; / &lt;%= body['hello'] %&gt; / &lt;%= body['goodbye'] %&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>}
});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T071935Z" creationid="gitnacho" creationdate="20221005T071935Z">
        <seg>}
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>}
};</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T024233Z" creationid="gitnacho" creationdate="20220921T024233Z">
        <seg>}
};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>} catch (e) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200512T175809Z" creationid="Pacho" creationdate="20200512T175809Z">
        <seg>} catch (e) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>} catch (err) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211003T140450Z" creationid="gitnacho" creationdate="20211003T140450Z">
        <seg>} catch (err) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>} catch (error) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210827T150212Z" creationid="gitnacho" creationdate="20210827T150212Z">
        <seg>} catch (error) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>} catch {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20211001T000604Z" creationid="gitnacho" creationdate="20211001T000604Z">
        <seg>} catch {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>} else if ("orientation" in window) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220805T134405Z" creationid="nachec" creationdate="20220805T134405Z">
        <seg>} else if ("orientation" in window) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>} else if (registration.active) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T024213Z" creationid="gitnacho" creationdate="20220921T024213Z">
        <seg>} else if (registration.active) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>} else if (registration.waiting) {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220921T024211Z" creationid="gitnacho" creationdate="20220921T024211Z">
        <seg>} else if (registration.waiting) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>} else {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200509T040903Z" creationid="Pacho" creationdate="20200509T040903Z">
        <seg>} else {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>})</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170314T104117Z" creationid="nacho" creationdate="20170314T104117Z">
        <seg>})</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>})()</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210205Z" creationid="gitnacho" creationdate="20220922T210205Z">
        <seg>})()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>})();</seg>
      </tuv>
      <tuv lang="es-MX" changeid="Pacho" changedate="20200510T193019Z" creationid="Pacho" creationdate="20200510T193019Z">
        <seg>})();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>})(i);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20210921T065109Z" creationid="gitnacho" creationdate="20210921T065109Z">
        <seg>})(i);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>}))</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220803T170550Z" creationid="nachec" creationdate="20220803T170550Z">
        <seg>}))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>}),</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nachec" changedate="20220805T130804Z" creationid="nachec" creationdate="20220805T130804Z">
        <seg>}),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>}).then((results) =&gt; {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221006T225719Z" creationid="gitnacho" creationdate="20221006T225719Z">
        <seg>}).then((results) =&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>});</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170314T200002Z" creationid="nacho" creationdate="20170314T200002Z">
        <seg>});</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>});
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220922T210955Z" creationid="gitnacho" creationdate="20220922T210955Z">
        <seg>});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>});
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T223947Z" creationid="gitnacho" creationdate="20221003T223947Z">
        <seg>});
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>});
} else {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221003T213348Z" creationid="gitnacho" creationdate="20221003T213348Z">
        <seg>});
} else {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>});
};
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221005T061100Z" creationid="gitnacho" creationdate="20221005T061100Z">
        <seg>});
};
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>},</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170321T141101Z" creationid="nacho" creationdate="20170321T141101Z">
        <seg>},</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>},
);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080323Z" creationid="gitnacho" creationdate="20221002T080323Z">
        <seg>},
);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>},
);
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T073815Z" creationid="gitnacho" creationdate="20221002T073815Z">
        <seg>},
);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>},
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043823Z" creationid="gitnacho" creationdate="20221004T043823Z">
        <seg>},
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>},
});
console.log(p1 instanceof Promise) // true, object casted to a Promise</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080251Z" creationid="gitnacho" creationdate="20221002T080251Z">
        <seg>},
});
console.log(p1 instanceof Promise) // true, objeto convertido a Promise</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>},
};</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T080431Z" creationid="gitnacho" creationdate="20221002T080431Z">
        <seg>},
};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>}, 300);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T013023Z" creationid="gitnacho" creationdate="20220901T013023Z">
        <seg>}, 300);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>}, true);</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220901T012421Z" creationid="gitnacho" creationdate="20220901T012421Z">
        <seg>}, true);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>}, {</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220910T210155Z" creationid="gitnacho" creationdate="20220910T210155Z">
        <seg>}, {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>};</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20170324T205601Z" creationid="nacho" creationdate="20170324T205601Z">
        <seg>};</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>};
&lt;/script&gt;
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T053750Z" creationid="gitnacho" creationdate="20221004T053750Z">
        <seg>};
&lt;/script&gt;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>};
}
```</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221004T043711Z" creationid="gitnacho" creationdate="20221004T043711Z">
        <seg>};
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>}}</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20220910T210002Z" creationid="gitnacho" creationdate="20220910T210002Z">
        <seg>}}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>…would allow the `X-My-Custom-Header` and `X-Another-Custom-Header` headers to be exposed to the browser.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221012T054020Z" creationid="gitnacho" creationdate="20221012T054020Z">
        <seg>… permitiría que los encabezados `X-My-Custom-Header` y `X-Another-Custom-Header` estén expuestos al navegador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="en-US">
        <seg>├── index.js</seg>
      </tuv>
      <tuv lang="es-MX" changeid="nacho" changedate="20180328T055612Z" creationid="nacho" creationdate="20180328T055612Z">
        <seg>├── index.js</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
    <tu>
      <prop type="file">glossary/https/index.md</prop>
      <prop type="prev">- Infrastructure</prop>
      <prop type="next">**HTTPS** (**_HyperText Transfer Protocol Secure_**) is an encrypted version of the {{Glossary("HTTP")}} protocol.</prop>
      <tuv lang="en-US">
        <seg>- Security
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221019T071335Z">
        <seg>- Security
  - Seguridad
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">glossary/origin/index.md</prop>
      <prop type="prev">- WebMechanics</prop>
      <prop type="next">Web content's **origin** is defined by the _scheme_ (protocol), _hostname_ (domain), and _port_ of the {{Glossary("URL")}} used to access it.</prop>
      <tuv lang="en-US">
        <seg>- origin
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221019T072230Z">
        <seg>- origin
  - origen
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">learn/front-end_web_developer/index.md</prop>
      <prop type="prev">- Tools</prop>
      <prop type="next">{{learnsidebar}}</prop>
      <tuv lang="en-US">
        <seg>- Web Standards
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T070815Z">
        <seg>- Web Standards
  - Estándares Web
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">learn/getting_started_with_the_web/installing_basic_software/index.md</prop>
      <prop type="prev">- "l10n:priority"</prop>
      <prop type="next">{{LearnSidebar}}{{NextMenu("Learn/Getting_started_with_the_web/What_will_your_website_look_like", "Learn/Getting_started_with_the_web")}}</prop>
      <tuv lang="en-US">
        <seg>- text editor
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T001121Z">
        <seg>- text editor
  - editor de texto
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">learn/index.md</prop>
      <prop type="prev">- Learn</prop>
      <prop type="next">{{LearnSidebar}}</prop>
      <tuv lang="en-US">
        <seg>- Web
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T122601Z" creationid="gitnacho" creationdate="20221020T122601Z">
        <seg>- Web
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">mdn/contribute/howto/update_the_css_json_db/index.md</prop>
      <prop type="prev">- Howto</prop>
      <prop type="next">{{MDNSidebar}}</prop>
      <tuv lang="en-US">
        <seg>- MDN Meta
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T183625Z" creationid="gitnacho" creationdate="20221019T183625Z">
        <seg>- MDN Meta
Hola:
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">mdn/index.md</prop>
      <prop type="prev">- Landing</prop>
      <prop type="next">{{MDNSidebar}}</prop>
      <tuv lang="en-US">
        <seg>- MDN Meta
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221019T150022Z">
        <seg>- MDN Meta
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">mdn/tools/index.md</prop>
      <prop type="prev">- MDN Meta</prop>
      <prop type="next">{{MDNSidebar}}</prop>
      <tuv lang="en-US">
        <seg>- Tools
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221012T182655Z">
        <seg>- Tools
  - Herramientas
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">mdn/tools/kumascript/troubleshooting/index.md</prop>
      <prop type="prev">- MDN Meta</prop>
      <prop type="next">{{MDNSidebar}}</prop>
      <tuv lang="en-US">
        <seg>- Tools
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221012T182912Z">
        <seg>- Tools
  - Herramientas
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">mdn/writing_guidelines/howto/markdown_in_mdn/index.md</prop>
      <prop type="prev">- meta</prop>
      <prop type="next">{{MDNSidebar}}</prop>
      <tuv lang="en-US">
        <seg>- writing-guide
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T083208Z">
        <seg>- writing-guide
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">mdn/writing_guidelines/page_structures/code_examples/index.md</prop>
      <prop type="prev">- meta</prop>
      <prop type="next">{{MDNSidebar}}</prop>
      <tuv lang="en-US">
        <seg>- writing-guide
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T084441Z">
        <seg>- writing-guide
  - guía de escritura
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">mdn/writing_guidelines/page_structures/macros/commonly_used_macros/index.md</prop>
      <prop type="prev">- meta</prop>
      <prop type="next">{{MDNSidebar}}</prop>
      <tuv lang="en-US">
        <seg>- writing-guide
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T090057Z">
        <seg>- writing-guide
  - guía de escritura
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">mdn/writing_guidelines/page_structures/macros/deprecated_macros/index.md</prop>
      <prop type="prev">- meta</prop>
      <prop type="next">{{MDNSidebar}}</prop>
      <tuv lang="en-US">
        <seg>- writing-guide
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T091108Z">
        <seg>- writing-guide
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">mdn/writing_guidelines/page_structures/macros/index.md</prop>
      <prop type="prev">- meta</prop>
      <prop type="next">{{MDNSidebar}}</prop>
      <tuv lang="en-US">
        <seg>- writing-guide
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T095423Z">
        <seg>- writing-guide
  - guía de escritura
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">mozilla/index.md</prop>
      <prop type="prev">- Landing</prop>
      <prop type="next">{{FirefoxSidebar}}</prop>
      <tuv lang="en-US">
        <seg>- Mozilla
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221019T091900Z">
        <seg>- Mozilla
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">web/api/index.md</prop>
      <prop type="prev">- Reference</prop>
      <prop type="next">When writing code for the Web, there are a large number of Web APIs available.</prop>
      <tuv lang="en-US">
        <seg>- Web
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T094153Z">
        <seg>- Web
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">web/http/client_hints/index.md</prop>
      <prop type="prev">- HTTP</prop>
      <prop type="next">**Client Hints** are a set of [HTTP request header](/en-US/docs/Web/HTTP/Headers) fields that a server can proactively request from a client to get information about the device, network, user, and user-agent-specific preferences.</prop>
      <tuv lang="en-US">
        <seg>- Performance
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221019T103422Z" creationid="gitnacho" creationdate="20221019T103422Z">
        <seg>- Performance
  - Rendimiento
translation_of: Web/HTTP/Client_hints
translator: Nachec
reviewer: Nachec
original_slug: Web/HTTP/Client_hints
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">web/index.md</prop>
      <prop type="prev">---
title: Web technology for developers
slug: Web
tags:</prop>
      <prop type="next">- Web
---</prop>
      <tuv lang="en-US">
        <seg>- Landing</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221002T092533Z" creationid="gitnacho" creationdate="20221002T092533Z">
        <seg>- API
  - Desarrollo Web
  - Landing
  - Lanzamiento</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">web/index.md</prop>
      <prop type="prev">- Landing</prop>
      <prop type="next">&lt;section id="Quick_links"&gt;</prop>
      <tuv lang="en-US">
        <seg>- Web
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221002T092645Z">
        <seg>- Web
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/c_to_wasm/index.md</prop>
      <prop type="prev">- WebAssembly</prop>
      <prop type="next">{{WebAssemblySidebar}}</prop>
      <tuv lang="en-US">
        <seg>- wasm
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T105701Z">
        <seg>- wasm
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/caching_modules/index.md</prop>
      <prop type="prev">- compile</prop>
      <prop type="next">{{WebAssemblySidebar}}</prop>
      <tuv lang="en-US">
        <seg>- wasm
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T105924Z">
        <seg>- wasm
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/existing_c_to_wasm/index.md</prop>
      <prop type="prev">- WebAssembly</prop>
      <prop type="next">{{WebAssemblySidebar}}</prop>
      <tuv lang="en-US">
        <seg>- wasm
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T110719Z">
        <seg>- wasm
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/exported_functions/index.md</prop>
      <prop type="prev">- exported wasm functions</prop>
      <prop type="next">{{WebAssemblySidebar}}</prop>
      <tuv lang="en-US">
        <seg>- wasm
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T111048Z">
        <seg>- wasm
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/javascript_interface/table/table/index.md</prop>
      <prop type="prev">- If `tableDescriptor` is not of type object, a {{jsxref("TypeError")}} is</prop>
      <prop type="next">- If `maximum` is specified and is smaller than `initial`, a</prop>
      <tuv lang="en-US">
        <seg>thrown.</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T000447Z" creationid="gitnacho" creationdate="20221020T000447Z">
        <seg> {{JSxRef("TypeError")}}.</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/reference/control_flow/block/index.md</prop>
      <prop type="prev">- Reference</prop>
      <prop type="next">{{WebAssemblySidebar}}</prop>
      <tuv lang="en-US">
        <seg>- Control flow
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221020T074927Z">
        <seg>- Control flow
  - Control de flujo
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/reference/control_flow/br/index.md</prop>
      <prop type="prev">- Reference</prop>
      <prop type="next">{{WebAssemblySidebar}}</prop>
      <tuv lang="en-US">
        <seg>- Control flow
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221020T081522Z">
        <seg>- Control flow
  - Control de flujo
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/reference/control_flow/call/index.md</prop>
      <prop type="prev">- Reference</prop>
      <prop type="next">{{WebAssemblySidebar}}</prop>
      <tuv lang="en-US">
        <seg>- Control flow
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221020T082817Z">
        <seg>- Control flow
  - Control de flujo
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/reference/control_flow/drop/index.md</prop>
      <prop type="prev">- Reference</prop>
      <prop type="next">{{WebAssemblySidebar}}</prop>
      <tuv lang="en-US">
        <seg>- Control flow
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221020T083100Z">
        <seg>- Control flow
  - Control de flujo
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/reference/control_flow/end/index.md</prop>
      <prop type="prev">- Reference</prop>
      <prop type="next">{{WebAssemblySidebar}}</prop>
      <tuv lang="en-US">
        <seg>- Control flow
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221020T083539Z">
        <seg>- Control flow
  - Control de flujo
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/reference/control_flow/if...else/index.md</prop>
      <prop type="prev">- Reference</prop>
      <prop type="next">{{WebAssemblySidebar}}</prop>
      <tuv lang="en-US">
        <seg>- Control flow
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221020T083955Z">
        <seg>- Control flow
  - Control de flujo
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/reference/control_flow/index.md</prop>
      <prop type="prev">- Reference</prop>
      <prop type="next">{{WebAssemblySidebar}}</prop>
      <tuv lang="en-US">
        <seg>- Control flow
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T123110Z">
        <seg>- Control flow
  - Control de flujo
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/reference/control_flow/loop/index.md</prop>
      <prop type="prev">- Reference</prop>
      <prop type="next">{{WebAssemblySidebar}}</prop>
      <tuv lang="en-US">
        <seg>- Control flow
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221020T084713Z">
        <seg>- Control flow
  - Control de flujo
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/reference/control_flow/nop/index.md</prop>
      <prop type="prev">- Reference</prop>
      <prop type="next">{{WebAssemblySidebar}}</prop>
      <tuv lang="en-US">
        <seg>- Control flow
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T090006Z" creationid="gitnacho" creationdate="20221020T090006Z">
        <seg>- Control flow
  - Control de flujo
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/reference/index.md</prop>
      <prop type="prev">- Landing page</prop>
      <prop type="next">{{WebAssemblySidebar}}</prop>
      <tuv lang="en-US">
        <seg>- Reference
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221019T123311Z">
        <seg>- Reference
  - Referencia
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/reference/memory/index.md</prop>
      <prop type="prev">- Reference</prop>
      <prop type="next">{{WebAssemblySidebar}}</prop>
      <tuv lang="en-US">
        <seg>- Memory
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221019T124445Z">
        <seg>- Memory
  - Memoria
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/reference/numeric/multiplication/index.md</prop>
      <prop type="prev">- Numeric</prop>
      <prop type="next">{{WebAssemblySidebar}}</prop>
      <tuv lang="en-US">
        <seg>- Arithmetic
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085638Z" creationid="gitnacho" creationdate="20221019T124811Z">
        <seg>- Arithmetic
  - Aritmética
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/rust_to_wasm/index.md</prop>
      <prop type="prev">- rust</prop>
      <prop type="next">{{WebAssemblySidebar}}</prop>
      <tuv lang="en-US">
        <seg>- wasm
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T125001Z">
        <seg>- wasm
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/understanding_the_text_format/index.md</prop>
      <prop type="prev">- was</prop>
      <prop type="next">{{WebAssemblySidebar}}</prop>
      <tuv lang="en-US">
        <seg>- wasm
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T125441Z">
        <seg>- wasm
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">webassembly/using_the_javascript_api/index.md</prop>
      <prop type="prev">- memory</prop>
      <prop type="next">{{WebAssemblySidebar}}</prop>
      <tuv lang="en-US">
        <seg>- table
---</seg>
      </tuv>
      <tuv lang="es-MX" changeid="gitnacho" changedate="20221020T085746Z" creationid="gitnacho" creationdate="20221019T125730Z">
        <seg>- table
reviewer: Nachec
---</seg>
      </tuv>
    </tu>
  </body>
</tmx>
